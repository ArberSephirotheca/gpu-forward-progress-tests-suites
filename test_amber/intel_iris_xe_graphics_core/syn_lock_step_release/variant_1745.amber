#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)), ! (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), (false ? _GLF_FUZZED(min(vec2(-6.2, 8195.0432), 98.90)) : vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))))).y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), max(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))))), injectionSwitch.x)) < injectionSwitch.y))))), false || (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false, true)))))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y))), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3464.5000)))))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), max(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))))), injectionSwitch.x)) < injectionSwitch.y))))), false || (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false, true)))))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y))), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3464.5000)))))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), max(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))))), injectionSwitch.x)) < injectionSwitch.y))))), false || (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false, true)))))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y))), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3464.5000)))))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (injectionSwitch.x < injectionSwitch.y))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))), false, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(892.497, -6.1)), (_GLF_FUZZED(vec2(892.497, -6.1))) * vec2(1.0, 1.0)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(892.497, -6.1)), (_GLF_FUZZED(vec2(892.497, -6.1))) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), 1.0)), injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-8679.3560, -6.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), 1.0)), injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-8679.3560, -6.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), 1.0)), injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-8679.3560, -6.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), 1.0)), injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7762.6216)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-8679.3560, -6.0)))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-261.301) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y)))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), ((injectionSwitch) - abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0)), (injectionSwitch) - abs(vec2(0.0, 0.0)))))))) + vec2(0.0, 0.0)).x) + abs(0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), uvec3(0u, 0u, 0u) ^ ((~ (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (1u))), _GLF_IDENTITY((~ (1u)) - (46206u & 0u), min((~ (1u)) - (46206u & 0u), (~ (1u)) - (46206u & 0u))))))), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))])) | (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]))))))), 1u)) + uvec4(0u, 0u, 0u, 0u)), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))), (true ? ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ((gl_NumWorkGroups))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(165345u, 53063u, 102584u))))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (1u))), _GLF_IDENTITY((~ (1u)) - (46206u & 0u), min((~ (1u)) - _GLF_IDENTITY((46206u & 0u), clamp((46206u & 0u), (46206u & 0u), (46206u & 0u))), (~ (1u)) - (46206u & 0u))))))), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) >> 0)) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(1, 1))))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]), (uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) | (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) | 0) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), ~ (~ (int(1))))))))))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, (1) | 0)))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))])) | (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0))))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(max(int(1), int(1)), ~ (_GLF_IDENTITY(~ (max(int(1), int(1))), (~ (max(int(1), int(1)))) | (~ (max(int(1), int(1)))))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (0 << _GLF_IDENTITY(int(1), int(1)))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]))))))), 1u)) + uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(111754u, 69436u, 134345u, 101414u)))))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), max(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) | (1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(1, (1) | (1))))) << 0, (((~ (_GLF_IDENTITY(1, (1) | (1))))) << 0) << 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), max(~ (_GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(1, (1) | (1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), max(~ (_GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(1, (1) | (1)))))), 0 ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), max(~ (_GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(1, (1) | (1))))))))) * 1), 0)), (int(_GLF_IDENTITY(ivec2((~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 0))))))), _GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(int(8), int(8))))), clamp(ivec2((~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 0))))))), _GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(int(8), int(8))))), ivec2((~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 0))))))), _GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(int(8), int(8))))), ivec2((~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec2(1, 0))))))), _GLF_IDENTITY(0, (0) | (0 << _GLF_IDENTITY(int(8), int(8))))))))) | (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))))))), (~ (~ (1))) ^ 0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-21674, (false ? _GLF_FUZZED(-29369) : _GLF_IDENTITY(-21674, max(_GLF_IDENTITY(-21674, min(-21674, _GLF_IDENTITY(-21674, int(int(-21674))))), -21674)))), 0 | (0 & -21674))))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), ((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u))), (false ? _GLF_FUZZED(uvec3(18268u, 130850u, 114843u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))[2])))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (1u))), _GLF_IDENTITY((~ (1u)) - (46206u & 0u), min((~ (1u)) - (46206u & 0u), (~ (1u)) - (46206u & 0u))))))), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))])) | (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]))))))), 1u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), max(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), ((~ (_GLF_IDENTITY(1, (1) | (1))))) << 0), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0)), (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))) | (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))))))), (~ (~ (1))) ^ 0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-21674, (false ? _GLF_FUZZED(-29369) : _GLF_IDENTITY(-21674, max(_GLF_IDENTITY(-21674, min(-21674, -21674)), -21674)))), 0 | (0 & -21674))))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), ((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u))), (false ? _GLF_FUZZED(uvec3(18268u, 130850u, 114843u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))[2])))), (false ? _GLF_FUZZED(uvec3(47239u, 129010u, 98677u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (1u))), _GLF_IDENTITY((~ (1u)) - (46206u & 0u), min((~ (1u)) - (46206u & 0u), (~ (1u)) - (46206u & 0u))))))), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))])) | (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]))))))), 1u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), max(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), ((~ (_GLF_IDENTITY(1, (1) | (1))))) << 0), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0)), (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))) | (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))))))), (~ (~ (1))) ^ 0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-21674, (false ? _GLF_FUZZED(-29369) : _GLF_IDENTITY(-21674, max(_GLF_IDENTITY(-21674, min(-21674, -21674)), -21674)))), 0 | (0 & -21674))))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), ((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u))), (false ? _GLF_FUZZED(uvec3(18268u, 130850u, 114843u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))[2])))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (1u))), _GLF_IDENTITY((~ (1u)) - (46206u & 0u), min((~ (1u)) - (46206u & 0u), (~ (1u)) - (46206u & 0u))))))), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))])) | (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]))))))), 1u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), max(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), ((~ (_GLF_IDENTITY(1, (1) | (1))))) << 0), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0)), (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))) | (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))))))), (~ (~ (1))) ^ 0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-21674, (false ? _GLF_FUZZED(-29369) : _GLF_IDENTITY(-21674, max(_GLF_IDENTITY(-21674, min(-21674, -21674)), -21674)))), 0 | (0 & -21674))))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), ((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u))), (false ? _GLF_FUZZED(uvec3(18268u, 130850u, 114843u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))[2])))), _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (1u))), _GLF_IDENTITY((~ (1u)) - (46206u & 0u), min((~ (1u)) - (46206u & 0u), (~ (1u)) - (46206u & 0u))))))), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))])) | (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]))))))), 1u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), max(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), ((~ (_GLF_IDENTITY(1, (1) | (1))))) << 0), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0)), (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))) | (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))))))), (~ (~ (1))) ^ 0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-21674, (false ? _GLF_FUZZED(-29369) : _GLF_IDENTITY(-21674, max(_GLF_IDENTITY(-21674, min(-21674, -21674)), -21674)))), 0 | (0 & -21674))))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), ((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u))), (false ? _GLF_FUZZED(uvec3(18268u, 130850u, 114843u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))[2])))), _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY(~ (gl_NumWorkGroups), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups)))))), (~ (~ (gl_NumWorkGroups))) | (~ (~ (gl_NumWorkGroups))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (~ (1u))), _GLF_IDENTITY((~ (1u)) - (46206u & 0u), min((~ (1u)) - (46206u & 0u), (~ (1u)) - (46206u & 0u))))))), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]), (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))])) | (uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))))]))))))), 1u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), max(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) ^ 0), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), ((~ (_GLF_IDENTITY(1, (1) | (1))))) << 0), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0)), (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))) | (int(ivec2((~ (_GLF_IDENTITY(1, (1) | (1)))), 0))))))), (~ (~ (1))) ^ 0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) & _GLF_IDENTITY(-21674, (false ? _GLF_FUZZED(-29369) : _GLF_IDENTITY(-21674, max(_GLF_IDENTITY(-21674, min(-21674, -21674)), -21674)))), 0 | (0 & -21674))))], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))), ((gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u))), (false ? _GLF_FUZZED(uvec3(18268u, 130850u, 114843u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))[2])))))))).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), clamp(float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0)), float(vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(8873.7546, 3312.9223)))).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(50056u)))))) | (0u)))).x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), gl_WorkGroupSize)), (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))), 1u, 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), (vec3(injectionSwitch.x, 0.0, 0.0)) * cos(vec3(0.0, 0.0, 0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x), ((_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x)) + 0u), uint(uint((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(150u, 161215u, 10714u)) : uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))) >> uvec3(0u, 0u, 0u))).x))))), 0u | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))))).y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_DEAD(false)))))))), true, false, true)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat2(0.2, 7875.6833, 8.4, 7.5)[0]))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + log(vec2(1.0, 1.0))).x < injectionSwitch.y)) && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.y) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))), true && (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(((false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED((false ? 5.8 : -30.20)), _GLF_FUZZED(5625.3332)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).y)), false)), false || (_GLF_IDENTITY(bool(bvec3(((false)), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true))))))) || false))), (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true))))))) && true)))))))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))))))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y)) && true))), bool(bvec4(! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, cos(0.0), 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch)).x > injectionSwitch.y)) && true))), true, true, false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))))))))))))), ! (! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)), false, true))))))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) && true, bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (bool(! (_GLF_DEAD(false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (bool(! (_GLF_DEAD(false))))))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)))) ? _GLF_FUZZED((61232u ^ _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, uint(uint(0u))), 1u, 0u, 0u))), (0u) >> 0u)), workgroup_id)))) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> 0u), _GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), ~ (~ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), subgroup_local_id)), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)), 1u, 1u))))))) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))))))), 0u | (((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))))))))) ^ 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))])), injectionSwitch[1])) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-28.81)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)), sin(abs(0.0)) + (mix(float(_GLF_FUZZED(-28.81)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))))))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)), true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), min(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(952.738, -3504.9288)), max(_GLF_FUZZED(vec2(952.738, -3504.9288)), _GLF_FUZZED(vec2(952.738, -3504.9288)))) : injectionSwitch)).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(952.738, -3504.9288)), max(_GLF_FUZZED(vec2(952.738, -3504.9288)), _GLF_FUZZED(vec2(952.738, -3504.9288)))) : injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(952.738, -3504.9288)), max(_GLF_FUZZED(vec2(952.738, -3504.9288)), _GLF_FUZZED(vec2(952.738, -3504.9288)))) : injectionSwitch)).x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(952.738, -3504.9288)), max(_GLF_FUZZED(vec2(952.738, -3504.9288)), _GLF_FUZZED(vec2(952.738, -3504.9288)))) : injectionSwitch)).x > injectionSwitch.y)))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, ! (! (false)))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), min(vec2(mat3x2(injectionSwitch, 0.0, 1.0, abs(1.0), 0.0)), vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(1.0), 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(952.738, -3504.9288)), vec2(mat3x2(_GLF_FUZZED(vec2(952.738, -3504.9288)), 0.0, 0.0, 0.0, 1.0))) : injectionSwitch)).x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))) && true) || (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (false))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))) && true) || (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) - 0.0)))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), false)))) && true))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(1.0))), (float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(1.0)))) - 0.0)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-8.2)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-2127.8426)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)), false || (bool(bvec4(false, true, false, true)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > injectionSwitch.y))), false || (bool(((injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), false, true)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.0)), float(0.0), bool(true))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec3(0.0, 0.0, 1.0))), sqrt(0.0), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1805.0246)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1805.0246)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)))), bool(true)))))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
