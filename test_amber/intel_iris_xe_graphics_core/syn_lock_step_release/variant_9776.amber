#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))) || false))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(asinh(6244.0618))))))))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))), true && (! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))), false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))), false, true))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true)))), false, true)))))), false, false, false))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1796.5652))), 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log2(vec2(-1.0, -2.8))) : injectionSwitch)), injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))), false), false), false))))))))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(835.412), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), _GLF_FUZZED(-0.8)), bvec2(true, false))))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) && true)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), min(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), min(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, sqrt(1.0) * (_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), min(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true))), false))))))), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.8)), vec2(_GLF_FUZZED(638.239), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-93.50)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(8.3, 5851.4694)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), sqrt(length(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))) || false))), false, true)))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.8)), vec2(_GLF_FUZZED(638.239), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-93.50)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(8.3, 5851.4694)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), sqrt(length(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))) || false))), false, true)))), true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.8)), vec2(_GLF_FUZZED(638.239), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-93.50)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat3(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(8.3, 5851.4694)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), sqrt(length(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))) || false))), false, true)))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), false)), (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))))).x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))) + sin(vec2(0.0, 0.0))), vec2(mat3x4(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(44.77), _GLF_FUZZED(2.5)), vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.1) : 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-361.425) : 1.0)), 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), float(mat4x3(float(float(injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8122.6626), _GLF_FUZZED((-4.4 * -8659.7279))), bvec2(false, false))).y))))) || false))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-7.6 - 51.45))), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0)), vec2(mat3x4(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(165.961, -8.9)))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (bool(bool((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), false, true)))), true)))), false))) || false))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-524.111, -7.7)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true), false)), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), false, false, false)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))) + (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-539.147, 9605.7208)) : (injectionSwitch)))), clamp(vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-539.147, 9605.7208)) : (injectionSwitch)))), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-539.147, 9605.7208)) : (injectionSwitch)))), _GLF_IDENTITY((vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-539.147, 9605.7208)) : (injectionSwitch))))) * mat2(1.0), max((vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-539.147, 9605.7208)) : (injectionSwitch))))) * mat2(1.0), (vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-539.147, 9605.7208)) : (injectionSwitch))))) * mat2(1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-539.147, 9605.7208)) : (injectionSwitch))))))), (injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(817.166) : injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / cos(vec2(0.0, 0.0))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-13.95)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-9319.5490, -3.2)))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(967.701)), bvec2(false, false))).y)))))))), ! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(normalize(-3.5)))), ! (! (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(868.482), _GLF_FUZZED(float((-80834 << -27400)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, abs(0.0), log(round(length(normalize(1.0)))), 1.0, 0.0, exp(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))), (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))) + (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)), (uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), clamp(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), clamp(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), ((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u)), ((uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u))) | uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))), 0u)))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))))))))))) * uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, (1u | 0u))))), clamp(0u | (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, (1u | 0u))))), 0u | (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, (1u | 0u))))), 0u | (_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, (1u | 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), false))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), false))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), false))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))))), bool(bool(true))), false), false))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), false)))), true)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true), true)))))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || ((! (false)))), ! (! (_GLF_IDENTITY((! (false)), false || ((! (false))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-433.050)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2975.7307) : injectionSwitch.y))), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), true && (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))) && true, bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)), bool(bool(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)))))), false || (bool(_GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)), bool(bool(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)))))))))))))))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), true && (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))) && true, bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)), bool(bool(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)))))), false || (bool(_GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)), bool(bool(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (_GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))) && true, true)))))))))))))))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, true)))) || false), (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec3(_GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec3(_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uvec4((workgroup_base), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec4((workgroup_base), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) - 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), 0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + sin(0.0)), injectionSwitch.x)))) * uvec3(1u, 1u, 1u))))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) >> _GLF_IDENTITY(0u, 1u * (0u))) + subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) >> _GLF_IDENTITY(0u, 1u * (0u))) + subgroup_id * subgroup_size, 1u, 0u)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_base)))) ^ 0u)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), 1u, 0u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) + subgroup_id * subgroup_size, 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 1u))), 1u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) + 0u))) ^ (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(1u, 0u ^ (1u)), 0u), 1u))), uvec3(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) ^ 0u))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), (true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), ((! ((injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), max(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), ~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))))) : _GLF_FUZZED(bitfieldReverse(num_workgroup))))), min(~ (_GLF_IDENTITY(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), max(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), ~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))))) : _GLF_FUZZED(bitfieldReverse(num_workgroup))))), ~ (_GLF_IDENTITY(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), max(~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))), ~ (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(uint((-24458 != -41915)))))) : _GLF_FUZZED(bitfieldReverse(num_workgroup)))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), min(uint(uint(subgroup_size)), uint(uint(subgroup_size))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.2) : injectionSwitch.x, min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.2) : injectionSwitch.x, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.2) : injectionSwitch.x, (true ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.2) : injectionSwitch.x : _GLF_FUZZED(-4533.4099))))))) > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false))))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true))))) || false)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))))))))))), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), true))))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), _GLF_IDENTITY(1 * (~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1))), 2))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1 * (~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1))), 2))))), 0 + (1 * (~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1))), 2))))))), 1, 0)), (false ? _GLF_FUZZED(56279) : _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1 * (~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1))), 2))))), 0 + (1 * (~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1))), 2))))))), 1, 0)), int(ivec4(int(ivec3(_GLF_IDENTITY(1 * (~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1))), 2))))), 0 + (1 * (~ (~ (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec4(2, 0, 1, 1))), 2))))))), 1, 0)), 0, 0, 0))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false)) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0)), max(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0))))) : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
