#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 uvec4 GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 do
  {
   _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, (_GLF_IDENTITY(true, (true) && true) ? GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.w = subgroup_id;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(44577, (44577) - 0), (_GLF_IDENTITY(44577, (44577) - 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(44577, (44577) - 0), ~ (~ (_GLF_IDENTITY(44577, (44577) - 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x = GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.w;
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-4.2 * -328.608))), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-396.237)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)))))))))), (false ? _GLF_FUZZED(min(4.4, 675.327)) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-396.237)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)))))))))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-396.237)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)))))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-396.237)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)))))))))))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(-9.1) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, abs(0.0), 1.0))))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(false)) : 0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))))), clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(3467.2202))), 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0))))) - 0.0)))))))), 0.0, 0.0), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, sqrt(1.0), 0.0, 0.0, cos(0.0), 1.0, sqrt(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(0.0, 1.0, sqrt(1.0), 0.0, 0.0, cos(0.0), 1.0, sqrt(0.0)) : _GLF_FUZZED(mat4x2(-9038.5316, 4.5, 244.594, -6.8, -1722.9049, 7.0, -9.6, -788.761)))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0)))), _GLF_IDENTITY((float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY((float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))), max((float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))), _GLF_IDENTITY((float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))), ((float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0)))) + 0.0))), (float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))), (float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))))) / 1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7142.8394))), 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0)), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))), 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), min(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (_GLF_IDENTITY(true, ! (! (true))) ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), max((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), float(_GLF_FUZZED((7.8 / -826.660))), bool(false)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24)))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asinh((-1.1))) : 0.0)), 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), mix(float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)))), float(_GLF_FUZZED(-25.27)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), float(mat4x2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), sin(0.0), 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0)))), 0.0, 0.0), log(1.0)), (vec2(clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0)), (float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0))) / 1.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(false))) : _GLF_FUZZED(vec4(-756.998, -7.7, 875.534, -96.55).s))), 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), min(1.0 * (0.0), 1.0 * (0.0)))), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), min(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24)))))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), min(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), min(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24)))))))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), min(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)), (true ? mat2x4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0)) : _GLF_FUZZED(mat2x4(89.01, -54.91, 82.84, -661.685, 0.4, -943.789, 2.1, 33.24))))))))) / 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((mat2x4(6616.9422, -96.41, 148.075, -8.2, -0.0, -8.9, 2.8, 990.124) , -21.75)) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asinh((-1.1))) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / abs(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / abs(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(5.2)), bool(false)))))) - 0.0)))), 0.0, 0.0), log(1.0))) - tan(vec2(0.0, 0.0))), clamp(vec2(clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8544.5405) : 0.0)), 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), min(clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))) * 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0)))), 0.0, 0.0), log(1.0)), vec2(clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(150.215)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))))) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atan(-4.3)) : 0.0))))), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, log(1.0), 0.0, 0.0)), (float(mat2(0.0, log(1.0), 0.0, 0.0))) - 0.0)), 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(35711u))), float(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), bool(true))))), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(mat4(normalize(vec4(1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat4(normalize(vec4(1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), max(vec4(mat4(normalize(vec4(1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec4(mat4(normalize(vec4(1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))), 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0)))), 0.0, 0.0), log(1.0)), vec2(clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9976.7597) : 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.5)), float(0.0), bool(true))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) - 0.0), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), float(mat4x2(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(43.57) : cos(0.0))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec3(0.0, 0.0, 1.0))), log(1.0), 0.0, 0.0, determinant(mat3(exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2056.6513) : 1.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(4.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(vec3(_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 1.0)))), 0.0, 0.0)))))) - 0.0), _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-3.4))), 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.5)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), abs(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8810.7844)))))))) - 0.0)))), 0.0, 0.0), log(1.0))))))))), injectionSwitch.x)) | _GLF_IDENTITY(0, (0) | (0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), _injected_loop_counter), (_GLF_IDENTITY(min(_GLF_IDENTITY(_injected_loop_counter, 0 ^ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) * 1), (true ? _GLF_IDENTITY(int(8), (int(8)) * 1) : _GLF_FUZZED(78418))), _GLF_IDENTITY(int(8), (int(8)) * 1)))))), int(8))) ^ ((_injected_loop_counter)))) << 0)), _injected_loop_counter), (min(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, (0) | 0) ^ (_injected_loop_counter)), _injected_loop_counter)) << 0)) / 1)) < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), (_GLF_IDENTITY(~ (_injected_loop_counter ++), 0 ^ (~ (_injected_loop_counter ++)))) ^ 0))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((0 | 0) | 1)); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec2(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, _GLF_IDENTITY(0, 0 | (0)) ^ (7)))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)), ~ (~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)))))))) : int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-611.652)), bool(false))), injectionSwitch.y))))))) - 0)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))));
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.z = num_workgroup;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), true && (false || (injectionSwitch.x < injectionSwitch.y)))))))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, (false) || false)), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false))))), bvec2(bvec4(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, false), true, false)), true, true))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0))) < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), false), true, false))))))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))))) || false), false || (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) && true), true, false, true)), (bool(bvec4(_GLF_IDENTITY(true && (false), (true && (false)) && true), true, false, true))) && true)))))))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)) & 1, clamp(1 & 1, 1 & 1, _GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) - 0), min(1 & 1, 1 & 1))))), min((_GLF_IDENTITY(1 & 1, clamp(1 & _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, int(ivec3(1, 0, 1))))) - (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ^ 1)), 1 & _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))), min(1 & 1, 1 & 1))))), (_GLF_IDENTITY(1 & 1, clamp(1 & _GLF_IDENTITY(1, min(1, 1)), 1 & 1, _GLF_IDENTITY(1 & 1, min(_GLF_IDENTITY(1, (1) | (1)) & 1, 1 & 1)))))))); _injected_loop_counter ++)
                {
                 do
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), clamp((0 | 0), (0 | 0), _GLF_IDENTITY((0 | 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) << 0), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)))) / 1) : (0 | 0)))))) | ((0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
                              {
                              }
                             else
                              {
                               do
                                {
                                 return;
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-6316.4539), ((injectionSwitch))[1]), bvec2(false, true)))[0], _GLF_FUZZED(5.0)), vec2(_GLF_FUZZED(6.7), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))));
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id)).z;
 GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)).z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, max(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)))).z, 0u, (0u ^ 1u), 1u), (uvec4(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, 0u, (0u ^ 1u), 1u)) | (uvec4(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, 0u, _GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) * (1u | _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), 1u)))), 0u | (uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, 0u, (0u ^ 1u), 1u), (uvec4(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, 0u, (0u ^ 1u), 1u)) | _GLF_IDENTITY((uvec4(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, 0u, (0u ^ _GLF_IDENTITY(1u, (1u) | (1u))), 1u)), (false ? _GLF_FUZZED(uvec4(2910u, 172898u, 59266u, 129308u)) : (uvec4(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, 0u, (0u ^ _GLF_IDENTITY(1u, (1u) | (1u))), 1u))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), clamp((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))), min(_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), (true ? ~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z) : _GLF_FUZZED(139185u))), _GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), max(~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), ~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))))))), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), _GLF_IDENTITY((min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, (true ? GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z : _GLF_FUZZED(subgroup_size))), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), (~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))) >> 0u)), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), max((min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), (min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))))) | ((min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size[0], GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size[1], GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size[3], uint(uvec2(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size[3], 1u))))).z, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)))))) - 0u), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) - 0u, 0u + (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) - 0u, max((_GLF_IDENTITY(1u, (1u) / 1u)) - 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)) - 0u, clamp((_GLF_IDENTITY(1u, (1u) / 1u)) - 0u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)))))))))) | _GLF_IDENTITY((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z), ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)).z)) | ((GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)))), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z)), GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z))))));
 uint workgroup_base = GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy, (GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy) | (GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy)), (GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy) ^ uvec2(0u, 0u)).y;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || false))))));
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x))) >> 0u) * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))))) ^ 0u)) | 0u), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) - 0u) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x))) >> 0u) * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))))) ^ 0u)) | 0u), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) - 0u) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x))) >> 0u) * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))))) ^ 0u)) | 0u), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) - 0u) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x) | (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x))) >> 0u) * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) >> 0u), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, min(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y))))) ^ 0u)) | 0u), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y) - 0u) + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) - 0u)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
      }
     else
      {
       do
        {
         GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))), _GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))))) || false), false, false, false))))))))))), true && (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(60.23), _GLF_FUZZED((- 7.2))), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-778.430, 61.76), (mat3x2(3216.9099, 4.7, 670.742, 93.13, -8591.2113, -7395.7268) * vec3(80.41, -6849.6915, 8.1)), -2150.1714)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))).x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false, false)), ! (! (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(84233) : _GLF_IDENTITY(0, int(ivec2(0, 0)))))) << (0 | 0)), max(0, 0)) ^ (4))), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) ^ 0)) | 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-27018), min(_GLF_FUZZED(-27018), _GLF_FUZZED(-27018))))), 4))), (int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-27018), min(_GLF_FUZZED(-27018), _GLF_FUZZED(-27018))))), 4)))) + 0), _GLF_IDENTITY(int(4), min(int(4), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(88876) : 4))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(80412) : _injected_loop_counter --)))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 1, int(int(1 ^ 1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (0 ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, sin(0.0), 1.0, abs(1.0), 0.0)), min(float(mat3x2(injectionSwitch.y, 0.0, sin(0.0), 1.0, abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, 0.0, sin(0.0), 1.0, abs(1.0), 0.0))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) << 0), _GLF_FUZZED(_injected_loop_counter))) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), max(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), clamp((true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))) ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), clamp((true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))) ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794)), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794))))) | 0), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-51794))))) - 0))), ! (! (_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))))); _injected_loop_counter ++)
              {
               do
                {
                 do
                  {
                   GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy.x = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, max(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) : GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id)), uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.0), _GLF_FUZZED(-5.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1])))), bvec2(true, true))).y)) ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id, (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id) ^ uvec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) - determinant(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-56.16)), bool(false))), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), float(_GLF_FUZZED(-89.55)), bool(false))))))) - uvec3(0u, 0u, 0u))) : GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id)), 1u))))).y + GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, clamp(GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size)), (GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size) / uvec4(1u, 1u, 1u, 1u)).y + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY((1), ((1)) | ((1))))) | 0), 1))) % GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y);
 uint read_1 = atomicLoad(buf[GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy.x], 4, _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec2(int(5), 0))), int(5)))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && _GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && true, ((_GLF_WRAPPED_IF_TRUE(true)) && true) || false)), true && (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && true, ((_GLF_WRAPPED_IF_TRUE(true)) && true) || false)))))), true)))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
      }
    }
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u) : _GLF_FUZZED(read_1))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u) : _GLF_FUZZED(read_1))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u) : _GLF_FUZZED(read_1))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) | 0u) : _GLF_FUZZED(read_1)))))) ^ 0u), min(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))), read_1)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((1), ((1)) - 0) ^ 0)), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id, min(GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id, GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id)).xy.x], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))
      {
       if(subgroup_local_id + 1 < GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y)
        {
         int i = 0;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, true && (true)))) && true))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), bool(_GLF_IDENTITY(bvec3(! ((! (true))), true, false), bvec3(bvec4(bvec3(! ((! (true))), true, false), false))))))) && true)), true && ((_GLF_IDENTITY(! (true), (! (true)) && true)))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), false || ((! (true)))) && true)))) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) && true)))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) && true)))) || false)), false, true, false))))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) && true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) || false)))))))))))))))
            {
             atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) * _GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u))), ((_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u)))) ^ 0u), (_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u))))))) + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) * _GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u))), ((_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u)))) ^ 0u), (_GLF_IDENTITY(1u | 1u, (1u | 1u) + (0u | 0u))))))) + 1)), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), 0 ^ (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), ((int(7)) | (int(7))) / 1)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)), (false ? _GLF_FUZZED(78740) : _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec2((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), 0)))), 0)), (int(ivec3(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0))) | (int(ivec3(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0))))))), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7)), clamp(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(14321) : 7))) >> (0 << _GLF_IDENTITY(int(0), int(0))))), int(7)), 0 << _GLF_IDENTITY(int(7), int(7)), 0 << _GLF_IDENTITY(int(7), int(7))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (4))) >> _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0))))))), 64, 4);
            }
           else
            {
            }
          }
         else
          {
          }
        }
       else
        {
         for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), abs(1.0), 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)), float(mat3x2(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-19.26)), min(float(_GLF_FUZZED(-19.26)), float(_GLF_FUZZED(-19.26)))), float(injectionSwitch.y), bool(true)))) - 0.0), abs(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), length(0.0), 1.0))), 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(0.2, -83.57, -219.398, -51.49)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(8.5), min(_GLF_FUZZED(8.5), _GLF_FUZZED(8.5))))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), abs(1.0), 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)), float(mat3x2(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-19.26)), min(float(_GLF_FUZZED(-19.26)), float(_GLF_FUZZED(-19.26)))), float(injectionSwitch.y), bool(true)))) - 0.0), abs(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), length(0.0), 1.0))), 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(0.2, -83.57, -219.398, -51.49)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(8.5), min(_GLF_FUZZED(8.5), _GLF_FUZZED(8.5))))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), abs(1.0), 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)), float(mat3x2(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-19.26)), min(float(_GLF_FUZZED(-19.26)), float(_GLF_FUZZED(-19.26)))), float(injectionSwitch.y), bool(true)))) - 0.0), abs(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), length(0.0), 1.0))), 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(0.2, -83.57, -219.398, -51.49)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(8.5), min(_GLF_FUZZED(8.5), _GLF_FUZZED(8.5))))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), abs(1.0), 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)), float(mat3x2(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-19.26)), min(float(_GLF_FUZZED(-19.26)), float(_GLF_FUZZED(-19.26)))), float(injectionSwitch.y), bool(true)))) - 0.0), abs(1.0), 0.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), length(0.0), 1.0))), 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(0.2, -83.57, -219.398, -51.49)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(8.5), min(_GLF_FUZZED(8.5), _GLF_FUZZED(8.5))))), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.26)), float(injectionSwitch.y), bool(true))), abs(1.0), 0.0, 1.0)))))))))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), ~ (~ (_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((~ (_injected_loop_counter)), ((~ (_injected_loop_counter))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), _GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)), clamp(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)), _GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)), min(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)), _GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6))) - 0))), _GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)), (-11312 & 0) ^ (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1))), ! (! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1)))))))), (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1)))) && true)); _injected_loop_counter ++)
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         return;
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) + 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, _GLF_IDENTITY(false, true && (false)), false, true)))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read_1, (read_1) << 0u)))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2)))))), bool(bvec4(read_1 + 1 == read_2, false, false, true)))) + 1, 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read_1, (read_1) << 0u)))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2)))))), bool(bvec4(read_1 + 1 == read_2, false, false, true)))) + 1, max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read_1, (read_1) << 0u)))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2)))))), bool(bvec4(read_1 + 1 == read_2, false, false, true)))) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read_1, (read_1) << 0u)))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1))))) << 0u) + 1 == read_2)))))), bool(bvec4(read_1 + 1 == read_2, false, false, true)))) + 1))))) / 1u), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 + (~ (4))))), 64, 4);
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
