#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))) && true))
    barrier();
  }
 else
  {
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), min((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))), min(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), min((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), min((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)))), (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), min((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), clamp(_GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * ((uvec3(uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((uvec3(uvec3(gl_WorkGroupSize))))), (uvec3(uvec3(gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))), gl_WorkGroupSize), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u))).x, max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | (uvec3(uvec3(gl_WorkGroupSize))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | (uvec3(uvec3(gl_WorkGroupSize))))), (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | (uvec3(uvec3(gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))))), gl_WorkGroupSize), (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(clamp(uvec3(150812u, 121742u, 151421u), (29289 , uvec3(189796u, 185234u, 194563u)), uvec3(135261u, 34025u, 160114u))) : gl_WorkGroupSize)))), (uvec3(uvec3(gl_WorkGroupSize))) | (uvec3(uvec3(gl_WorkGroupSize)))))), min(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | (uvec3(uvec3(gl_WorkGroupSize)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) | (uvec3(uvec3(gl_WorkGroupSize)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED((uvec3(158998u, 100057u, 191385u) - uvec3(16955u, 33026u, 121187u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED((uvec3(158998u, 100057u, 191385u) - uvec3(16955u, 33026u, 121187u))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (_GLF_FUZZED((uvec3(158998u, 100057u, 191385u) - uvec3(16955u, 33026u, 121187u)))))), (~ (_GLF_IDENTITY(_GLF_FUZZED((uvec3(158998u, 100057u, 191385u) - uvec3(16955u, 33026u, 121187u))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + (_GLF_FUZZED((uvec3(158998u, 100057u, 191385u) - uvec3(16955u, 33026u, 121187u))))))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)), ~ (~ ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))) | (uvec3(uvec3(gl_WorkGroupSize))))))))))), gl_WorkGroupSize), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))))), gl_WorkGroupSize), (max(gl_WorkGroupSize, gl_WorkGroupSize)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))).x));
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (false) && true)))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u)), (gl_WorkGroupID) * uvec3(1u, 1u, 1u)), gl_WorkGroupID))))).x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(false, false || (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), max((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id, clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id))), ~ (~ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id, clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + subgroup_local_id)))))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))) - 0u) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), (subgroup_local_id + 1) << 0u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size)) * 1u)));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, 0)) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 59949)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 87100)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))
      {
       atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false)))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false || ((injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, true, true, false)))), false || (bool(bvec4(false, true, true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))) || false, false))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2632.7750), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-5892.8282)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-5892.8282)), vec2((injectionSwitch)[0], _GLF_FUZZED(-5892.8282)))), bvec2(true, false))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (min(injectionSwitch, injectionSwitch)), min(mat2(1.0) * (min(injectionSwitch, injectionSwitch)), mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))))))).x > injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-52386) : _GLF_IDENTITY(1, (1) >> 0)))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
          }
        }
       for(int _injected_loop_counter = (66300 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))), int(_GLF_IDENTITY(4, ~ (~ (4)))))), ~ (~ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))), int(_GLF_IDENTITY(4, ~ (~ (4))))))))) >> _GLF_IDENTITY(int(4), int(4))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))), int(_GLF_IDENTITY(4, ~ (~ (4)))))), ~ (~ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4))), int(_GLF_IDENTITY(4, ~ (~ (4))))))))) >> _GLF_IDENTITY(int(4), int(4)))) << 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), true && (bool((! (false)))))), ! (! (bool(_GLF_IDENTITY(bool((! (false))), true && (bool((! (false))))))))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))) && true))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)))))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))
  {
   int i = 0;
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(711.024), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(86.56)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(1.0, 1.0) * ((injectionSwitch) / sqrt(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) / sqrt(vec2(1.0, 1.0)), vec2(1.0, 1.0) * ((injectionSwitch) / sqrt(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))))))))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(199.247), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9933.5634)), bvec2(true, false))))))).y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), 0.0, 1.0)))))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))), mix(vec2(_GLF_FUZZED((-1.9 + -19.96)), _GLF_FUZZED(float(-32261))), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]) + 0.0)), bvec2(true, true)))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))), mix(vec2(_GLF_FUZZED((-1.9 + -19.96)), _GLF_FUZZED(float(-32261))), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]) + 0.0)), bvec2(true, true)))), 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - abs(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8664.3158)))))).y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_IDENTITY(_GLF_FUZZED(-7428.4935), max(_GLF_IDENTITY(_GLF_FUZZED(-7428.4935), (_GLF_FUZZED(-7428.4935)) + 0.0), _GLF_FUZZED(-7428.4935)))), bool(false))), injectionSwitch[1])))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), abs(1.0) * ((injectionSwitch.y))) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), log(1.0), 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), injectionSwitch)).y, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27)))), float(_GLF_FUZZED(vec2(-63.76, 3089.5109).y)), bool(false))), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))), float(_GLF_FUZZED(3586.3175)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))), bool(bvec3(bool(false), true, true))))), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), max(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_FUZZED(3.9), 1.0 * (_GLF_FUZZED(3.9)))))), float(0.0), bool(true))))))), injectionSwitch.y)))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(vec3(float(mat2x4(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(vec4(vec3(float(mat2x4(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), max(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0), 1.0))))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5560.5230) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0))))))), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(6.4)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-13.89)), bool(false)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))) / 1.0)), injectionSwitch.y), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0)))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))) + vec2(0.0, 0.0))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((81.17 / -2901.5812))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) * 1.0), 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0)))) / 1.0), 0.0, 1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0)), clamp(float(mat4x2(1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(488.685, 8.2, 88.00, 3949.7797, 554.350, 2.9, -0.6, -528.332, 137.428, -6.2, -21.19, 9.0, -3.9, 9.3, -9984.0760, 55.14)) : mat4(1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((2.5 / exp(158.067))) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.8)), float(1.0), bool(true))) : _GLF_FUZZED(12.84)))))))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, -825.650)) : injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) * determinant(mat2(1.0, 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y)), clamp(clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y)), _GLF_IDENTITY(clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y)), max(clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y)), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y)))), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, abs(1.0), 0.0, 0.0)), (float(vec4(1.0, abs(1.0), 0.0, 0.0))) - 0.0))), 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), 0.0, 1.0)))))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), mix(vec2((vec2(vec4(injectionSwitch, 0.0, log(1.0))))[0], (vec2(vec4(injectionSwitch, 0.0, log(1.0))))[1]), vec2(_GLF_FUZZED(vec2(-4.0, -3.1).g), _GLF_FUZZED(4.8)), bvec2(false, false))), vec2(vec4(injectionSwitch, 0.0, log(1.0)))))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED((-1.9 + _GLF_IDENTITY(-19.96, (-19.96) / 1.0))), _GLF_FUZZED(float(-32261))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0)))))), mix(vec2(_GLF_FUZZED(4.4), _GLF_FUZZED(6.1)), vec2(((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0)))))))[0], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0)))))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) - 0.0), log(1.0))))))[1]) + 0.0)), (false ? _GLF_FUZZED((uintBitsToFloat(uvec3(9117u, 77959u, 17710u)) * mat2x3(-8.6, 67.74, 1550.5459, -41.87, 1.1, -0.4))) : vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0)))))), mix(vec2(_GLF_FUZZED(4.4), _GLF_FUZZED(6.1)), vec2(((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0)))))))[0], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0)))))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) - 0.0), log(1.0))))))[1]) + 0.0)))), bvec2(true, true)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false))), injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false))), injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false))), injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false))), injectionSwitch[1])))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), log(1.0), 1.0)))) - _GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), float(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), 0.0, 1.0))))), float(_GLF_FUZZED(3586.3175)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) ? mix(float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), 0.0, 1.0))))), float(_GLF_FUZZED(3586.3175)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))) : _GLF_FUZZED(468.262)))), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(22.20)), float(0.0), bool(true))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), max(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_FUZZED(3.9), 1.0 * (_GLF_FUZZED(3.9)))))), float(0.0), bool(true))))))), injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance((vec2(147.458, 2399.5311) * injectionSwitch), vec2(-20.26, -7.8))) : 0.0)), 1.0)))))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))), mix(vec2(_GLF_FUZZED((-1.9 + -19.96)), _GLF_FUZZED(float(-32261))), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]) + 0.0)), bvec2(true, true)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-615.638, 9.0)))))) - abs(vec2(0.0, 0.0))).y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0)), max(_GLF_IDENTITY(float(mat4(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0)), (true ? float(mat4(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0)) : _GLF_FUZZED(-1.3))), float(mat4(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0))))), (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))), injectionSwitch[1])))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), log(1.0), 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) / 1.0) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0))), float(_GLF_FUZZED(1.9)), bool(false))), float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)))), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), 0.0, 1.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), 0.0, 1.0))) - 0.0)))), float(_GLF_FUZZED(3586.3175)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(_GLF_IDENTITY(false, true && (false))), true, true))))), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), max(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_FUZZED(3.9), 1.0 * (_GLF_FUZZED(3.9)))))), float(0.0), bool(true))))))), injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.7)), float(1.0), bool(true)))) / 1.0)) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), 0.0, 1.0)))))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))), mix(vec2(_GLF_FUZZED((-1.9 + -19.96)), _GLF_FUZZED(float(-32261))), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), (true ? vec2(vec4(injectionSwitch, 0.0, log(1.0))) : _GLF_FUZZED(vec2(-5379.6767, -884.268)))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]) + 0.0)), bvec2(true, true)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(63.43))), injectionSwitch[1]))) - abs(vec2(0.0, 0.0))).y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-5.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.y) - 0.0), sin(0.0), 1.0, 0.0), (true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.y) - 0.0), sin(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2(5374.3785, -17.11, 3.9, 41.88)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false)), (true ? mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false)) : _GLF_FUZZED(6.1)))), injectionSwitch[1])))).y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), float(mat3x2((injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(float(0.0)))))), vec2(1.0, 0.0))), log(1.0), 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), 0.0, 1.0))), mix(float(_GLF_FUZZED(-6.3)), float(clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), 0.0, 1.0)))), bool(true))))), float(_GLF_FUZZED(3586.3175)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), max(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_FUZZED(3.9), 1.0 * (_GLF_FUZZED(3.9)))))), float(0.0), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), max(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_FUZZED(3.9), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(-1760.2517, 3.8, 3.7, -8.8, 9271.6018, -52.16, 23.69, -86.64, 4.9)) : mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))) * (_GLF_FUZZED(3.9)))))), float(0.0), bool(true))) * 1.0)))))), injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(0.0), log(1.0), 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, exp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED((-47.35 / -91.03))))))), log(1.0), 0.0, 1.0)))))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))), mix(vec2(_GLF_FUZZED((-1.9 + -19.96)), _GLF_FUZZED(float(-32261))), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1], ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]) + 0.0)), bvec2(true, true)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false))), injectionSwitch[1])))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), log(1.0), 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.27))), 0.0, 1.0))))), float(_GLF_FUZZED(3586.3175)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), max(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_FUZZED(3.9), 1.0 * (_GLF_FUZZED(3.9)))))), float(0.0), bool(true))))))), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0))), 0.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, sqrt(1.0)), vec3(0.0, 1.0, 0.0))), 0.0, 0.0))))), 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))), mix(vec2(_GLF_FUZZED((-1.9 + -19.96)), _GLF_FUZZED(float(-32261))), vec2((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), (vec2(vec4(injectionSwitch, 0.0, log(1.0)))) * mat2(1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, log(1.0))))))[1], _GLF_IDENTITY(((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]), min(((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]), ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), clamp(vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))), vec2(vec4(injectionSwitch, 0.0, log(1.0))))))[1]))) + 0.0)), bvec2(true, true)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))).y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.3) : injectionSwitch.y))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(196.815)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true))))), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1))], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7428.4935)), bool(false))), injectionSwitch[1])))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0))))), log(1.0), 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (false ? _GLF_FUZZED(-187.065) : float(vec3(injectionSwitch.y, 0.0, 1.0)))), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), min(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(61.27))), 0.0, 1.0))))), float(_GLF_FUZZED(3586.3175)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), float(mat2x4(float(vec3(injectionSwitch.y, 0.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-945.536)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), max(_GLF_FUZZED(3.9), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.9, mix(float(_GLF_FUZZED((- -8196.2132))), float(3.9), bool(true)))), 1.0 * _GLF_IDENTITY((_GLF_FUZZED(3.9)), (false ? _GLF_FUZZED(-6.8) : _GLF_IDENTITY((_GLF_FUZZED(3.9)), float(vec4((_GLF_FUZZED(3.9)), 1.0, 0.0, log(1.0)))))))))), float(0.0), bool(true))))))), injectionSwitch.y))) / exp(0.0)))), true)))))))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((true ? i : _injected_loop_counter)))) | (_injected_loop_counter ++)))
            {
             barrier();
            }
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), true && ((! (false))))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), (injectionSwitch.x < injectionSwitch.y)))))))))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u | (next_virtual_gid), ~ (~ (0u | (next_virtual_gid))))) : _GLF_FUZZED(atomicExchange(virtual_gid, subgroup_size))))], uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (read_1)), min(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))), (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1))))) | _GLF_IDENTITY(0u, (0u) << 0u))) - _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), uint(6u))), (164448u & 0u) + ((_GLF_IDENTITY(uint(6u), uint(6u))))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u)) * 1u)), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uint(6u), uint(6u))) << 0u)) * 1u)))) >> _GLF_IDENTITY(0u, min(0u, 0u))), ~ (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), ~ _GLF_IDENTITY((~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), max((~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), (~ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) | 0u)), (false ? _GLF_FUZZED(read_2) : (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(0u, ~ (~ (0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(0u, ~ (~ (0u))), clamp((_GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(0u, ~ (~ (0u)))))))) : _GLF_FUZZED(virtual_gid)))), ~ (~ (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(6u, (6u) ^ 0u))), (uint(uint(_GLF_IDENTITY(6u, (6u) ^ 0u)))) * 1u)), 0u | (_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(6u, (6u) ^ 0u))), (uint(uint(_GLF_IDENTITY(6u, (6u) ^ 0u)))) * 1u))))) | 0u))))))) | 0u)))))))), read_1)) + 1 == read_2) + 1, 4, 64, 4);
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + vec2(0.0, 0.0)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), _GLF_IDENTITY(float(_GLF_FUZZED((617.543 - -2.7))), mix(float(float(_GLF_FUZZED((617.543 - -2.7)))), float(_GLF_FUZZED(499.092)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((617.543 - -2.7))), bool(false))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((617.543 - -2.7))), bool(false)))))) - 0), (false ? _GLF_FUZZED((true ? _injected_loop_counter : (~ _injected_loop_counter))) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))), float(_GLF_FUZZED((617.543 - -2.7))), bool(_GLF_IDENTITY(false, (false) && true)))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, determinant(mat4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))).x))), float(_GLF_FUZZED((617.543 - -2.7))), bool(false)))))) - 0))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / exp(vec2(0.0, 0.0))))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((617.543 - -2.7))), bool(false))))), 0 | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((617.543 - -2.7))), bool(false)))))))))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? 5 : _GLF_FUZZED(atomicExchange(_injected_loop_counter, 72672))))), int(5)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter != 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y, (false ? _GLF_FUZZED(8272.8748) : injectionSwitch.y)))))))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(2.7)), (false ? _GLF_FUZZED(-51.91) : (true ? injectionSwitch.y : _GLF_FUZZED(2.7))))), 1.0, 1.0, tan(0.0), 0.0, 0.0))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), ! (! ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8920.0406))), injectionSwitch.x)) > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)))) / 1.0)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, true))))))), (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.2)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(8920.0406), mix(float(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.2)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(8920.0406)), float(_GLF_FUZZED(1.5)), bool(false))))), injectionSwitch.x)) > injectionSwitch.y))) && true)))))))))) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(3.3, 2601.0499, 1.7, 9.9))))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), bool(bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)) || false)), ! (! ((! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), bool(bool((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true)) || false))))), bool(bvec4((! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false), true)))), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(166.951), _GLF_FUZZED(((- -6.5) * 5.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), true && ((! (injectionSwitch.x > injectionSwitch.y))))) && true)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false))) && _GLF_IDENTITY(true, (true) && true)))))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))) || false), false || ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y))))) && true)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0))), 0.0, 1.0, 0.0)), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0))), 0.0, 1.0, 0.0))) - vec2(0.0, 0.0))).x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (((! (injectionSwitch.x > injectionSwitch.y))))) && true)) && _GLF_IDENTITY(true, ! (! (true)))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0))), 0.0, 1.0, 0.0)), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, exp(0.0), 1.0))), 0.0, 1.0, 0.0))) - vec2(0.0, 0.0))).x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (((! (injectionSwitch.x > injectionSwitch.y))))) && true)) && _GLF_IDENTITY(true, ! (! (true))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8030.7709)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0), max(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-63.09)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 1.0), vec4(injectionSwitch, 0.0, 1.0)))) + vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) && _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), (((! (injectionSwitch.x > injectionSwitch.y)))) && true)), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! ((! (injectionSwitch.x > injectionSwitch.y)))), ((! ((! (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(((! (injectionSwitch.x > injectionSwitch.y))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))))))), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), (injectionSwitch.x) - 0.0), injectionSwitch.x)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), (injectionSwitch.x) - 0.0), injectionSwitch.x)), 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) && true), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y : _GLF_IDENTITY(_GLF_FUZZED(-2.4), clamp(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4), _GLF_IDENTITY(_GLF_FUZZED(-2.4), clamp(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4)))))))))) && true)) && true))))))) && _GLF_IDENTITY(true, true && (true)))))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - log(1.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-94.13), _GLF_FUZZED(2.7)), bvec2(false, false))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-94.13), _GLF_FUZZED(2.7)), bvec2(false, false))).x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-94.13), _GLF_FUZZED(2.7)), bvec2(false, false))).x, 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-94.13), _GLF_FUZZED(2.7)), bvec2(false, false))).x, 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-94.13), _GLF_FUZZED(2.7)), bvec2(false, false))).x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), (! (_GLF_IDENTITY(false, ! (! (false))))) || false), bool(bvec3(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), bool(bool(! (! (bool(bvec4((! (false)) || false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(2.7, -1.2, 5976.0198, -9019.3613, 5.5, -7133.2894)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))), (! (false)) || false), true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), bool(bool(! (! (bool(bvec4((! (false)) || false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(2.7, -1.2, 5976.0198, -9019.3613, 5.5, -7133.2894)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))), (! (false)) || false), true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), bool(bool(! (! (bool(bvec4((! (false)) || false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(2.7, -1.2, 5976.0198, -9019.3613, 5.5, -7133.2894)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))), (! (false)) || false), true, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (false)) || false, ((! (false)) || false) && true), true)), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (bool(bvec4((! (false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), bool(bool(! (! (bool(bvec4((! (false)) || false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, 1.0, sqrt(0.0), 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(2.7, -1.2, 5976.0198, -9019.3613, 5.5, -7133.2894)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))), (! (false)) || false), true, false))))))))))) || false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))) && true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), false), true, false))))), true && ((bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), false), true, false))))))), bool(bvec3(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))), false, false))))))), false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), false), true, false))))), true && ((bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), false), true, false))))))), bool(bvec3(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))), false, false))))))), false, false)))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), false), true, false))))), true && ((bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), false), true, false))))))), bool(bvec3(! (bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))), false, false))))))), false, false)))))))) && true))));
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)))) || false)))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5120.3949) : injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5120.3949) : injectionSwitch.x)) > injectionSwitch.y))))));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u + (read_1))) | (read_1)) + 1 == read_2) + _GLF_IDENTITY(1, ~ (~ (1))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) ^ 0), 0 | (~ (4))))));
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-48.24) : injectionSwitch.x)), injectionSwitch.x))), bool(true))) > injectionSwitch.y)))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-48.24) : injectionSwitch.x)), injectionSwitch.x))), bool(true))) > injectionSwitch.y)))) && true), false, false))));
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, false))));
          }
         do
          {
           do
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(_GLF_IDENTITY(5, (5) - 0)))), ((~ (int(5)))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), _GLF_IDENTITY(((~ (int(5)))) >> 0, 0 | (((~ (int(5)))) >> 0)))), max(_GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ((~ (int(5)))) >> 0)), _GLF_IDENTITY(int(5), ~ _GLF_IDENTITY((~ (int(5))), ((_GLF_IDENTITY(~ (int(5)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(5)), max(~ (int(5)), ~ (int(5))))), int(int(~ (_GLF_IDENTITY(~ (int(5)), max(~ (int(5)), ~ (int(5)))))))))))) >> 0))))) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), clamp((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), clamp((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717))))), 0 | (_GLF_IDENTITY(int(5), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), clamp((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717))))))), _GLF_IDENTITY(int(5), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), clamp((true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717)), (true ? _GLF_IDENTITY(int(5), min(int(5), int(5))) : _GLF_FUZZED(24717))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > _GLF_IDENTITY(((0 ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) | (int(int(6)))))), int(_GLF_IDENTITY(6, 0 ^ (6))))) >> _GLF_IDENTITY(int(6), int(6)))) ^ 1), min(((0 ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((int(int(6))), min((int(int(6))), (int(int(6))))) | (int(int(6)))))), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)))), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(_GLF_IDENTITY(int(6), (int(6)) / 1))) | (int(int(6)))))), int(6)))), 0, 0, 1)))) >> _GLF_IDENTITY(int(6), int(6)))) ^ 1), ((_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * (1 | 1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * (1 | 1))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * (1 | 1)))) | (-43849 & 0))))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) * (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | (1)), 1)) | 1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) >> 0), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(_GLF_IDENTITY(6, int(ivec2(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(_injected_loop_counter))), 1)))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(_GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-16437) : _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((int(int(6))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(int(6))), (false ? _GLF_FUZZED(atomicXor(_injected_loop_counter, 39484)) : (int(int(6))))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) << 0)) << 0))), (int(_GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (6) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(int(6))) | (int(int(6)))))), int(6))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0))) * (1 | 1))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))) | (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))))), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(int(int(6)), 1 * (int(int(6))))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter)) * 1))), (int(int(6))) | (int(int(6)))))))), int(6)), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), 0 | (int(1))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (false ? _GLF_FUZZED(-60101) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, min(6, 6)))), (int(int(6))) | (int(int(6)))))), int(6))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * (1 | 1)))) | (-43849 & 0))))) >> _GLF_IDENTITY(int(6), int(6))))))) ^ 1)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_injected_loop_counter, 1, 0)), 0 | (int(ivec3(_injected_loop_counter, 1, 0))))))), (_injected_loop_counter) << 0) > _GLF_IDENTITY(((0 ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) | (int(int(6)))))), int(_GLF_IDENTITY(6, 0 ^ (6))))) >> _GLF_IDENTITY(int(6), int(6)))) ^ 1), min(_GLF_IDENTITY(((0 ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) / 1)) << 0)), (int(int(6))) | (int(int(6)))))), int(6)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((int(_GLF_IDENTITY(int(6), (int(6)) << (0 & -98243)))), min((int(int(6))), (int(int(6))))) | (int(int(6)))))), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), _GLF_IDENTITY(int(6), (int(6)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))), min(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))), 0 ^ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))))))))))) | (int(int(6)))))), int(6)))), _GLF_IDENTITY(0, max(0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, int(int(_GLF_IDENTITY(6, 0 | (6))))))), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)))), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(_GLF_IDENTITY(int(6), (int(6)) / 1))) | (int(int(6)))))), int(6)))), 0, 0, 1)))) >> _GLF_IDENTITY(int(6), int(6)))) ^ 1), int(ivec2(((0 ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) / 1)) << 0)), (int(int(6))) | (int(int(6)))))), int(6)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((int(_GLF_IDENTITY(int(6), (int(6)) << (0 & -98243)))), min((int(int(6))), (int(int(6))))) | (int(int(6)))))), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), _GLF_IDENTITY(int(6), (int(6)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))), min(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))), 0 ^ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) - 0)), 0 | (int(_GLF_IDENTITY(6, (6) - 0))))))))))))) | (int(int(6)))))), int(6)))), _GLF_IDENTITY(0, max(0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, int(int(_GLF_IDENTITY(6, 0 | (6))))))), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (false ? _GLF_FUZZED(-57645) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)))), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(_GLF_IDENTITY(int(6), (int(6)) / 1))) | (int(int(6)))))), int(6)))), 0, 0, 1)))) >> _GLF_IDENTITY(int(6), int(6)))) ^ 1), 0))), ((_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6))) << 0), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(77171) : 6)), _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) * (1 | 1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), max(int(int(6)), int(int(6)))), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(_GLF_IDENTITY(6, (6) >> _GLF_IDENTITY(0, (0) << 0)))))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter)))) + 0)) << 0), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38372) : 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * cos(0.0))))) * (1 | 1))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), ~ (~ (_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter)))))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)), ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_IDENTITY((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)), ((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0))) | ((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)))))) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * (1 | 1)))) | (-43849 & 0))))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, max(6, 6)))))), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))))), (int(int(6))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), int(ivec2(int(6), (0 >> _GLF_IDENTITY(int(7), int(7))))))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(_GLF_IDENTITY(int(6), 1 * (int(6))))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), ~ (~ (int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))))) | 0)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), 0 + (int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6))))))))) | (int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | _GLF_IDENTITY(0, 0 ^ (0)))) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(_GLF_IDENTITY(int(6), (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 | (int(4))))) + (int(6)))))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ _GLF_IDENTITY(0, (0) << (0 & -46106)))) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter)), ((true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ _GLF_IDENTITY(0, (0) << (0 & -46106)))) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))) / 1)), (int(int(6))) | (int(int(6)))))))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) * (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))) | (1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 1, 0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 1, 0, 0)))), max((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 1, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 1, 0, 0)))), max((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 1, 0, 0)))), (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 1, 0, 0))))))))) << 0) | (1)))), 1)) | 1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (6), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (6), 0 | (~ (6))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1), (ivec4(_GLF_IDENTITY(~ (6), 0 | (~ (6))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1)) << ivec4(0, 0, 0, 0)))))))), (int(int(6))) | (_GLF_IDENTITY(int(int(6)), clamp(_GLF_IDENTITY(int(int(6)), 0 | (int(int(6)))), int(int(6)), int(int(6)))))))), int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6))) >> 0), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(_GLF_IDENTITY(6, int(ivec2(_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)))), 1)))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(_GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-16437) : _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))) | (int(int(6)))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((int(int(6))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(int(6))), (false ? _GLF_FUZZED(atomicXor(_injected_loop_counter, 39484)) : (int(int(6))))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6))))), (_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((int(int(6))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((int(int(6))), (false ? _GLF_FUZZED(atomicXor(_injected_loop_counter, 39484)) : (int(int(6))))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))) ^ 0)), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) << 0)) << 0))), (int(_GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter)))) | 0))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(_GLF_IDENTITY(6, 0 ^ (6))))) | (int(int(6)))))))), int(6)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (6) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(int(6))) | (int(int(6)))))), int(6))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0), clamp((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (6) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(int(6))) | (int(int(6)))))), int(6))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (6) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(int(6))) | (int(int(6)))))), int(6))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, (6) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(int(6))) | (int(int(6)))))), int(6))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0))))) * (1 | 1))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, int(int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))) | (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), (int(6)) / 1)), (int(int(_GLF_IDENTITY(6, max(6, 6))))) ^ 0)) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), int(6)))), 1 * _GLF_IDENTITY((int(int(6))), _GLF_IDENTITY(int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6))))))), (int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6)))))))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6))))))), clamp(int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6))))))), int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6))))))), int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6))))))))), int(_GLF_IDENTITY(int((int(int(6)))), 0 | (int((int(int(6)))))))))))) | (int(int(6)))))), min(int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(6), max(int(6), int(6)))), (true ? _GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)), (true ? (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) : _GLF_FUZZED(26507))) : _GLF_FUZZED(-71309))) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))), (int(int(6))) | (int(int(6)))))), int(_GLF_IDENTITY(6, _GLF_IDENTITY(_GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(int(6)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)), 0 | ((_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)))) - (0 | 0)) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY(int(int(6)), (_GLF_IDENTITY(int(int(6)), (int(int(6))) ^ 0)) - _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), (0 >> _GLF_IDENTITY(int(7), int(7))) ^ ((0 | 0)))) >> 0)) : _GLF_FUZZED(_injected_loop_counter)) * 1))), (int(_GLF_IDENTITY(int(6), (int(6)) / 1))) | (int(int(6)))))))), int(6)), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), 0 | (int(1))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (int(int(6))) | (int(int(6)))))), int(6)), (false ? _GLF_FUZZED(-60101) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(_GLF_IDENTITY(6, min(6, 6)))), (int(int(6))) | (int(int(6)))))), int(6))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * (1 | 1)))) | (-43849 & 0))))) >> _GLF_IDENTITY(int(6), int(6))))))) ^ 1)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(709.310)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), bool(true)))))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false)), true, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), false))), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), false))))))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y) && _GLF_IDENTITY(true, true && (true))))))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-9.2 / 580.624))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))))))))))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(false))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(false))), (! (! (_GLF_WRAPPED_LOOP(false)))) || false), false))))))));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
