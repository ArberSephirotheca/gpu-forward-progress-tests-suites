#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat3 _f0;
} ;

struct _GLF_struct_1 {
 float _f0;
 _GLF_struct_0 _f1;
 vec3 _f2;
 ivec4 _f3;
 uint read_1;
 mat2x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 mat4 _f1;
 uvec3 _f2;
 _GLF_struct_1 _f3;
 bvec4 _f4;
 vec2 _f5;
 uvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))) || false)) || false))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_6_1_1_11read_2virtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(504.513) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(47103u, 102243u, 115264u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec3(subgroup_size, 1u, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) ^ 0u)) / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))))), ((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))), clamp(~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))), ~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))), ~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))))) << uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, _GLF_IDENTITY(115920u, uint(_GLF_IDENTITY(uvec4(115920u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), clamp(uvec4(115920u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), uvec4(115920u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), uvec4(115920u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), min(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), _GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), min(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), _GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), clamp((uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), min(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), _GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), (uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), min(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), _GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), (uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), min(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), _GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) ^ uvec4(0u, 0u, 0u, 0u))))))))) / (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u))))))))), ((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))), (uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))), ~ (~ (~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))))), ((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size / uvec3(44586u, 182496u, 115920u), min(subgroup_size / uvec3(44586u, 182496u, 115920u), _GLF_IDENTITY(subgroup_size / uvec3(44586u, 182496u, 115920u), (subgroup_size / uvec3(44586u, 182496u, 115920u)) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size / uvec3(44586u, 182496u, 115920u), min(subgroup_size / uvec3(44586u, 182496u, 115920u), _GLF_IDENTITY(subgroup_size / uvec3(44586u, 182496u, 115920u), (subgroup_size / uvec3(44586u, 182496u, 115920u)) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))) * uvec3(1u, 1u, 1u)))), ((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_size / uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(subgroup_size / uvec3(44586u, 182496u, 115920u), (subgroup_size / uvec3(44586u, 182496u, 115920u)) - uvec3(0u, 0u, 0u))) / ((uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u)))))), (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), clamp(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), clamp(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))), (uvec3((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), clamp(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))))))) - uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), clamp(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))), (uvec3((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), clamp(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))))))) - uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(uvec3((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), clamp(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))), (uvec3((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (_GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), clamp(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))))))) - uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u), clamp(((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u), ((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u), (((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u), ~ (~ (((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))))) << uvec3(0u, 0u, 0u)))))))))), (_GLF_FUZZED(_GLF_IDENTITY((num_workgroup | _GLF_IDENTITY((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), min(uvec3(44586u, 182496u, 115920u), uvec3(44586u, 182496u, 115920u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (true ? uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u) : _GLF_FUZZED(uvec4(159649u, 184559u, 41686u, 11917u)))), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))))), ((num_workgroup | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))))), (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), ((subgroup_size / uvec3(44586u, 182496u, 115920u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), max((subgroup_size / uvec3(44586u, 182496u, 115920u)), (subgroup_size / uvec3(44586u, 182496u, 115920u)))), 1u), (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), min(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))), uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(_GLF_IDENTITY(44586u, (44586u) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), 182496u, 115920u)), 1u))))))))) * uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))))) | (_GLF_FUZZED(_GLF_IDENTITY((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, _GLF_IDENTITY(115920u, (115920u) - 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY(uvec3(uvec4((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (uvec3(44586u, 182496u, 115920u)) - uvec3(0u, 0u, 0u))), 1u)), uvec3(uvec3(uvec3(uvec4((subgroup_size / _GLF_IDENTITY(uvec3(44586u, 182496u, 115920u), (uvec3(44586u, 182496u, 115920u)) - uvec3(0u, 0u, 0u))), 1u)))))))))))), ((num_workgroup | _GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((subgroup_size / uvec3(44586u, 182496u, 115920u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)))))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u), (uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(uvec4((subgroup_size / uvec3(44586u, 182496u, 115920u)), 1u))))))))))))))) << uvec3(0u, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) : true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(47103u, 102243u, 115264u)))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))), false || (bool(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((false) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(false, (false) || false))))), false)))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))), false || (bool(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), ! (! ((false)))) || false)), false || (bool(_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), bool(_GLF_IDENTITY(bvec3((false) || false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(false, (false) || false))))), false)))) && true))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(62032))), vec2(_GLF_FUZZED((45.61 * float(67463u))), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(62032))), vec2(_GLF_FUZZED((45.61 * float(67463u))), (injectionSwitch)[1]), bvec2(false, true))).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(62032))), vec2(_GLF_FUZZED((45.61 * float(67463u))), (injectionSwitch)[1]), bvec2(false, true))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(62032))), vec2(_GLF_FUZZED((45.61 * float(67463u))), (injectionSwitch)[1]), bvec2(false, true))).y))))))))), false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) | (_injected_loop_counter)) != 1); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, tan(0.0)))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + 0.0)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, tan(0.0)))).y))))))));
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 1, (0 | 1) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-1359.0618)), bvec2(false, false))))))).y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(log(5.6)))), injectionSwitch.x))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) * _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), 0u | (min(1u, 1u))))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_1_6_1_1_11read_2virtual_gid.y = virtual_gid;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (_GLF_IDENTITY(false, true && (false))) && true))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), clamp(uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(subgroup_id, (0u & 151815u), 1u)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), clamp(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u)))))), uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (subgroup_id))))) | 0u), (0u & 151815u), 1u))), (_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), clamp(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u)))))), uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (subgroup_id))))) | 0u), (0u & 151815u), 1u)))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (true ? uint(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))))) - 0u)), clamp(uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(subgroup_id, (0u & 151815u), 1u)))) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_base)), 0u | ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), clamp(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u)))))), uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (subgroup_id))))) | 0u), (0u & 151815u), 1u))), (_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), clamp(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), clamp(uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u))), uvec3(uvec3(uvec3(subgroup_id, (0u & 151815u), 1u)))))), uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (subgroup_id))))) | 0u), (0u & 151815u), 1u)))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (true ? uint(_GLF_IDENTITY(uvec3(subgroup_id, (0u & 151815u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))))) - 0u)), clamp(uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(subgroup_id, (0u & 151815u), 1u), uvec3(subgroup_id, (0u & 151815u), 1u)))) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_base)))))) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 1u * _GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), ((subgroup_local_id + 1))))) % subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(workgroup_base)), min((true ? 0u : _GLF_FUZZED(workgroup_base)), (true ? 0u : _GLF_FUZZED(workgroup_base)))) ^ 0u), true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, (0u) >> 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))), ~ (~ ((_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(workgroup_base)), min((true ? 0u : _GLF_FUZZED(workgroup_base)), (true ? 0u : _GLF_FUZZED(workgroup_base)))) ^ 0u), true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(0u, (0u) >> 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))))))))) ^ 0u) | ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (_GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), false, false, true)))))) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 0u))), true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED(workgroup_base), true ? 0u : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 0u))), true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED(workgroup_base), true ? 0u : _GLF_FUZZED(workgroup_base))))), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 0u))), true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED(workgroup_base), true ? 0u : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), 0u))), true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) : _GLF_FUZZED(workgroup_base), true ? 0u : _GLF_FUZZED(workgroup_base)))))))) - 0u)) ^ 0u) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size))) : _GLF_FUZZED((subgroup_local_id / workgroup_id))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true, false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)))) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true, false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)))) && true)), true, false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)), true)), bool(bool(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 else
  {
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat3(1.0), mat4(1.0), uvec3(1u), _GLF_struct_1(1.0, _GLF_struct_0(mat3(1.0)), vec3(1.0), ivec4(1), atomicLoad(buf[GLF_merged2_0_1_6_1_1_11read_2virtual_gid.y], 4, 64, 0), mat2x3(1.0), uvec2(1u)), bvec4(true), vec2(1.0), uvec4(1u));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), min(0 << _GLF_IDENTITY(int(0), int(0)), 0 << _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_2._f3.read_1 + 1), (uint(_GLF_struct_replacement_2._f3.read_1 + 1)) | (uint(_GLF_struct_replacement_2._f3.read_1 + 1))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[GLF_merged2_0_1_6_1_1_11read_2virtual_gid.y], 4, 64, 0);
 GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x = read_2;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false))))) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) - vec3(0.0, 0.0, 0.0))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     int i = 0;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x, (_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) && true), true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x, (_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) && true), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x, (_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) && true), true, true))))), (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x, (_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) && true), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x, (_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) && true), true, true)))))) && true))))) + 1, (_GLF_IDENTITY(uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) + 1, uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_2._f3.read_1, (_GLF_struct_replacement_2._f3.read_1) << 0u) + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) + 1), (uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x), _GLF_IDENTITY(clamp(uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x), uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x), uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x)), (clamp(uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x), uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x), uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x))) - (137590u & 0u))) + 1)) << 0u)))) | 0u), 4, 64, 4);
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_2._f3.read_1 + 1 == GLF_merged2_0_1_6_1_1_11read_2virtual_gid.x) + 1, 4, 64, 4);
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), (true ? ~ (_GLF_IDENTITY(0, min(0, 0))) : _GLF_FUZZED(_injected_loop_counter))))), (0) | 0)], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])).x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.7, 9.3)) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.7, 9.3)) : injectionSwitch)).y) / 1.0))), false), false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
