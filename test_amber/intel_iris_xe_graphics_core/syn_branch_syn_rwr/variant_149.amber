#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 vec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 bvec3 _f1;
 vec4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 bvec4 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 uint subgroup_size;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id;
 uvec4 GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec3(1), _GLF_struct_0(ivec3(1), mat4x2(1.0), mat2(1.0), bvec4(true), mat4(1.0)), gl_SubgroupSize, _GLF_struct_3(_GLF_struct_1(mat3x2(1.0), bvec3(true), vec4(1.0), bvec4(true)), _GLF_struct_2(vec2(1.0), mat2x3(1.0))));
 GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.x = _GLF_struct_replacement_4.subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.z = workgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.z;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.x + GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y;
 GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.y = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.x + ((GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y + 1) % GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.x);
 uint read_1 = atomicLoad(buf[GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.y], 4, 64, 0);
 GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.w = read_1;
 atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.w + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.y], 4, 64, 0);
 GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.x = read_2;
 if(GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y + 1 < GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.xyz.x)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.w + 1 == GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.x) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged2_0_3_68_3_1_6GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idread_1.w + 1 == GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.x) + 1, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
