#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(bvec2(! (false), false))) || false, ! (! ((bool(bvec2(! (false), false))) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(bvec2(! (false), false))) || false, ! (! ((bool(bvec2(! (false), false))) || false)))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(bvec2(! (false), false))) || false, ! (! ((bool(bvec2(! (false), false))) || false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(bvec2(! (false), false))) || false, ! (! ((bool(bvec2(! (false), false))) || false)))), true && (_GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((bool(bvec2(! (false), false))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (bool(bvec2(! (false), false)))))) || false)), bool(bool((! ((_GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (bool(bvec2(! (false), false)))))) || false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(! (false), false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), (bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))) || false))), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec2(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))) || false, ! (! (_GLF_IDENTITY((bool(bvec2(! (false), false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (false), false), false)), true))))))), bool(bvec3(_GLF_IDENTITY(((bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (false), false), false)), true))))))), bool(bvec3(((bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (false), false), false)), true))))))), true, false))), false, false))), bool(bvec4(! ((bool(bvec2(! (false), false)))), true, false, false))))) || false))))))), (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), length(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.3)), bool(false))), 0.0, 1.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(518.042), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))), (injectionSwitch)))[0], _GLF_FUZZED(81.10)), bvec2(true, false))))).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), length(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.3)), bool(false))), 0.0, 1.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(518.042), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))), (injectionSwitch)))[0], _GLF_FUZZED(81.10)), bvec2(true, false))))).y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), length(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.3)), bool(false))), 0.0, 1.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(518.042), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))), (injectionSwitch)))[0], _GLF_FUZZED(81.10)), bvec2(true, false))))).y), false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), ~ (~ ((workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size)))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(vec3(2359.2178, 2.5, 6.9).y)), vec2(_GLF_FUZZED(303.538), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_FUZZED(-3.5)) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - _GLF_IDENTITY(0.0, (0.0) - 0.0)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1], (injectionSwitch)[1]))), min(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-3.5, (-3.5) - 0.0)), (_GLF_FUZZED(-3.5)) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, abs(1.0), 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 1.0, abs(1.0), 1.0, abs(1.0), 1.0)))))))))[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1], (injectionSwitch)[1]))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_FUZZED(-3.5)) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])), injectionSwitch)))[1], (injectionSwitch)[1])))) + 0.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(-3.5), _GLF_IDENTITY((_GLF_FUZZED(-3.5)), min((_GLF_FUZZED(-3.5)), (_GLF_FUZZED(-3.5)))) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))), injectionSwitch)))[1], (injectionSwitch)[1]))), max((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_FUZZED(_GLF_IDENTITY(-3.5, (-3.5) - abs(0.0)))) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), mix(vec2(_GLF_FUZZED(90.71), _GLF_FUZZED(55.76)), vec2((_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(8.9))), 1.0) * ((injectionSwitch))))[0], (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))))[1]), bvec2(true, true)))[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(670.533, -61.33)) : vec2(0.0, 0.0))), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))) + (injectionSwitch)))[1]))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_FUZZED(-3.5)) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1], (injectionSwitch)[1])), (true ? false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_FUZZED(-3.5)) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[1], (injectionSwitch)[1])) : _GLF_FUZZED(-9730.8575)))), float(vec2((false ? _GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(_GLF_FUZZED(-3.5), (_GLF_FUZZED(-3.5)) / 1.0)) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1], _GLF_IDENTITY(clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[1], (injectionSwitch)[1]), min(clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[1], (injectionSwitch)[1]), _GLF_IDENTITY(clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[1], (injectionSwitch)[1]), (clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[1], (injectionSwitch)[1])) / _GLF_ONE(1.0, injectionSwitch.y)))))), 0.0))))))))), bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.1))), injectionSwitch[1])).y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-21972))))))], min(injectionSwitch[_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-21972))))))], injectionSwitch[_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-21972))))))])), (true ? injectionSwitch[0] : _GLF_FUZZED(-3.1))), injectionSwitch[1])).y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0))).y : _GLF_FUZZED(9.1))))))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.1))), injectionSwitch[1])).y)))))), true, true, true))), true))).x))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) / 1u))), (uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u, 0u))) >> 0u), _GLF_IDENTITY((true ? uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) / uvec3(1u, 1u, 1u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(99920u, 1u * (99920u))), min(_GLF_FUZZED(_GLF_IDENTITY(99920u, 1u * (99920u))), _GLF_FUZZED(_GLF_IDENTITY(99920u, 1u * (99920u))))), (_GLF_FUZZED(99920u)) >> _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((true ? uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 0u, 1u, 1u)), uint(uvec3(uint(uvec4((subgroup_size), 0u, 1u, 1u)), 0u, 1u))))))), 1u, 0u)) : _GLF_FUZZED(99920u)), ((true ? uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uaddCarry(subgroup_size, workgroup_id, subgroup_size)))), 1u, 0u)) : _GLF_FUZZED(99920u))) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY((true ? uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 0u, 1u, 1u)), uint(uvec3(uint(uvec4((subgroup_size), 0u, 1u, 1u)), 0u, 1u))))))), 1u, 0u)) : _GLF_FUZZED(99920u)), ((true ? uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uaddCarry(subgroup_size, workgroup_id, subgroup_size)))), 1u, 0u)) : _GLF_FUZZED(99920u))) / 1u)))))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-37251) : _GLF_IDENTITY(1, clamp(1, 1, 1))), min((false ? _GLF_FUZZED(-37251) : _GLF_IDENTITY(1, clamp(1, 1, 1))), (false ? _GLF_FUZZED(-37251) : _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) - 0u) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / exp(0.0))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / exp(0.0))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sqrt(1.0)))) > injectionSwitch.y), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))) || false), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / exp(0.0))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0)), vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(194.271)), vec2(_GLF_FUZZED(900.868), _GLF_IDENTITY((vec2(1.0, 0.0))[1], clamp((vec2(1.0, 0.0))[1], (vec2(1.0, 0.0))[1], (vec2(1.0, 0.0))[1]))), bvec2(false, true)))))))))) && true))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> 0u), 0u, 0u))) | (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (0 ^ _GLF_IDENTITY((4), (false ? _GLF_FUZZED((-30801 / bitfieldExtract(-11708, -23254, 29240))) : (4)))) | (0 ^ (4)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | (0 ^ (4)))), 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) ^ 0), (0 ^ (4)) | (0 ^ (4)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-13819) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), _GLF_IDENTITY((0 ^ (4)), 0 + ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-748) : 0)) ^ (4)))) | (0 ^ _GLF_IDENTITY((4), ((4)) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), _GLF_IDENTITY((0 ^ (4)), 0 + ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-748) : 0)) ^ (4)))) | (0 ^ _GLF_IDENTITY((4), ((4)) / 1)))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), _GLF_IDENTITY((0 ^ (4)), 0 + ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-748) : 0)) ^ (4)))) | (0 ^ _GLF_IDENTITY((4), ((4)) / 1))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), _GLF_IDENTITY((0 ^ (4)), 0 + ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-748) : 0)) ^ (4)))) | (0 ^ _GLF_IDENTITY((4), ((4)) / 1)))), 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), _GLF_IDENTITY((0 ^ (4)), 0 + ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-748) : 0)) ^ (4)))) | (0 ^ _GLF_IDENTITY((4), ((4)) / 1))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | (0 ^ (4)))), 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | (0 ^ (4)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-13819, (_GLF_IDENTITY(-13819, max(-13819, -13819))) | 0)) : _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), _GLF_IDENTITY((_GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | (0 ^ (4)))), 0 + ((0 ^ (4)))) | (0 ^ (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, min(4, 4))), (~ (_GLF_IDENTITY(4, min(4, 4)))) ^ 0))))))))))) << (0 ^ 0)))) << 0), _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_DEAD(false))))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (virtual_gid))], buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0, (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0, int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0, (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0) << 0), 0)))) << 0)), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0, (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0, int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0, (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec2(2701.4612, -508.171).x)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((- -3.8))), bool(false)))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0) << 0), 0)))) << 0))))) * (4)), ~ (~ (_GLF_IDENTITY(4, (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(2701.4612, min(2701.4612, 2701.4612)), -508.171).x)), max(_GLF_IDENTITY(float(_GLF_FUZZED(vec2(_GLF_IDENTITY(2701.4612, min(2701.4612, 2701.4612)), -508.171).x)), 1.0 * (float(_GLF_FUZZED(vec2(_GLF_IDENTITY(2701.4612, min(2701.4612, 2701.4612)), -508.171).x)))), float(_GLF_FUZZED(vec2(_GLF_IDENTITY(2701.4612, min(2701.4612, 2701.4612)), -508.171).x)))), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0)))), float(_GLF_FUZZED((_GLF_IDENTITY(- -3.8, max(- -3.8, _GLF_IDENTITY(- -3.8, clamp(- -3.8, - -3.8, - -3.8))))))), bool(_GLF_IDENTITY(false, (false) && true))))) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))))), bool(true)))) | 0) * (4))))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || _GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec4(bvec2(read_1 + 1 == read_2, true), false, true))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec4(bvec2(read_1 + 1 == read_2, true), false, true))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, true), bvec2(bvec4(bvec2(read_1 + 1 == read_2, true), false, true))), true)), false))), true, true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u) + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) * 1u), read_2)), true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u) + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) * 1u), _GLF_IDENTITY(read_2, ~ (~ (read_2))))), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), false)))) + 1, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-63.15) : 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), (true ? _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(1.4))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0))), injectionSwitch.x), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (_GLF_IDENTITY(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(clamp(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1))), uint(uvec4(clamp(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1))), 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))), 0u | (_GLF_IDENTITY(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), clamp(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1)))))), ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u), (uvec4(_GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), clamp(~ (0u ^ (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) - 0) == read_2) + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, max(1, 1)), 0, 0))))), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (0u ^ (uint(read_1 + 1 == read_2) + 1)))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))))) / _GLF_IDENTITY(1u, (1u) / 1u))) | (0u ^ (uint(read_1 + 1 == read_2) + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2) + 1), 0u | (0u ^ (uint(read_1 + 1 == read_2) + 1))), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + _GLF_IDENTITY(1, int(int(1))) == read_2) + _GLF_IDENTITY(1, (1) << 0)), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), uint(uvec2((uint(read_1 + 1 == read_2) + 1), 1u))), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (_GLF_IDENTITY(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(uvec3(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), 1u, 0u), (uvec3(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), 1u, 0u)) * (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)))))))) / 1u)) | (0u ^ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1)))), (false ? _GLF_FUZZED(11672u) : (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), uint(uvec2((uint(read_1 + 1 == read_2) + 1), 1u))), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (_GLF_IDENTITY(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(uvec3(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), 1u, 0u), (uvec3(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), 1u, 0u)) * (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)))))))) / 1u)) | (0u ^ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))) + 1))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ _GLF_IDENTITY((0u ^ (uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (~ ((0u ^ (uint(read_1 + 1 == read_2) + 1))))), 1u, 0u), (uvec3(_GLF_IDENTITY((0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (~ ((0u ^ (uint(read_1 + 1 == read_2) + 1))))), 1u, 0u)) | (uvec3(_GLF_IDENTITY((0u ^ (uint(read_1 + 1 == read_2) + 1)), ~ (~ ((0u ^ (uint(read_1 + 1 == read_2) + 1))))), 1u, 0u)))))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), ((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))) >> 0u), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))))))), uint(uvec2((~ (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), ((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))) >> 0u), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))))))), 1u)))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1)) == _GLF_IDENTITY(read_2, (read_2) << 0u)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))) << 0)), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, 0u + (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), (true ? uint(read_1 + 1 == read_2) : _GLF_FUZZED(9374u))) + 1) >> 0u)))), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ _GLF_IDENTITY((0u ^ (uint(read_1 + 1 == read_2) + 1)), uint(uvec2((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), min(0u ^ (uint(read_1 + 1 == read_2) + 1), _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), max(0u ^ (uint(read_1 + 1 == read_2) + 1), 0u ^ (uint(read_1 + 1 == read_2) + 1)))) | (0u ^ (uint(read_1 + 1 == read_2) + 1)))))), 0u)))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), clamp(_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (uint(uvec3((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (1) ^ 0))), 1u, 1u))) ^ 0u), uint(uvec3((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (_GLF_IDENTITY(~ (0u ^ (uint(read_1 + 1 == read_2) + 1)), (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))) << 0u)))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), 1u, 1u)), uint(uvec3((_GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2) + 1), (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (uint(read_1 + 1 == read_2) + 1))))) / 1u)) | (0u ^ (uint(read_1 + 1 == read_2) + 1)), 1u, 1u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u, 0u ^ ((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u)))) | (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (0u ^ (uint(read_1 + 1 == read_2) + 1)) << 0u))), max(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u, 0u ^ ((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u)))) | (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (0u ^ (uint(read_1 + 1 == read_2) + 1)) << 0u))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u, 0u ^ ((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u)))) | (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (0u ^ (uint(read_1 + 1 == read_2) + 1)) << 0u))), max(false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u, 0u ^ ((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u)))) | (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (0u ^ (uint(read_1 + 1 == read_2) + 1)) << 0u))), false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u, 0u ^ ((_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), ~ (~ (0u ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(uvec2(uint(read_1 + 1 == read_2), 0u)), (uint(uvec2(uint(read_1 + 1 == read_2), 0u))) - 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))))))) / 1u)))) | (_GLF_IDENTITY(0u ^ (uint(read_1 + 1 == read_2) + 1), (0u ^ (uint(read_1 + 1 == read_2) + 1)) << 0u)))))))))))) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u))), _GLF_IDENTITY(0u, (0u) / 1u))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-842.619))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-842.619, (_GLF_IDENTITY(-842.619, (false ? _GLF_FUZZED(-6.9) : -842.619))) - 0.0))), max(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-842.619, (_GLF_IDENTITY(-842.619, (false ? _GLF_FUZZED(-6.9) : -842.619))) - 0.0))), 1.0 * (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-842.619, (_GLF_IDENTITY(-842.619, (false ? _GLF_FUZZED(-6.9) : -842.619))) - 0.0))), ((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-842.619, (_GLF_IDENTITY(-842.619, (false ? _GLF_FUZZED(-6.9) : -842.619))) - 0.0)))) / 1.0))), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-842.619, (_GLF_IDENTITY(-842.619, (false ? _GLF_FUZZED(-6.9) : -842.619))) - 0.0))), min((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-842.619, (_GLF_IDENTITY(-842.619, (false ? _GLF_FUZZED(-6.9) : -842.619))) - 0.0))), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-842.619, (_GLF_IDENTITY(-842.619, (false ? _GLF_FUZZED(-6.9) : -842.619))) - 0.0)))))))))) > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-842.619))))) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-842.619))))) > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-842.619))))) > injectionSwitch.y)))), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2) + 1, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
