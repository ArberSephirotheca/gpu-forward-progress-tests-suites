#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) * (uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u) | uvec3(1u, 1u, 1u))).x, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(1u, 1u, 1u), min(uvec3(0u, 0u, 0u) | uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(0u, 0u, 0u) | uvec3(1u, 1u, 1u))))).x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(bvec3(! (false), false, true))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))))), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(1u, 1u, 1u), min(uvec3(0u, 0u, 0u) | uvec3(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(0u, 0u, 0u) | uvec3(1u, 1u, 1u))))).x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(bvec3(! (false), false, true))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (1u)))))), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))).x))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 8.2)), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), gl_WorkGroupID)), gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), ((gl_WorkGroupID) | uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) / (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u))))) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), clamp(uvec3(3u), uvec3(3u), uvec3(3u)))), ((uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u) << _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (uvec3(3u)) | (uvec3(3u))), max(uvec3(3u), uvec3(3u))))) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), clamp(uvec3(3u), uvec3(3u), uvec3(3u))))) | uvec3(0u, 0u, 0u)))).x), min(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) | 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, gl_WorkGroupID.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))).x, gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, ~ (~ (gl_WorkGroupID.x))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, ~ (~ (gl_WorkGroupID.x))))))) + 0u))), (uint((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)))).x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))) + 0u)))) << 0u)))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x), min(clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), 1u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), 1u))) | uvec3(0u, 0u, 0u))).x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, gl_WorkGroupID.x), _GLF_IDENTITY(_GLF_IDENTITY(0u + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), max((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), 1u * ((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)))))), uint(uint((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))), 0u | (0u + _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(93834u, 61694u, 3197u)) : gl_WorkGroupID)).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(93834u, 61694u, 3197u)) : gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(93834u, 61694u, 3197u)) : gl_WorkGroupID)).x) << 0u)))), gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, (0u) | (0u)))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))), 0u | (0u + _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))))).x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, gl_WorkGroupID.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x))) >> 0u)), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY((clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, 0u ^ ((clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(178390u) : 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), uint(uvec2(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 0u))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, min(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, ((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u) / 1u), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), max(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(30450u, 170794u, 70137u)) : gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(44328u, 68326u, 11735u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))).x, gl_WorkGroupID.x)))) + _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(178390u) : 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), uint(uvec2(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 0u))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, min(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, ((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u) / 1u), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), max(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(30450u, 170794u, 70137u)) : gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(44328u, 68326u, 11735u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))).x, gl_WorkGroupID.x)))) + _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(178390u) : 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), uint(uvec2(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 0u))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, min(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, ((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u) / 1u), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), max(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(30450u, 170794u, 70137u)) : gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(44328u, 68326u, 11735u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))).x, gl_WorkGroupID.x)))) + _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(178390u) : 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), uint(uvec2(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 0u))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, min(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, ((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u) / 1u), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), max(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(30450u, 170794u, 70137u)) : gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(44328u, 68326u, 11735u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))).x, gl_WorkGroupID.x)))) + _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(178390u) : 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), uint(uvec2(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 0u))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, clamp(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, min(_GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, ((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u) / 1u), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u, _GLF_IDENTITY(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), max(uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec3(30450u, 170794u, 70137u)) : gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), max(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(44328u, 68326u, 11735u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))).x, gl_WorkGroupID.x)))) + _GLF_IDENTITY(0u, (0u) | (0u)))) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)))))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (gl_WorkGroupID) | (gl_WorkGroupID)).x, gl_WorkGroupID.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x, max(false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x, false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x))))) >> 0u)), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), uint(uvec3(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), 0u, 0u))), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))) | (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))))))))))), min(~ (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], clamp(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[0], 1u * (gl_WorkGroupID[0])), gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])))).x, gl_WorkGroupID.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x))) >> 0u)), _GLF_IDENTITY((clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), max(_GLF_IDENTITY((clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), ((clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) << 0u), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))) + 0u)), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (true ? ~ (gl_WorkGroupID) : _GLF_FUZZED(uvec3(11235u, 17048u, 174268u)))))).x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u)) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)))), gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))) / 1u), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))) / 1u), 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))) / 1u))))), gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (gl_WorkGroupID)).x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u))))))))))))), ~ (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), min(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, gl_WorkGroupID.x), 0u + _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x))) >> 0u)), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupID.x)) + 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u))) + 0u), (_GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))))))))))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) >> 0u)) ^ 0u), gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID)))).x)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((414.292 - float(true)))), bool(false)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((414.292 - float(true)))), bool(false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_IDENTITY(true, false || (true)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | (virtual_gid))], 4, _GLF_IDENTITY(64, 0 ^ (64)), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)))), max(_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), next_virtual_gid))], uint(read_1 + 1), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, max(64, 64)))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), (false || (false)) || false), false, false, true)))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), (false || (false)) || false), false, false, true)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), (false || (false)) || false), false, false, true)))), true), false)), true, true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, true && (true))), true, false)))), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size)) | (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size)))), max(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size)) | (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size)))), ~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size)) | (clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size))))))))))) : _GLF_FUZZED(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u | _GLF_IDENTITY((~ (read_1)), min((~ (read_1)), (~ (read_1)))))))), 0u ^ (true ? _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ~ (~ (_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, subgroup_size), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ~ (~ (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), max(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size, subgroup_size))) / 1u)), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) | 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))))) >> 0u)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))))))))))), subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u | (~ (read_1)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), _GLF_IDENTITY(false, true && (false))), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.9, -890.922)))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), false, true))))))), false))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, true, true, false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(-6649) : _GLF_IDENTITY(0, (0) | 0)))) << (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))));
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), ~ _GLF_IDENTITY((~ (~ (1))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (~ (1))), min(_GLF_IDENTITY((~ (~ (1))), ((~ (~ (1)))) >> 0), (~ (~ (1))))))), ~ (~ ((~ (_GLF_IDENTITY((~ (~ (1))), min(_GLF_IDENTITY((~ (~ (1))), ((~ (~ (1)))) >> 0), (~ (~ (1))))))))))))))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), ~ _GLF_IDENTITY((~ (~ (1))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (~ (1))), min(_GLF_IDENTITY((~ (~ (1))), ((~ (~ (1)))) >> 0), (~ (~ (1))))))), ~ (~ ((~ (_GLF_IDENTITY((~ (~ (1))), min(_GLF_IDENTITY((~ (~ (1))), ((~ (~ (1)))) >> 0), (~ (~ (1)))))))))))))))))) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), ~ _GLF_IDENTITY((~ (~ (1))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (~ (1))), min(_GLF_IDENTITY((~ (~ (1))), ((~ (~ (1)))) >> 0), (~ (~ (1))))))), ~ (~ ((~ (_GLF_IDENTITY((~ (~ (1))), min(_GLF_IDENTITY((~ (~ (1))), ((~ (~ (1)))) >> 0), (~ (~ (1))))))))))))))))))) == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) * 1)), max((4), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 | ((4)))) << 0))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4)))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4))))), (false ? _GLF_FUZZED(-50442) : _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) + 0), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4)))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)), max((4), (4))), 0 ^ _GLF_IDENTITY((~ _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), max((4), (4))))), (4)))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), max(_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), (~ _GLF_IDENTITY((4), max((4), (4)))) | (~ _GLF_IDENTITY((4), max((4), (4))))), ~ _GLF_IDENTITY((4), max((4), (4))))))) - 0))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (_GLF_IDENTITY(4, (4) | 0))), (((1 ^ 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (max((4), (_GLF_IDENTITY(4, (4) | 0)))))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4))))), (false ? _GLF_FUZZED(-50442) : _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) + 0), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((4), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((_GLF_IDENTITY(4, (4) - 0)), (4)))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))), max((4), (4))), 0 ^ (~ _GLF_IDENTITY((4), max((4), (4))))))) - 0)) ^ 0)))) - (-42337 & _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))) / 1)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : read_1 + 1)) == read_2) + 1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1)) == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1)) == read_2) + 1, uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(virtual_gid) : read_1 + 1)) == read_2) + 1)))), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))))))), bool(bool(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), true, true)))), false || _GLF_IDENTITY((false), ! (! ((false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, determinant(mat2(sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, 0.0))))) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-671.350)), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))))), false)), (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))))) || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8466.0482), _GLF_FUZZED(-40.09)), bvec2(false, false))).x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
