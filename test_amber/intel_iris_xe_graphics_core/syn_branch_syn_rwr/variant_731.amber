#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 bvec3 _f0;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 uvec4 GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id;
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size;
 uvec4 GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = subgroup_id;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.y = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) || false); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), ((0 >> _GLF_IDENTITY(int(8), int(8)))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(91.98)), vec2(_GLF_FUZZED(7.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(91.98)), vec2(_GLF_FUZZED(7.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(91.98)), vec2(_GLF_FUZZED(7.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(91.98)), vec2(_GLF_FUZZED(7.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(91.98)), vec2(_GLF_FUZZED(7.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(91.98)), vec2(_GLF_FUZZED(7.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * mat2(1.0)))).x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) / 1))), clamp(int(int(_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) / 1))), (int(int(_GLF_IDENTITY(4, (4) / 1)))) | (int(int(_GLF_IDENTITY(4, (4) / 1))))), int(int(_GLF_IDENTITY(4, (4) / 1))))))))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
          }
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.y;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
uint subgroup_size = 16;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = subgroup_size;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.y = subgroup_local_id;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec3(_GLF_IDENTITY(true, (true) || false)), gl_NumWorkGroups.x);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (5)))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(5), int(5))))) ^ 0, ~ (~ ((_GLF_IDENTITY(int(5), int(5))) ^ 0))))))) + 0))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-93.92), _GLF_FUZZED(-814.196)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[1]), bvec2(true, true)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-93.92), _GLF_FUZZED(-814.196)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[1]), bvec2(true, true)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-93.92), _GLF_FUZZED(-814.196)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[1]), bvec2(true, true)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-93.92), _GLF_FUZZED(-814.196)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[1]), bvec2(true, true)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-93.92), _GLF_FUZZED(-814.196)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[1]), bvec2(true, true)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-93.92), _GLF_FUZZED(-814.196)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[1]), bvec2(true, true)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))), mix(vec2(_GLF_FUZZED(-93.92), _GLF_FUZZED(-814.196)), vec2((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[0], (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, sqrt(0.0)))))))[1]), bvec2(true, true)))).x)))) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) + 0)))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
        {
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))))
      break;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((gl_WorkGroupSize.x), 0u | (_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x)), 0u ^ (_GLF_IDENTITY(clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x)), (_GLF_IDENTITY(clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x)), uint(uvec3(clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x)), 0u, 0u)))) / 1u))))) / 1u))))) | (gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 ^ ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) | (0 >> _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.z = workgroup_size, 0u ^ (GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.z = workgroup_size));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.w, (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.w) | 0u);
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(false, true)), true, false, false)), ! (! (bool(bvec4(bool(bvec2(false, true)), true, false, false)))))))))
        return;
      }
     else
      {
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.z * GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.y;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id)).z, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id)).z, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id)).z));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), true, false, true))))
      return;
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid, min(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid, GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid)).xyz.x + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1), (~ (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1)) - uvec4(0u, 0u, 0u, 0u)))))).xy.x, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x) | 0u) * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, ~ (~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z, uint(uvec2(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z, 0u)))) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), 1u)), (uint(uvec2((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), 1u))) - 0u), (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), 1u)), (uint(uvec2((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), 1u))) - 0u)) + 0u)) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w) << 0u))), clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x + _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1) : GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size)).w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, min(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1)))).xy.x * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1) : GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size)).w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, min(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1)))).xy.x * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))))))) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, ~ (~ (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1))).xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w) << 0u))), (true ? GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), ((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w)))) | 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w) << 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), ((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w)))) | 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w) << 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, ~ (~ (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1))).xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), ((_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z), 0u ^ (_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z))) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), 0u | ((false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z), 0u ^ (_GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z))) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w)))))) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, max(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, clamp(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, max(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w)))))), (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w) << 0u))))))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x, (GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x) - 0u) + _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy, uvec2(1u, 1u) * (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy)).x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, ~ (~ (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1))).xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, uint(uvec4(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, 0u, (0u | 0u), 1u)))))) * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w) << 0u))), _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x, (GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz.x) | 0u) + _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, clamp(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy, (false ? _GLF_FUZZED(uvec2(workgroup_size)) : _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy, max(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy)))).x, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x)))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, clamp(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x)))), (uint(uint(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, clamp(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x))))) - 0u)) / 1u)) * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z) : _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x) | (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x)) * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w) << 0u))))) + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = virtual_gid;
 GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.y = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (1 | 1))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz, _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.xyz) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))).x + GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.x * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> uvec4(0u, 0u, 0u, 0u), (((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(2u), uvec4(2u)))) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(((uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(((uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(((uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(((uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(((uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) + uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> uvec4(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u)))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size, uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size) | (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size)))))).w + ((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w);
 GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.z = GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.w;
  }
 else
  {
  }
 uint read_1 = atomicLoad(buf[GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.y], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) && true))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
  }
 do
  {
   GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.x = read_1;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w = GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_1subgroup_local_idworkgroup_baseworkgroup_id.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))));
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.z], uint(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.y, (false ? _GLF_FUZZED(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.w) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy, (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy) << uvec2(0u, 0u))) << uvec2(0u, 0u)).y, uint(uint(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.xy.y)))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, max(0, 0)))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)))))))
    {
     GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.x = read_2;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(6.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 do
  {
   do
    {
     if(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.z + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(~ _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), clamp((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, (true ? GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w : _GLF_FUZZED(140032u)))))), _GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), ~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))))))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(~ _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), clamp((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), _GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), ~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w)))))))) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(~ _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), clamp((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))), _GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), min(~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w), ~ (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.w))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
          barrier();
         continue;
        }
       int i = 0;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))) && (true)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))) && (true)), false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))) && (true)))), true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x < injectionSwitch.y)))))))))) && (true))))))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7280.5035))), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7280.5035))), injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0)))) / vec2(1.0, 1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.6)))))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _injected_loop_counter)) != (0 << _GLF_IDENTITY(int(1), int(1))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _injected_loop_counter)) != (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), int(int(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), int(int(0 << _GLF_IDENTITY(int(1), int(1)))))))), max(0 << _GLF_IDENTITY(int(1), int(1)), 0 << _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), false, false)))); _injected_loop_counter --)
          {
           atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1) ^ uvec4(0u, 0u, 0u, 0u)).z], _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w + 1, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(GLF_merged2_0_3_72_3_1_16GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizenext_virtual_gid.w) : GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w + _GLF_IDENTITY(1, (1) | (1)))) == GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.x) + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(37236u, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z) * 1u)) >> 0u)) : _GLF_IDENTITY(37236u, (37236u) << 0u)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z) * 1u)) >> 0u)) : _GLF_IDENTITY(37236u, (37236u) << 0u))) | (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z) * 1u)) >> 0u)) : _GLF_IDENTITY(37236u, (37236u) << 0u)), ~ (~ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z) * 1u)) >> 0u)) : _GLF_IDENTITY(37236u, (37236u) << 0u))))))))) : uint(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w) | 0u) + 1 == GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.x) + 1)), 4, 64, 4);
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-49.52) : _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(min(injectionSwitch[1], injectionSwitch[1]), log(1.0) + (min(injectionSwitch[1], injectionSwitch[1])))))))).y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
            continue;
           return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          continue;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8485.3994, -30.46, -21.66, 6603.5165, -4.1, -5400.6318, -95.85, 6.1, -8.4))))))), dot(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))) + 0.0)), sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-7.1, 356.716, -679.242, -0.5, -71.25, 3867.3163, 7.6, -1.1))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8485.3994, -30.46, -21.66, 6603.5165, -4.1, -5400.6318, -95.85, 6.1, -8.4))))))), dot(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))) + 0.0)), sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-7.1, 356.716, -679.242, -0.5, -71.25, 3867.3163, 7.6, -1.1))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8485.3994, -30.46, -21.66, 6603.5165, -4.1, -5400.6318, -95.85, 6.1, -8.4))))))), dot(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))) + 0.0)), sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-7.1, 356.716, -679.242, -0.5, -71.25, 3867.3163, 7.6, -1.1))))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(8485.3994, -30.46, -21.66, 6603.5165, -4.1, -5400.6318, -95.85, 6.1, -8.4))))))), dot(vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0)), (float(mat2x4(0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0))) + 0.0)), sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-7.1, 356.716, -679.242, -0.5, -71.25, 3867.3163, 7.6, -1.1)))))))).y))))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        continue;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, true))))))))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.z, (GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.z) / 1u)], _GLF_IDENTITY(uint(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w + 1 == GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size.x) + 1, 0u ^ (uint(GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnext_virtual_gidread_1.w + _GLF_IDENTITY(1, max(1, 1)) == _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), sin(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), sin(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), sin(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), sin(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))) - vec2(0.0, 0.0))).y))))) || false) ? GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_13read_2subgroup_idsubgroup_local_idsubgroup_size))).x) + 1)), 4, 64, 4);
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
