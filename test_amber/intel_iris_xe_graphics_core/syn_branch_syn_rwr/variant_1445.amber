#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), ! (! (! (bool(_GLF_DEAD(false)))))))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)) : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), _GLF_IDENTITY(-9.3, (-9.3) * determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED((-5440.7693 * 7.0))), bool(false))))) : _GLF_FUZZED(floor(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(-9.3, (-9.3) - 0.0)) + tan(0.0)), -9.3)), (true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3) / 1.0, float(mat2x3((-9.3) / 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), log(1.0), 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), (_GLF_IDENTITY(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), _GLF_IDENTITY(mix(float(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), float(_GLF_FUZZED((-1473.5335 + -587.044))), bool(false)), mix(float(mix(float(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), float(_GLF_FUZZED((-1473.5335 + -587.044))), bool(false))), float(_GLF_FUZZED(-0.8)), bool(false))))) / 1.0))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.3)), float(injectionSwitch.y), bool(true))))) && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bool(! ((true)))))))))) ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(0.1)), float(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0))), bool(true)))), abs(0.0), 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(0.1)), float(dot(vec4(0.0, 0.0, tan(0.0), 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0))), bool(true)))), abs(0.0), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) - 0.0), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7010.0691), clamp(_GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691))), (_GLF_IDENTITY(_GLF_FUZZED(-7010.0691), clamp(_GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691)))) + 0.0))), -9.3), mix(float(_GLF_FUZZED(-1.9)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7010.0691), clamp(_GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691))), (_GLF_IDENTITY(_GLF_FUZZED(-7010.0691), clamp(_GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691)))) + 0.0))), -9.3), (max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7010.0691), clamp(_GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691))), (_GLF_IDENTITY(_GLF_FUZZED(-7010.0691), clamp(_GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691)))) + 0.0))), -9.3)) / 1.0)), bool(true)))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691), min(true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691), true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691))))), -9.3), max(max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691), min(true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691), true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691))))), -9.3), max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691), min(true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691), true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY((-9.3), clamp(_GLF_IDENTITY((-9.3), min((-9.3), (-9.3))), (-9.3), (-9.3)))) / 1.0) / 1.0) : _GLF_FUZZED(-7010.0691))))), -9.3)))))), mix(float(_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), _GLF_IDENTITY(float(_GLF_FUZZED(-3.8)), (float(_GLF_FUZZED(-3.8))) - 0.0), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))))), mix(float(true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), clamp(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(-9.3, float(mat2x3(-9.3, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 1.0))), (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), (false ? _GLF_FUZZED(-5426.9233) : max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), ((-9.3)) * 1.0) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), _GLF_IDENTITY(float(_GLF_FUZZED(-3.8)), clamp(float(_GLF_FUZZED(-3.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-3.8)), clamp(float(_GLF_FUZZED(-3.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-3.8)), (true ? float(_GLF_FUZZED(-3.8)) : _GLF_FUZZED(3664.7555))), float(_GLF_FUZZED(-3.8)))), float(_GLF_FUZZED(-3.8)))), bool(_GLF_IDENTITY(false, true && (false)))))))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), min(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), max(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(-9.3, (-9.3) / 1.0))))) : _GLF_FUZZED(-7010.0691))), -9.3))), (floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, _GLF_IDENTITY((true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691)), (false ? _GLF_FUZZED(6.5) : (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))))), -9.3)))) / 1.0)), mix(float(true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)))).y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3) / 1.0, (false ? _GLF_FUZZED(9.7) : (-9.3) / 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-7010.0691, _GLF_IDENTITY(float(mat2x4(-7010.0691, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x4(-7010.0691, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat2x4(-7010.0691, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x4(-7010.0691, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat2x4(-7010.0691, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat2x4(-7010.0691, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 1.0, 1.0, 1.0))) * 1.0))))))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-7010.0691, min(_GLF_IDENTITY(-7010.0691, clamp(-7010.0691, -7010.0691, -7010.0691)), _GLF_IDENTITY(_GLF_IDENTITY(-7010.0691, min(_GLF_IDENTITY(-7010.0691, (-7010.0691) * 1.0), -7010.0691)), (-7010.0691) * 1.0)))))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? _GLF_IDENTITY(-0.9, max(_GLF_IDENTITY(-0.9, (-0.9) / 1.0), -0.9)) : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), max(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), exp(0.0) * (_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), float(mat3x2(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), 1.0, 0.0, 1.0, 1.0, 0.0)))))))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-7010.0691, 1.0 * _GLF_IDENTITY((-7010.0691), tan(0.0) + ((-7010.0691))))))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : _GLF_IDENTITY(-3212.5302, clamp(-3212.5302, _GLF_IDENTITY(-3212.5302, (-3212.5302) * 1.0), -3212.5302))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), float(vec4(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), (_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), min(_GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(-7010.0691), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-7010.0691), min(_GLF_FUZZED(-7010.0691), _GLF_FUZZED(-7010.0691))))))), -9.3)))), _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, _GLF_IDENTITY((true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691)), _GLF_IDENTITY(float(vec3((true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691)), 1.0, 0.0)), max(float(vec3((true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691)), 1.0, 0.0)), _GLF_IDENTITY(float(vec3((true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691)), 1.0, 0.0)), float(mat4(float(vec3((true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691)), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), -9.3))))))) + 0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), _GLF_IDENTITY(float(_GLF_FUZZED(-3.8)), (float(_GLF_FUZZED(-3.8))) / 1.0), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : _GLF_IDENTITY(-3212.5302, 0.0 + (-3212.5302))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), (_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), (max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)) * 1.0)) - length(0.0))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), clamp(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), (_GLF_IDENTITY(-9.3, (-9.3) / 1.0)) / 1.0))), _GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(-9.3, (-9.3) / 1.0))) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)), max(mix(float(_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), clamp(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), (_GLF_IDENTITY(-9.3, (-9.3) / 1.0)) / 1.0))), _GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(-9.3, (-9.3) / 1.0))) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)), mix(float(_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), clamp(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (-9.3) / 1.0), (_GLF_IDENTITY(-9.3, (-9.3) / 1.0)) / 1.0))), _GLF_IDENTITY(-9.3, (-9.3) / 1.0), _GLF_IDENTITY(-9.3, (-9.3) / 1.0))) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(-4896.0202)), float(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), bool(true)))) / 1.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), (mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))) / 1.0))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.3)), bool(false)))) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), _GLF_IDENTITY(bool(false), false || (bool(false)))))), _GLF_IDENTITY(float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), (true ? float(_GLF_FUZZED((true ? -0.9 : -3212.5302))) : _GLF_FUZZED(8.6))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, _GLF_IDENTITY(max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3), (false ? _GLF_FUZZED(-9535.3294) : max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : _GLF_IDENTITY(-3212.5302, min(_GLF_IDENTITY(-3212.5302, min(-3212.5302, -3212.5302)), -3212.5302))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), _GLF_IDENTITY(-9.3, clamp(-9.3, -9.3, _GLF_IDENTITY(-9.3, 1.0 * (-9.3)))))))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), max(mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(floor(_GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-9.3, clamp(_GLF_IDENTITY(-9.3, clamp(-9.3, -9.3, -9.3)), -9.3, -9.3)), (-9.3) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3)))), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(floor(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, max(-9.3, _GLF_IDENTITY(-9.3, mix(float(_GLF_FUZZED(-339.501)), float(-9.3), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), max(_GLF_IDENTITY(-9.3, (true ? _GLF_IDENTITY(-9.3, _GLF_IDENTITY((-9.3), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(12.57) : (-9.3))) / 1.0) : _GLF_FUZZED(-7010.0691))), -9.3))))), float(_GLF_FUZZED(-3.8)), bool(false)))), float(_GLF_FUZZED((true ? -0.9 : -3212.5302))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), 0.0 + (clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) / 1.0))))))))))) / determinant(mat3(1.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0, 0.0, 0.0, 1.0))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-282.289, -209.810), (vec2(-282.289, -209.810)) * mat2(1.0))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(-60.50, 0.1)) : injectionSwitch)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(-60.50, 0.1)) : injectionSwitch)).x, 0.0, 1.0, cos(0.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(365.405)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))))) || false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (false)), true && ((! (false)))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) + 0u), (subgroup_local_id + 1) % subgroup_size)), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (77791u & 0u)) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))), ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1)))) | ((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))))) % subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 0u))), 1u, 1u)))) | 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 1u)))) | 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))) >> 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)) << 0u) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)), _GLF_IDENTITY(min((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)) : _GLF_FUZZED(clamp(workgroup_size, packSnorm4x8(vec4(60.73, -5.9, 549.395, 60.34)), subgroup_local_id))))), (min((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)), (true ? _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)) : _GLF_FUZZED(clamp(workgroup_size, packSnorm4x8(vec4(60.73, -5.9, 549.395, 60.34)), subgroup_local_id)))))) | 0u))) + 0u)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp(((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), 0u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), 0u, 1u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), 0u, 1u))))) << 0u)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, max((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u))) << 0u), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, max((((subgroup_local_id + 1) % subgroup_size)) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u)), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, 0u | (0u)), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u))))))))), uint(uint((((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size))))) / 1u) << 0u, clamp(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, (((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 0u | (0u)), _GLF_IDENTITY((((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (193751u & 0u) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u)))) ^ (0u ^ 0u)) % subgroup_size)) << 0u), 0u ^ (_GLF_IDENTITY(((((subgroup_local_id + 1) % subgroup_size)) << 0u), (((((subgroup_local_id + 1) % subgroup_size)) << 0u)) * 1u))) + 0u)))))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) | 0u)), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(subgroup_local_id))), ((subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u), (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size)))) | 0u) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp((((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 1u), (uvec4(subgroup_local_id, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 1u), (uvec4(subgroup_local_id, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 1u), (uvec4(subgroup_local_id, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_local_id))), (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(0u, min(0u, 0u))))) + 0u)), clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))) << (129569u & 0u))) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u))))), (_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup), min(true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup), true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup))), true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))))))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 0u)))) | (subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, (((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)) << 0u) + 0u)), clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10217)))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), ((1u & 1u) & 1u), 1u, 0u)))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u))))), (_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, _GLF_IDENTITY(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY((true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)), ((true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup))) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) + 0u)), clamp(clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, (((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1) % subgroup_size, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))))), ~ (~ (uint(uvec2((subgroup_local_id + 1) % subgroup_size, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))))))))))) << 0u) + 0u)), clamp((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ 0u))) : _GLF_FUZZED(num_workgroup)))) << 0u, (_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) | ((((subgroup_local_id + 1) % subgroup_size)))) << 0u) + 0u)), clamp(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (subgroup_local_id)) + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)))) << 0u, (((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))) << 0u) + 0u)))))) ^ 0u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (1 | 1) * (4)), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))), (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | (0))))) + (64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-388.002)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))], uint(read_1 + 1), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(length(vec2(-4184.9584, 4.1))) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))))), (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(87202)))), max(int(_GLF_IDENTITY(1, int(ivec4(1, 1, (1 | 1), 1)))), _GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, (1 & 1), 1)))))))) >> 0))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_FUZZED(744.852)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x), bool(true))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(744.852)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false))))))) > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(744.852)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(744.852)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) + determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)))) > injectionSwitch.y), false, true, false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_DEAD(false), true, true, false))), ! (_GLF_IDENTITY(! (true && (bool(bvec4(_GLF_DEAD(false), true, true, false)))), bool(bvec2(! (true && (bool(bvec4(_GLF_DEAD(false), true, true, false)))), true))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0))), (true ? vec2(mat3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0))) : _GLF_FUZZED(vec2(vec3(-2543.8116, 3.9, -68.65)))))).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), clamp(vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.4)), float(1.0), bool(true))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, cos(0.0), 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) + 1 == read_2) + 1, ~ (~ (uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) + 1 == read_2) + 1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, clamp(_GLF_IDENTITY((1) / 1, ((1) / 1) ^ 0), _GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1)), (1) / 1))) == read_2) + 1, ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)), (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1))))) << 0u) + 1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(i))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (injectionSwitch.x > injectionSwitch.y) || false)))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))) || false), true, true))) || false))))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), _GLF_IDENTITY(false, ! (! (false))))), true, true))))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), false, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, bool(bool(false))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false)), true, true))))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), false, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false), _GLF_IDENTITY(true, false || (true)))))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), true, false)), true))), true)))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false)), true, true))))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), false, false, true))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))))), false, false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))), false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, bool(bool(false))))), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), false)), _GLF_IDENTITY(true, (true) && true), true))))), bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), false, false, true)))))) && true)))) && true), true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, cos(0.0), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], float(mat3x4(((injectionSwitch) * mat2(1.0))[0], log(1.0), 0.0, log(1.0), 0.0, 1.0, determinant(mat3(1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0 + (((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(_GLF_IDENTITY(-77.26, max(-77.26, -77.26)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.4, length(0.0) + (0.4))), (_GLF_FUZZED(_GLF_IDENTITY(0.4, length(0.0) + (_GLF_IDENTITY(0.4, max(0.4, 0.4)))))) - abs(determinant(mat2(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(47.31) : 1.0))))))[_GLF_IDENTITY(1, int(int(1)))]), bvec2(false, _GLF_IDENTITY(true, (true) && true))))), injectionSwitch)), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(944.022) : injectionSwitch.x)) : _GLF_FUZZED(cos(8.3)))) > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))), false), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))), false), true), true)))), false, true))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.24)), float(injectionSwitch.y), bool(true)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, min(4, 4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(sin(vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), false, true)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-652.265) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(80.68)), bool(false))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), ! (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, true, true))) && true)))))) && true), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true && (false))))))), ! (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, true, true))), false || ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, true, true))))) && true)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) || false))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) || false))), true, true, false)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
