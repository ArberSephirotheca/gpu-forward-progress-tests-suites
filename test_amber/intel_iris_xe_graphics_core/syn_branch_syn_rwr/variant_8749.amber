#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (1 | 1) * (_injected_loop_counter ++)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        break;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9870.6621)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(((0 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0)), ~ (~ (((0 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, true)))); _injected_loop_counter ++)
    {
     return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5775.2638) : 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, tan(0.0)))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(tanh(-86.83)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - abs(0.0), mix(float((injectionSwitch.x) - abs(0.0)), float(_GLF_FUZZED((vec3(-3619.3315, -5525.1867, -23.93) + vec3(-8444.6530, -1.3, -4.5)).p)), bool(false)))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-60211))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size + subgroup_local_id), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size) >> 0u) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size) >> 0u) + subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size) >> 0u) + subgroup_local_id), uint(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size) >> 0u) + subgroup_local_id))))))) / 1u)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u), (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u)) >> uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) | 0u), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) << 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size + subgroup_local_id), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size + subgroup_local_id), 1u * ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)))) * subgroup_size + subgroup_local_id)))) >> 0u))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) * 1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))) || false))))) && _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.5)), bool(false))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(vec3(4.1, -7716.6501, -3.4), cross(vec3(1474.5348, 2.3, 803.215), vec3(122.103, -656.796, -9.7)))) : injectionSwitch.y)))))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, _GLF_IDENTITY(true, (true) && true))))))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true))))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))), true))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))))))))))))), false)))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), true), false, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), true), false, true))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true))))))))))), (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1217.1972)), bool(false))) > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, true)))))))))))) && true))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
        {
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(0, (0) / 1))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1))))])).x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       for(int _injected_loop_counter = ((_GLF_IDENTITY(-71531 & 0, (_GLF_IDENTITY(-71531 & _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), max(_GLF_IDENTITY(~ (~ (0)), clamp(~ (~ (0)), ~ (~ (0)), ~ (~ (0)))), ~ (~ (0))))), ~ (~ (-71531 & _GLF_IDENTITY(0, ~ (~ (0))))))) + 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           break;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
              }
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 ^ 1) | 1)); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(18.56, -7.8)))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | 0, min((1) | 0, _GLF_IDENTITY((1) | 0, ((1) | 0) - 0))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1) | 0, min((1) | 0, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))) | 0, ((1) | 0) - 0))), int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(238.821))), injectionSwitch.y)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))), min(~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))), ~ (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0)))))))) << (-31555 & 0))), 1), ivec4(0, 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-9457) : 0)), 0)))), 0) ^ _GLF_IDENTITY((ivec4(_GLF_IDENTITY((1) | 0, min((1) | 0, _GLF_IDENTITY((1) | 0, _GLF_IDENTITY(((1) | 0), (true ? ((1) | 0) : _GLF_FUZZED(-43026))) - 0))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))), 1)), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY((1) | 0, min((1) | 0, _GLF_IDENTITY((1) | 0, _GLF_IDENTITY(((1) | 0), (true ? ((1) | 0) : _GLF_FUZZED(-43026))) - 0))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))), 1)), ~ (~ ((ivec4(_GLF_IDENTITY((1) | 0, min((1) | 0, _GLF_IDENTITY((1) | 0, _GLF_IDENTITY(((1) | 0), (true ? ((1) | 0) : _GLF_FUZZED(-43026))) - 0))), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))), 1)))))) << ivec4(0, 0, 0, 0)))))))))) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, _GLF_IDENTITY(_GLF_IDENTITY((1) | 0, ((1) | 0) - 0), 0 + (_GLF_IDENTITY((1) | 0, ((1) | 0) - 0)))))))))) % subgroup_size) * 1u, uint(uvec3(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, min((1) | 0, _GLF_IDENTITY(_GLF_IDENTITY((1) | 0, ((1) | 0) - 0), 0 + (_GLF_IDENTITY((1) | 0, ((1) | 0) - 0)))))))))) % subgroup_size) * 1u, 0u, 1u))))), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)) + (0 << _GLF_IDENTITY(int(0), int(0))))) / 1))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)) + (0 << _GLF_IDENTITY(int(0), int(0))))) / 1))))) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)) + (0 << _GLF_IDENTITY(int(0), int(0))))) / 1))))) % subgroup_size), clamp(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)) + (0 << _GLF_IDENTITY(int(0), int(0))))) / 1))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)) + (0 << _GLF_IDENTITY(int(0), int(0))))) / 1))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) - 0)) + (0 << _GLF_IDENTITY(int(0), int(0))))) / 1))))) % subgroup_size))))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(1, (1) | 0))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), (1 & 1), _GLF_IDENTITY(1, int(int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) - (0 ^ 0)) | 0))))) % subgroup_size)) << 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (-24097 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), max(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id)))))) - 0u)))), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)))), max(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), max(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id)))))) - 0u)))), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)))), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), max(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, (true ? (next_virtual_gid) ^ 0u : _GLF_FUZZED(subgroup_local_id)))))) - 0u)))), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))))))], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, int(ivec2(1, 0)))) * 1)))), min(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0, ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0) >> 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0, ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0) >> 0)))), clamp(~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, max(1, 1)))), 0)))) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1)), int(ivec2(1, 0)))) >> 0) >> 0)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0, ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0) >> 0)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0, ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0) >> 0)))))))) * 1)), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), min(_GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY(1, int(ivec2(1, 0)))))) * 1)), max(uint(_GLF_IDENTITY(read_1, uint(uvec2(read_1, (1u | 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))), _GLF_IDENTITY(0 + ((_GLF_IDENTITY(1, int(ivec2(1, 0))))), (0 + ((_GLF_IDENTITY(1, int(ivec2(1, 0)))))) << 0)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(7), int(7)))) | ((0 << _GLF_IDENTITY(int(7), int(7)))), 0 ^ (((0 << _GLF_IDENTITY(int(7), int(7)))) | ((0 << _GLF_IDENTITY(int(7), int(7)))))))))) * 1, 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))), 0 + ((_GLF_IDENTITY(1, int(ivec2(1, 0)))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) | ((0 << _GLF_IDENTITY(int(7), int(7)))))))) * 1)))), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1)), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) * 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1), min(~ ((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1), ~ ((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1))))))), 0u + (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1), min(~ ((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1), ~ ((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0)), mix(float(_GLF_FUZZED(-5.7)), float(float(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-47.47)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, log(1.0)))), 0.0))), bool(true)))), injectionSwitch.x))))))) * 1))))))))), uint(uvec4(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) : _GLF_FUZZED(40139))) * 1)), 1u, 1u, 0u))), uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1)))), uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1)))))))), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(2009.8329), (true ? _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(2009.8329), 0.0 + (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(2009.8329))) : _GLF_FUZZED(913.005)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0))), int(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(_GLF_IDENTITY(-78655, int(int(-78655))))))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.6))), injectionSwitch.y)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.6))), injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), 1.0), (true ? mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.6))), injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, determinant(mat3(1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0), 1.0) : _GLF_FUZZED(mat4(9438.0168, -38.04, -8854.2518, 837.656, 86.53, -798.385, -84.55, 8.1, -1.6, -75.01, -51.54, 3.1, 587.323, 1279.3544, -161.720, -4.7)))))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6254.7226)), vec2(_GLF_FUZZED(_GLF_IDENTITY(5259.3245, 1.0 * (_GLF_IDENTITY(5259.3245, float(mat2x4(5259.3245, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0))))))), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)), (true ? vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))).y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], (false ? _GLF_FUZZED(-484.866) : _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))))))[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], max((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], 1.0))))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) * 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1])), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0), (clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)) | (clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), 1.0, 1.0)))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) * 1.0))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-542.351), (_GLF_FUZZED(-542.351)) - 0.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(_GLF_IDENTITY(-542.779, max(-542.779, -542.779)), -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))).x) * 1.0))), 0.0, 1.0, sin(0.0)))) : _GLF_FUZZED(-39.12))))), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(atomicCompSwap(_injected_loop_counter, 78127, _injected_loop_counter)))))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], sqrt(1.0) * ((injectionSwitch)[1])), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], (false ? _GLF_FUZZED(-484.866) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16)))))))), min(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16)))))))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0), (vec3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), 0.0)) * vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(3358.4863, 2.7, 57.16))))))))))[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))) - 0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], max((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.3, 6088.8961)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], 1.0))))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], max((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.3, 6088.8961)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], 1.0))))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], max((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.3, 6088.8961)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], 1.0))))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], max((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.3, 6088.8961)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], 1.0))))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], max((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.3, 6088.8961)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], 1.0))))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), mix(float(_GLF_FUZZED(-78.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779)), 0.0, 1.0, 1.0))))))), bool(true)))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], max((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.3, 6088.8961)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], float(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], 1.0))))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))), clamp(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))), min(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false))))) : _GLF_FUZZED(-0.0))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) * 1.0))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(mat3x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), min(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52415))))), 0, 0), (clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1))), 0)) | (clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], float(vec4((mat2(1.0) * (injectionSwitch))[1], 0.0, 1.0, 0.0))) : _GLF_FUZZED(24.11)))) / 1.0)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), 1.0, 1.0)))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) * 1.0))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), max(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-542.351), (_GLF_FUZZED(-542.351)) - 0.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55.46) : (false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1])))) - 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), (_GLF_FUZZED(29.96)) / cos(0.0))), bool(false)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + abs(0.0)), cos(0.0), 1.0))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(_GLF_IDENTITY(-542.779, max(-542.779, -542.779)), -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))).x) * 1.0))), 0.0, 1.0, sin(0.0)))) : _GLF_FUZZED(-39.12), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(mat3x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), min(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52415))))), 0, 0), (clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1))), 0)) | (clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], float(vec4((mat2(1.0) * (injectionSwitch))[1], 0.0, 1.0, 0.0))) : _GLF_FUZZED(24.11)))) / 1.0)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), 1.0, 1.0)))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) * 1.0))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), max(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-542.351), (_GLF_FUZZED(-542.351)) - 0.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55.46) : (false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1])))) - 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), (_GLF_FUZZED(29.96)) / cos(0.0))), bool(false)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + abs(0.0)), cos(0.0), 1.0))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(_GLF_IDENTITY(-542.779, max(-542.779, -542.779)), -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))).x) * 1.0))), 0.0, 1.0, sin(0.0)))) : _GLF_FUZZED(-39.12), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(mat3x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), min(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52415))))), 0, 0), (clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1))), 0)) | (clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], float(vec4((mat2(1.0) * (injectionSwitch))[1], 0.0, 1.0, 0.0))) : _GLF_FUZZED(24.11)))) / 1.0)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), 1.0, 1.0)))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) * 1.0))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), max(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-542.351), (_GLF_FUZZED(-542.351)) - 0.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55.46) : (false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1])))) - 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), (_GLF_FUZZED(29.96)) / cos(0.0))), bool(false)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + abs(0.0)), cos(0.0), 1.0))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(_GLF_IDENTITY(-542.779, max(-542.779, -542.779)), -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))).x) * 1.0))), 0.0, 1.0, sin(0.0)))) : _GLF_FUZZED(-39.12), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)))))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), vec2(mat3x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), min(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(813.711)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED((tanh(5.4) / 787.125)))))), (false ? _GLF_FUZZED(-484.866) : (injectionSwitch)[1]))), float(_GLF_FUZZED(29.96)), bool(false)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(-542.779, -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52415))))), 0, 0), (clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1))), 0)) | (clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], float(vec4((mat2(1.0) * (injectionSwitch))[1], 0.0, 1.0, 0.0))) : _GLF_FUZZED(24.11)))) / 1.0)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(6290.3792)), bvec2(true, false))))), 1.0, 1.0)))[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) * 1.0))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), max(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))), vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), clamp(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96))), _GLF_IDENTITY(_GLF_FUZZED(29.96), max(_GLF_FUZZED(29.96), _GLF_FUZZED(29.96)))))))), bool(false)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-542.351), (_GLF_FUZZED(-542.351)) - 0.0)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55.46) : (false ? _GLF_IDENTITY(_GLF_FUZZED(-484.866), (_GLF_FUZZED(-484.866)) / cos(0.0)) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1])))) - 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(29.96), (_GLF_FUZZED(29.96)) / cos(0.0))), bool(false)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + abs(0.0)), cos(0.0), 1.0))), _GLF_FUZZED(-542.351)), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-542.779, clamp(_GLF_IDENTITY(-542.779, max(-542.779, -542.779)), -542.779, -542.779))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-542.779), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(29.96)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-542.351)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))).x) * 1.0))), 0.0, 1.0, sin(0.0)))) : _GLF_FUZZED(-39.12))))))), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(atomicCompSwap(_injected_loop_counter, 78127, _injected_loop_counter)))))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1 < subgroup_size)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), false, true, false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27)))), bool(true)), max(mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27)))), bool(true)), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27)))))), bool(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27)))), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27)))), bool(true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))).y, mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-79.27)))), bool(true)))) || false)) || false))))))))))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec3(bool(bvec2(true, false)), false, false))))))
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                break;
              }
             int i = 0;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               barrier();
              }
             atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
              continue;
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != 0, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY((_injected_loop_counter != 0) && true, ((_injected_loop_counter != 0) && true) && true)))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true), true && (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), (_injected_loop_counter) << 0))), _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter)) != 0), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_injected_loop_counter != 0), ((_injected_loop_counter != 0)) && true)), ((_GLF_IDENTITY((_injected_loop_counter != 0), ((_injected_loop_counter != 0)) && true))) || false))) && true))), true, false, true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true))), true, false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                    continue;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       continue;
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)), ! (! (bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))))))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          return;
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))) < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                    barrier();
                  }
                 do
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     barrier();
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)));
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), false, true)), bvec3(bvec3(bvec3(bvec3((false), false, true))))))))))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2024.0189), _GLF_FUZZED(-7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), abs(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), vec2(vec4(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), abs(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), abs(1.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))) - vec2(0.0, 0.0)), 1.0, 0.0)))).y))))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0))) | 0))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      break;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               do
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0))))).y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0))))).y))))), false))), false || (bool(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6643.2567), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(214.894)), bvec2(true, false))).x > injectionSwitch.y))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          continue;
                         barrier();
                        }
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                            {
                             return;
                            }
                           else
                            {
                            }
                          }
                        }
                       continue;
                       if(_GLF_DEAD(false))
                        return;
                      }
                     return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(24680, -57366))))), injectionSwitch)).y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false)))), true), false)))))))))
                    return;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED((- vec2(626.535, -247.423))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])), (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)))))))))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8578.3085) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && true))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
