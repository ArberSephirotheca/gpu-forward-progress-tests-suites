#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0), (true ? mat4x2(injectionSwitch, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(3.7, 5457.4076, -5160.8007, -6.3, -5.8, _GLF_IDENTITY(-588.598, determinant(mat4(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) * (-588.598)), -1.0, -4162.8276))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0), (true ? mat4x2(injectionSwitch, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(3.7, 5457.4076, -5160.8007, -6.3, -5.8, -588.598, -1.0, -4162.8276)))))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, false, false)))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))), true, false)))))))))), true, false, true)))), bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), true, false, true)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, false, true)))), bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false))))))))))))))))))), true, false, true))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, false, true)))), bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), true, false, true))))))), true, false, false))))) && true), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, false, true)))), bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, false, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) - 0.0)), sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false))))))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.6, 7078.6139)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
    return;
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.0)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u))), 0u, 1u, 1u))), (gl_WorkGroupSize.x) | 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size)))), (uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) + ((subgroup_local_id + 1) % subgroup_size))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)))), ((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))))) << (0u | 0u)))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size))) | _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) - 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * ((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size)))), (uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-35778) : 1))))) % subgroup_size))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)))), ((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))))) << (_GLF_IDENTITY(0u | 0u, (0u | 0u) - 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size), uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size), 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size))) | _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) - 0u), min(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size))) | _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) - 0u), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size), max(uint(workgroup_base + subgroup_id * subgroup_size), uint(workgroup_base + subgroup_id * subgroup_size))))) + ((subgroup_local_id + 1) % subgroup_size))) | _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) - 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) | ((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u))], 4, 64, _GLF_IDENTITY(0, max(0, 0)));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) - (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)))) + (read_1 + 1), min(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)) + (read_1 + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1))))), (1u | 0u) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1 + 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | (_GLF_IDENTITY(4, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.5, -0.4)), clamp(_GLF_FUZZED(vec2(-0.5, -0.4)), _GLF_FUZZED(vec2(-0.5, -0.4)), _GLF_FUZZED(vec2(-0.5, -0.4)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.56), _GLF_FUZZED(184.583)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && ((true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))) && true)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), false)), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), true))))))))))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.5, -0.4)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.56), _GLF_FUZZED(184.583)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 1))))], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ((_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, true && (true))))))) && true)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), true))), false))), true), true))))))))).x, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(395.751) : length(0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-76845, 22487, 1243)[1]), (true ? _GLF_FUZZED(ivec3(-76845, 22487, 1243)[1]) : _GLF_FUZZED(-2194))) : 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | (_GLF_IDENTITY(4, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.5, -0.4)), clamp(_GLF_FUZZED(vec2(-0.5, -0.4)), _GLF_FUZZED(vec2(-0.5, -0.4)), _GLF_FUZZED(vec2(-0.5, -0.4)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.56), _GLF_FUZZED(184.583)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && ((true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))) && true)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), false)), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), true))))))))))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.5, -0.4)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.56), _GLF_FUZZED(184.583)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 1))))], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ((_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, true && (true))))))) && true)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), true))), false))), true), true))))))))).x, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(395.751) : length(0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-76845, 22487, 1243)[1]), (true ? _GLF_FUZZED(ivec3(-76845, 22487, 1243)[1]) : _GLF_FUZZED(-2194))) : 4)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | (_GLF_IDENTITY(4, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.5, -0.4)), clamp(_GLF_FUZZED(vec2(-0.5, -0.4)), _GLF_FUZZED(vec2(-0.5, -0.4)), _GLF_FUZZED(vec2(-0.5, -0.4)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.56), _GLF_FUZZED(184.583)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), 1))]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && ((true)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))) && true)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), false)), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), false))), true)))), true))))))))))).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.5, -0.4)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(70.56), _GLF_FUZZED(184.583)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) ^ 0), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 1))))], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ((_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, true && (true))))))) && true)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), true))))))), true), true))), false))), true), true))))))))).x, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(395.751) : length(0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-76845, 22487, 1243)[1]), (true ? _GLF_FUZZED(ivec3(-76845, 22487, 1243)[1]) : _GLF_FUZZED(-2194))) : 4)))))))) ^ 0), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8007.5522)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_IDENTITY(float(mat2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, abs(1.0))), (float(mat2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, abs(1.0)))) - 0.0)), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8007.5522)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_IDENTITY(float(mat2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0))))), (float(mat2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, abs(1.0)))) - 0.0)), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, true))) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])) : _GLF_FUZZED(subgroup_id))), 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (buf[virtual_gid]))), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(_GLF_IDENTITY(atomicAdd(workgroup_id, subgroup_local_id), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (atomicAdd(workgroup_id, subgroup_local_id))), -17841, -46748)) : virtual_gid))]))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), uint(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), 0u, 1u)))) ^ (0u & 138525u))) | 0u))), uint(uvec3(0u ^ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), uint(uvec3(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))))), clamp(_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) + 0u), ~ _GLF_IDENTITY((buf[virtual_gid]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) - 0u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup * subgroup_id)), (_GLF_FUZZED((num_workgroup * subgroup_id))) | (_GLF_FUZZED((num_workgroup * subgroup_id)))))), ~ (buf[virtual_gid])))), 0u, 1u)))) ^ (0u & 138525u))) | 0u))), 1u, 1u)))), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8079.3917)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false), true)))))), ! (! (_GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))) || false))), (false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false), true)))))), ! (! (_GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-5.9, -729.041, -481.016).s)), bool(false)))) || false)) || false))))))))))) || false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false), true)))))), ! (! (_GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec4((injectionSwitch.x > injectionSwitch.y) || false, false, true, true)))))))))))))) || false)))), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(num_workgroup))) + 1 == read_2))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (1))), (true ? ~ (_GLF_IDENTITY(1, 1 * (1))) : _GLF_FUZZED(i))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), (clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))) | 0u)) >> 0u))) + 1, _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (read_2))) ^ 0u), read_2, _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u ^ (read_2)), read_2, read_2))))) + _GLF_IDENTITY(1, (1) - 0)) | 0u, min(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) * ((read_2))) | (read_2))) ^ 0u), read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))) + 1), ((uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), 1u * ((read_2))) | _GLF_IDENTITY((read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((read_2))))) ^ 0u), read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))) + 1)) ^ 0u) | 0u, (uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | 0u)) | (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_id) : read_2))))))) ^ 0u), read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), ~ (~ (clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | 0u)) | (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_id) : read_2))))))) ^ 0u), read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))))) + 1) | 0u))), _GLF_IDENTITY(4, (4) + (0 >> _GLF_IDENTITY(int(4), int(4)))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true))) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) / 1.0) > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))) || false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || false), false)))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false)))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false))))) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false)))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false))))) && true)), bool(bvec4(! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false)))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false))))) && true)), false, false, true))))), true, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
