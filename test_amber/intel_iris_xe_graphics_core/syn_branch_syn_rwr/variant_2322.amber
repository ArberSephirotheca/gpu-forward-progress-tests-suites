#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), (bool(bool(false || (false)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(41.62)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-79.19)), float(injectionSwitch.y), bool(true))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false)))))))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(pow(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-83.56))))))) > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-55.17), _GLF_FUZZED(35.14)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-39332) : 1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-55.17), _GLF_FUZZED(35.14)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.2), _GLF_FUZZED(-385.644)), bvec2(false, false))))))[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-39332) : 1))], min((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-39332) : 1))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-39332) : 1))], mix(float(_GLF_FUZZED(2.8)), float((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-39332) : 1))]), bool(true)))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))) - 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (false)), false || (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-402.340))))), 1.0, 0.0, 1.0)))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), (false ? _GLF_FUZZED(54505) : (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), (false ? _GLF_FUZZED(54505) : (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), (false ? _GLF_FUZZED(54505) : (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))))))), (read_1 + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), ((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), (false ? _GLF_FUZZED(54505) : (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)))))))))) >> 0u)), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(48306) : 4))))) - (0 ^ 0)), 4)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], buf[virtual_gid])))), _GLF_IDENTITY(buf[virtual_gid], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? buf[virtual_gid] : _GLF_FUZZED(subgroup_local_id))))), 4, 64, _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(0.3))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - 0) | 0, (_GLF_IDENTITY((1), ((1)) - 0) | 0) | (_GLF_IDENTITY((1), ((1)) - 0) | 0))) < subgroup_size, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))), true))), false, true, true)))), ! (! (false || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 < subgroup_size, true))), false, true, true)))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))))), bool(bvec4(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true))), bool(bvec3((bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true))), false, false))), false, true, true)))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! _GLF_IDENTITY((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)))))), ! (_GLF_IDENTITY(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x))))))), bool(bvec2(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x))))))), true)))))), true))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || false)))) && true)))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1 < subgroup_size, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true))), false, true, true)), false || (bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true))), false, true, true))))))))))) || false)))), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - 0) | 0, (_GLF_IDENTITY((1), ((1)) - 0) | 0) | (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0) | 0))) < subgroup_size, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), (bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))) || false))))), true))), false, true, true)))), ! (! (false || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 < subgroup_size, true))), false, true, true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true)))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true))))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))))), bool(bvec4(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true), false, false))))), bool(bvec3((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true))), false, false))), false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))))) || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY(_GLF_IDENTITY((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)))))), ! (_GLF_IDENTITY(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x))))))), bool(bvec2(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x))))))), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 0u)), (uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 0u))) | 0u)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)))))), ! (_GLF_IDENTITY(! ((! (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))), ivec3(0, 0, 0) + (ivec3(1, 0, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))))))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), ((0.0)) * 1.0)), 0.0)), injectionSwitch.x))))))), bool(_GLF_IDENTITY(bvec2(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), _GLF_IDENTITY((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), uint(uvec3((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), 0u, 0u)))))))), true), bvec2(bvec2(bvec2(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), _GLF_IDENTITY((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), uint(uvec3((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), 0u, 0u)))))))), true))))))))) && true)), _GLF_IDENTITY(true, ! (! (true)))))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec4(bool(bvec3(true, true, true)), true, false, false)))))))) || false)))) && true)))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1 < subgroup_size, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1 < subgroup_size, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1 < subgroup_size, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bvec4(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), 1, 1)) < subgroup_size, false, false, true)))), true, false, false)))))) && true), true))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true, _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false || (bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true))), false, true, true))), true && (false || (bool(bvec4(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true)), true, false))), true, true)))), false, true, true))))))))))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true)), (bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, true, true))) || false))))), true))), false, true, true)))), ! (! (false || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 < subgroup_size, true))), false, true, true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true)))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1 < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, true))), true))))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))))), bool(bvec4(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true), false, false))))), bool(bvec3((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true))), false, false))), false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))))))) || (_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY(_GLF_IDENTITY((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)))))), ! (_GLF_IDENTITY(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x))))))), bool(bvec2(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x))))))), true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 0u)), (uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 0u))) | 0u)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)))))), ! (_GLF_IDENTITY(! ((! (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))), ivec3(0, 0, 0) + (ivec3(1, 0, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))))))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), ((0.0)) * 1.0)), 0.0)), injectionSwitch.x))))))), bool(_GLF_IDENTITY(bvec2(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), _GLF_IDENTITY((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), uint(uvec3((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), 0u, 0u)))))))), true), bvec2(bvec2(bvec2(! ((! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), _GLF_IDENTITY((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), uint(uvec3((uint(uvec3(subgroup_size, 1u, 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)), 0u, 0u)))))))), true))))))))) && true)), _GLF_IDENTITY(true, ! (! (true)))))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec4(bool(bvec3(true, true, true)), true, false, false)))))))) || false)))) && true)))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1 < subgroup_size, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1 < subgroup_size, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1 < subgroup_size, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bvec4(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), 1, 1)) < subgroup_size, false, false, true)))), true, false, false)))))) && true), true))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true, _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false || (bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true))), false, true, true))), true && (false || (bool(bvec4(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true)))), true, false, false)))))) && true), true)), true, false))), true, true)))), false, true, true))))))))))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.8, 782.804)) : injectionSwitch)), injectionSwitch)).y, mix(float(_GLF_FUZZED(11.87)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.7)))), bool(true)))))) && true)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, false, _GLF_IDENTITY(true, ! (! (true)))))), true, false, true)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, false, true))), true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(35.99) : 1.0))))), mix(float(_GLF_FUZZED(-277.283)), float(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), bool(true)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4418.0410)), bool(false))), determinant(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, log(1.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0))), (mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4418.0410)), bool(false))), determinant(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, log(1.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4418.0410)), bool(false))), determinant(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, log(1.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0))), (mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4418.0410)), bool(false))), determinant(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, log(1.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4418.0410)), bool(false))), determinant(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, log(1.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0))), (mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4418.0410)), bool(false))), determinant(mat4(0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, log(1.0), sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, cos(0.0), sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (true ? _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))) : _GLF_FUZZED(3.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y)), (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (true ? _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))) : _GLF_FUZZED(3.0))) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))), false, false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(subgroup_local_id) : next_virtual_gid))], uint(read_1 + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1))))) == read_2) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), _GLF_IDENTITY(4, int(ivec3(4, 1, 0))), _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), ~ (~ (uvec2(read_1, 1u)))))) + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), ~ (~ (uvec2(read_1, 1u)))))) + 1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(num_workgroup)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(num_workgroup)), ((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(num_workgroup))) >> 0u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(num_workgroup), 0u + (true ? _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(num_workgroup)))), uint(uvec3((true ? _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(num_workgroup)), 0u, 1u))) : _GLF_FUZZED(subgroup_local_id))))) + 1, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
