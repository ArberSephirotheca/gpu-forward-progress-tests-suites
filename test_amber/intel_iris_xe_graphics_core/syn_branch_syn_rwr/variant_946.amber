#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7)))), vec2(_GLF_FUZZED((- 2.1)), _GLF_FUZZED(14.82)), bvec2(false, false)), min(mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(85.10)))), float(_GLF_FUZZED(-4200.9078)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(cos(vec2(-7.8, 248.483))))))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7))), (false ? _GLF_FUZZED(ldexp(8.8, _GLF_IDENTITY(90315, (false ? _GLF_FUZZED(62537) : _GLF_IDENTITY(90315, (90315) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + sin(vec2(0.0, 0.0)))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7))), mix(float(_GLF_FUZZED(-77.66)), float(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7)))), bool(true)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED((- 2.1)), mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(_GLF_FUZZED((- 2.1)), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED((- 2.1)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_FUZZED((- 2.1)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))))))), bool(true))), _GLF_FUZZED(14.82)), bvec2(false, false)), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) * mat2(1.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))[1], (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + sqrt(vec2(0.0, 0.0))))[1] : _GLF_FUZZED(2.7)))), vec2(_GLF_FUZZED((- 2.1)), _GLF_FUZZED(14.82)), bvec2(false, false))))) : _GLF_FUZZED(injectionSwitch)))).y))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7)))), vec2(_GLF_FUZZED((- 2.1)), _GLF_FUZZED(14.82)), bvec2(false, false)), min(mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(85.10)))), float(_GLF_FUZZED(-4200.9078)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(cos(vec2(-7.8, 248.483))))))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7))), (false ? _GLF_FUZZED(ldexp(8.8, _GLF_IDENTITY(90315, (false ? _GLF_FUZZED(62537) : _GLF_IDENTITY(90315, (90315) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + sin(vec2(0.0, 0.0)))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7))), mix(float(_GLF_FUZZED(-77.66)), float(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1], (true ? ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.7)))), bool(true)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED((- 2.1)), mix(float(_GLF_FUZZED(7.4)), float(_GLF_IDENTITY(_GLF_FUZZED((- 2.1)), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED((- 2.1)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_FUZZED((- 2.1)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))))))), bool(true))), _GLF_FUZZED(14.82)), bvec2(false, false)), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) * mat2(1.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))[1], (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + sqrt(vec2(0.0, 0.0))))[1] : _GLF_FUZZED(2.7)))), vec2(_GLF_FUZZED((- 2.1)), _GLF_FUZZED(14.82)), bvec2(false, false))))) : _GLF_FUZZED(injectionSwitch)))).y))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(mat2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0)))))).y))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false)))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.6)), bool(false))))) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[0], _GLF_FUZZED(5.6)), vec2(_GLF_FUZZED(56.94), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0), 1.0, 1.0)))))).y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))), (false ? _GLF_FUZZED(vec2(-7.0, -6.5)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))), mix(vec2(_GLF_FUZZED(vec3(976.932, -17.25, -2.6).r), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))))[1]), vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))))[0], _GLF_FUZZED(-338.662)), bvec2(true, false)))))).y, mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))), (false ? _GLF_FUZZED(vec2(-7.0, -6.5)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))), mix(vec2(_GLF_FUZZED(vec3(976.932, -17.25, -2.6).r), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))))[1]), vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))), vec2(mat2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 1.0))))))[0], _GLF_FUZZED(-338.662)), bvec2(true, false)))))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), true, false)))))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true))))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, _GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u), _GLF_FUZZED(subgroup_size))) : 0u)), (1u ^ 0u))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (0u ^ 0u) + (subgroup_id)) * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size))), 1u * ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))))) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), clamp((((subgroup_local_id + 1) % subgroup_size)), (((subgroup_local_id + 1) % subgroup_size)), (((subgroup_local_id + 1) % subgroup_size)))) | (((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u)));
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 | 0)))), int(_GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))), ivec3(ivec3(ivec3(4, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), int(ivec3(4, 1, 1))), _GLF_IDENTITY(4, int(ivec3(4, 1, 1))))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), ((1)) << 0) * 1))), (false ? _GLF_FUZZED(49479) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), ((1)) << 0) * _GLF_IDENTITY(1, (1) | (1)))))))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true, true, false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 983.039)), _GLF_FUZZED(-2748.7125)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), (bool(bvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))) && true))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), buf[virtual_gid])), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, 0 + (64)), 1, 0), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(64, 0 + (64)), 1, 0))))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true)), true && (bool(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true)), true && (bool(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), (bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true))))), _GLF_IDENTITY(true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1 < subgroup_size)) && true)), bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (! (true))) && (! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1) | 0u) < subgroup_size)) && true)), bool(bvec4((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))))) * 1u, uint(uvec4((next_virtual_gid) * _GLF_IDENTITY(1u, (1u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), _GLF_IDENTITY((next_virtual_gid) * 1u, 0u | (_GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (1u) << 0u))), ((next_virtual_gid) * 1u) - 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))))) * 1u, uint(uvec4((next_virtual_gid) * _GLF_IDENTITY(1u, (1u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), _GLF_IDENTITY((next_virtual_gid) * 1u, 0u | (_GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (1u) << 0u))), ((next_virtual_gid) * 1u) - 0u))))))))), clamp((_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))))) * 1u, uint(uvec4((next_virtual_gid) * _GLF_IDENTITY(1u, (1u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), _GLF_IDENTITY((next_virtual_gid) * 1u, 0u | (_GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (1u) << 0u))), ((next_virtual_gid) * 1u) - 0u))))))))), (_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))))) * 1u, uint(uvec4((next_virtual_gid) * _GLF_IDENTITY(1u, (1u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), _GLF_IDENTITY((next_virtual_gid) * 1u, 0u | (_GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (1u) << 0u))), ((next_virtual_gid) * 1u) - 0u))))))))), (_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), (~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))) - 0u), ~ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))))) * 1u, uint(uvec4((next_virtual_gid) * _GLF_IDENTITY(1u, (1u) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), _GLF_IDENTITY((next_virtual_gid) * 1u, 0u | (_GLF_IDENTITY((next_virtual_gid) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (1u) << 0u))), ((next_virtual_gid) * 1u) - 0u)))))))))))) + 0u))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) + 1), min(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) + 1), ~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 + 1 == read_2))), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) + 1))))), 4, _GLF_IDENTITY(64, (64) >> 0), 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ 0) == read_2) + 1, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
