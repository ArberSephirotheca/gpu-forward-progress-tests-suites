#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.8), mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.2), min(_GLF_IDENTITY(_GLF_FUZZED(2.2), min(_GLF_FUZZED(2.2), _GLF_FUZZED(2.2))), _GLF_IDENTITY(_GLF_FUZZED(2.2), float(mat4x3(_GLF_FUZZED(2.2), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(1.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(9.8), min(_GLF_FUZZED(9.8), _GLF_FUZZED(9.8)))), bool(true)))), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(-51.03), _GLF_FUZZED(-619.622)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), true))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false)), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false)), false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) && true, true && ((bool(bool(false))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, true && (true)))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true)))), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y)) || (true && (false))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))), 0.0, abs(0.0), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))), 0.0, abs(0.0), 1.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))), 0.0, abs(0.0), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))), 0.0, abs(0.0), 1.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))), 0.0, abs(0.0), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))), 0.0, abs(0.0), 1.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), true))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), false, true))))) && true), false || (_GLF_IDENTITY(false, bool(bool(false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || false)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || false))) && true)))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.0)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-570.138, -8.8)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2120.1901), _GLF_FUZZED(-0.5)), bvec2(false, false))))).x, mix(float(_GLF_FUZZED(-42.21)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && (_GLF_IDENTITY(true, (true) || false))))))), max(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.0)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.21)), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-478.381, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(log2(6.3)) : -478.381))))))), bool(true)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(-6.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(9.0, 1.0, 0.0), vec3(mat4(vec3(9.0, 1.0, 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0)))), clamp(float(_GLF_IDENTITY(vec3(9.0, 1.0, 0.0), vec3(mat4(vec3(9.0, 1.0, 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(9.0, 1.0, 0.0), vec3(mat4(vec3(9.0, 1.0, 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0)))), (false ? _GLF_FUZZED(-4932.3829) : float(_GLF_IDENTITY(vec3(9.0, 1.0, 0.0), vec3(mat4(vec3(9.0, 1.0, 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0)))))), float(_GLF_IDENTITY(vec3(9.0, 1.0, 0.0), vec3(mat4(vec3(9.0, 1.0, 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0))))))))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-42.21)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED((9.2 + 2.4)), (injectionSwitch)[1]), bvec2(false, true))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, exp(0.0), 0.0), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, exp(0.0), 0.0), (vec3(1.0, exp(0.0), 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), float(mat2(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 0.0, 1.0, 1.0)))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, cos(0.0), 1.0, 0.0, exp(0.0), 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.3))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3556.8280, 2.8)))).x))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))))), true && (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y)) || (bool(true)))))))))))))), 0.0 + (clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.0, _GLF_IDENTITY(float(vec3(9.0, 1.0, 1.0)), clamp(float(vec3(9.0, 1.0, 1.0)), float(vec3(9.0, 1.0, 1.0)), float(vec3(9.0, 1.0, 1.0))))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-532.200) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x), min(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))), injectionSwitch.x)) - 0.0), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.7) : min(injectionSwitch.x, injectionSwitch.x), 0.0 + (false ? _GLF_FUZZED(6.7) : min(injectionSwitch.x, injectionSwitch.x))))))))), bool(true)), mix(float(mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.0, _GLF_IDENTITY(float(vec3(9.0, 1.0, 1.0)), clamp(float(vec3(9.0, 1.0, 1.0)), float(vec3(9.0, 1.0, 1.0)), float(vec3(9.0, 1.0, 1.0))))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) - 0.0), (min(injectionSwitch.x, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(6.7) : min(injectionSwitch.x, injectionSwitch.x))))))), bool(true))), float(_GLF_FUZZED(-95.36)), bool(false)))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, -9659.8578))))) / vec2(1.0, 1.0)), vec2(mat3(injectionSwitch, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-42.21)), float(mat2x3(float(_GLF_FUZZED(-42.21)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0))), float(injectionSwitch.x), bool(true))))))))) > injectionSwitch.y))))))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), max(_GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2)))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), bool(true))), injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(1.0 * (injectionSwitch.y), _GLF_IDENTITY(1.0 * (injectionSwitch.y), min(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), 1.0 * (injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), true, true, false)))) || false, true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-389.816)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, false)))) || false)))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 1.0, cos(0.0)))))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0))) - 0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(reflect(injectionSwitch, injectionSwitch)) : injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).x)), 1.0, 1.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), (true ? mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-437.992, min(_GLF_IDENTITY(-437.992, min(-437.992, -437.992)), _GLF_IDENTITY(-437.992, (true ? -437.992 : _GLF_FUZZED(-3.2))))), -9709.1645, 73.70, -11.84)))), _GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), (transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), (transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), (transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), (true ? mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)) : _GLF_FUZZED(mat2(-437.992, -9709.1645, 73.70, -11.84)))), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))))))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)), 0.0 + (injectionSwitch.y)))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, 1.0, cos(0.0)))))), clamp(float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0)), (float(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0))) - 0.0)))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(reflect(injectionSwitch, injectionSwitch)) : injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).x)), 1.0, 1.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), (true ? mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-437.992, min(_GLF_IDENTITY(-437.992, min(-437.992, -437.992)), _GLF_IDENTITY(-437.992, (true ? -437.992 : _GLF_FUZZED(-3.2))))), -9709.1645, 73.70, -11.84)))), _GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), (transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), (transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0))))) - mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(transpose(_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))), (transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)), (true ? mat2(injectionSwitch.x, 1.0, 1.0, cos(0.0)) : _GLF_FUZZED(mat2(-437.992, -9709.1645, 73.70, -11.84)))), transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 1.0, cos(0.0)))))))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)), 0.0 + (injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-547.406, -730.357, -38.42).p)), vec2(_GLF_FUZZED(637.068), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).y))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).x > injectionSwitch.y)) || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)))))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))))))))))))) || false), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)))))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true)))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))))))))))))) || false)) && true) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7021.7138)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ ((1u ^ 1u) << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size) / 1u))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * subgroup_size)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), subgroup_size))) / 1u))), 0u)))) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 1.0, abs(0.0), 1.0, abs(1.0)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(100.247) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, exp(sin(0.0)) * (1.0)))))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))), false || (! (bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) && true)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u)))) - 0u) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_id * subgroup_size))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) + 0)) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(false, (false) && true), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, false), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)))))), false, true, true))) && true)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1), 4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (4)), (4) | 0))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479)))), 4, 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479)), (~ (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479))) >> 0)))) | (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479)))))), 4, 4), max(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479)))), 4, 4), clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-94479)))), 4, 4)))) / _GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) - 0), 4)), 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) + 0)))), _GLF_IDENTITY((4) / 1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1)), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((4) / 1, min((4) / 1, (4) / 1)), int(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 << _GLF_IDENTITY(int(4), int(4)))), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 << _GLF_IDENTITY(int(4), int(4))))))))) / 1), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4))) / 1)) | 0)) >> 0), 4, 4)), max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), 4, 4)))) : _GLF_FUZZED(38069))))), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(int(64)))) - 0), 64)), 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false), true)), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false), true)), true)))))) && true)))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || ((! (bool(bvec4(false, false, false, false))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (! (bool(bvec4(false, false, false, false))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, false, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))), ! (! ((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))))))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))), false || (((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), ! (! (! (bool(bvec4(false, false, false, false)))))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), bool(bvec4(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false)))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(false, false, false, false))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(87.66, 32.58, -187.349, -8.4)[1]) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))), true && (bool(bvec4(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(93.21)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0)))), bool(true))), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false)))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || ((! (bool(bvec4(false, false, false, false))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (! (bool(bvec4(false, false, false, false))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, false, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))), ! (! ((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))))))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))), false || (((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), ! (! (! (bool(bvec4(false, false, false, false)))))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), bool(bvec4(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || ((! (bool(bvec4(false, false, false, false))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (! (bool(bvec4(false, false, false, false))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, false, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))), ! (! ((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))))))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))), false || (((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), ! (! (! (bool(bvec4(false, false, false, false)))))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), bool(bvec4(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false)))))), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || ((! (bool(bvec4(false, false, false, false))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (! (bool(bvec4(false, false, false, false))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, false, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))), ! (! ((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))))))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))), false || (((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), ! (! (! (bool(bvec4(false, false, false, false)))))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), bool(bvec4(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false))))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || ((! (bool(bvec4(false, false, false, false))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (! (bool(bvec4(false, false, false, false))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, false, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))), ! (! ((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))))))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))), false || (((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), ! (! (! (bool(bvec4(false, false, false, false)))))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), bool(bvec4(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false)))))), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || ((! (bool(bvec4(false, false, false, false))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (! (bool(bvec4(false, false, false, false))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, false, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, false, false, false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))), ! (! ((bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))))))))), (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((! (bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (bool(bvec4(false, false, false, false)))), false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))), false || (((! (bool(bvec4(false, false, false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), true && (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), ! (! (! (bool(bvec4(false, false, false, false)))))))), true, true, false)))), _GLF_IDENTITY(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), bool(bvec4(bool(false || ((! (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false)), false || (bool(_GLF_IDENTITY(bool(false || _GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((! (bool(bvec4(false, false, false, false))))), (((! (bool(bvec4(false, false, false, false)))))) && true), false), false)))))), (bool(false || ((! (bool(bvec4(false, false, false, false))))))) || false))))))), false, false))))) || false)) || false))))))))), true, true)))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, false))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(87.66, 32.58, -187.349, -8.4)[1]) : injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y, true, false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) && true)), true)), _GLF_IDENTITY(true && (bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(_GLF_IDENTITY(bvec3(true && (bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true), bvec3(bvec3(bvec3(true && (bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true))))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec2(_GLF_IDENTITY(mat3x2(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0))))))).x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) || false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) || false))), true && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) || false))))), false, true, true))))))), true && (bool(bvec4(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : injectionSwitch.y)), mix(float(_GLF_FUZZED(93.21)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0))), sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0, 1.0)))), bool(true))), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(176442u) : subgroup_local_id)))), (true ? subgroup_local_id : _GLF_FUZZED(read_1))))) + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)) || false, ! (! ((! (subgroup_local_id + 1 < subgroup_size)) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)) || false, ! (! ((! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), (! ((subgroup_local_id + 1 < subgroup_size))) && true)))) || false))), bool(bvec3(_GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)) || false, ! (! ((! (subgroup_local_id + 1 < subgroup_size)) || false))), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(74.20))))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)) || false, ! (! ((! (subgroup_local_id + 1 < subgroup_size)) || false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u) + 1 < subgroup_size)) || false, ! (! ((! (subgroup_local_id + 1 < subgroup_size)) || false))), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   int i = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false))), true, false)))))))))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) - 0u)], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false))))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(vec4(_GLF_FUZZED(37.97), (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[1], (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[2], (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[3]), vec4((_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], _GLF_FUZZED(88.09), _GLF_FUZZED(5200.8196), _GLF_FUZZED(3408.2911)), bvec4(true, false, false, false))), _GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[2], _GLF_FUZZED(991.364)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), mix(float(_GLF_FUZZED(0.5)), float(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))), mix(vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-82.06), _GLF_FUZZED((- -3.4)), (vec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[3]), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[0], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), length(vec2(0.0, 0.0))))[1], (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, log(1.0))), dot(vec2(1.0, 0.0), vec2(1.0, log(1.0)))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(mat4(length(vec2(0.0, 0.0)), 1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))))))))[2], _GLF_FUZZED(991.364)), bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(true)))) > injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) : _GLF_FUZZED(937.907))))) > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-527.628)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) || false))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))), bool(bool((((false)))))) || false)), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(! (! _GLF_IDENTITY(((false)), (((false))) || false)), (! (! _GLF_IDENTITY(((false)), (((false))) || false))) && true)))))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-431.765)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)), true, false), false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))), ! (! (false)))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)), min(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)))))), min(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)), min(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)))))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)), min(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0)), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0))))))))), 0.0, 1.0))), injectionSwitch), (false ? _GLF_FUZZED(vec2(4331.1375, 3.8)) : min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), sqrt(0.0)))), cos(0.0), 1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-80.77) : 1.0)), 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 1.0))), injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))) || false))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, false, true))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true))))))), true && (_GLF_IDENTITY((read_1 + 1 == read_2) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), bool(bool((read_1 + 1 == read_2) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))))))))) + 1, _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u ^ (_GLF_IDENTITY(uint(8u), uint(8u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u ^ (_GLF_IDENTITY(uint(8u), uint(8u)))))) - 0u)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ! (! (bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))))))))) + 1) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) + 0u), read_2))) && true)) + 1) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) * 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2) && true), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(mix(-73034, 47146, false)) : 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + 1, clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_IDENTITY(true, ! (! (true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((read_1 + 1 == read_2) && true))))))))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1))) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) + 1) ^ 0u))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + 1, clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_IDENTITY(true, ! (! (true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((read_1 + 1 == read_2) && true))))))))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1))) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) + 1) ^ 0u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + 1, clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_IDENTITY(true, ! (! (true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((read_1 + 1 == read_2) && true))))))))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1))) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) + 1) ^ 0u))))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + 1, clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_IDENTITY(true, ! (! (true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((read_1 + 1 == read_2) && true))))))))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1))) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) + 1) ^ 0u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + 1, clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) || false)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_IDENTITY(true, ! (! (true))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ((read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)) == read_2) || false)) && true)) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), false || (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && (_GLF_IDENTITY((read_1 + 1 == read_2) && true, true && ((read_1 + 1 == read_2) && true))))))))) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) ^ 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1))) ^ 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u))), (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2) && true)) + 1) ^ 0u))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2) && true)) + 1, ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), ~ (~ (read_1 + 1))) == read_2) && true)) + 1, clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, bool(bvec2(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, true)))) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), false || (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))))) && true)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1) + 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))) + 1) ^ 0u))))))) + 0u, (true ? (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2) && true)) + 1, ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), ~ (~ (read_1 + 1))) == read_2) && true)) + 1, clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) >> 0), (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) >> 0), (read_1 + 1) * uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2, true), false, false)))))) && true)) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), false || (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))))) && true)) + 1, (0u | 0u) + (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(false || (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))))), bool(bvec4(! (false || (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2)))))), true, false, false)))))) && true)) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), 0u | (_GLF_IDENTITY(read_1, (read_1) | (read_1)))) + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u), (read_1 + 1 == read_2) && true)) + 1) + 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) ^ 0u), read_1, read_1)))) + 1 == read_2), ! (! ((_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) ^ 0u), read_1, read_1)))) + 1 == read_2)))) && true))))) + 1) ^ 0u))))))) + 0u : _GLF_FUZZED(subgroup_local_id)))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 5698.0765))), vec2(_GLF_FUZZED((+ 886.862)), (injectionSwitch)[1]), bvec2(false, true))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(62.67) : injectionSwitch.x)) > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0])), injectionSwitch[1])).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) && true), true && (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(31.30)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - sin(0.0)), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(31.30)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - sin(0.0)), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-152.136)), _GLF_IDENTITY(vec2(_GLF_FUZZED((-2.6 * 64.29)), (injectionSwitch)[1]), (vec2(_GLF_FUZZED((-2.6 * 64.29)), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, true))))).y))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY((round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), mix(float(_GLF_FUZZED(-587.593)), float((round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), bool(true))) - 0.0), 0.0)), (_GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY((round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), mix(float(_GLF_FUZZED(-587.593)), float((round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), bool(true))) - 0.0), 0.0)), (false ? _GLF_FUZZED(-475.404) : float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY((round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), mix(float(_GLF_FUZZED(-587.593)), float((round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), bool(true))) - 0.0), 0.0))))) * 1.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
