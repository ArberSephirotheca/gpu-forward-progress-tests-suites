#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uvec3 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 ivec4 _f1;
 mat4 _f2;
 uvec2 _f3;
 float _f4;
 mat2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_7 {
 uint _f0;
 mat3x4 _f1;
 uvec2 _f2;
 bool _f3;
 mat2 _f4;
 vec3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat2 _f1;
 uint read_1;
 mat4x2 _f2;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_2 {
 float _f0;
 mat2x4 _f1;
 mat2 _f2;
 mat2x3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_1 {
 int _f0;
 vec2 _f1;
 vec3 _f2;
 mat4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 ivec2 _f1;
 mat2x3 _f2;
 vec3 _f3;
 uvec2 _f4;
 mat4x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 bool _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_6 _f3;
 ivec3 _f4;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), ! (! (false || (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false || (bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))))))), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(75.77) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.3))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4))), (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-325.968)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) || false))), ((! (_GLF_IDENTITY(true, (true) || false)))) || false), false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4), min(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4), clamp(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4)))))) - abs(0.0)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4)))), _GLF_IDENTITY(float(_GLF_FUZZED(-0.3)), (float(_GLF_IDENTITY(_GLF_FUZZED(-0.3), (false ? _GLF_FUZZED((-1.7 + _GLF_IDENTITY(-2.3, mix(float(_GLF_FUZZED((true ? -964.151 : -8.5))), float(_GLF_IDENTITY(-2.3, 1.0 * (-2.3))), bool(true))))) : _GLF_IDENTITY(_GLF_FUZZED(-0.3), sqrt(0.0) + (_GLF_FUZZED(-0.3))))))) * 1.0), bool(false))))))))), false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x) : _GLF_FUZZED(338.519))))).y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-3.4))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) || false))), (! (! (_GLF_IDENTITY(true, (true) || false)))) || false)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(float(-47169))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[1])).y : _GLF_FUZZED(-3.4)))), _GLF_IDENTITY(float(_GLF_FUZZED(-0.3)), (float(_GLF_FUZZED(-0.3))) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.1)), bool(false)))), bool(false))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0)))) + sin(vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0)))) + sin(vec2(0.0, 0.0))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0)))) + sin(vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED(39.15), _GLF_FUZZED(705.147)), bvec2(false, false)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))), vec2(mat4x3(_GLF_IDENTITY(mat2(1.0) * (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)), (mat2(1.0) * (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(max(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(sqrt(0.0)), log(1.0), sin(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0))), min(max(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), max(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8))), 1.0, 1.0, 1.0, 0.0))))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 0.0, sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))))), 1.0, 0.0)))) + sin(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-0.3), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), vec2((max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(5.5)), bvec2(true, false)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))), vec2(mat4x3(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(10.36)), vec2((min(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, (0) | (0))], (min(injectionSwitch, injectionSwitch))[1]), bvec2(true, true))))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), vec2(mat3x4(true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(10.36)), vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true))))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.5)))))) / 1.0), 1.0)) : _GLF_FUZZED(injectionSwitch), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (mat2(1.0) * (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(13.62)), float(1.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), injectionSwitch.y)))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), max(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0)), max(vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), max(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0)), max(vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), max(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0)), max(vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 1.0))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.6))), 1.0)), (true ? 1.0 : _GLF_FUZZED(-2.8))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))))).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-2308.9081, -3.3, -620.504).p)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true) || false)) || false), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)).y), max(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y)) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))), _GLF_ONE(1.0, injectionSwitch.y))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) && true, false || ((true) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY((true) && true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((false)) && true) && true)) || ((_GLF_IDENTITY(true, (true) && true)) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true) && true, false || ((true) && true)), bool(bool(_GLF_IDENTITY((true) && true, false || (_GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true) && true, false || ((true) && true)), false, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((true) && true, false || ((true) && true)), false, false, true)), true, false, true))))))))), true, true, false)))))) ? _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))))) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) - 0u)))) ^ 0u)) | 0u)) * 1u), ~ (~ (subgroup_local_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-96.66, _GLF_IDENTITY(-2.3, max(-2.3, _GLF_IDENTITY(-2.3, mix(float(-2.3), float(_GLF_FUZZED(7819.3608)), bool(false))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.0)), bool(false)))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) || false)) && true)) || false), (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(-380.120), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)))))))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bool(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))) + 0.0), 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))), min(_GLF_IDENTITY((~ (subgroup_size)), 0u ^ (_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))))), _GLF_IDENTITY((~ (subgroup_size)), min((~ (subgroup_size)), (~ (subgroup_size))))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-1.7, -73.58, 2.3, 9.0))) : 0u)) + (0u))), subgroup_size)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size))) >> 0u)))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)))) - 0u)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)))) - 0u)), ~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u)), ((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))) + 0u)), subgroup_size)))) - 0u)), max((~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | (subgroup_id)), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), max(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (clamp(subgroup_id, subgroup_id, subgroup_id))), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), max(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id))), clamp(subgroup_id, subgroup_id, subgroup_id)))))), (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u)), ((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))) + 0u)), subgroup_size)))) - 0u)), (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size))), ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u)), ((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), uint(uvec3((_GLF_IDENTITY((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u)), ((subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))) ^ 0u)), 0u, 0u))) + 0u)), subgroup_size)))) - 0u))))))), (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u)))) + 0u))), subgroup_size))), _GLF_IDENTITY(((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))), clamp(((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))), _GLF_IDENTITY(((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))), clamp(((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / _GLF_IDENTITY(1u, ~ (~ (1u)))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))))), _GLF_IDENTITY(((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))), (false ? _GLF_FUZZED((num_workgroup * workgroup_base)) : ((workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, 0u + (0u))), subgroup_size)) / 1u)))))))) - 0u))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size) | 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size) | 0u))));
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), _GLF_struct_0(uvec3(1u), ivec2(1), mat2x3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), vec3(1.0))), uvec2(1u), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(-8.9) : clamp(1.0, 1.0, 1.0))))), mat3x4(1.0)), _GLF_struct_1(1, vec2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false)))))))), vec3(1.0), mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), bvec2(true)), _GLF_struct_2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-248.276)), bool(false))), mat2x4(1.0), mat2(1.0), mat2x3(1.0), bvec2(true))), true, _GLF_struct_4(1.0, mat4x2(1.0)), _GLF_struct_6(_GLF_struct_5(uvec3(1u), bvec4(_GLF_IDENTITY(true, (true) || false))), mat2(1.0), atomicLoad(buf[virtual_gid], 4, 64, 0), mat4x2(1.0)), ivec3(1), _GLF_struct_10(_GLF_struct_7(1u, mat3x4(1.0), uvec2(1u), true, _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))), vec3(1.0), vec4(1.0)), _GLF_struct_8(mat2(1.0), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(0, 0, 0, 0))) | (ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)))) | ivec4(0, 0, 0, 0))), mat4(1.0), uvec2(1u), _GLF_IDENTITY(1.0, 0.0 + (1.0)), mat2(1.0), mat3x2(1.0)), _GLF_struct_9(uvec3(1u), mat4x2(1.0), uvec4(1u), 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false))), false, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true), false, false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1 + 1, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1 + 1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u, clamp(_GLF_IDENTITY(((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u, 1u * (((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u)), ((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u, ((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u)), (((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u) << 0u)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1 + 1), _GLF_IDENTITY(((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u, _GLF_IDENTITY((((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u) << 0u, ~ (~ ((((_GLF_struct_replacement_11._f3.read_1 + 1)) << 0u) << 0u))))) : _GLF_FUZZED((next_virtual_gid << subgroup_id)))))) | (_GLF_IDENTITY(192262u & 0u, max(192262u & 0u, 192262u & 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, _GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1), 1u * (_GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1), (true ? (_GLF_struct_replacement_11._f3.read_1) : _GLF_FUZZED(workgroup_size))))) + ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, _GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1), 1u * (_GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1), (true ? (_GLF_struct_replacement_11._f3.read_1) : _GLF_FUZZED(workgroup_size))))) + ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, _GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1), 1u * (_GLF_IDENTITY((_GLF_struct_replacement_11._f3.read_1), (true ? (_GLF_struct_replacement_11._f3.read_1) : _GLF_FUZZED(workgroup_size))))) + ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u)))))))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, max(_GLF_struct_replacement_11._f3.read_1, _GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, min(_GLF_struct_replacement_11._f3.read_1, _GLF_struct_replacement_11._f3.read_1))) / 1u))) + 1, max(_GLF_struct_replacement_11._f3.read_1 + 1, _GLF_struct_replacement_11._f3.read_1 + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, length(vec2(0.0, 0.0)), 0.0))) : _GLF_FUZZED(-9.9)))) ^ (_GLF_struct_replacement_11._f3.read_1 + 1))) | (192262u & 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicAnd(next_virtual_gid, virtual_gid)) : 0u)), 0u, 0u)) | (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, (_GLF_struct_replacement_11._f3.read_1) << (0u & 115253u))) + ((0u | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, min(0u, 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u)))))), 0u | (uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicAnd(next_virtual_gid, virtual_gid)) : 0u)), 0u, 0u)) | (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, (_GLF_struct_replacement_11._f3.read_1) << (0u & 115253u))) + ((0u | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, min(0u, 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u))))))))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u)))))))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) + 1, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_11._f3.read_1 + 1))) | (192262u & 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, (_GLF_struct_replacement_11._f3.read_1) + ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))), 1u, 0u))))))), (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_struct_replacement_11._f3.read_1, 1u, 0u)))))))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) + 1, (_GLF_IDENTITY(_GLF_struct_replacement_11._f3.read_1 + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_11._f3.read_1 + 1))) | (192262u & 0u))))) << 0u) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) / 1u)), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) / (1 ^ 0)))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), false, false, true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), false, false, true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), false, false, true))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), false, false, true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), false, false, true)))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), false, false, true))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)))) : _GLF_FUZZED(41.18))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, exp(0.0)))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(bvec2(bool(bool(false)), false), true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (! (! ((! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.4) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) || false)))), false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), true, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), true, false), true)))))))), ! (! (bool(bool(false)))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), bool(bvec2(! (true && (false)), true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-50.89, 1.5)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_11._f3.read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(bvec3(false, true, false), true)))), false, true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_11._f3.read_1 + 1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / abs(1.0)), 0.0)) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0)), 0.0, sqrt(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, length(0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), false || (false || (false))))))) || false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(394.892), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(934.800)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) && true))) || false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
