#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))))) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, false), false))), true)), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, false), false))), true)), false))))), true && (bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, true)), false, false), false))), true)), false)))))))) || false))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))))))) && true)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true), true && (bool(bool(bool(false))))))))))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(bool(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false)))))))), (bool((_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false))))))))) && true)))), false, true), true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || false))))))), true && _GLF_IDENTITY((bool(bool(bool(false)))), ((bool(bool(bool(false))))) || false)))))))))), (_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true), true && (bool(bool(bool(false))))))), false || (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true), true && (bool(bool(bool(false))))))))))))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(bool(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false)))))))), false, true), true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || false))))))), (_GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(bool(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false)))))))), false, true), true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || false)))))))) && true), true && _GLF_IDENTITY((bool(bool(bool(false)))), ((bool(bool(bool(false))))) || false)))))))))), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true), true && (bool(bool(bool(false))))))))))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bool(bool(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false)))))))), false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(bool(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false)))))))), false, true), true))), false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (! (bool(bvec2(false, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (! (bool(bvec2(false, true)))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (! (bool(bvec2(false, true))))))) && true)) || false) || false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) && _GLF_IDENTITY((bool(bool(bool(false)))), ((bool(bool(bool(false))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))))))))) || false))) && true, true && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (bool(bool(bool(false))))))))))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (bool(bool(bool(false)))), true && (! (bool(bool(bool(false)))))))), false, true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || false))))))), true && _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))), ((bool(bool(bool(false))))) || false))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(! (bool(bool(bool(false)))), _GLF_IDENTITY(true && (! (bool(bool(bool(false))))), (true && (! (bool(bool(bool(false)))))) && true)))), false, true), true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || false))))))), true && _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))), ((bool(bool(bool(false))))) || false))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, ! (! (true))), true, true))), (bool(false)) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(false))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), true, true, false)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(bool(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(bool(false)))), _GLF_IDENTITY(true && (! (bool(bool(bool(false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (! (bool(bool(bool(false)))))), (bool(true && (! (bool(bool(bool(false))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(true && (! (bool(bool(bool(false)))))), (bool(true && (! (bool(bool(bool(false))))))) || false))))))), true && (_GLF_IDENTITY(! (bool(bool(bool(false)))), (_GLF_IDENTITY(! (bool(bool(bool(false)))), bool(bvec4(! (bool(bool(bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))), false, true), true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || false))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))), ((bool(bool(bool(false))))) || false))))))))))))))) && true)))) || false))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(_GLF_FUZZED(71.87), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_FUZZED(2.6)), bvec2(true, false))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))).y) / 1.0)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false, false))), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false, false))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false, false))), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), false, false))))), false, false, false)))))), ! (! (! (_GLF_DEAD(false)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec4((bool(_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec4((bool(_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec4((bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), ((! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ((bool(_GLF_DEAD(false)))) || false))))) && true))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, false)))))))))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! (((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! (((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))), ! (! (! ((! _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! (((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))))))))))))))))), false, true)))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(69.08)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7259.6956)))), bool(true)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(69.08)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7259.6956)))), bool(true))))))))))), bvec2(bvec3(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true, false)), true, false))))), true))), false, true)))), true, false), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | _GLF_IDENTITY((gl_NumWorkGroups.x), clamp((gl_NumWorkGroups.x), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), 0u | (gl_NumWorkGroups.x))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)).x))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(12401u, 161567u, 178193u)) : gl_NumWorkGroups)), min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)).x)))) | 0u)) + 0u))) + (0u & 15733u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false)))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false)))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false)))))))) || false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, true, false)))))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false)))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))), false, false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || false), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false))))), true && (false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, false)))))))))) || false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false, true, false)))))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false))) || false)), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7500.1854)), vec2(_GLF_FUZZED((1.8 + -3450.2817)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), false))))), false)))))))), true, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, (0u) * 1u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))) ^ 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), max(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))))), uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))), max(uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u)))))))), uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))))))) << 0u), uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), min((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) + 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) ^ 0u)))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u)))) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) : _GLF_FUZZED(virtual_gid))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true))) ? 4 : _GLF_FUZZED((max(_GLF_IDENTITY(23337, (false ? _GLF_FUZZED(60433) : _GLF_IDENTITY(23337, 1 * (_GLF_IDENTITY(23337, (true ? 23337 : _GLF_FUZZED(-14564))))))), -59777) | 71359)), (true ? 4 : _GLF_FUZZED((max(_GLF_IDENTITY(23337, (23337) >> 0), -59777) | 71359))) | (0 << _GLF_IDENTITY(int(4), int(4)))))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(vec2(247.913, -0.6), vec2(1.5, 813.368), vec2(-2.0, 9.9))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(6.1, -49.88, 4.6).p), _GLF_FUZZED(9.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-35.27), _GLF_FUZZED(695.836)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], (false ? _GLF_FUZZED(-6550.2253) : injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x2(injectionSwitch[1], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x4(float(mat4x2(injectionSwitch[1], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))).y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, sin(0.0), 0.0)), (float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED((7.7))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(883.479)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))), 0.0))))))), bool(true))), float(_GLF_FUZZED(-6906.4077)), bool(false))), 0.0, 0.0, sin(0.0), 0.0))) / 1.0))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) * 1u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))) && true), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((false), true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))), bvec2(bvec2(bvec2(bvec4(bvec2((false), true), false, false)))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(read_2)) : 1)) == _GLF_IDENTITY(read_2, (read_2) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u)))) || false), false || (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u), (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))) >> 0u)) || false)) || false)) || false)))) + 1, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) << ((0 >> _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(1), int(1)))), 0, 1))), 64, 64)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
