#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec2(uvec2(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size)));
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))) && true), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), bool(bvec2(! (true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(false))))) && true)), _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(! (true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (! (true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))))))))))))) || false)))), bool(bvec2(! (_GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bool(true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), (bool(bool(true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))) || false))), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, ((false) || false) && true)))))), bool(_GLF_IDENTITY(bvec3(bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))), true), bvec3(bvec3(bvec3(bool(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false))))) || false)) && true), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))))) || false), false))))) || false)) && true), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), true, true, true))))) && true))) || false)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false))))))))))) || false)) && true), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true))))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), _GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), false))))))))))))))))) || false)) && true), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true))))) && true)))) || false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && ((! (false)))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && ((! (false)))))), false, false))))))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), bool(bvec3(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), false, true)))))) || false)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), bool(bvec3(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), false, true)))))) || false))))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), bool(bvec3(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true)))), false, true)))))) || false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && ((! (false)))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, ! (! (false))))))))), false, false))))))), true, true, false)))), bool(bool(_GLF_DEAD(false))))) && true))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))))))) && true))))))))))) && true))) || false), false)), false, true)))))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.x = subgroup_id;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.6)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.6)), bool(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w = subgroup_size, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w = subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | 0)); _injected_loop_counter --)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.y = num_workgroup;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.y = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.y;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw.y = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), true, false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id, 0u | (GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id)))), (false ? _GLF_FUZZED(subgroup_size) : GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z = workgroup_id))) * 1u);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid) : GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size)).zw.y * GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.z;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y = workgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, clamp(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size)).xy, _GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy), (uvec2(0u, 0u) | uvec2(1u, 1u)) * ((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy, (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy) | (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy)), (_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy, (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy) | (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy))) * uvec2(1u, 1u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size) : _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy, (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy) | (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy)))))).y, (_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy, (_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy, _GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy), (uvec2(0u, 0u) | uvec2(1u, 1u)) * ((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy, (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy) | (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy)))).y) + 0u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))) + 0u)), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), 1u))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), uvec2(uvec3(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), 1u)))), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))))) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u)))))))), clamp(min(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), uvec2(uvec3(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), 1u)))), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))))) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u)))))))), min(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), uvec2(uvec3(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), 1u)))), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))))) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u)))))))), min(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), uvec2(uvec3(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), 1u)))), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))))) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) >> uvec2(0u, 0u)))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, 1u)))), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), max(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), clamp(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) ^ uvec2(0u, 0u)), uvec2(subgroup_local_id, 1u))))))))) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u)))))))), (false ? _GLF_FUZZED(workgroup_base) : min(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), uvec2(uvec2(uvec2(subgroup_local_id, 1u)))), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), max(uvec2(uvec2(uvec2(subgroup_local_id, 1u))), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) << (0u & 9480u))), clamp(uvec2(subgroup_local_id, 1u), _GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) ^ uvec2(0u, 0u)), uvec2(subgroup_local_id, 1u))))))))) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), uvec2(uvec2(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), uint(uvec4(uint(uint(1u)), 1u, 0u, 1u)))))))))))))))) >> 0u));
 GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw.x = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw, min(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw, clamp(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw, (true ? GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))), GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw, GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw)), GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw)), min(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw, GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.zw)).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6809.4537)), bool(_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) / 1.0)))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_14_2_1_12virtual_gidworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.x, (true ? GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.x : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w))) * GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec4(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1], GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[2], GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[3])).xy.y, max(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), clamp((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), _GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), ~ (~ ((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y))))))))) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y, (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y) | 0u))), (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y) >> 0u)), 0u ^ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size, uvec4(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[0], GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[1], GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[2], GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size[_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (3) / 1), _GLF_IDENTITY(3, max(3, 3))))])).xy.y, max(_GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y, _GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), clamp((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), _GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y), ~ (~ ((GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y))))))))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y, (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y) | 0u))), (GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y) >> 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 for(int _injected_loop_counter = (0 & 52627); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x = next_virtual_gid;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-58.06)), bvec2(true, false)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w], _GLF_IDENTITY(4, 0 ^ (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size) : GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[0], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[0], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[1], min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[1], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[1])), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[2], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[3]))[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(91428) : 2))) * ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, (2) + 0))))))], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[3]))) * uvec4(1u, 1u, 1u, 1u)).z + 1), ~ _GLF_IDENTITY((~ (uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + 1))), ~ (~ ((~ (uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, (1) ^ 0)))))))), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w))), 1u, 1u, 0u)), (uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 1u, 1u, 0u))) | 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w), (false ? _GLF_FUZZED(workgroup_id) : (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w))) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), uint(7u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 1u, 1u, 0u)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))))) >> 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w) << 0u), uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w))), _GLF_IDENTITY(1u, (1u) + 0u), 1u, 0u)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))) | (next_virtual_gid))) : _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 1u, 1u, 0u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w) / 1u), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w)))), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 1u, 1u, 0u))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), 0u ^ (0u)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 1u, 1u, 0u))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) << 0u)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, uint(uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w, 1u, 1u, 0u)))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) - 0u)))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z = read_2;
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 1 * (int(_GLF_IDENTITY(int(1), (int(1)) | (int(1))))))) < GLF_merged2_0_2_49_2_2_50GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.xy.y)
  {
   int i = 0;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ (0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) + 0)))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) | _GLF_IDENTITY(1, 0 ^ (1))) | 1)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.3))) < injectionSwitch.y, true, true))))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), min(injectionSwitch.y, injectionSwitch.y)), sin(0.0), 0.0, tan(0.0))), (true ? float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), sin(0.0), 0.0, tan(0.0))) : _GLF_FUZZED(-5872.2713)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, _GLF_IDENTITY(true, ! (! (true)))), false)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-9390 & 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) ? GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x : _GLF_FUZZED(_GLF_IDENTITY(atomicMin(subgroup_local_id, workgroup_size), _GLF_IDENTITY((atomicMin(subgroup_local_id, workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((atomicMin(subgroup_local_id, workgroup_size)), ((atomicMin(subgroup_local_id, workgroup_size))) ^ 0u)), (false ? _GLF_FUZZED(uvec2(103650u, 36911u).y) : _GLF_IDENTITY(~ (_GLF_IDENTITY((atomicMin(subgroup_local_id, workgroup_size)), ((atomicMin(subgroup_local_id, workgroup_size))) ^ 0u)), 0u ^ (~ (_GLF_IDENTITY((atomicMin(subgroup_local_id, workgroup_size)), ((atomicMin(subgroup_local_id, workgroup_size))) ^ 0u)))))))) >> 0u))))) ^ 0u)], uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid) / uvec4(1u, 1u, 1u, 1u)))), max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid))))) + uvec4(0u, 0u, 0u, 0u)).z + _GLF_IDENTITY(1, max(1, 1)) == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(40154) : 64)), 0 ^ (_GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, (64) - 0))))), 4);
       for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), 0 ^ (int(1))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), 0 ^ (int(1))))))), int(ivec2((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), 0 ^ (int(1))))))), 0)))) / (1 & 1)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (_GLF_IDENTITY(int(1), 0 | (int(1)))) | (_GLF_IDENTITY(int(1), 0 | (int(1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tan(9876.9440)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-610.063)))))), mat2(mat4x2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(37.42)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.0) : injectionSwitch.x)))), injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(tan(9876.9440)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-610.063)))))), mat2(mat4x2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0)))) : _GLF_FUZZED(mat2(768.596, -95.12, -25.76, 7800.0465)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, tan(0.0)), (false ? _GLF_FUZZED(unpackUnorm4x8(workgroup_size)) : vec4(injectionSwitch.x, 1.0, 0.0, tan(0.0)))))), max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-556.594) : 1.0)), 1.0))), mat2(mat4x2(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0))))))) / exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-370.888) : _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 0.0)), float(vec3(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(injectionSwitch[1]) : 1.0))), mat2(mat4x2(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, (_GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) - 0.0)) / 1.0)))))))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))[0], _GLF_FUZZED((+ -76.54)), (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))[2]), vec3(_GLF_FUZZED(-95.22), (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))[1], _GLF_FUZZED(-524.010)), bvec3(false, true, false))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.7), mix(float(_GLF_FUZZED(-3.7)), float(_GLF_FUZZED(-9.5)), bool(false))) : 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.6)), bool(false)))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x], uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid))), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)).z + 1 == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z) + 1, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), ~ (~ (_GLF_IDENTITY((64), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), (64) | 0)))) | _GLF_IDENTITY((64), 1 * ((64))))))), _GLF_IDENTITY(4, min(4, 4)));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), true, true, false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (76113 & int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-55.40) : _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-55.40) : _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), ! (_GLF_IDENTITY(! (true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-55.40) : _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))), bool(bvec3(! (true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-55.40) : _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))), true, true)))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   barrier();
   for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3))) | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (1 ^ 0))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (1 ^ 0))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (_GLF_IDENTITY(int(0), int(ivec4(int(0), 1, 1, 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0), 0 ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7))))) - 0)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) - 0))), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), min((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, 0)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(0, (0) | (0)), 1, 1, 0))))) / 1)) << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7)))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)))) ? max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7)))))) : _GLF_FUZZED(_injected_loop_counter)))), 0), min(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))))))), 0), ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), int(7))), (0 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | 0)), int(7)))) << 0))))), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)))))))) ^ 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
