#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0)), mix(vec2((vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0)))[0], (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0)))[1]), vec2(_GLF_FUZZED(-78.16), _GLF_FUZZED((62.05 / 2858.1936))), bvec2(false, false)))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x))), _GLF_IDENTITY(((injectionSwitch.x)) / 1.0, (_GLF_IDENTITY(((injectionSwitch.x)) / 1.0, float(mat2x4(((injectionSwitch.x)) / 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) / 1.0)) / 1.0))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x), float(mat3x4((injectionSwitch.x), determinant(mat3(cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, exp(0.0), 0.0)))), clamp(((injectionSwitch.x)), ((injectionSwitch.x)), _GLF_IDENTITY(((injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(((injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.1) : ((injectionSwitch.x)))), 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0))))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3513.7305) : 1.0))) / 1.0))) > injectionSwitch.y), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true), false)), ! (! (bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true), false))))), false, false), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.2)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))))).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0)))], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), true))))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8983.1048), _GLF_FUZZED(96.78)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-293.127, 3346.2963)) : injectionSwitch)).y))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0)))], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))) && true))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, true)), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), true)), true)), false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), true)), false))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))) || false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false)))))))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))))), bvec3(bvec4(bvec3(bvec3(false, true, true)), false)))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))))), bvec3(bvec4(bvec3(bvec3(false, true, true)), false)))))), false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), false))), false)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))))), true))), false))))))), ! (! ((bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))))))))), true))), false)))))))))) && true))))) || false), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) || false, ! (_GLF_IDENTITY(! ((bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) || false), false || (! ((bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) || false))))), bool(bvec4((bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) || false, false, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0))) < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 0u)))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), false, _GLF_IDENTITY(false, bool(bool(false)))))))), true, true)))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ (83265u & 0u)) * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), 0u ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u)))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - 0u) + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base, workgroup_base)), workgroup_base)), _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u) : _GLF_FUZZED(workgroup_id))))) << 0u), (subgroup_id * subgroup_size) - 0u) + subgroup_local_id, 1u, 1u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat3(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED((mat4x2(542.203, 61.36, 879.867, 7.1, 4711.6570, 1.8, -342.616, 91.81) * vec4(-6719.9903, 8.8, -629.106, 377.703))))), 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y), true, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true, false, false)), true && (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true, false, false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || ((_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), ! (! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), true, false, false))))))))), (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), ! (! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), _GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), _GLF_IDENTITY(bool(bool(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), true && (bool(bool(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))), ! (! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false || (! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), _GLF_IDENTITY(bool(bvec2(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false)), (bool(bvec2(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false))) && true)), false || (! (false || (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))))) || false)))) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))), false)), _GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true, false, false))), ! (! (_GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true, false, false))), true && (true && (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), true, false, false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), true && (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))))), bool(_GLF_IDENTITY(bvec3(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false, true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false, true), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false, true), true)), true))))))))))))) && true)) && true)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), ! (! (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))) && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))), (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))), ! (! (false || (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, false, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, bool(bool(false))), false)))))))))) && true))))), _GLF_IDENTITY((false || (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.6)))))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), false || (bool(false))))), false)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false)))))), ((false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), false)), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true)))))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec2(bvec2(bool(bvec2(false, true)), true)))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), (uvec4(subgroup_size, 1u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))), subgroup_size)), subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), (uvec4(subgroup_size, 1u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))), subgroup_size)), subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), (uvec4(subgroup_size, 1u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))), subgroup_size)), subgroup_size)))))), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) - 0u), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) * 1u))))))))), _GLF_IDENTITY(0u | _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (uint(uvec3(subgroup_size, 1u, 1u))) << 0u)))))), uint(uint((((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))))))))), ~ (~ (0u | _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))))), uint(uint((((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mat2(1.0) * (vec2(vec3(injectionSwitch, 0.0))))).x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false) || (false)), ! (! (! (_GLF_IDENTITY(false, (false) || false) || (false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-5553.9541)), float(injectionSwitch[0]), bool(true))), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true), true))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))), false), true))), false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))), false), true))), false))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true), true))))))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))), false)), false, true))))), false, false)))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-974.189)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y)), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x))) / exp(length(vec3(0.0, 0.0, 0.0)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))) || _GLF_IDENTITY(false, (false) || false))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0)))))) - 0.0)), ! (! (injectionSwitch.x > injectionSwitch.y))), false), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(! (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), ! (! (bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(! (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))))), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), true && (! ((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), true && (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), true && (! ((! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), true && (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false))) || false), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))), false), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))), false), false, false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))) || false), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(((7941.7696 + 86.05) - 1431.5700)), _GLF_FUZZED((- 47.67))), bvec2(false, false))).y))), false), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), (false ? _GLF_FUZZED(vec4(-724.199, 432.496, 6.3, 91.82)) : _GLF_IDENTITY(vec4(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), sin(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), sin(0.0)) : _GLF_FUZZED(vec4(-5336.0185, -5.1, -6516.0544, -9.6)))))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(24.50), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(9.4, -3479.0245)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false, ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false, ((_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))))), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9301.1892)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))))) || false) || false))))) && true))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false, ((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))) || false, ((_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))))), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9301.1892)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))))) || false) || false))))) && true))))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))) || false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, sqrt(1.0), exp(0.0), 1.0, 0.0, round(length(normalize(1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))))), false, true)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u)))))) | (next_virtual_gid)), next_virtual_gid))], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> (0u | 0u)) + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat4x3(vec2(1.0, 1.0), 0.0, 0.0, abs(0.0), 1.0, 1.0, abs(1.0), abs(sqrt(0.0)), sin(0.0), 0.0, 0.0)), clamp(vec2(mat4x3(vec2(1.0, 1.0), 0.0, 0.0, abs(0.0), 1.0, 1.0, abs(1.0), abs(sqrt(0.0)), sin(0.0), 0.0, 0.0)), vec2(mat4x3(vec2(1.0, 1.0), 0.0, 0.0, abs(0.0), 1.0, 1.0, abs(1.0), abs(sqrt(0.0)), sin(0.0), 0.0, 0.0)), vec2(mat4x3(vec2(1.0, 1.0), 0.0, 0.0, abs(0.0), 1.0, 1.0, abs(1.0), abs(sqrt(0.0)), sin(0.0), 0.0, 0.0))))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6734.6776)), bvec2(true, false)), mix(vec2((mix(vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6734.6776)), bvec2(true, false)))[0], _GLF_FUZZED(-47.54)), vec2(_GLF_FUZZED((+ 5883.2900)), (mix(vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6734.6776)), bvec2(true, false)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(vec2(_GLF_FUZZED(-389.437), _GLF_IDENTITY(_GLF_FUZZED(78.74), clamp(_GLF_FUZZED(78.74), _GLF_FUZZED(78.74), _GLF_IDENTITY(_GLF_FUZZED(78.74), (_GLF_FUZZED(78.74)) * 1.0)))), vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[0], _GLF_FUZZED(-540.164)), vec2(_GLF_FUZZED(-57.94), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[1]), bvec2(false, true)))[0], _GLF_FUZZED(-6734.6776)), bvec2(true, false)))))[0], (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])), mix(vec2(_GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0], min((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0], (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0])), (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[1]), vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(78.99)), bvec2(false, false)))), min(vec2(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])), mix(vec2(_GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0], min((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0], (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0])), (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[1]), vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(78.99)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])), mix(vec2(_GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0], min((vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0], (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[0])), (vec2(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.4), max(_GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (false ? _GLF_FUZZED(-4181.8862) : _GLF_IDENTITY(-9.4, max(-9.4, -9.4))))))), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4))), (injectionSwitch)[1])))[1]), vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(78.99)), bvec2(false, false))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6734.6776)), bvec2(true, false)))))[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && (true)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), true), false))), true, true)))))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(float(-89473)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) * 1u) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)))) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), int(ivec4((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), 0, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62646))), 4)))), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), ((4)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) << 0) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | (0)))), 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(4), int(4))) | (2))) >> 0)), int(2))) | (4))), ((4)) ^ 0))))) | 0)) | 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(0, int(int(0)))) << 0)) | (_GLF_IDENTITY(0, int(int(0))))) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)))) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), int(ivec4((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), 0, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62646))), 4)))), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), ((4)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) << 0) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | (0)))), 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(4), int(4))) | (2))) >> 0)), int(2))) | (4))), ((4)) ^ 0))))) | 0)) | 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(0, int(int(0)))) << 0)) | (_GLF_IDENTITY(0, int(int(0))))) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)))) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), int(ivec4((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), 0, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62646))), 4)))), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), ((4)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) << 0) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | (0)))), 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(4), int(4))) | (2))) >> 0)), int(2))) | (4))), ((4)) ^ 0))))) | 0)) | 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(0, int(int(0)))) << 0)) | (_GLF_IDENTITY(0, int(int(0))))) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), min(_GLF_IDENTITY(((4)), (true ? ((4)) : _GLF_FUZZED(i))), ((4)))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)))) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), int(ivec4((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> 0)))) | (4))), ((4)) ^ 0))) | 0)), 0, 0, (0 >> _GLF_IDENTITY(int(5), int(5)))))) | 0, (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62646))), 4)))), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), ((4)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) << 0) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) | (0)))), 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(4), int(4))) | (2))) >> 0)), int(2))) | (4))), ((4)) ^ 0))))) | 0)) | 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (_GLF_IDENTITY(0, int(int(0)))) << 0)) | (_GLF_IDENTITY(0, int(int(0))))) << _GLF_IDENTITY(int(2), int(2))) | (4))), ((4)) ^ 0))) | 0)) | 0)))))))));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(trunc(5644.6076)) : injectionSwitch.x)) < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), false, false, false))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), false, false, false))), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))) || false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(faceforward(6626.0642, 4.7, _GLF_IDENTITY(-1942.2114, (-1942.2114) * 1.0))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))).y, 1.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(-7.8) : float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, 0.0), min(vec4(injectionSwitch.y, 1.0, 1.0, 0.0), vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tanh(vec2(5976.0453, 4609.1992))))).y))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.7) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || ((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
