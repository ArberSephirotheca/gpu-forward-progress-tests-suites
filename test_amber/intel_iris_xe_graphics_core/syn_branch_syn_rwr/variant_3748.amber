#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((gl_WorkGroupSize.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u ^ 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))), bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))), false)))) || false) && _GLF_IDENTITY(true, (true) && true)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true)) || false))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true))), true))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec3(-2148.5235, -98.42, 74.05).s)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true))) || false), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true))) || false), false, true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6520.4979)), bool(false))) > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true))))))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) || false)))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true)))))))))) && true, true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) || false)), true, true)))))))))) && true))) || false), true, true)))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) + 0u), workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)) + subgroup_local_id) - 0u);
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) - 0u, min((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) - 0u, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) - 0u)))) >> 0u);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), virtual_gid), (false ? _GLF_FUZZED(65233u) : _GLF_IDENTITY(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), virtual_gid), min(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), virtual_gid), clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), virtual_gid))))))], 4, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64), clamp((64), (64), (64))) << 0)), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) << 0)), ~ (~ ((_GLF_IDENTITY(64, (64) << 0)))))) | ((_GLF_IDENTITY(64, (64) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(66053)))) << 0)) << 0)) | (_GLF_IDENTITY(0, int(ivec2(0, 0))))))))), (false ? _GLF_FUZZED(95683) : _GLF_IDENTITY((_GLF_IDENTITY(64, (64) << 0)), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) << 0)), ~ (~ ((_GLF_IDENTITY(64, (64) << 0)))))) | ((_GLF_IDENTITY(64, (64) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))))))))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (subgroup_local_id) / _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u)))))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (subgroup_local_id) / _GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u)))))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1 < _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))
  {
   int i = 0;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) ^ 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1)) : _GLF_FUZZED(workgroup_base))) == read_2), (uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1)) : _GLF_FUZZED(workgroup_base))) == read_2)) | 0u) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, (4) >> 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) - (0 | 0), ((int(int(_GLF_IDENTITY(4, (4) >> 0)))) - (0 | 0)) ^ 0), ((int(int(_GLF_IDENTITY(4, (4) >> 0)))) - (0 | 0)) ^ 0)), _GLF_IDENTITY((int(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(34938)))) >> 0)))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) / 1)))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, min((4) >> 0, (4) >> 0)), ((4) >> 0) | 0), ((4) >> 0) << 0))))) ^ 0)), max((int(int(_GLF_IDENTITY(4, (4) >> 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, 0 + ((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, _GLF_IDENTITY(((4) >> 0) << 0, (((4) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(i)))) << 0) * 1)))))) ^ 0)), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, (true ? (4) >> 0 : _GLF_FUZZED(int(2.0))))))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, clamp((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) | 0) >> 0) << 0))))) ^ 0, _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))), 0 + (int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))))) ^ 0, max((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, (int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) * 1))) >> 0) << 0)))))))) ^ 0)), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> _GLF_IDENTITY(0, (0) | (0))) << 0))))) ^ 0)))) : _GLF_FUZZED(72672)), ~ (~ ((true ? ~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, clamp((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, _GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, max((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, clamp((4) >> 0, (4) >> 0, (4) >> 0)), ((4) >> 0) << 0))))) ^ 0, _GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))), (false ? _GLF_FUZZED(i) : (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))))) ^ 0)), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)), (0 | 0) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))))) ^ 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, ((4) >> 0) | (_GLF_IDENTITY((4) >> 0, ((4) >> 0) / 1))), ((4) >> 0) << 0))))) ^ 0, clamp((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) | (_GLF_IDENTITY(((4) >> 0), (((4) >> 0)) | 0))) << 0))))) ^ 0, _GLF_IDENTITY((int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)), max(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)), _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))))))) ^ 0, max((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ _GLF_IDENTITY(0, max(0, 0)), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0)), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0))), int(ivec4(~ (_GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, clamp((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, _GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, max((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0)), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0))), 0, 1, 1))))))) : _GLF_FUZZED(72672))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), 0 ^ (_GLF_IDENTITY(4, (4) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) >> 0))), 1 * ((int(_GLF_IDENTITY(4, (4) >> 0))))) | (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) | (4)), 0, 0), (ivec3(_GLF_IDENTITY(4, (4) | (4)), 0, 0)) << ivec3(0, 0, 0))))))) >> 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4), clamp((_GLF_IDENTITY(4, (4) - 0)), _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), ((4)) / 1), (4))), _GLF_IDENTITY((4), 0 + ((4))))) >> 0) << 0))))) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 + ((4))) >> _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) - ivec3(0, 0, 0))))))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, min(0, 0)) | _GLF_IDENTITY((_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> _GLF_IDENTITY(0, 0 | (0))) << 0))))) ^ 0)), (true ? (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> _GLF_IDENTITY(0, 0 | (0))) << 0))))) ^ 0)) : _GLF_FUZZED(i))), 1, 0, 0), (ivec4(0 | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0, (false ? _GLF_FUZZED(-98821) : (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0)))), 1, 0, 0)) | ivec4(0, 0, 0, 0)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 + ((4))) >> _GLF_IDENTITY(0, int(ivec3(0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) - (0 & -56592)))), ((4) >> 0) << 0))))) ^ 0), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(_GLF_IDENTITY(4, (4) >> 0))) | _GLF_IDENTITY(0, int(ivec2(0, 1))))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0)), int(_GLF_IDENTITY(ivec4(0 | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0)))) >> 0))))) ^ 0)), 1, 0, 0), (ivec4(0 | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) >> 0))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) << 0))))) ^ 0)), 1, 0, 0)) | ivec4(0, 0, 0, 0))))))) >> 0)))))))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))), true && (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))), true && (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))), true && (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))))), (! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))), true && (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))))))) && true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), false))))), ! (! (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true)))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false, false, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false || (! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))))))))), false, false, false))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false || (! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))))))))), false, false, false)))), (! ((bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false || (! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))))))))), false, false, false))))) || false))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false || (! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false || (! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) && true))))))))))), false || (! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))), false || (! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)))))))))))))))), false, false, false))))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), 0 + ((1))))) - 0)) ^ 0), (true ? read_1 + 1 : _GLF_FUZZED(min(subgroup_size, next_virtual_gid))))) ^ 0u) == read_2) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), min(~ (_GLF_IDENTITY(1, (1) / 1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (false ? _GLF_FUZZED(67445) : _GLF_IDENTITY(1, (1) / 1)))))))), _GLF_IDENTITY(4, (4) / 1), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) / 1));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED((- -7.0)), (_GLF_FUZZED((- _GLF_IDENTITY(-7.0, (-7.0) + _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), min(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))))) + 0.0)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4575.3299), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4575.3299), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4575.3299), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y)))) && true)) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), bool(bool(bool(! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))))))))), ! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(! (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, false)), false || (bool(bvec4((false), true, true, false))))))), bool(bool(bool(! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))))))))), ! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-2.6)), bool(false)))) > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))), bool(bool(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))), bool(bool(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))), bool(bool(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), true && (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false)))))))), bool(bool(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))))))))))))) && true)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), bool(bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (! (! (! (false))))))))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(13.75)), float(injectionSwitch.y), bool(true)))) - 0.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
