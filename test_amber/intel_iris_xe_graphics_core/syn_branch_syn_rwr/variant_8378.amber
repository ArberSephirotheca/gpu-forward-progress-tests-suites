#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat4x2 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 bvec2 _f3;
 bvec4 _f4;
 mat3x2 _f5;
 int _f6;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 bvec3 _f1;
 _GLF_struct_7 _f2;
 mat3x2 _f3;
 mat2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 float _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 uint _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat2x3 _f1;
 mat2 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 mat2x4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 float _f1;
 mat4x3 _f2;
 _GLF_struct_1 _f3;
 bvec3 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_9 {
 uint read_1;
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat4 _f1;
 uint next_virtual_gid;
 int _f2;
 mat3 _f3;
 bvec3 _f4;
 vec3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), true)), false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)], (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0)))))) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, cos(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, cos(0.0)))))) / 1.0))), injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-16727)))])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0)))))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0, 0.0, 0.0))), vec3(0.0, 1.0, cos(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, cos(0.0)))))) / 1.0))), injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-16727)))])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(39.06) : injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(626.692)), float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0)))))) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, cos(0.0))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), vec3(0.0, 1.0, cos(0.0)))))) / 1.0))), injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-16727)))])))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)], (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0)))))) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, cos(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, cos(0.0)))))) / 1.0))), injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-16727)))])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0)))), mix(float(_GLF_FUZZED(-50.95)), float(_GLF_IDENTITY((true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0)))), (false ? _GLF_FUZZED(51.49) : (true ? injectionSwitch[0] : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0))))))), bool(true))))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0, 0.0, 0.0))), vec3(0.0, 1.0, cos(0.0))), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(vec3(-8.1, -396.800, 3601.3050)) : _GLF_IDENTITY(vec3(0.0, 1.0, cos(0.0)), vec3(mat2(_GLF_IDENTITY(vec3(0.0, 1.0, cos(0.0)), _GLF_IDENTITY(mix(vec3((vec3(0.0, 1.0, cos(0.0)))[0], _GLF_FUZZED(86.06), (vec3(0.0, 1.0, cos(0.0)))[2]), vec3(_GLF_FUZZED(-2.5), (vec3(0.0, 1.0, cos(0.0)))[1], _GLF_FUZZED(197.778)), bvec3(false, true, false)), mat3(1.0) * (mix(vec3((vec3(0.0, 1.0, cos(0.0)))[0], _GLF_FUZZED(86.06), (vec3(0.0, 1.0, cos(0.0)))[2]), vec3(_GLF_FUZZED(-2.5), (vec3(0.0, 1.0, cos(0.0)))[1], _GLF_FUZZED(197.778)), bvec3(false, true, false))))), 0.0))))))))) / 1.0))), injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-16727)))])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 | (0))], (true ? _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(626.692)), float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(-33.04), max(_GLF_FUZZED(-33.04), _GLF_IDENTITY(_GLF_FUZZED(-33.04), (_GLF_FUZZED(-33.04)) / 1.0)))))) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, cos(0.0))), dot(vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, cos(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, exp(0.0), sin(0.0), 1.0))), 0.0, 0.0), vec3(0.0, 1.0, cos(0.0)))))) / 1.0))), injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-16727)))])))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-98.23), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(169.674)), bvec2(true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))).y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, true, false))) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, true)), false, false, true)), ! (! (bool(bvec4(bool(bvec3(false, false, true)), false, false, true))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true)))), true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, true)), false, false, true)), (bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true)))))))))))), false, false, true))) || false), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))), false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true))))))))), ! (! (bool(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))))) || false), bool(bvec4(false, false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-27.70, 8.6)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(134360u, 180321u, 149752u)) : _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0))).x)))) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u, clamp(_GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u, _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u, _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (uint(uvec2(workgroup_size, 1u))) / 1u))), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), (uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u, clamp(_GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u, _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u, _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (uint(uvec2(workgroup_size, 1u))) / 1u))), min((workgroup_size), (workgroup_size))), (workgroup_size))) >> 0u))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))) / 1u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)))), true, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, (true) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0))) + (injectionSwitch)).y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) ^ (subgroup_size)), (subgroup_size) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec2(1.0), mat4(1.0), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))), 1, mat3(1.0), bvec3(true), vec3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(87819) : 0)), int(ivec4(_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(87819) : 0)), (~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(87819), min(_GLF_FUZZED(87819), _GLF_IDENTITY(_GLF_FUZZED(87819), min(_GLF_FUZZED(87819), _GLF_FUZZED(87819))))) : 0))) * 1), 1, 1, 1)))))), min(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(87819) : 0)), int(ivec4(~ ((false ? _GLF_FUZZED(87819) : 0)), 1, 1, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(87819) : 0)), int(ivec4(~ ((false ? _GLF_FUZZED(87819) : _GLF_IDENTITY(0, (0) << 0))), 1, 1, 1)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : _GLF_IDENTITY(0, (0) | 0)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(87819), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(87819)), max(~ (_GLF_FUZZED(87819)), ~ (_GLF_FUZZED(87819)))))) : 0)), int(ivec4(~ ((false ? _GLF_FUZZED(87819) : 0)), 1, 1, 1)))))), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))) ? _GLF_FUZZED(87819) : 0)), int(ivec4(~ ((false ? _GLF_FUZZED(87819) : 0)), 1, 1, 1))))))))), _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(87819) : 0)), int(ivec4(~ ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(87819) : 0)), 1, 1, 1)))))), _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(87819) : 0)), int(ivec4(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), (_GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0), clamp((false ? _GLF_FUZZED(87819) : 0), (false ? _GLF_FUZZED(87819) : 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(87819) : 0, _GLF_IDENTITY((false ? _GLF_FUZZED(87819) : 0) | (_GLF_IDENTITY(false ? _GLF_FUZZED(87819) : 0, (false ? _GLF_FUZZED(87819) : 0) ^ 0)), ((false ? _GLF_FUZZED(87819) : 0) | (_GLF_IDENTITY(false ? _GLF_FUZZED(87819) : 0, (false ? _GLF_FUZZED(87819) : 0) ^ 0))) - 0)))))) - 0)), 1, 1, 1))))))))))))), _GLF_struct_3(ivec4(1), 1.0, mat4x3(1.0), _GLF_struct_1(1.0, mat2x3(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float((149835u == 37888u)))), float(_GLF_IDENTITY(1.0, (1.0) / cos(0.0))), bool(true)))), bvec3(true), mat4x2(1.0), mat2x4(1.0), ivec3(1)), bvec3(true), _GLF_struct_2(vec3(1.0), 1u, mat4x2(1.0))), _GLF_struct_5(_GLF_struct_4(uvec3(1u), 1.0)), _GLF_struct_6(mat3x2(1.0)), _GLF_struct_8(mat3x2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), _GLF_struct_7(mat4x2(1.0), ivec2(1), mat4x3(1.0), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(27.49)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(8.6)), float(mix(float(_GLF_FUZZED(27.49)), float(injectionSwitch.x), bool(true))), bool(true)))))) < injectionSwitch.y)), true)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), false))))), bvec4(true), mat3x2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1), mat3x2(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))), mat2x3(1.0)));
 atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], uint(_GLF_struct_replacement_9.read_1 + _GLF_IDENTITY(1, (1) << 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-80989) : max(4, 4))), ~ (~ (_GLF_IDENTITY(max(4, 4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-80989) : max(4, 4))))))), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), max(0u + (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))))) < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | (subgroup_local_id + 1))), max(0u + (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u | (subgroup_local_id + 1)))))) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), subgroup_size))))), (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(false, (false) || false) || (! ((_GLF_DEAD(false))))))))))), ! (_GLF_IDENTITY(! (bool(false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false))))), _GLF_IDENTITY(false, (false) || false) || (! ((_GLF_DEAD(false))))))))), (! (bool(false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(false, (false) || false) || (! ((_GLF_DEAD(false)))))))))) || false))), (bool(false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), false || ((! (_GLF_IDENTITY(false, (false) && true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), false, false)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], uint(_GLF_struct_replacement_9.read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false))), false, false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false))), false, false)), false, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false))), false, false)), false, false))))), true, true)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5559.3130))), (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false)))))), ((! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5559.3130))), (injectionSwitch.x) + 0.0))) > injectionSwitch.y)), false), false, false))))))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(3.8), (true ? injectionSwitch.x : _GLF_FUZZED(3.8)) - 0.0)), max((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(3.8), (true ? injectionSwitch.x : _GLF_FUZZED(3.8)) - 0.0)), (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(3.8), (true ? injectionSwitch.x : _GLF_FUZZED(3.8)) - 0.0))))) > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch.x) + 0.0, 0.0 + ((injectionSwitch.x) + 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, exp(0.0))), dot(vec2(1.0, 0.0), vec2(0.0, exp(0.0)))), cos(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(299.479)))), float(_GLF_FUZZED(float(false))), bool(false))), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0), (mat4(_GLF_IDENTITY((injectionSwitch.x) + 0.0, 0.0 + ((injectionSwitch.x) + 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, exp(0.0))), dot(vec2(1.0, 0.0), vec2(0.0, exp(0.0)))), cos(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)) + _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(3.8)), max((true ? injectionSwitch.x : _GLF_FUZZED(3.8)), (true ? injectionSwitch.x : _GLF_FUZZED(3.8))))) > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y), true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))))) > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4845.8305)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))), injectionSwitch.y)))) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, (_GLF_IDENTITY((injectionSwitch.x) + 0.0, max(_GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0)), (injectionSwitch.x) + 0.0))) / sqrt(1.0))))) > injectionSwitch.y))), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))))) + 0.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(155.159) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))))))), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true, true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_struct_replacement_9.read_1) - 0u) + 1 == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_struct_replacement_9.read_1) - 0u) + 1 == read_2), (false ? _GLF_FUZZED((subgroup_size / subgroup_size)) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_struct_replacement_9.read_1) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) - 0u) + 1 == read_2), 0u + (uint(_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_struct_replacement_9.read_1) - 0u) + 1 == read_2))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_struct_replacement_9.read_1) - 0u) + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_struct_replacement_9.read_1) - 0u) + 1 == read_2, (_GLF_IDENTITY(_GLF_struct_replacement_9.read_1, (_GLF_struct_replacement_9.read_1) - 0u) + 1 == read_2) || false))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
