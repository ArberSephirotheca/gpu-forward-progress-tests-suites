#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat2x4 _f0;
 int _f1;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 uint _f1;
 uvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec4 _f1;
 int _f2;
 ivec2 _f3;
 bvec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec3 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 uint subgroup_size;
 _GLF_struct_3 _f1;
 uvec2 _f2;
 ivec2 _f3;
 vec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-43330))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-43330))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-43330))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-43330))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-43330))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-43330))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-43330))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)), bool(bvec4(! (_GLF_IDENTITY(! (false), (! (false)) && true)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), ! (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(bvec4(true), gl_SubgroupSize, _GLF_struct_3(_GLF_struct_0(uvec4(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u))))), ivec4(1), 1, ivec2(1), bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, false))), bool(bvec2(bool(bool(bvec2(true, false))), false)))))))))), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(69658u, 192392u, 184457u)) : _GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (true ? ~ (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | ((uvec3(1u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(192384u, 185192u, 69233u)), min(_GLF_FUZZED(uvec3(_GLF_IDENTITY(192384u, (192384u) ^ 0u), 185192u, _GLF_IDENTITY(69233u, (69233u) >> 0u))), _GLF_FUZZED(uvec3(192384u, 185192u, 69233u))))))))))), _GLF_struct_1(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (~ _GLF_IDENTITY((uvec4(1u)), clamp(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u), (((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), ((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((uvec4(1u)), (_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | (_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY((_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))), min((_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))), (_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))))))))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) ^ (~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u)))))))) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), clamp(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u), (((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), ((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((uvec4(1u)), (_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) | (_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY((_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))), min((_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))), (_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))))))))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) ^ (~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u)))))))) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)))))), (true ? ~ _GLF_IDENTITY((uvec4(1u)), clamp(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u), ((_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), ((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((uvec4(1u)), (_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(39389u, 80696u, 65727u, 96787u)) : ((uvec4(1u))))) | (_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY((_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))), min((_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ _GLF_IDENTITY((39512u), uint(uint((39512u)))))))), _GLF_IDENTITY(152909u, (152909u) | (152909u))))))), (_GLF_IDENTITY(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, _GLF_IDENTITY(152909u, max(_GLF_IDENTITY(152909u, clamp(152909u, 152909u, 152909u)), _GLF_IDENTITY(152909u, (_GLF_IDENTITY(152909u, 0u + (152909u))) - 0u))))), max(true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, 39512u, 152909u)), true ? (uvec4(1u)) : _GLF_FUZZED(uvec4(15937u, 129937u, _GLF_IDENTITY(39512u, max(39512u, _GLF_IDENTITY(39512u, ~ (~ (39512u))))), 152909u))))))))))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((uvec4(1u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), min(_GLF_IDENTITY((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), ~ (~ ((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), ((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), min((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(1u)), (uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) ^ (~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(_GLF_IDENTITY(1u, max(1u, 1u)))), (uvec4(1u)))))))) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)))))) : _GLF_FUZZED(uvec4(101855u, 34903u, 128932u, 178247u))))))) - uvec4(0u, 0u, 0u, 0u)), uvec4(1u))), (_GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(uvec4(1u), ~ (~ _GLF_IDENTITY((uvec4(1u)), clamp(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u), ~ (~ (((uvec4(1u))) >> uvec4(0u, 0u, 0u, 0u))))), (uvec4(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), min((uvec4(1u)) | uvec4(0u, 0u, 0u, 0u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (1u) >> 0u))), clamp((uvec4(1u)), (_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))), (uvec4(1u))))), (~ (_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), (uvec4(1u)), (uvec4(1u)))))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)), 0u)))))))), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))) | (uvec4(1u)))))) >> uvec4(0u, 0u, 0u, 0u)))), mat3x4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1)), ((ivec3(1))) << ivec3(0, 0, 0)), ivec3(0, 0, 0) ^ (_GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec3(_GLF_IDENTITY(ivec3((ivec3(1))), ~ (~ (ivec3(_GLF_IDENTITY((ivec3(1)), (_GLF_IDENTITY((ivec3(1)), _GLF_IDENTITY(ivec3(0, 0, 0), clamp(_GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(1, 1, 1) * (ivec3(0, 0, 0))), _GLF_IDENTITY(ivec3(0, 0, 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(58182, -29798, -84609)) : ivec3(0, 0, 0))))) + ((ivec3(1))))) - ivec3(0, 0, 0)))))))))) - _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0) ^ (_GLF_IDENTITY(ivec3(0, 0, 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec3(0, 0, 0) : _GLF_FUZZED((vec4(-3317.1509, -656.923, -13.79, -826.265) , ivec3(-36140, -16678, 11364))))))))), ((_GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) - ivec3(0, 0, 0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), ((ivec3(1))) ^ ivec3(0, 0, 0)) - ivec3(0, 0, 0)), (true ? _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), ((ivec3(1))) ^ ivec3(0, 0, 0)) - ivec3(0, 0, 0)) : _GLF_FUZZED(ivec3(-42421, 52518, -44854))))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1)), _GLF_IDENTITY(((ivec3(1))) << ivec3(0, 0, 0), ivec3(0, 0, 0) ^ (((ivec3(1))) << ivec3(0, 0, 0)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec3(_GLF_IDENTITY(ivec3((ivec3(1))), ~ (~ (ivec3((ivec3(1)))))))))) - ivec3(0, 0, 0))), ((_GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) - ivec3(0, 0, 0)))) | ((_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)))))) >> ivec3(0, 0, 0)) | (ivec3(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))) ? -93600 : 29635)) : (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), ((3)) | (_GLF_IDENTITY((3), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3))))))) << 0)))))))))), (ivec3(0, 0, 0) ^ ivec3(0, 0, 0)) ^ (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1)), ((ivec3(1))) << ivec3(0, 0, 0)), ivec3(0, 0, 0) ^ (_GLF_IDENTITY((ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((ivec3(1))), min(ivec3((ivec3(1))), _GLF_IDENTITY(ivec3((ivec3(1))), ~ (~ (ivec3((ivec3(1)))))))), ~ (~ (ivec3((ivec3(1)))))))))) - ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0))), ((_GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) - ivec3(0, 0, 0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))) | ivec3(0, 0, 0)), (ivec3(1)) - ivec3(0, 0, 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1)), ((ivec3(1))) << ivec3(0, 0, 0)), ivec3(0, 0, 0) ^ (_GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec3(_GLF_IDENTITY(ivec3((ivec3(1))), ~ (~ (ivec3((ivec3(1)))))))))) - ivec3(0, 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 1))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, (1 ^ 0)))), (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) - ivec3(0, 0, 0)))) | _GLF_IDENTITY(((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), max((ivec3(1)), (ivec3(1)))) - ivec3(0, 0, 0)))), _GLF_IDENTITY(min(((_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)))), ((_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0))))), (min(((_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)))), ((_GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)))))) << ivec3(0, 0, 0))))) >> ivec3(0, 0, 0)) | (ivec3(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), (false ? _GLF_FUZZED((true ? -93600 : 29635)) : (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), ((3)) | (_GLF_IDENTITY((3), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3))))))) << 0))), 0 + (_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, _GLF_IDENTITY(_GLF_IDENTITY((3), ((3)) | (_GLF_IDENTITY((3), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((3), (_GLF_IDENTITY((3), ~ (~ ((3))))) | (_GLF_IDENTITY((3), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3))))))), (_GLF_IDENTITY((3), ((3)) | (_GLF_IDENTITY((3), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3)))))))) | 0), _GLF_IDENTITY((3), ((3)) | (_GLF_IDENTITY(_GLF_IDENTITY((3), ~ (_GLF_IDENTITY(~ ((3)), ~ (~ (~ ((3))))))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3)))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3)))), clamp((0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3)))), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3)))), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((3), clamp((3), (3), (3))))))) * 1)))))) << 0)))))))))))))), _GLF_struct_2(mat2x4(1.0), 1)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) + 0u)) - 0u), (min(1u, 1u)) | (_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), ~ (~ (min(1u, 1u))))) | (_GLF_IDENTITY(min(1u, 1u), 0u ^ (min(1u, 1u)))))))), 0u))), 1u)), max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) + 0u)) - 0u), (min(1u, 1u)) | (_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), ~ (~ (min(1u, 1u))))) | (_GLF_IDENTITY(min(1u, 1u), 0u ^ (min(1u, 1u)))))))), 0u))), 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) + 0u)) - 0u), (min(1u, 1u)) | (_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), ~ (~ (min(1u, 1u))))) | (_GLF_IDENTITY(min(1u, 1u), 0u ^ (min(1u, 1u)))))))), 0u))), 1u)), max(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) + 0u)) - 0u), (min(1u, 1u)) | (_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), ~ (~ (min(1u, 1u))))) | (_GLF_IDENTITY(min(1u, 1u), 0u ^ (min(1u, 1u)))))))), 0u))), 1u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (min(1u, _GLF_IDENTITY(1u, (1u) * 1u))) + 0u)) - 0u), (min(1u, 1u)) | (_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), ~ (~ (min(1u, 1u))))) | (_GLF_IDENTITY(min(1u, 1u), 0u ^ (min(1u, 1u)))))))), 0u))), 1u))))))), max(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (min(1u, 1u)) | _GLF_IDENTITY((min(1u, 1u)), (false ? _GLF_FUZZED(148799u) : (min(1u, 1u)))))), 0u))), 1u))), uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) * 1u)), (min(1u, 1u)) | (min(1u, 1u)))), 0u))), 1u))))), (uvec2(1u)) + uvec2(0u, 0u)), ivec2(1), vec4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(887.172), float(mat3(_GLF_FUZZED(887.172), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 0.0, 1.0)))), vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-4.8, clamp(-4.8, -4.8, -4.8))), float(mat3((-4.8), sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (true ? dot(vec2(0.0, 1.0), vec2(1.0, 0.0)) : _GLF_FUZZED(9821.3714))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0, 0.0, 0.0, 0.0))))), 0.0)))), (_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (true ? dot(vec2(0.0, 1.0), vec2(1.0, 0.0)) : _GLF_FUZZED(9821.3714))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) / 1.0))))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0, 1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3030.4815)), _GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0), float(0.0))), bool(true))))))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0, 1.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0, 1.0)))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), float(vec3(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], (_GLF_IDENTITY((vec2(0.0, 1.0))[0], (false ? _GLF_FUZZED(-637.031) : (vec2(0.0, 1.0))[0]))) - 0.0), _GLF_FUZZED(9905.5924)), vec2(_GLF_FUZZED(float(false)), (vec2(0.0, 1.0))[1]), bvec2(false, true))), vec2(1.0, 0.0)), 1.0, 1.0))))), float(_GLF_FUZZED((+ -7.8))), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED((-2.3 - -3.0))), (false ? _GLF_FUZZED(68.81) : float(_GLF_FUZZED((-2.3 - -3.0))))), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 0.0)), (false ? _GLF_FUZZED(639.209) : dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), float(vec3(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-93.07))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), 1.0), vec2(1.0, 0.0)), 1.0, 1.0))))), min(min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))), 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), vec2(1.0, 0.0)))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0, 1.0)))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_FUZZED((-2.3 - -3.0))), max(float(_GLF_FUZZED((-2.3 - -3.0))), _GLF_IDENTITY(float(_GLF_FUZZED((-2.3 - -3.0))), max(float(_GLF_FUZZED((-2.3 - -3.0))), float(_GLF_FUZZED((-2.3 - -3.0))))))), bool(false))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))) + (_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(79.82)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))))), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(26.28)), float(injectionSwitch.y), bool(true))))) && (false)) ? _GLF_FUZZED(5.8) : 1.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0))), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.7))), 0.0)))))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0, 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0, 1.0)))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), float(vec3(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(-2.4))))), 1.0, 1.0))))), float(_GLF_FUZZED((-2.3 - -3.0))), bool(false))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)))), float(vec3(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec2(1.0, 0.0)), 1.0, 1.0)))))))), 1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), bool(bvec3(! ((false) || false), true, false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), false, false)))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true), true, true)))))))), bool(bvec3(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, false)))) && true) || false))), true))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.8)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(1.9)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false, true)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-642.657) : injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), mix(vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(-7.5)), vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)))[1]), bvec2(true, true)))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), false)))) || false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true))))), false, _GLF_IDENTITY(false, true && (false)), false)))), false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(false, false || (false)))))))), true, false, _GLF_IDENTITY(true, false || (true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, true, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x))) / 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))), (false ? _GLF_FUZZED(-44.69) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x))))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))))) - 0.0) + 0.0))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0), clamp(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0), ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0), ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0)))))], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch))[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0), clamp(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0), ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0), ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0), 0, 0)))))], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))) || false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-70.47)))) - sin(0.0))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, false, false))), false))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-29.02, 47.10, 4.9, -7.8)))))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))) + (uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, (1u) | (1u)))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), clamp(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (uvec4(gl_WorkGroupID, 1u)) - uvec4(0u, 0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)), uvec3(uvec4(gl_WorkGroupID, 1u)))), uvec3(uvec4(gl_WorkGroupID, 1u)))), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))))), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + _GLF_IDENTITY((uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))), uvec3(0u, 0u, 0u) | ((uvec3(uvec4(gl_WorkGroupID, 1u)))))), ~ (~ (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))))))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), max(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u)))))), 1u)))))), gl_WorkGroupID)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(0u, 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u))))), gl_WorkGroupID)).x, max(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (uvec3(uvec4(gl_WorkGroupID, 1u))))), gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(41146u, 122198u, 22400u)) : uvec3(0u, 0u, 0u))) + (uvec3(uvec4(gl_WorkGroupID, 1u))))), gl_WorkGroupID)).x)) : _GLF_FUZZED((_GLF_IDENTITY(-- subgroup_id, 0u | (-- subgroup_id))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_local_id))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-14.89)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5793.6504), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(372.740)), bvec2(true, false))).x, mix(float(_GLF_FUZZED(-4861.8680)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5793.6504), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(372.740)), bvec2(true, false))).x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((-66.74 * -1.8))), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(vec3(0.0, 1.0, 0.0)))), injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(952.399)), bool(false)))) / 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(952.399)), bool(false)))) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(952.399)), bool(false)))) / 1.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), mix(float(_GLF_FUZZED((- -6284.2642))), float(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(true))), float(_GLF_FUZZED(952.399)), bool(false)))) / 1.0) > injectionSwitch.y) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(952.399)), bool(false)))) / 1.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(952.399)), bool(false)))) / 1.0) > injectionSwitch.y) && true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))))), (true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), bool(_GLF_IDENTITY(bvec2(bool((false) || false), true), bvec2(bvec3(bvec2(bool((false) || false), true), false))))))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))) && true))), (true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), bool(_GLF_IDENTITY(bvec2(bool((false) || false), true), bvec2(bvec3(bvec2(bool((false) || false), true), false))))))))))) || false)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, false)))), (bool(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, false, false))))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, bool(bool((! (injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, abs(1.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, abs(1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, tan(sqrt(0.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)) || false, false, false, true)), ! (! (bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)) || false, false, false, true))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(88.97)), bool(false))), (injectionSwitch.y))) - 0.0)))), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))), false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || _GLF_IDENTITY((! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))), bool(bvec2((! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), true)))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true && (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))) && true)) && true))))))))))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_4.subgroup_size + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(167357u) : subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_4.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_4.subgroup_size, clamp((subgroup_local_id + 1) % _GLF_struct_replacement_4.subgroup_size, (subgroup_local_id + 1) % _GLF_struct_replacement_4.subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_size, max(_GLF_struct_replacement_4.subgroup_size, _GLF_struct_replacement_4.subgroup_size)), (_GLF_struct_replacement_4.subgroup_size) | (_GLF_struct_replacement_4.subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(4, 4, 4)), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, read_1 + 1)), read_1 + 1))), 4, 64, 4);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))])), 4, 64, _GLF_IDENTITY(0, (0) / 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_size, (_GLF_struct_replacement_4.subgroup_size) | (_GLF_struct_replacement_4.subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(abs(abs(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : abs(abs(vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (_GLF_IDENTITY(1, (1) ^ 0)), ~ (1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1, (read_1) << 0u) + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))))) == read_2) + 1, clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY(_GLF_IDENTITY((1), 0 | ((1))) ^ 0, ((1) ^ 0) + 0)) | 0))), ~ (1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))) | (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))))) == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (_GLF_IDENTITY(1, (1) ^ 0)), ~ (1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))) | (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))))) == read_2) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (_GLF_IDENTITY(1, (1) ^ 0)), ~ (1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)))), (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))) | (~ (~ (_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1))))))) == read_2) + _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(46673u, (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1), (_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(_GLF_IDENTITY(46673u, uint(uvec2(46673u, 1u))), (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1), ((_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(46673u, (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1, (true ? uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(_GLF_IDENTITY(46673u, uint(uint(46673u))), (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(_GLF_IDENTITY(46673u, (46673u) | (46673u)), (_GLF_IDENTITY(46673u, (46673u) | (46673u))) >> 0u), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1 : _GLF_FUZZED(num_workgroup))))) ^ 0u)) | ((uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(46673u, (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), min((read_2), (read_2)))) | ((read_2)))) - 0u) - 0u)) + 1))), (_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(46673u, (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1), (_GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(_GLF_IDENTITY(46673u, uint(uvec2(46673u, 1u))), (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1), ((_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(46673u, (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1, (true ? uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(_GLF_IDENTITY(46673u, uint(uint(46673u))), (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(_GLF_IDENTITY(46673u, (46673u) | (46673u)), (_GLF_IDENTITY(46673u, (46673u) | (46673u))) >> 0u), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), (read_2) - 0u)) + 1 : _GLF_FUZZED(num_workgroup))))) ^ 0u)) | ((uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec3(128741u, _GLF_IDENTITY(46673u, (_GLF_IDENTITY(46673u, max(_GLF_IDENTITY(46673u, (46673u) | (46673u)), _GLF_IDENTITY(46673u, 1u * (46673u))))) / 1u), 23145u)[1]) : read_2)), _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), min((read_2), (read_2)))) | ((read_2)))) - 0u) - 0u)) + 1)))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) - 0u, ((uint(read_1 + 1 == read_2) + 1) - 0u) - 0u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u), (_GLF_IDENTITY(read_1, (read_1) | 0u)) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) + 1 == read_2) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1), ((uint(read_1 + 1 == read_2) + 1)) * 1u) - 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u), uint(uvec3(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u), 0u, 0u)))) * 1u)), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)), 0u + ((_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - 0u)))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) - _GLF_IDENTITY(0u, 0u ^ (0u))))))))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), false, true, true)))), (false) || _GLF_IDENTITY(false, (false) || false)))))), false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true)))))) && true)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false)))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), ! (! (false || (_GLF_IDENTITY(false, true && (false)))))), false, true, true)))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))))), false)))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false || (false)), (false) || _GLF_IDENTITY(false, (false) || false)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, (false) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (false || (false)) && true)))), false, true, true)))), (false) || _GLF_IDENTITY(false, (false) || false)))))), false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))), next_virtual_gid)))), _GLF_IDENTITY(max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))), (_GLF_IDENTITY(max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))), (max(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)) : _GLF_FUZZED(next_virtual_gid))))) | (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)))))) | _GLF_IDENTITY(0u, (0u) + 0u)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), false || (bool(bool(read_1 + 1 == read_2))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false)))))), bool(bvec3(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false)))))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), false), false)))), false || (bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), false), false))))))))), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((false), false, false)), bvec3(bvec3(bvec3(bvec3((false), false, false))))), false)))))))), false), false)))), false || (bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))), false), false))))))))), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false)))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false)))))), true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(398.804)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-64.63)), bool(false))))).y), bool(true)))))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-79.86))) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))))
          barrier();
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.0)))))))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
