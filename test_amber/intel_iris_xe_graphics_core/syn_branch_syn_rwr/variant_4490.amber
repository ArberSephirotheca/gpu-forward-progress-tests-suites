#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_id)))) + 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(float(108362u)))), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false))))))), ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.6, -8.6)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.8)), bool(false))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(448.416), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(448.416), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), (float(mat3(_GLF_FUZZED(448.416), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))) * _GLF_ONE(1.0, injectionSwitch.y)))), bool(false))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)), mix(vec2(_GLF_FUZZED((9908.1458)), _GLF_FUZZED(vec3(-8.0, -6652.2525, -5.2).g)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)))[0], float(mat2x4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)))[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(448.416), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(448.416), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), (float(mat3(_GLF_FUZZED(448.416), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))) * _GLF_ONE(1.0, injectionSwitch.y)))), bool(false))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)), mix(vec2(_GLF_FUZZED((9908.1458)), _GLF_FUZZED(vec3(-8.0, -6652.2525, -5.2).g)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)))[0], float(mat2x4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)))[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), min(sqrt(vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)))) * (injectionSwitch)))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y)))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(0.4)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(-3723.3471), (injectionSwitch)[1]), bvec2(false, true))).y)), true))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], clamp(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (buf[virtual_gid]) | (buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) / (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) ^ 0u))))), (true ? (buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), max(_GLF_IDENTITY(~ (uint(2u)), 0u | (~ (uint(2u)))), ~ (uint(2u))))))) / (1u ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u ^ (0u)) | (0u)))))))) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (buf[virtual_gid]) | (buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) / (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) ^ 0u))))), (true ? (buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), max(_GLF_IDENTITY(~ (uint(2u)), 0u | (~ (uint(2u)))), ~ (uint(2u))))))) / (1u ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u ^ (0u)) | (0u)))))))) : _GLF_FUZZED(workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (buf[virtual_gid]) | (buf[virtual_gid])), _GLF_IDENTITY((buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) / (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) ^ 0u))))), (true ? (buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), max(_GLF_IDENTITY(~ (uint(2u)), 0u | (~ (uint(2u)))), ~ (uint(2u))))))) / (1u ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u ^ (0u)) | (0u)))))))) : _GLF_FUZZED(workgroup_size)))))))) << 0u), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0u, (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0u, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0u) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0u, ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (uvec3(virtual_gid, 1u, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0u))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))], _GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) * (0u ^ 1u))) | (_GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))) | ((buf[virtual_gid]))))) | (buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) * (0u ^ 1u)), 0u ^ (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) * (0u ^ 1u)))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) * (0u ^ 1u)) : _GLF_FUZZED(num_workgroup)))) | ((buf[virtual_gid]))) | (buf[virtual_gid])) * 1u)))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), (uint(uvec2(virtual_gid, 0u))) / 1u)), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), min(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))) << 0u), virtual_gid))], clamp(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), min(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))))))], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(191391u)))]))) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) / (1u ^ 0u))))), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]) | (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))), (false ? _GLF_FUZZED(virtual_gid) : (buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]) | (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, 1u)), uint(uvec3(uint(uvec3(virtual_gid, 1u, 1u)), 0u, 1u))))) | 0u), virtual_gid, virtual_gid))))), (_GLF_IDENTITY(~ (clamp(virtual_gid, virtual_gid, virtual_gid)), ~ (~ (~ (clamp(virtual_gid, virtual_gid, virtual_gid))))))))))], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]) | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]), clamp(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]) | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]), ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]) | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))])) | ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]) | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]))), _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]) | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]), 0u + ((buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]) | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]))), (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))]) | (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ _GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), min(_GLF_IDENTITY((~ (clamp(virtual_gid, virtual_gid, virtual_gid))), ((~ (clamp(virtual_gid, virtual_gid, virtual_gid)))) | ((~ (clamp(virtual_gid, virtual_gid, virtual_gid))))), (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))])))), clamp(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((true ? _GLF_IDENTITY(2u, 0u ^ (2u)) : _GLF_FUZZED(workgroup_base)), ((true ? _GLF_IDENTITY(2u, 0u ^ (2u)) : _GLF_FUZZED(workgroup_base))) | 0u)))))), _GLF_IDENTITY(uint(2u), (uint(2u)) / (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u)))), max((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((true ? _GLF_IDENTITY(2u, 0u ^ (2u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) << 0u)), ((true ? _GLF_IDENTITY(2u, 0u ^ (2u)) : _GLF_FUZZED(workgroup_base))) | 0u)))))), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), 0u ^ (uint(2u)))) / (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u)))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((true ? _GLF_IDENTITY(2u, 0u ^ (2u)) : _GLF_FUZZED(workgroup_base)), ((true ? _GLF_IDENTITY(2u, 0u ^ (2u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) | 0u)))))), _GLF_IDENTITY(uint(2u), (uint(2u)) / (_GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u))))))), _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : 0u)))], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)) | 0u))), clamp(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u)], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u, 1u * (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u, ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u) | ((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u)))))], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)) | 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) / 1u)))) ^ 0u)], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)) | 0u)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u)], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) >> 0u)))) + 0u)) | 0u))), (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u)], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u)) | 0u)))) >> 0u)))) | (buf[virtual_gid])))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid)), (virtual_gid) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.1) : 0.0)), 0.0)), injectionSwitch.x))), virtual_gid))], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << (_GLF_IDENTITY(0u, (0u) - (1u ^ 1u)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), (_GLF_IDENTITY((uint(2u)), ~ (~ ((uint(2u)))))) | 0u) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u)), ~ (~ ((_GLF_IDENTITY(1u, (1u) | 0u))))))))) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u)))))), 0u))))))), _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(subgroup_local_id)))) | (buf[virtual_gid])))), 0u ^ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.1) : 0.0)), 0.0)), injectionSwitch.x))), virtual_gid))], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), (_GLF_IDENTITY((uint(2u)), ~ (~ ((uint(2u)))))) | 0u) / _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u)), ~ (~ ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u)), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u))) >> 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u)))) | (_GLF_IDENTITY(1u, (1u) | 0u))) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, (0u | 0u))))))), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (_GLF_IDENTITY(1u | 1u, min(_GLF_IDENTITY(1u | 1u, (1u | 1u) - 0u), 1u | 1u))))) | 0u)) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | 0u, ((1u) | 0u) | ((1u) | 0u))))) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, (0u | 0u)))))))) << 0u))))), _GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (true ? _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))) : _GLF_FUZZED(subgroup_id)))))], (buf[virtual_gid]) | (buf[virtual_gid])))))), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.1) : 0.0)), 0.0)), injectionSwitch.x))), virtual_gid))], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)) << 0u), _GLF_IDENTITY((uint(2u)), (_GLF_IDENTITY((uint(2u)), ~ (~ ((uint(2u)))))) | 0u) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)), ((_GLF_IDENTITY(1u, (1u) / 1u))) ^ 0u) - 0u)) / (1u | 1u))) | 0u)) | (_GLF_IDENTITY(1u, (1u) | 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u))))))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))), 0u ^ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.1) : 0.0)), 0.0)), injectionSwitch.x))), virtual_gid))], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), (_GLF_IDENTITY((uint(2u)), _GLF_IDENTITY(~ (~ ((uint(2u)))), uint(uvec4(_GLF_IDENTITY(~ (~ ((uint(2u)))), (~ (~ ((uint(2u))))) | (~ (~ ((uint(2u)))))), 1u, 1u, 1u))))) | 0u) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u)) * (0u | 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u)), uint(uvec2((_GLF_IDENTITY(1u, (1u) | 0u)), 1u))), (_GLF_IDENTITY(1u, (1u) | 0u))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) - (0u ^ 0u))))))), ((buf[virtual_gid]) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u), uint(2u))), _GLF_IDENTITY((uint(2u)), (_GLF_IDENTITY((uint(2u)), ~ (~ ((uint(2u)))))) | 0u) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / (1u | 1u))) | 0u)) | (_GLF_IDENTITY(1u, (1u) | 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u))))))) + 0u)), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY((buf[virtual_gid]), 1u * ((buf[virtual_gid])))))))), 0u))) + _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) / 1u)))))), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((4), 0, 1, 0), (ivec4((4), 0, 1, 0)) >> ivec4(0, 0, 0, 0))), max(int(_GLF_IDENTITY(ivec4((4), 0, 1, 0), (ivec4((4), 0, 1, 0)) >> ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4((4), 0, 1, 0), (ivec4((4), 0, 1, 0)) >> ivec4(0, 0, 0, 0)))))) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), _GLF_IDENTITY(int(ivec2(~ _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) - 0), 0 | ((0)))))), 1)), (true ? int(ivec2(~ (0), 1)) : _GLF_FUZZED(87904)))))), int(ivec2((4) ^ 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((4) ^ 0, int(ivec2((4) ^ 0, 0))), 0 ^ (_GLF_IDENTITY((4) ^ 0, int(ivec2((4) ^ 0, 0)))))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY((4) ^ 0, clamp((4) ^ 0, _GLF_IDENTITY((4), ((4)) | _GLF_IDENTITY(((4)), (_GLF_IDENTITY(((4)), (((4))) << (0 & 36490))) | 0)) ^ 0, _GLF_IDENTITY((4), ((_GLF_IDENTITY(4, 0 | (4)))) ^ 0) ^ 0)), (_GLF_IDENTITY(4, 0 | (4))) ^ 0)))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(4, (4) ^ 0)), 0)), 0 ^ (int(ivec2((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) ^ 0)), 0))))) | (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? buf[virtual_gid] : _GLF_FUZZED(bitfieldExtract(virtual_gid, -39799, -34647)))), 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2) + 1, (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == read_2) + 1))))) | 0u), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(read_1), uint(_GLF_IDENTITY(uvec2(_GLF_FUZZED(read_1), 1u), min(uvec2(_GLF_FUZZED(read_1), 1u), uvec2(_GLF_FUZZED(read_1), 1u))))) : _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2) + 1) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2))))))) << (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) ^ (0u | 0u)) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) | 0u, ((uint(read_1 + 1 == read_2) + 1) | 0u) ^ (0u | 0u)))), ((false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) | 0)) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2))))))) << (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) ^ (0u | 0u)) + 1, _GLF_IDENTITY((uint(read_1 + 1 == read_2) + 1) | 0u, ((uint(read_1 + 1 == read_2) + 1) | 0u) ^ (0u | 0u))))) + (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), clamp((false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) + 0), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), max((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))) + 1, (uint(read_1 + 1 == read_2) + 1) | 0u)), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), min(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, true && (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size))), read_2)))))))) + 1, (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))) == read_2), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))) == read_2), min(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))) == read_2), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))) == read_2), (uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0))), 0 + (int(_GLF_IDENTITY(ivec3(1, 0, 1), (_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) - ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))))) == read_2)) / 1u))))) + 1) | 0u)), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), int(int(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))), 0u ^ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), int(int(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2)))))) + 1, (uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))) | 0u)))), uint(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(read_1, 0u)), min(_GLF_IDENTITY(uint(uvec2(read_1, 0u)), clamp(_GLF_IDENTITY(uint(uvec2(read_1, 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec2(read_1, 0u)))), uint(uvec2(read_1, 0u)), uint(uvec2(read_1, 0u)))), _GLF_IDENTITY(uint(uvec2(read_1, 0u)), 0u + (uint(uvec2(read_1, 0u)))))), max(uint(uvec2(read_1, 0u)), uint(uvec2(read_1, 0u)))))) : _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4)))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) / 1), _GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4))))))) | (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4)))))) == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) | 0u)), (1u & 1u) * ((false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) == _GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + 1, (uint(_GLF_IDENTITY(read_1, (read_1) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + _GLF_IDENTITY(1, (1) ^ 0) == read_2) + 1) | 0u)))), 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u) == read_2, _GLF_IDENTITY(false || (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u) == read_2), true && (false || (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u) == read_2))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1))), ~ (~ (max(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1))))))), read_1)) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u)) ^ 0u)) + 0u) == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u)) ^ 0u)) + 0u) == read_2, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u)) ^ 0u)) + 0u) == read_2, true, false), true)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1))), ~ (~ (max(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED((false ? subgroup_id : read_1)))), _GLF_IDENTITY(read_1, (read_1) | (read_1))))))), read_1)) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u)) ^ 0u)) + 0u) == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (read_1)) + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u)) ^ 0u)) + 0u) == read_2, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))) * 1u)) ^ 0u)) + 0u) == read_2, true, false), true)))))) && true)) || _GLF_IDENTITY(false, (false) || false)))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
