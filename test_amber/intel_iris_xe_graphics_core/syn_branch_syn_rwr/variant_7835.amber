#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))) : _GLF_FUZZED(uvec3(52254u, 139976u, 197576u))))))), (false ? _GLF_FUZZED(uvec3(98484u, 7919u, 138046u)) : (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), uvec3(uvec4(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups), 1u))) : _GLF_FUZZED(uvec3(52254u, 139976u, 197576u))))))))) ^ uvec3(0u, 0u, 0u))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups)))))[1], gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), 1, 0))))])), gl_NumWorkGroups)).x), ((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups)))))[1], gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), 1, 0))))])), gl_NumWorkGroups)).x)) / 1u) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups)))))[1], gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), 1, 0))))])), gl_NumWorkGroups)).x), ((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups)))))[1], gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), 1, 0))))])), gl_NumWorkGroups)).x)) / 1u) >> 0u), (false ? _GLF_FUZZED(uvec4(96434u, 44326u, 136179u, 51849u).t) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(32002u, 7061u, 133474u)) : gl_NumWorkGroups)), (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups)))))[1], gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), int(4))))), int(ivec3(int(_GLF_IDENTITY(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4)))), (ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))) ^ ivec4(0, 0, 0, 0))), 1, 0))))])), gl_NumWorkGroups)).x), ((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups)))))[1], gl_NumWorkGroups[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(int(4), int(4))))), int(ivec3(int(ivec4(2, 0, _GLF_IDENTITY(1, (1) >> 0), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))))), 1, 0))))])), gl_NumWorkGroups)).x)) / 1u) >> 0u))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | 0u) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, min(0u, 0u))), (true ? uvec3(subgroup_id * subgroup_size, 1u, 0u) : _GLF_FUZZED(uvec3(119429u, 66030u, 11396u))))), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))) / 1u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)), min((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))))), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)), min((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))))), _GLF_IDENTITY(1u, min(1u, 1u)), 0u))) | 0u), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (true ? uvec3(subgroup_id * subgroup_size, 1u, 0u) : _GLF_FUZZED(uvec3(119429u, 66030u, 11396u))))), _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec3(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) | (uvec3(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), min(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))))) / 1u)))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), _GLF_IDENTITY(1u, min(1u, 1u)), 0u), (true ? uvec3(subgroup_id * subgroup_size, 1u, 0u) : _GLF_FUZZED(uvec3(119429u, 66030u, 11396u))))), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))) / 1u))), uint(uvec3(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (true ? uvec3(subgroup_id * subgroup_size, 1u, 0u) : _GLF_FUZZED(uvec3(119429u, 66030u, 11396u))))), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, 1u, 0u)))) / 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)))), 1u, 0u)), _GLF_IDENTITY(clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u)))), (_GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u)), (_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u))) >> 0u))), (uint(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u)), (_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u))) >> 0u)))) ^ 0u)) | (uint(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u + (1u)) << _GLF_IDENTITY(uint(1u), uint(1u))), uint(uvec2((_GLF_IDENTITY(1u, 0u + (1u)) << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u)))))), (uint(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) - 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / (0u ^ 1u))) + 0u)))) * 1u)), _GLF_IDENTITY((clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))) | (uvec3(subgroup_id * subgroup_size, 1u, 0u))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))) | (uvec3(subgroup_id * subgroup_size, 1u, 0u)))))), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))), ((clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))) | (uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 1u, 0u))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) << 0u))) : _GLF_FUZZED(virtual_gid)))) * (_GLF_IDENTITY(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (false ? _GLF_FUZZED(workgroup_id) : 0u)))) | (uvec3(subgroup_id * subgroup_size, 1u, 0u)))))), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))))) | ((clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))) | (uvec3(subgroup_id * subgroup_size, 1u, 0u))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(workgroup_id))), 0u, 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(workgroup_id))), 0u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(workgroup_id))), 0u, 0u, 1u))))))))) | (uvec3(subgroup_id * subgroup_size, 1u, 0u)))))), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)))))) / 1u))))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), ((_GLF_FUZZED(subgroup_size))) >> 0u)) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, 1u), (false ? _GLF_FUZZED(uvec2(133364u, 134341u)) : uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u))))), 1u, 0u)), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id, subgroup_id)) * subgroup_size, 1u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u)), uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, 0u)) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ~ (~ ((~ (subgroup_id * subgroup_size))))))))))), 1u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))) : _GLF_FUZZED(29582u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))))), 1u, 0u)) : _GLF_FUZZED((workgroup_id ^ subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), uint(uvec4(clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_size, subgroup_size)), 1u, 0u))), 0u, 0u, 1u)))) / 1u)))))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), ((_GLF_FUZZED(subgroup_size))) >> 0u)) : _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, 1u), (false ? _GLF_FUZZED(uvec2(133364u, 134341u)) : uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size))) << 0u))))), 1u, 0u)), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id, subgroup_id)) * subgroup_size, 1u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, 0u)), uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), (uvec3(subgroup_id * subgroup_size, 1u, 0u)) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), max(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ~ (~ ((~ (subgroup_id * subgroup_size))))))))))), 1u, 0u)), (true ? uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))) : _GLF_FUZZED(29582u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))) << 0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))))))), 1u, 0u)) : _GLF_FUZZED((workgroup_id ^ subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), uint(uvec4(clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_size, subgroup_size)), 1u, 0u))), 0u, 0u, 1u)))) / 1u))))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(109131u) : subgroup_id * subgroup_size)), 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u)))) / 1u))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(109131u) : subgroup_id * subgroup_size)), 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), 0u | (uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u)))) / 1u))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u)), (uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u))) | 0u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size))))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(109131u) : subgroup_id * subgroup_size)), 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u)))) / 1u))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(109131u) : subgroup_id * subgroup_size)), 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u)))) / 1u)))))) >> 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u)), _GLF_IDENTITY(clamp(uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(109131u) : subgroup_id * subgroup_size)), 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u))), (clamp(uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * subgroup_size, 1u, 0u)), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), 0u)))))) / 1u))))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), min(0, 0)))))));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), max(read_1, read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), ~ (~ (_GLF_IDENTITY(read_1, max(read_1, read_1))))))) + 1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bool(true)))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bool(true))))))) || false))))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, min((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) || false)))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), ~ (~ (_GLF_IDENTITY(read_1, (read_1) << 0u)))))) + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), ~ (~ (_GLF_IDENTITY(read_1, (read_1) << 0u)))))) + 1 == read_2)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), clamp(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) ^ 0))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)) == read_2), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), (_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))) << 0u) == read_2), (uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)) == read_2)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)) == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << 0u, max((read_1) << 0u, (read_1) << 0u)))) + 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), (true ? (_GLF_IDENTITY(1, max(1, 1))) : _GLF_FUZZED(-62100))) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7818.1934))))) | (1))), int(ivec4((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 1, 1)))) == read_2)) ^ 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)) == read_2), (uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)) == read_2)) ^ 0u))) + 1))), 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), ((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0), 4)))) ^ 0) << 0, (_GLF_IDENTITY((4), ((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0), 4)))) ^ 0) << 0) / (0 ^ 1)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), int(int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))))))), ((_GLF_IDENTITY(4, min(4, 4)))) ^ 0) << 0))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))), false, false, true))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), false || (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), false, true), false)), false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2((! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true)))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, _GLF_IDENTITY(true, true && (true)))), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), false, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))) && true)))), false, true), _GLF_IDENTITY(false, (false) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-6.0)), bool(false))) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec3((! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true, true)))) || false)), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, true && (false)))))), false)), false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fract(-457.505)) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(2010.8002)), float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-6656) : 0)), 0))]) - 0.0)), bool(true))), injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), true, true, false)), bool(bool(bool(bvec4(false, true, true, false))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))), _GLF_IDENTITY(true, true && (true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - 0u, min(_GLF_IDENTITY((next_virtual_gid) - 0u, min((next_virtual_gid) - 0u, (next_virtual_gid) - 0u)), (next_virtual_gid) - 0u)))) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) - 0u, 0u | ((next_virtual_gid) - 0u)))) | 0u), (((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) | 0u)) - (_GLF_IDENTITY(1u ^ 1u, min(_GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, max(1u ^ 1u, 1u ^ 1u)))))) | 0u))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == read_2, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bvec3(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) >> uvec2(0u, 0u)))) + 1 == read_2, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == read_2, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bvec3(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) >> uvec2(0u, 0u)))) + 1 == read_2, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, clamp(uint(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == read_2) + 1, uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | _GLF_IDENTITY((uvec2(read_1, 1u)), uvec2(0u, 0u) + ((_GLF_IDENTITY(uvec2(read_1, 1u), max(uvec2(read_1, 1u), uvec2(read_1, 1u)))))))), uvec2(1u, 1u) * (~ (_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))))))))) + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) + 1 == read_2) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(read_1, 1u)), 0u + (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) ^ 0u)))), (_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, uint(uint(read_1))), 1u)))) - 0u) + 1 == read_2) + 1) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-86.88, min(_GLF_IDENTITY(-86.88, (true ? -86.88 : _GLF_FUZZED(-6725.1799))), _GLF_IDENTITY(-86.88, (-86.88) * 1.0))))), bool(false))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(221.040)), float(0.0), bool(true))))) : _GLF_FUZZED(2.9))), injectionSwitch.x))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, ~ (~ (4))))), (false ? _GLF_FUZZED(92199) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, ~ (~ (4))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))), injectionSwitch.y), 0.0 + (min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))))), injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0)))))))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), false)))))))), false, true))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
