#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base, uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) | (0u)), 0u) | (GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_base));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false, false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5126.8183, -3.9)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), true && (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, true, true)), true && (bool(bvec4(bool(bool(false)), true, true, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true))), true))), true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (false)), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! (false || (false))), false || ((! (false || (false)))))))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (false)), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), false))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(float((false ? 188713u : _GLF_IDENTITY(177565u, max(177565u, _GLF_IDENTITY(177565u, (177565u) - 0u))))))), vec2(_GLF_FUZZED(-3825.4754), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), true, false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-70.10) : injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(385.835)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), uvec3(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))) >> uvec3(0u, 0u, 0u))), 0u), min(uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), 0u), uvec4(~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), min(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))), 0u)))))))), uvec3(_GLF_IDENTITY(uvec4(min(gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(uvec4(min(gl_WorkGroupID, gl_WorkGroupID), 0u), uvec4(min(gl_WorkGroupID, gl_WorkGroupID), 0u)))))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (uvec3(3u))), uvec3(3u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u)), 0u)))) - 0u)), uint(7u)), (true ? 0u << _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), clamp((7u), (7u), _GLF_IDENTITY((7u), ((7u)) >> 0u))) - 0u)), uint(7u)), (true ? 0u << _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) - 0u)), uint(7u)), (true ? 0u << _GLF_IDENTITY(uint(7u), uint(7u)) : _GLF_FUZZED(workgroup_size)))))) + (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id, workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-5343.1236, -1407.3247)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.z = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.z + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.z + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(uint(8.8)))), _GLF_IDENTITY(((0u)) << 0u, max(((0u)) << 0u, ((0u)) << 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, _GLF_IDENTITY(uint(uvec3((0u) / 1u, 1u, (0u | 0u))), min(uint(uvec3((0u) / 1u, 1u, (0u | 0u))), _GLF_IDENTITY(uint(uvec3((0u) / 1u, 1u, (0u | 0u))), min(uint(uvec3(_GLF_IDENTITY((0u) / 1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(15652u) : _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) | (_GLF_IDENTITY((0u) / 1u, max((0u) / 1u, (0u) / 1u)))))), 1u, (0u | 0u))), uint(uvec3((0u) / 1u, 1u, (0u | 0u)))))))))), ((_GLF_IDENTITY(0u, (0u) / 1u))) | _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u)))) | 0u)), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, (_GLF_IDENTITY((0u) / 1u, uint(uvec3(_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) / 1u), 0u, 0u)))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))) ^ 0u))))))))) >> 0u)) ^ (1u))))), (false ? _GLF_FUZZED(uvec2(143986u, 192022u)) : uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u)))) | 0u)), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)) ^ _GLF_IDENTITY((1u), ((1u)) / 1u)))))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + 1))) % subgroup_size), (_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.z + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, (_GLF_IDENTITY((0u) / 1u, ((0u) / 1u) >> 0u)) ^ 0u)))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_FUZZED(workgroup_size)))), clamp((_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) + 0u), _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u))))))))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))))), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) ^ 0u)))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED((workgroup_size / atomicOr(workgroup_base, subgroup_local_id))) : _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), clamp((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_FUZZED(workgroup_size))))))), ((false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED((workgroup_size / atomicOr(workgroup_base, subgroup_local_id))) : _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), clamp((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) : _GLF_FUZZED(workgroup_size)))))))) | (0u | 0u))))) >> 0u)) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(uvec3(5u, 0u, 0u)), (uint(uvec3(5u, 0u, 0u))) / 1u))), uint(5u)))) + 1))) % subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) ^ 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.z + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ _GLF_IDENTITY(0u, max(0u, 0u)))))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) - 0u) + 1, (0u | 0u) ^ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), ~ (~ (0u))))), _GLF_IDENTITY((0u) / 1u, ((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), 1u * (_GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u)))))))) / 1u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | 0u)))))))) ^ (_GLF_IDENTITY(1u, (1u) >> 0u))))))))) + _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(workgroup_id))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(true, bool(bool(true))) ? uint(5u) : _GLF_FUZZED(workgroup_id))))), uint(_GLF_IDENTITY(uvec2((0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))) ? uint(5u) : _GLF_FUZZED(workgroup_id))))), 1u), uvec2(1u, 1u) * (uvec2((0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(workgroup_id))))), 1u)))))))) + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), clamp(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) - 0u), (_GLF_IDENTITY(0u, (0u) / 1u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u)) / 1u))) >> _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u))) << 0u)))) ^ (1u))), min(_GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), clamp(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) - 0u), (_GLF_IDENTITY(0u, (0u) / 1u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u)) / 1u))) >> _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u))) << 0u)))) ^ (1u))), (_GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), clamp(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) - 0u), (_GLF_IDENTITY(0u, (0u) / 1u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u)) / 1u))) >> _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u))) << 0u)))) ^ (1u))), max((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), clamp(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) - 0u), (_GLF_IDENTITY(0u, (0u) / 1u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u)) / 1u))) >> _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u))) << 0u)))) ^ (1u))), (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), clamp(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) - 0u), (_GLF_IDENTITY(0u, (0u) / 1u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u)) / 1u))) >> _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u))) << 0u)))) ^ (1u)))))) / (0u ^ 1u)), _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), clamp(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) - 0u), (_GLF_IDENTITY(0u, (0u) / 1u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u)) / 1u))) >> _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u))) << 0u)))) ^ (1u))), uint(uvec3((1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), clamp(_GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u), _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) - 0u), (_GLF_IDENTITY(0u, (0u) / 1u))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))), (((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) ^ 0u)) / 1u))) >> _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u))) << 0u)))) ^ (1u))), 1u, 1u)))))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + 1))) % subgroup_size)), ((false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.z + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ 0u)))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (_GLF_IDENTITY(~ (~ (1u)), uint(uvec2(~ (~ (1u)), 0u)))) >> 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u, (((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u) >> 0u)) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)) ^ (1u)))))))) + _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> _GLF_IDENTITY(0u, (0u) ^ 0u)) << _GLF_IDENTITY(uint(5u), uint(5u)))))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))) : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(workgroup_base)))))) + 1))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ 0u)))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u | (5u))), uint(5u)))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) * 1u))), (((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) * 1u)))) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), 0u + (_GLF_IDENTITY(0u, (0u) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u, (((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(workgroup_id) : uint(0u)))) | (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))))))))) >> 0u) / 1u)) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)) ^ (1u)))))))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), 0u)), (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(workgroup_base)))))) + 1))) % subgroup_size, min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ 0u)))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) / 1u))), ~ (~ (((_GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)) ^ (1u)))))))) + _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(workgroup_base)))))) + 1))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ 0u)))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u ^ ((1u))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u))))), ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), max((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u) | ((_GLF_IDENTITY(0u, (0u) / 1u))))) >> 0u)) ^ (1u)))))))) + _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(subgroup_local_id)), ~ (_GLF_IDENTITY(~ ((true ? 0u : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ ((true ? 0u : _GLF_FUZZED(subgroup_local_id))), ~ (~ (~ ((true ? 0u : _GLF_FUZZED(subgroup_local_id))))))) / 1u))))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))))) | 0u)))), (true ? ~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) >> 0u) << _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(workgroup_base)))))) + 1))) % subgroup_size)))) << 0u))) | 0u))) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.z + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))))) ^ (1u)))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), uint(uvec3(_GLF_IDENTITY(~ (5u), (_GLF_IDENTITY(~ (5u), (~ (5u)) << 0u)) ^ 0u), 1u, 0u))))))))) + 1, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), (0u) / 1u)))), ((0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))) / _GLF_IDENTITY(1u, 1u * (1u))))))) >> 0u)) ^ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), max((1u), (1u))), (1u)))))))))) + (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u))))))) + 1))) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-66.70)))) * 1.0) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED(-7795.7390))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false)), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false)))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.x], uint(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y + _GLF_IDENTITY(1, clamp(1, 1, 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(93.61), _GLF_FUZZED(-63.46)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1], max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]))), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid)), 1u, 0u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid)), 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) / (1u | 0u))) << 0u), virtual_gid)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))) - _GLF_IDENTITY(0u, (0u) | 0u)), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)), max(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(1u, 0u | (1u)), 0u)), ~ _GLF_IDENTITY((~ (uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, min(0u, 0u))), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), 0u, 1u, 0u)))), min((~ (uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, min(0u, 0u))), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), 0u, 1u, 0u)))), (~ (uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, min(0u, 0u))), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), 0u, 1u, 0u))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)), (false ? _GLF_FUZZED(33906u) : uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))), virtual_gid, virtual_gid), (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), virtual_gid, virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u))))) - 0u))))), 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, ((virtual_gid) - 0u) ^ 0u)), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) * 1u), virtual_gid)), 1u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))), 0u)))))))], _GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), min((4), (4)))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-4.8, 938.289).r), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))).x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.w = read_2;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2091.3821)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(460.708) : injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), mix(vec2(_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2091.3821)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(460.708) : injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(460.708) : injectionSwitch.y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(460.708) : injectionSwitch.y))))))))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), vec2(1.0, 1.0) * ((clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2091.3821)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(460.708) : injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0))))))[0], _GLF_FUZZED(40.83)), vec2(_GLF_FUZZED(-982.413), (clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9790.9013), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(2091.3821)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(460.708) : injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), true)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(-7.3, (-7.3) * 1.0), 0.0, -45.00).p), _GLF_FUZZED(-1.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))))), false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.x], uint(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y + 1 == GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.w) + _GLF_IDENTITY(1, (1) - 0), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), false, _GLF_IDENTITY(true, (true) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), vec2(1.0, tan(0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY((float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0)))) - abs(0.0), min((float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0)))) - abs(0.0), (float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0)))) - abs(0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), _GLF_IDENTITY((vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0), max((vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0)))) - abs(0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(-456.197, -679.098)) : vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), float(vec4(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0)))), sin(0.0), 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (vec3(1.0, 0.0, log(1.0))) - vec3(0.0, 0.0, 0.0)))) - abs(0.0))))), 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 0.0, 1.0))))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, determinant(mat4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))), min(vec3(1.0, 0.0, determinant(mat4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))), vec3(1.0, 0.0, determinant(mat4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))))))), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-2201.0448), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))[1]), vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(float(false))), bvec2(true, false)))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), true, false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, sqrt(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), 0.0, 1.0))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(-9.5, -870.330)) : injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, false || (true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8368.9889)))) + 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2824.8134)), bool(false))))), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0), (mat4(injectionSwitch, 0.0, exp(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (true ? _GLF_IDENTITY(float(0.0), max(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-86.86) : float(0.0))), float(0.0))) : _GLF_FUZZED(distance(vec3(-1.9, -790.140, -1.2), vec3(0.5, 16.87, -3370.4593))))), float(_GLF_FUZZED(2824.8134)), bool(false))))), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(((7.5 - mat3x4(-9.1, 3.3, -7.7, -4.7, 30.52, -6.4, -17.21, 95.60, -8.6, -90.64, -55.35, -5146.9251)) , vec2(-50.24, -443.506))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, exp(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2824.8134)), bool(false))))), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0), (mat4(injectionSwitch, 0.0, exp(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2824.8134)), bool(false))))), 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(((7.5 - mat3x4(-9.1, 3.3, -7.7, -4.7, 30.52, -6.4, -17.21, 95.60, -8.6, -90.64, -55.35, -5146.9251)) , vec2(-50.24, -443.506))))).y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.x, (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.x) | 0u)], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz, max(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz, _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz)).y), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), uint(uvec3(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), 1u, 0u))), min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y))), min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y)))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)) : _GLF_FUZZED((105741u + uvec4(102227u, 121984u, 196403u, 81068u))))).xyz.y)) + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y)) + 1, _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), (min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz))) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz)).y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y)) >> 0u)) + 1), (min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y)) + 1, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), (min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz))) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz)).y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y)) >> 0u)), max(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), (min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz))) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz)).y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y)) >> 0u)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y), (min(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y, max(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz))) | (GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz)).y, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.xyz.y)), _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, min(GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2, GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2)).xyz.y)) >> 0u)))) + 1)) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u) == GLF_merged2_0_3_67_3_1_6GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_1workgroup_baseread_2.w) + 1, _GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), 0 + ((64)))))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec3(bvec4(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))), _GLF_IDENTITY(false || (true), (false || _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) && true)))) || _GLF_IDENTITY(false, (false) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(45.86) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, exp(0.0)), _GLF_IDENTITY((true ? vec3(injectionSwitch.y, 1.0, exp(0.0)) : _GLF_FUZZED(vec3(2745.1644, 3.0, -967.662))), mix(vec3(((true ? vec3(injectionSwitch.y, 1.0, exp(0.0)) : _GLF_FUZZED(vec3(2745.1644, 3.0, -967.662))))[0], _GLF_FUZZED(-6386.1783), _GLF_FUZZED(-111.842)), vec3(_GLF_FUZZED(1.3), ((true ? vec3(injectionSwitch.y, 1.0, exp(0.0)) : _GLF_FUZZED(vec3(2745.1644, 3.0, -967.662))))[1], ((true ? _GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, exp(0.0)), max(vec3(injectionSwitch.y, 1.0, exp(0.0)), vec3(injectionSwitch.y, 1.0, exp(0.0)))) : _GLF_FUZZED(vec3(2745.1644, 3.0, -967.662))))[2]), bvec3(false, true, true))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4.8)), bool(false))), injectionSwitch[1])), 0.0, 1.0, 1.0, sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(17.70)), float(0.0), bool(true))))), 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, log(1.0), 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4.8)), bool(false))), injectionSwitch[1])), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-844.333) : determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0, log(1.0), 0.0, round(length(normalize(_GLF_IDENTITY(abs(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (abs(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4.8)), bool(false))), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4.8)), bool(false))), injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4.8)), bool(false))), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4.8)), bool(false))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4.8)), bool(false))), injectionSwitch[1])))))), 0.0, 1.0, 1.0, sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 0.0, log(1.0), 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))))), false, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), false), false)))))))), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true))), false, false))))), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, _GLF_IDENTITY(false, (false) && true), true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, _GLF_IDENTITY(true, false || (true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), false, false, _GLF_IDENTITY(true, false || (true))))), true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))) || false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), true && (! (_GLF_IDENTITY(true, false || (true))))))) && (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))) || false, ! (! ((bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, true && (false)), false))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
