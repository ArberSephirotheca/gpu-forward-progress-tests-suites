#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), true, true)))) || (! ((injectionSwitch.x < injectionSwitch.y)))))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_IDENTITY(true, ! (! (true))) && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), true))))))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                  }
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(90.82), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), true, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), true, false, false))) || false))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, (6) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, (6) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, (6) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, (6) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), max(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, (6) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, (6) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, uint(uvec2(gl_NumWorkGroups.x, 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true)), false || (bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, (0) ^ (0 | 0))), (0), _GLF_IDENTITY((0), ~ (~ ((0))))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(ivec2(0, 1))))), _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 1))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ~ (~ ((0))))))), int(ivec4(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ~ (~ ((0))))))), 0, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp((_GLF_IDENTITY(0, (0) ^ (0 | 0))), (0), _GLF_IDENTITY((0), ~ (~ ((0))))))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(ivec2(0, 1))))), _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 1))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ~ (~ ((0))))))), int(ivec4(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), ~ (~ ((0))))))), 0, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 1)))))))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)))) != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6)))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-1.4)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) >> _GLF_IDENTITY(int(6), int(6))))) && true, ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) >> _GLF_IDENTITY(int(6), int(6))))) && true)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY((false) && true, true && ((false) && true)))))))
                continue;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))) || false)) || false)))
                break;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(_injected_loop_counter))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size)))) / _GLF_IDENTITY(1u, (1u) | (1u))), 0u ^ (workgroup_size)) * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((subgroup_size), 0u, (1u ^ 1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(5.4) : _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, cos(0.0)), (mat2x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(5.4) : _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, cos(0.0))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) ^ (_GLF_IDENTITY(uvec3((subgroup_size), 0u, (1u ^ 1u)), uvec3(0u, 0u, 0u) | (uvec3((subgroup_size), 0u, (1u ^ 1u))))))), clamp(uint(_GLF_IDENTITY(uvec3((subgroup_size), 0u, (1u ^ 1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((subgroup_size), 0u, (1u ^ 1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((subgroup_size), 0u, (1u ^ 1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((subgroup_size), 0u, (1u ^ 1u)))), max(_GLF_IDENTITY(uvec3((subgroup_size), 0u, (1u ^ 1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((subgroup_size), 0u, (1u ^ 1u)))), _GLF_IDENTITY(uvec3((subgroup_size), 0u, (1u ^ 1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((subgroup_size), 0u, (1u ^ 1u))))))), uint(_GLF_IDENTITY(uvec3((subgroup_size), 0u, (1u ^ 1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((subgroup_size), 0u, _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u))))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))))), max((subgroup_size), (subgroup_size))) + 0u), uint(uint(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), uint(uint(subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uint(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uint(subgroup_size)))))) + 0u)) ^ 0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(135066u) : _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uint(subgroup_size)))) ^ 0u, _GLF_IDENTITY(((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (uint(subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))) ^ 0u), 0u + (_GLF_IDENTITY(((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (0u) + 0u)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))))) + 0u)) ^ 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))) ^ 0u), (((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))) ^ 0u)) | (((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), min(uint(subgroup_size), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))))) ^ 0u))))) >> 0u)))), subgroup_id * subgroup_size), min(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (subgroup_id * subgroup_size) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))) * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) / 1u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) << 0u)), uint(_GLF_IDENTITY(uint(subgroup_size), _GLF_IDENTITY((uint(subgroup_size)), (true ? (uint(subgroup_size)) : _GLF_FUZZED(subgroup_local_id))) * 1u)))), 0u | ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u)) << 0u, ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u)) << 0u) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u)))))) ^ _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), min((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) | 0u)))) * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), min(_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), uint(uint(subgroup_size)))), uint(uint(subgroup_size)))), (true ? _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))) / 1u) : _GLF_FUZZED(uint((mat3x4(14.61, -797.898, -1.8, -12.02, 0.2, -1.4, 3.8, 1.2, 174.875, _GLF_IDENTITY(294.760, clamp(294.760, 294.760, 294.760)), -8.0, 350.001) , 30217)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), min(_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), uint(uint(subgroup_size)))), uint(uint(subgroup_size)))), (true ? _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))) / 1u) : _GLF_FUZZED(uint((mat3x4(14.61, -797.898, -1.8, -12.02, 0.2, -1.4, 3.8, 1.2, 174.875, _GLF_IDENTITY(294.760, clamp(294.760, 294.760, 294.760)), -8.0, 350.001) , 30217))))))) | 0u)) ^ 0u), subgroup_id * subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)), subgroup_id)) * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0))))))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))), (uint(uint(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)))) | (uint(uint(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u)))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0))))))), _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) + 0u), uint(uint(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (subgroup_size) + 0u), uint(uint(subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) * 1u)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, max((subgroup_size) + 0u, _GLF_IDENTITY((subgroup_size) + 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))))))))), uint(uint(subgroup_size)))))) + 0u)), min(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) + 0u), uint(uint(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (subgroup_size) + 0u), uint(uint(subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) * 1u)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, max((subgroup_size) + 0u, _GLF_IDENTITY((subgroup_size) + 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))))))))), uint(uint(subgroup_size)))))) + 0u)), ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) + 0u), uint(uint(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (subgroup_size) + 0u), uint(uint(subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) * 1u)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, max((subgroup_size) + 0u, _GLF_IDENTITY((subgroup_size) + 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))))))))), uint(uint(subgroup_size)))))) + 0u))) / 1u), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) + 0u), uint(uint(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (subgroup_size) + 0u), uint(uint(subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) * 1u)) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, max((subgroup_size) + 0u, _GLF_IDENTITY((subgroup_size) + 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + 0u) | 0u), 1u))))))))))), uint(uint(subgroup_size)))))) + 0u)))) ^ 0u, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))) ? _GLF_FUZZED(135066u) : _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(uint(subgroup_size)))) ^ 0u, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size))))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))) | (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))))) ^ 0u), 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (subgroup_size) + 0u), (1u ^ 0u) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) + 0u))), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) | (0u)))))))))))), ((_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))) ^ 0u, clamp((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) | (uint(subgroup_size))), uint(subgroup_size))))), min(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), _GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size)))))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))))) ^ 0u, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))) ^ 0u, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), uint(subgroup_size)))))) ^ 0u)))) | (((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(uint(subgroup_size), min(uint(subgroup_size), _GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(workgroup_size)))))))))))))) ^ 0u))))) >> 0u)))), subgroup_id * subgroup_size), min(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), min(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) ^ 0u), (subgroup_id * subgroup_size) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), clamp(uvec3(subgroup_size, 1u, 0u), uvec3(subgroup_size, 1u, 0u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), max(uvec3(subgroup_size, 1u, 0u), uvec3(subgroup_size, 1u, 0u))))))), _GLF_IDENTITY((subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) * 1u))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)))), (false ? _GLF_FUZZED(56560u) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), clamp(uvec3(subgroup_size, 1u, 0u), uvec3(subgroup_size, 1u, 0u), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), max(uvec3(subgroup_size, 1u, 0u), uvec3(subgroup_size, 1u, 0u))))))), _GLF_IDENTITY((subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) * 1u))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u)))), 0u | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u))))), (((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u)))))) ^ 0u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u))))), (false ? _GLF_FUZZED(num_workgroup) : ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u)))))))))) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))) * subgroup_size : _GLF_FUZZED(subgroup_size)))), clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), min(_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), uint(uint(subgroup_size)))), uint(uint(subgroup_size)))), (true ? _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) / 1u) : _GLF_FUZZED(uint((mat3x4(_GLF_IDENTITY(14.61, max(14.61, 14.61)), -797.898, -1.8, -12.02, 0.2, -1.4, 3.8, 1.2, 174.875, 294.760, -8.0, 350.001) , 30217)))))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (1u & 1u) * (uint(subgroup_size)))), max(uint(uint(subgroup_size)), uint(uint(subgroup_size)))), uint(uint(subgroup_size)))), (true ? _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) / 1u) : _GLF_FUZZED(uint((mat3x4(_GLF_IDENTITY(14.61, max(14.61, 14.61)), -797.898, -1.8, -12.02, 0.2, -1.4, 3.8, 1.2, 174.875, 294.760, -8.0, 350.001) , 30217)))))), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), min(_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), uint(uint(subgroup_size)))), uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) * 1u))))), (true ? _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) / 1u) : _GLF_FUZZED(uint((mat3x4(_GLF_IDENTITY(14.61, max(14.61, _GLF_IDENTITY(14.61, max(14.61, 14.61)))), -797.898, -1.8, -12.02, 0.2, -1.4, 3.8, 1.2, 174.875, 294.760, -8.0, 350.001) , 30217))))))))) ^ 0u), subgroup_id * subgroup_size))))) + 0u) : _GLF_FUZZED(subgroup_size))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), min(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), min(subgroup_local_id, subgroup_local_id)) + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), min(subgroup_local_id, subgroup_local_id)) + 1, 0u, 1u)))) ^ 0u), (subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(51077u) : (subgroup_local_id))) | 0u)) | (subgroup_local_id)) + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), 0u, 0u)), (uint(uvec4(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))) ^ 0u))))) % subgroup_size, 1u * ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) >> 0u), subgroup_local_id)) + 1) | _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1))))) | ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))))))) % subgroup_size)));
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), true), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), true), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)), true), true))))))))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, cos(0.0), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 1.0, 1.0, 0.0))) > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY(-4976, (-4976) | (-4976)) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, 0.0)), clamp(float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.5)), float(0.0), bool(true))), 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-0.3)), float(float(mat2x3(injectionSwitch.x, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, sin(0.0), 1.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(mat2(0.0, sin(0.0), 1.0, 0.0)), (true ? mat2x4(mat2(0.0, sin(0.0), 1.0, 0.0)) : _GLF_FUZZED(mat2x4(676.595, -3698.6376, -913.154, 3002.0950, 7.7, 867.472, -9028.5668, 833.071))))))))))), bool(true)))))) > injectionSwitch.y)))))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), false || (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false))), false)))))), true, true, false)), ! (! (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false, false))))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false, false))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), true && (bool(bvec4(true, true, true, false))))), true, false)))))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-797.539), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(71601))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) - (0 ^ 0)));
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), int(ivec2((1 << _GLF_IDENTITY(int(4), int(4))), 1))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-632.053)), vec2(_GLF_FUZZED((5.3 + 13.03)), (injectionSwitch)[1]), bvec2(false, true))).y))))
      {
      }
     else
      {
       do
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), _GLF_IDENTITY(ivec4(64, 1, 0, 0), (true ? ivec4(64, 1, 0, 0) : _GLF_FUZZED(findLSB(uvec4(27859u, 131346u, 87053u, 10328u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_injected_loop_counter) : 64)), 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0))))), 0 | (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) << 0)))), 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))), 0, 0), ivec4(64, 1, 0, 0)))))))), (-44980 & (0 ^ 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0))))), 0 | (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, _GLF_IDENTITY(1, (1) | (1)), 0, 0), ivec4(64, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))), 0, 0), ivec4(64, 1, 0, 0)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0))))), 0 | (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))), 0, 0), ivec4(64, 1, 0, 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0), _GLF_IDENTITY(clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0)), clamp(clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0)), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0)), _GLF_IDENTITY(clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0)), max(clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0)), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0))))))))), 0 | (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))), 0, 0), ivec4(64, 1, 0, 0)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), _GLF_IDENTITY(ivec4(64, 1, 0, 0), (ivec4(64, 1, 0, 0)) / ivec4(1, 1, 1, 1)))))), 0 | (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(0, max(0, 0)), 0), ivec4(64, 1, 0, 0))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), _GLF_IDENTITY(ivec4(64, 1, 0, 0), (ivec4(64, 1, 0, 0)) / ivec4(1, 1, 1, 1)))))), 0 | (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(0, max(0, 0)), 0), ivec4(64, 1, 0, 0)))))))))) ^ 0) / 1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, _GLF_IDENTITY(0, min(0, 0)), 0), _GLF_IDENTITY(clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0)), (_GLF_IDENTITY(clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0)), ivec4(0, 0, 0, 0) | (clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0))))) | (clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0))))))), ~ (~ (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), clamp(ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0), ivec4(64, 1, 0, 0))))))))))) * 1), 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec4(3.3, 59.20, -0.1, -70.19))))) > injectionSwitch.y))))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (0 | 0) + (64))) - 0), _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(29097, int(_GLF_IDENTITY(ivec2(29097, 1), max(ivec2(29097, 1), ivec2(29097, 1)))))), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(29097, (_GLF_IDENTITY(29097, (_GLF_IDENTITY(29097, max(29097, 29097))) >> 0)) << 0))), min((_GLF_FUZZED(_GLF_IDENTITY(29097, (_GLF_IDENTITY(29097, (_GLF_IDENTITY(29097, max(29097, 29097))) >> 0)) << 0))), (_GLF_FUZZED(_GLF_IDENTITY(29097, (_GLF_IDENTITY(29097, (_GLF_IDENTITY(29097, max(29097, 29097))) >> 0)) << 0))))))) : _GLF_IDENTITY(0, int(ivec2(0, 1))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true), false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))) && true))), true)), false)))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), _GLF_IDENTITY(float(vec2(clamp(0.0, 0.0, 0.0), 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.7)), (true ? float(_GLF_FUZZED(1.7)) : _GLF_FUZZED(min(269.357, -25.65)))), float(float(vec2(clamp(0.0, 0.0, 0.0), 1.0))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec4(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), false, false, false))))))), tan(_GLF_IDENTITY(tan(0.0), float(mat3(tan(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, exp(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0)))), abs(1.0)), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (0.0) / 1.0), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))), abs(1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(-2.3), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(-2.3), 0.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat2x3(_GLF_FUZZED(-2.3), 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat2x3(_GLF_FUZZED(-2.3), 0.0, 0.0, 1.0, 0.0, 0.0)))))), vec2(_GLF_FUZZED(6943.7925), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))), abs(1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(0.0, abs(1.0)))), 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(0.8)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-2.6)), bvec2(false, false))), injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(ivec4(1, 1, 0, 1)))) | (1)), 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED((read_2 - _GLF_IDENTITY(read_1, (read_1) | 0u))) : _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))) << 0u))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(37339)))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(37339)))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(37339))))))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), ~ (~ (~ (4))))))), (int(4)) ^ 0))), (((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(37339)))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(37339)))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(37339))))))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), ~ (~ (~ (4))))))), (int(4)) ^ 0)))) ^ 0)); _injected_loop_counter ++)
                    {
                     return;
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                }
               return;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
             int i = 0;
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1)) == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))), uint(read_1 + 1 == read_2)), (_GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1)) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) + 1, _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1), uint(uvec4((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1), 1u, 0u, 0u))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)))) + 1)) == read_2)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (read_2)), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), 1u * ((read_2)))) + 0u), (true ? (read_2) : _GLF_FUZZED(read_2))))), _GLF_IDENTITY(0u, 0u + (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9380.7617)))))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)), read_1))))) + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(151358u)))))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), uint(read_1 + 1 == read_2)), clamp(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)), (false ? _GLF_FUZZED((workgroup_size)) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | (read_1))) | (read_1)))))) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1)) == read_2), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((+ subgroup_size), ~ (~ ((+ subgroup_size))))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(+ subgroup_size, (+ subgroup_size) | 0u))) : uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u | (read_2), max(0u | (read_2), 0u | (read_2)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * cos(0.0)))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.6)), bool(false)))))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), max(int(7), int(7)))), min(~ (_GLF_IDENTITY(int(7), max(int(7), int(7)))), ~ (_GLF_IDENTITY(int(7), max(int(7), int(7))))))))))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), uint(read_1 + 1 == read_2)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1)) == read_2), (_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + _GLF_IDENTITY(1, (1) << 0) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) >> 0u), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(+ subgroup_size, (+ subgroup_size) >> 0u))), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ~ (~ ((0 << _GLF_IDENTITY(int(7), int(7))))))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) * 1u)))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) / 1u))))) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1)) == read_2), (_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(4), int(4))) ^ (1)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))), (read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ~ (~ ((read_2)))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))) || false)), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), ~ (~ (_GLF_FUZZED((+ subgroup_size))))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u, 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec3(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) | (_GLF_FUZZED((+ subgroup_size)))), _GLF_IDENTITY(0u + (_GLF_FUZZED((+ subgroup_size))), (_GLF_IDENTITY(0u + (_GLF_FUZZED((+ subgroup_size))), clamp(0u + (_GLF_FUZZED((+ subgroup_size))), 0u + (_GLF_FUZZED((+ subgroup_size))), 0u + (_GLF_FUZZED((+ subgroup_size)))))) | (0u + (_GLF_FUZZED((+ subgroup_size)))))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), uint(read_1 + 1 == read_2)), max(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1)) == read_2), (_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << 0u), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(round(18.63)) : 1.0)))), injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, uint(uint(read_2))), read_2))) << 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u ^ (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ 0u))))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), ~ (_GLF_IDENTITY(~ (read_2), max(~ (read_2), ~ (read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY((true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), min(~ (read_2), ~ (read_2))))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-166.438)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) | 0u))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), virtual_gid)))), max((true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), min(~ (read_2), ~ (read_2))))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-166.438)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) | 0u))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), virtual_gid)))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), min(~ (read_2), ~ (read_2))))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-166.438)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) | 0u))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), virtual_gid))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, max(read_2, read_2)))), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))) | 0u)), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), (0u ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u))))) + 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), uint(read_1 + 1 == read_2)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), ~ (_GLF_IDENTITY(~ ((read_1) | (read_1)), (~ ((read_1) | (read_1))) | (~ ((read_1) | (read_1)))))))) | (read_1)) + 1, min(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1), clamp((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1), ((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) | ((_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)))) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) | (read_1)) + 1)) == _GLF_IDENTITY(read_2, (read_2) | (read_2))), (_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) ^ 0u)), ((_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) ^ 0u))) + 0u), (true ? (read_2) : _GLF_FUZZED(read_2))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), ((read_2)) / 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (max(_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? false ? _GLF_FUZZED((+ subgroup_size)) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) : _GLF_FUZZED(virtual_gid))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) : uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 1)))) - (0 << _GLF_IDENTITY(int(7), int(7)))) == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), 0u + (_GLF_FUZZED((+ subgroup_size)))) : uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(floor(-805.581)) : _GLF_ONE(1.0, injectionSwitch.y))))), min(uvec3(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) * 1u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2))))))) ^ 0u)) + 1, _GLF_IDENTITY(4, int(ivec3(4, 1, 0))), 64, 4);
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (read_1))) * 1u)), (_GLF_IDENTITY((read_1) | (read_1), clamp((read_1) | (read_1), (read_1) | (read_1), (read_1) | (read_1)))) | ((read_1) | (read_1)))) + 1, _GLF_IDENTITY(uint(uvec3(read_1 + 1, 0u, 1u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec3(read_1 + 1, 0u, 1u))))) == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2), clamp(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2), uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2), uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2))))))) | 0u) : _GLF_FUZZED(read_2))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2), (true ? uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1 == read_2) : _GLF_FUZZED(read_2))) + 1) / 1u) : _GLF_IDENTITY(_GLF_FUZZED(read_1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_FUZZED(read_1)) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))))))))) / 1u)) + 0u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_IDENTITY(_GLF_FUZZED(read_1), min(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1)))) << (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_FUZZED(read_1))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_IDENTITY(_GLF_FUZZED(read_1), min(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1)))) << (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_FUZZED(read_1))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1)))))))))) / 1u)) + 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(_GLF_IDENTITY(read_1, uint(uvec3(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1))))), (~ (~ (_GLF_IDENTITY(_GLF_FUZZED(read_1), max(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1)))))) + 0u)) * 1u))) / 1u)) + 0u) * 1u)))))), 4, 64, 4);
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.8))), 1.0, 1.0)), injectionSwitch.y))))))
                break;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
