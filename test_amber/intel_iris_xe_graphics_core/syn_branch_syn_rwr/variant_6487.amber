#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 mat3 _f0;
 vec4 _f1;
 bvec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_24 {
 bvec3 _f0;
 uint _f1;
 mat4 _f2;
 vec4 _f3;
 ivec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 mat2x3 _f1;
 _GLF_struct_25 _f2;
 mat2x3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_22 {
 uint _f0;
 ivec4 _f1;
 mat3x4 _f2;
 vec4 _f3;
 bvec3 _f4;
 vec4 _f5;
 float _f6;
} ;

struct _GLF_struct_21 {
 vec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 int _f1;
 _GLF_struct_20 _f2;
 mat4x3 _f3;
 mat3 _f4;
 _GLF_struct_21 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_18 {
 mat4 _f0;
 mat3x4 _f1;
 vec4 _f2;
 mat3 _f3;
 vec3 _f4;
 mat4x2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 vec4 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 uint _f4;
 mat2 _f5;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 bvec3 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 ivec4 _f1;
 mat4 _f2;
 mat4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 mat3 _f1;
 mat4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 int _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 mat3 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
 vec4 _f1;
 bool _f2;
 bvec3 _f3;
 ivec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
} ;

struct _GLF_struct_9 {
 float _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 bvec3 _f1;
 _GLF_struct_9 _f2;
 mat2x3 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_27 {
 uint read_2;
 bvec3 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_23 _f4;
 _GLF_struct_26 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 bvec2 _f1;
 bvec4 _f2;
 mat2 _f3;
 mat3x2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 uvec3 _f1;
 uvec2 _f2;
 ivec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 uint _f2;
 bvec3 _f3;
 mat4 _f4;
 vec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 vec3 _f1;
 mat4x2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 _GLF_struct_0 _f1;
 int i;
 bvec3 _f2;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 vec4 _f3;
 mat2x4 _f4;
 mat3 _f5;
 _GLF_struct_6 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-683.703, 5.5)) : injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(vec2(-955.880, 3269.0389)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), gl_SubgroupSize);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(0.0, 0.0, sqrt(0.0), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u ^ (~ (gl_WorkGroupSize.x)))) * 1u))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u) - 0u);
 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 & 1) & _GLF_IDENTITY(1, (1) | (1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_8.subgroup_size, max(workgroup_base + subgroup_id * _GLF_struct_replacement_8.subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_8.subgroup_size, ~ (~ (workgroup_base + subgroup_id * _GLF_struct_replacement_8.subgroup_size))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_8.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(atomicMin(workgroup_size, 43970u)))) % _GLF_struct_replacement_8.subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), true)), ! (! (bool(bvec2(false || (false), true)))))))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1), (uint(read_1 + 1)) | (uint(read_1 + 1))), (true ? uint(_GLF_IDENTITY(read_1, (read_1) + 0u) + 1) : _GLF_FUZZED((workgroup_size ++)))), 4, 64, 4);
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54269) : 0))), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))))), _GLF_struct_12(ivec4(1), bvec3(true), _GLF_struct_9(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))), mat2x3(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), uvec2(1u)), mat2x3(1.0), _GLF_struct_10(mat2x3(1.0)), _GLF_struct_11(vec2(1.0), vec4(1.0), true, bvec3(true), ivec2(1), mat4x2(1.0))), _GLF_struct_16(_GLF_struct_13(uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(187066u))))), (~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(187066u), (true ? 1u : _GLF_FUZZED(187066u)) | _GLF_IDENTITY(0u, (0u) | (0u)))))))) / 1u)), 1u))), 1, uvec4(1u)), mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.4)), float(1.0), bool(true)))), _GLF_struct_14(mat4x3(1.0), mat3(1.0), mat4(1.0), ivec2(1)), _GLF_struct_15(uvec3(1u), ivec4(1), mat4(1.0), mat4(1.0), vec3(1.0))), _GLF_struct_19(mat3x2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false))), _GLF_struct_17(vec3(1.0), vec4(1.0), mat2x4(1.0), mat4x2(1.0), 1u, mat2(1.0)), _GLF_struct_18(mat4(1.0), mat3x4(1.0), vec4(1.0), mat3(1.0), vec3(1.0), mat4x2(1.0), bvec4(true))), _GLF_struct_23(mat2x3(1.0), 1, _GLF_struct_20(bvec4(true)), mat4x3(1.0), mat3(1.0), _GLF_struct_21(vec3(1.0), bvec3(true)), _GLF_struct_22(1u, ivec4(1), mat3x4(1.0), vec4(1.0), bvec3(true), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(clamp(vec4(1.0), vec4(1.0), vec4(1.0)), _GLF_IDENTITY(mat4(1.0) * (clamp(vec4(1.0), vec4(1.0), vec4(1.0))), mix(vec4(_GLF_FUZZED(-8000.2332), _GLF_FUZZED(-45.58), (mat4(1.0) * (clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[2], (mat4(1.0) * (clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[3]), vec4((mat4(1.0) * (clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[0], (mat4(1.0) * (clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[1], _GLF_FUZZED(41.17), _GLF_FUZZED(-64.95)), bvec4(true, true, false, false))))), 1.0)), _GLF_struct_26(_GLF_struct_24(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), 1u, mat4(1.0), vec4(1.0), ivec4(1), 1u), mat2x3(1.0), _GLF_struct_25(mat3(1.0), vec4(1.0), bvec3(true), true), mat2x3(1.0), mat3x4(1.0)), mat4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, bool(bvec3((_GLF_IDENTITY(false, (false) || false)) || false, true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_8.subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-4046.2557)), float(abs(0.0)), bool(true))), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat3x4(vec3(1.0, 0.0, 0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, sin(0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, sin(0.0)), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, tan(abs(0.0)), 0.0, 0.0))), vec3(0.0, 1.0, 1.0))), abs(0.0), determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0)), exp(0.0), 1.0, 0.0))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(37.59) : 1.0))), _GLF_struct_1(true, _GLF_struct_0(_GLF_IDENTITY(ivec4(1), ivec4(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, 0, 0) ^ (ivec4(1))), vec3(1.0), mat4x2(1.0), uvec4(_GLF_IDENTITY(1u, min(1u, 1u)))), 0, _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_struct_4(_GLF_struct_2(bvec3(true), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)))), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))) / 1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0, 0.0, 0.0)), max(float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.1) : 1.0)), 1.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6847.0493)), float(1.0), bool(true))), 1.0)), 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-79.35)))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), 0.0 + (_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))))) / determinant(mat3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0))))), vec3(0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(vec4(58.71, 245.594, 4.0, 7285.6871)) : vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)))) / sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(vec2(-485.274, -6751.8239).t)), float(clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0), (false ? _GLF_FUZZED(vec4(58.71, 245.594, 4.0, 7285.6871)) : vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)))) / sqrt(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true)))))) + 0.0), determinant(mat3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0)), clamp(float(mat2x3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0, 0.0)), clamp(dot(vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.2) : 0.0)), 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(float(172217u))), max(_GLF_IDENTITY(float(_GLF_FUZZED(float(172217u))), max(float(_GLF_FUZZED(float(172217u))), float(_GLF_FUZZED(float(172217u))))), _GLF_IDENTITY(float(_GLF_FUZZED(float(172217u))), max(float(_GLF_FUZZED(float(172217u))), float(_GLF_FUZZED(float(172217u))))))), bool(false)))), float(_GLF_FUZZED((true ? -8307.7022 : 67.53))), bool(false)))))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)))))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)))))), float(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0))))))))) / 1.0), 0.0, 0.0), min(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)))))), 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), 0.0, 0.0))))))), determinant(mat3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, length(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED(27109)))], (vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))[_GLF_IDENTITY(1, 0 | (1))], _GLF_FUZZED((- -6140.1487)), _GLF_FUZZED(6.5)), vec4(_GLF_IDENTITY(_GLF_FUZZED(342.575), (true ? _GLF_FUZZED(342.575) : _GLF_FUZZED(-1957.1203))), _GLF_FUZZED(1.2), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0))[2], max((vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[2])), (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(mat4x3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) * 1.0), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9425.8706)), float(0.0), bool(true))), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)), float(mat4(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0)), float(mat4(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0))), 0.0, 0.0), (vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)) / _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mat4(1.0) * (vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0))))))))))), determinant(mat3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * _GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))))), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(122.898) : (0.0))) / 1.0), 0.0, 1.0)), 0.0, 0.0)), float(mat2x3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - log(sqrt(1.0))))) : _GLF_FUZZED(-21.12))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - log(sqrt(1.0))))) : _GLF_FUZZED(-21.12))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0))))), 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), determinant(mat3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(56.07), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-56.11)), bvec2(true, false))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9322.4428)), bool(false))), 1.0))), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))))), bvec3(true), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)), clamp(float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)), float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)), float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)))))) - 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)), clamp(float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)), float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)), float(vec2(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)))))) - 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(4.2))), float(_GLF_IDENTITY(mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))))))), false, false)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), float(_GLF_FUZZED(762.304)), bool(false)))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat2x3(mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), exp(0.0))), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0)))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0)) * mat2(1.0)))))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.9), clamp(_GLF_IDENTITY(_GLF_FUZZED(-2.9), mix(float(_GLF_FUZZED(-2.9)), float(_GLF_FUZZED(-319.250)), bool(false))), _GLF_FUZZED(-2.9), _GLF_FUZZED(-2.9)))), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0)) * mat2(1.0)))), mix(float(_GLF_FUZZED((16.91 / 52.70))), float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0)) * mat2(1.0))))), bool(true))))), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))))))))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0)), bool(true))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), 1.0, tan(0.0), 0.0))) < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), 1.0, tan(0.0), 0.0))) < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), 1.0, tan(0.0), 0.0))) < injectionSwitch.y))))))) && true)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, exp(0.0), 0.0), transpose(transpose(mat2(1.0, 1.0, exp(0.0), 0.0))))), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-1.8)), float(exp(0.0)), bool(true))), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), _GLF_IDENTITY(float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), 1.0 * (_GLF_IDENTITY(float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), float(mat3x4(float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(_GLF_IDENTITY(mat2(1.0, 1.0, exp(0.0), 0.0), (mat2(1.0, 1.0, exp(0.0), 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, _GLF_IDENTITY(exp(0.0), float(mat4x3(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, log(1.0), 1.0, length(vec2(0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 0.0, 0.0, 0.0, 1.0))), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-221.146))), _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (mat2(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.9)), 1.0 * (float(_GLF_FUZZED(-2.9)))), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(-2.9)), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.9)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(_GLF_FUZZED(-2.9)))), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.9)), clamp(float(_GLF_FUZZED(-2.9)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.9)), (_GLF_IDENTITY(float(_GLF_FUZZED(-2.9)), clamp(float(_GLF_FUZZED(-2.9)), float(_GLF_FUZZED(-2.9)), float(_GLF_FUZZED(-2.9))))) + 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-2.9)), min(float(_GLF_FUZZED(-2.9)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.9)), mix(float(_GLF_FUZZED(8790.9935)), float(float(_GLF_FUZZED(-2.9))), bool(true))))))), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.9, float(vec3(-2.9, 0.0, 1.0))))), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0)) * mat2(1.0))))))) / cos(vec4(0.0, 0.0, 0.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))), _GLF_struct_3(vec4(1.0), uvec3(1u), uvec2(1u), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(73554, 1657)), ~ (~ (_GLF_FUZZED(ivec2(73554, 1657))))) : ivec2(1)), ((false ? _GLF_FUZZED(ivec2(73554, 1657)) : ivec2(1))) | (ivec2(0, 0) | ivec2(0, 0))))) >> ivec2(_GLF_IDENTITY(0, (0) | 0), 0)), uvec4(1u)), 1u, _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))))), true)))), mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - vec2(0.0, 0.0)), bvec4(true)), vec4(1.0), mat2x4(1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (true ? _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0)))))) : _GLF_FUZZED(mat3(71.81, -3.7, 1216.1237, -4345.9145, -6860.3665, -7.1, 6.9, 9980.2684, 73.98))))) * mat3(1.0)), _GLF_struct_6(_GLF_struct_5(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1))), bvec2(true), bvec4(true), mat2(1.0), mat3x2(1.0), mat4x2(1.0))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_struct_replacement_27.read_2) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), 1 * ((_GLF_IDENTITY(4, (4) + 0))))))) | (4)));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), (uint(uint(read_1))) << 0u))) | (read_1)), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), (uint(uint(read_1))) << 0u))) | (read_1)) : _GLF_FUZZED(workgroup_id))) + 1 == _GLF_IDENTITY(_GLF_struct_replacement_27.read_2, min(_GLF_IDENTITY(_GLF_struct_replacement_27.read_2, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_27.read_2, 1u), (uvec2(_GLF_struct_replacement_27.read_2, 1u)) / uvec2(1u, 1u)))), _GLF_struct_replacement_27.read_2))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 0u)))) / ((1u | 1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(uint(read_1))) << 0u))) | (read_1)), min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 0u)))) / ((1u | 1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(uint(read_1))) << 0u))) | (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 0u)))) / ((1u | 1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(uint(read_1))) << 0u))) | (read_1)), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 0u)))) / ((1u | 1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(uint(read_1))) << 0u))) | (read_1))) >> 0u))) + 1 == _GLF_struct_replacement_27.read_2)) * _GLF_IDENTITY(1u, (1u) | (1u))) + 1, _GLF_IDENTITY(4, (4) << 0), 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
