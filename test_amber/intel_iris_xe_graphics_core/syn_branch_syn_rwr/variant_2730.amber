#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 ivec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 bvec4 _f1;
 mat4x2 _f2;
 vec3 _f3;
 mat3 _f4;
 mat2x3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat2x4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 mat3 _f1;
 vec3 _f2;
 mat4 _f3;
 mat4x3 _f4;
 uvec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 mat2x4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 vec4 _f1;
 bool _f2;
 mat4 _f3;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 float _f1;
 bvec2 _f2;
 bvec4 _f3;
 vec4 _f4;
 mat3x4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 uint _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 uint _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint _f1;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 ivec2 _f1;
 ivec2 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
 uint subgroup_id;
 _GLF_struct_11 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x3(1.0), ivec2(1), ivec2(1), _GLF_struct_1(_GLF_struct_0(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_struct_7(_GLF_struct_2(bvec3(true), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, true)))), false))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false))))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), true, true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))), true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false))), bvec2(bvec2(bvec2(bvec2(true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), false)))), false, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), false), false)))))), false)))), false, false))), false)))))))))), true, false))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))))))), false, true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false))))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), true, true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true))))))), true), false))))))))), true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false))), bvec2(bvec2(bvec2(bvec2(true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(true)))))))))), true, false))), true)))))), bvec4(true), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED(9.9), (vec4(1.0))[1], _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0))))[2], _GLF_FUZZED(-12.61)), vec4((vec4(1.0))[0], _GLF_FUZZED(-7.4), _GLF_FUZZED(-2.3), (_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (min(vec4(1.0), vec4(1.0)))), mix(vec4((_GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (min(vec4(1.0), vec4(1.0)))))[0], _GLF_FUZZED(-0.9), (_GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (min(vec4(1.0), vec4(1.0)))))[2], (_GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (min(vec4(1.0), vec4(1.0)))))[3]), vec4(_GLF_FUZZED((+ 7.6)), (_GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (min(vec4(1.0), vec4(1.0)))))[1], _GLF_FUZZED(-5122.8175), _GLF_FUZZED(-3.6)), bvec4(false, true, false, false))))) + vec4(0.0, 0.0, 0.0, 0.0)))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(4.2), (_GLF_FUZZED(4.2)) / 1.0))))), false, false, true)), (mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(9.9, float(vec2(_GLF_IDENTITY(9.9, clamp(9.9, 9.9, 9.9)), _GLF_ONE(1.0, injectionSwitch.y))))), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-12.61)), vec4((vec4(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(-7.4, clamp(-7.4, -7.4, -7.4))), bool(true)))), _GLF_FUZZED(-2.3), (_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (min(vec4(1.0), vec4(1.0)))))) + vec4(0.0, 0.0, 0.0, 0.0)))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(4.2), (_GLF_FUZZED(4.2)) / 1.0))))), false, false, true))) - vec4(0.0, 0.0, 0.0, 0.0))), mat3x4(1.0), mat2x3(1.0)), _GLF_struct_3(bvec3(true), vec4(1.0), true, _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0)))))), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), mat2(1.0) * (vec2(mat2x3(injectionSwitch, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))).x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(50.28)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), float(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))), 0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0), transpose(transpose(mat3x4(1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0)))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), _GLF_IDENTITY(clamp(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- 2.0)) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0))), min(clamp(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- 2.0)) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0))), clamp(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, abs(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(0.0), 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- 2.0)) : 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0)))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(ldexp(4.4, -35506)) : injectionSwitch.x))), float(_GLF_FUZZED(0.7)), bool(false)), 0.0 + (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true))), (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(ldexp(4.4, -35506)) : injectionSwitch.x))), float(_GLF_FUZZED(0.7)), bool(false))))), injectionSwitch.x))), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 3.8)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))), injectionSwitch.x), _GLF_IDENTITY(float(mat2(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), min(float(mat2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.7)), bool(false))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), float(mat2(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(83.21) : injectionSwitch.x))) / 1.0), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.7)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))))) + log(1.0)), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.4) : 0.0)), injectionSwitch.x), (false ? _GLF_FUZZED(-9023.6708) : _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.4) : 0.0)), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.1)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4(1.0)))), _GLF_struct_4(mat3x2(1.0), mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bvec4(true), mat2x4(1.0), mat2x4(1.0)), 1u, _GLF_struct_5(bvec3(true), mat3(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), max((vec3(1.0)) * mat3(1.0), (vec3(1.0)) * mat3(1.0)))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0)), min(vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0)))) - cross(vec3(-626.354, -546.824, -4868.5717), vec3(_GLF_IDENTITY(-626.354, (-626.354) + 0.0), -546.824, _GLF_IDENTITY(-4868.5717, (-4868.5717) / 1.0))))) * mat3(1.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)), sin(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0)), vec3(mat4x2(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0)), determinant(mat3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-634.959)), float(1.0), bool(true))), 0.0, 0.0, sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(0.0, 0.0))) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0, mix(float((_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), float(_GLF_FUZZED((-8803.2190))), bool(false))))) + 0.0)) - 0.0)), 0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0))))), mat4(1.0), mat4x3(1.0), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), clamp(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)), clamp((_GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)), max((_GLF_IDENTITY(1u, (1u) >> 0u)), (_GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> 0u)), ((_GLF_IDENTITY(1u, (1u) >> 0u))) >> 0u)))) + 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)), (_GLF_IDENTITY(1u, (1u) >> 0u)))))), uvec3(1u)), _GLF_struct_6(1.0, mat2x4(1.0), vec4(1.0)), 1u), _GLF_struct_8(ivec2(1)), gl_SubgroupID, _GLF_struct_11(_GLF_struct_9(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), bvec4(true), mat4x2(1.0), vec3(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))) ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(atan(-6550.7320))))), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(atan(-6550.7320))))), (true ? mat3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(atan(-6550.7320))))) : _GLF_FUZZED(mat3(30.62, 76.97, 7304.3906, -8.9, -0.0, -919.065, -1.4, -44.24, 28.20))))))), mat2x3(1.0), mat2x4(1.0)), _GLF_struct_10(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1))), min(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) & ivec4(97050, 77735, -73545, _GLF_IDENTITY(91141, ~ (~ (_GLF_IDENTITY(91141, ~ (~ (91141)))))))) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) + ((ivec4(1)) / ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ (ivec4(0, 0, _GLF_IDENTITY(0, (0) << 0), 0) + ((ivec4(1)) / _GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 1 * (1))))), (ivec4(1, 1, 1, 1)) | ivec4(0, 0, 0, 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1)))) / ivec4(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (-59891 & 0)), 1), ((ivec4(1)) / ivec4(1, _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) - 0)), 1, 1)) ^ ivec4(0, 0, 0, 0)), (ivec4(1)) / ivec4(_GLF_IDENTITY(1, ~ (~ (1))), 1, 1, 1)))), ivec4(0, 0, 0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) & ivec4(97050, 77735, -73545, 91141)) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) + 0)))), ivec4(1)))) - ivec4(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), ((_GLF_IDENTITY(0, (0) >> 0))) | ((_GLF_IDENTITY(0, (0) >> 0))))))))), 0)), 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0 & 12288) ^ (0)), 0))), min(_GLF_IDENTITY(~ (0), max(_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))), ~ (0))), _GLF_IDENTITY(~ (0), 0 + (~ _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-24074) : _GLF_IDENTITY((0), int(ivec4((0), 0, 0, 1))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), ((ivec4(1))) | ivec4(0, 0, 0, 0)), ((ivec4(1))) - ivec4(0, 0, 0, 0)), (ivec4(1)))) / ivec4(1, 1, 1, 1), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(1, 0)))), _GLF_IDENTITY((ivec4(1)), (_GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1)))))) | ((ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))))) << ivec4(0, 0, 0, 0)), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(1, 0)))), _GLF_IDENTITY((ivec4(1)), (_GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1)))))) | ((ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))))) << ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(1, 0)))), _GLF_IDENTITY((ivec4(1)), (_GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1)))))) | ((ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))))) << ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(1, 0)))), _GLF_IDENTITY((ivec4(1)), (_GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1)))))) | ((ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))))))) << ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))))) / ivec4(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-81694))), 1, _GLF_IDENTITY(1, (1) >> 0)), ((_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), ~ (~ (_GLF_IDENTITY((ivec4(1)), clamp((ivec4(1)), (ivec4(1)), (ivec4(1))))))) / ivec4(1, 1, 1, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY((ivec4(1)), ~ (~ (_GLF_IDENTITY((ivec4(1)), clamp((ivec4(1)), (ivec4(1)), (ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1))))))))) / ivec4(1, 1, 1, 1))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) & ivec4(97050, 77735, -73545, 91141)) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 0)), (int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 0))) | (int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 0)))))) ^ 0)), ivec4(1)))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), clamp((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), clamp((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), (1 ^ 1), 0)), ~ (~ (int(ivec3((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-84955) : 1))), (1 ^ 1), 0)))))))) * 1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, max(1, 1))))), 1), ((ivec4(1)) / ivec4(_GLF_IDENTITY(1, (1) ^ 0), 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), _GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, (1) / 1)), ~ (~ ((ivec4(1)) / ivec4(1, 1, 1, 1)))))))), ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) >> 0), 0, 0, 0) + ((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0) & ivec4(97050, 77735, -73545, 91141), (ivec4(0, 0, 0, 0) & _GLF_IDENTITY(ivec4(97050, 77735, -73545, 91141), (ivec4(97050, 77735, -73545, 91141)) | (ivec4(97050, 77735, -73545, 91141)))) - ivec4(0, 0, 0, 0)), (ivec4(0, 0, _GLF_IDENTITY(0, (0) | (0)), 0) & ivec4(97050, 77735, -73545, 91141)) ^ ivec4(0, 0, 0, 0))) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), max(_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-3290) : _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) / 1)))))) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, _GLF_IDENTITY(0, (0) - 0), 0)), (ivec4(1)) / ivec4(1, _GLF_IDENTITY(1, (1) - 0), 1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) & ivec4(_GLF_IDENTITY(97050, (_GLF_IDENTITY(97050, (97050) | (97050))) | (_GLF_IDENTITY(97050, (97050) - 0))), _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141)) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0))) | (ivec4(1))), ivec4(1), ivec4(1)))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, _GLF_IDENTITY(1, max(1, 1)), 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, 1)))) / ivec4(1, 1, 1, 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))), (ivec4(0, 0, 0, 0) & ivec4(_GLF_IDENTITY(97050, (_GLF_IDENTITY(97050, (97050) | (97050))) | (_GLF_IDENTITY(97050, (97050) - 0))), _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141)) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0))) | (ivec4(1))), ivec4(1), ivec4(1)))) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), min(ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) << ivec4(0, 0, 0, 0))))) / ivec4(1, 1, 1, 1))))), _GLF_IDENTITY((ivec4(1)) / ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1, 1), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, 1)))) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) & ivec4(_GLF_IDENTITY(97050, (_GLF_IDENTITY(97050, (97050) | (97050))) | (_GLF_IDENTITY(97050, (97050) - 0))), _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141), (ivec4(0, 0, 0, 0) & ivec4(_GLF_IDENTITY(97050, (_GLF_IDENTITY(97050, (97050) | (97050))) | (_GLF_IDENTITY(97050, (97050) - 0))), _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141)) | (ivec4(0, 0, 0, 0) & ivec4(_GLF_IDENTITY(97050, (_GLF_IDENTITY(97050, (97050) | (97050))) | (_GLF_IDENTITY(97050, (97050) - 0))), _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141)))) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0))))) | ivec4(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(0, 0, 0) + (ivec3(0, 1, 0))))), 0, 0, 0))) | (ivec4(1))), ivec4(1), ivec4(1)))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, 1)))) / ivec4(1, 1, 1, 1))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) & ivec4(97050, _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141)) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1)))))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, _GLF_IDENTITY(1, (1) / 1), 1, 1), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, (1) >> (0 | 0)))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) / _GLF_IDENTITY((ivec4(0, 0, 0, 0) | ivec4(1, _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1)), min((ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, 1)), _GLF_IDENTITY((ivec4(0, 0, 0, 0) | ivec4(1, _GLF_IDENTITY(1, 0 ^ (1)), 1, 1)), ((ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, 1))) + (ivec4(0, _GLF_IDENTITY(0, (0) + 0), 0, _GLF_IDENTITY(0, int(ivec2(0, 0)))) >> _GLF_IDENTITY(ivec4(1), ivec4(1)))))))) / ivec4(1, 1, 1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) & ivec4(97050, _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141)) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), clamp(ivec4(1), ivec4(1), ivec4(_GLF_IDENTITY(1, (1) * 1))))) - ivec4(0, _GLF_IDENTITY(0, ~ (~ (0))), 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, min(1, 1)), 1), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1)))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0))), 1, _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, 1 * (1)))))) / ivec4(1, 1, 1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(0, 0, 0, 0) & ivec4(97050, _GLF_IDENTITY(77735, (77735) >> 0), -73545, 91141)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))))))), (_GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), ivec4(1), ivec4(1)))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), _GLF_IDENTITY(max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(75141, -68611, 7051, 40528)) : ivec4(1))), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0))))) / ivec4(1, 1, 1, 1)), clamp(max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(75141, -68611, 7051, 40528)) : ivec4(1))), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0))))) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(75141, -68611, 7051, 40528)) : ivec4(1))), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0))))) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(75141, -68611, 7051, 40528)) : ivec4(1))), (ivec4(1)) / (ivec4(0, 0, 0, 0) | ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0))))) / ivec4(1, 1, 1, 1))))))))), ivec4(0, 0, 0, 0) | ((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, (0) >> 0), 0, 0) & ivec4(97050, 77735, -73545, 91141), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) & ivec4(97050, 77735, -73545, 91141), min(ivec4(0, 0, 0, 0) & ivec4(97050, _GLF_IDENTITY(77735, 0 | (_GLF_IDENTITY(77735, (_GLF_IDENTITY(_GLF_IDENTITY(77735, (77735) | (77735)), int(int(77735)))) | 0))), -73545, 91141), ivec4(0, 0, 0, 0) & ivec4(97050, 77735, _GLF_IDENTITY(-73545, (-73545) - 0), 91141))), ivec4(0, 0, 0, 0) & ivec4(97050, _GLF_IDENTITY(77735, int(int(_GLF_IDENTITY(77735, (_GLF_IDENTITY(77735, (77735) | (77735))) + 0)))), _GLF_IDENTITY(-73545, 0 | (-73545)), 91141)))) | (_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))), clamp((_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))), max((_GLF_IDENTITY(ivec4(1), clamp(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(77294) : 1))), ivec4(1), ivec4(1)))), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))))), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))), (_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1)))))))) - ivec4(_GLF_IDENTITY(0, (0) / 1), 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) / ivec4(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(84251) : 1)), 1, 1), max(_GLF_IDENTITY((ivec4(1)) / ivec4(1, 1, 1, 1), ((ivec4(1)) / ivec4(_GLF_IDENTITY(1, (0 & -54246) ^ (1)), 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))) ^ 0)) - (0 | 0)))) ^ ivec4(0, 0, 0, 0)), _GLF_IDENTITY((ivec4(1)), (_GLF_IDENTITY((ivec4(1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1))))) | ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)))))))))))), vec4(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) + vec2(0.0, 0.0)).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((false) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))) && true)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size)) | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size)) | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size))), 0u ^ (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size)) | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_size)))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_12.subgroup_id * subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.7)), float(injectionSwitch.x), bool(true)))) - 0.0) < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, (true ? _GLF_struct_replacement_12.subgroup_id * subgroup_size : _GLF_FUZZED((workgroup_id ^ (199352u | workgroup_base))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, uint(uint(_GLF_struct_replacement_12.subgroup_id * subgroup_size))), min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size))), (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, (_GLF_struct_replacement_12.subgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, min(_GLF_struct_replacement_12.subgroup_id, _GLF_struct_replacement_12.subgroup_id)))), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, ~ (~ (_GLF_struct_replacement_12.subgroup_id))), _GLF_struct_replacement_12.subgroup_id)) * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(39343u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size))))) >> 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), 0u))), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : _GLF_FUZZED(workgroup_id), 0u ^ (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, (_GLF_struct_replacement_12.subgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, min(_GLF_struct_replacement_12.subgroup_id, _GLF_struct_replacement_12.subgroup_id)))), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, ~ (~ (_GLF_struct_replacement_12.subgroup_id))), _GLF_struct_replacement_12.subgroup_id)) * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(78943u) : _GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_struct_replacement_12.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), 0u))), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, (_GLF_struct_replacement_12.subgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, min(_GLF_struct_replacement_12.subgroup_id, _GLF_struct_replacement_12.subgroup_id)))), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id, ~ (~ (_GLF_struct_replacement_12.subgroup_id))), _GLF_struct_replacement_12.subgroup_id)) * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(78943u) : _GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_struct_replacement_12.subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), 0u))), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * subgroup_size, min(_GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_replacement_12.subgroup_id * subgroup_size)))))))) : _GLF_FUZZED(workgroup_id))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid)))), max(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) / 1u)))) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)))), (true ? subgroup_size : _GLF_FUZZED(virtual_gid)))), ~ (~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) : _GLF_FUZZED(virtual_gid))))))), 0u + (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) / 1u)))) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)))), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(virtual_gid)), ((true ? subgroup_size : _GLF_FUZZED(virtual_gid))) - 0u))), ~ (~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) : _GLF_FUZZED(virtual_gid))))))))), (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_struct_replacement_12.subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid))))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(workgroup_size)))))) + 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), min(max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false))))))))) && true) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || false)), false)))), (injectionSwitch.x > injectionSwitch.y)) || (true)), false || ((false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.97), _GLF_FUZZED(-3737.5793)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.97), _GLF_FUZZED(-3737.5793)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true, true))), false, false, true))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), injectionSwitch.x)) > injectionSwitch.y)) && true), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true, true))), false, false, true))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (false)) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, max(0u, 0u)))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, 1u * (0u | 0u))) | (0u | 0u))), ((0u | 0u)) + _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u))))))) ^ 0u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-878.996)))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(exp(vec2(0.0, 0.0)))).y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch))[1]))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y))))))), ((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.5)), bool(false))) < injectionSwitch.y)))))))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false)))), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)) || _GLF_IDENTITY(false, ! (! (false)))), (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch), (true ? true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-842.693, 4.6)))), max(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch), (true ? true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-842.693, 4.6)))), false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch), (true ? true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-842.693, 4.6)))))))))).x < injectionSwitch.y)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), false)))), false))))))))))))))))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch), (true ? true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-842.693, 4.6)))))))).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) + 0.0))) < injectionSwitch.y))) && true)))))))))))), false, true))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), true && ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))), true))), false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false), true, true, false)))))))), true && ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) >> 0) == read_2) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, max(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(i)))) | (1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false), true && (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))))))) + 1))) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (uint(read_1 + 1 == read_2) + 1) | (uint(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec4(_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u | (read_2), min(0u | (read_2), 0u | (read_2)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) + 1)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3392.0295, 8981.7972)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), ! (! (bool(bvec3((false), false, false)))))) && true)) && true, bool(bvec2((_GLF_IDENTITY(false, (false) && true)) && true, true))))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_DEAD(false)))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))) && true))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))) && true)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), (max(injectionSwitch[1], injectionSwitch[1])) * 1.0)))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))))))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))))))))))))))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) && true)))) && true))), _GLF_IDENTITY(false || (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), true && (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))) && true)))) && true)))), ! (! (false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * vec2(1.0, 1.0)))))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))) && true), true))))))))))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))) && true, ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))) && true) && true)))), false || (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY((95.85 * 6.8), mix(float((95.85 * 6.8)), float(_GLF_FUZZED(-4.2)), bool(false))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, length(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, length(0.0)))), determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0))), determinant(mat3(1.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1475.3439)))) - 0.0, max((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1475.3439)))) - 0.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1475.3439)))) - 0.0))), float(vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))) && true))))))) && true)))))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? injectionSwitch.x : _GLF_FUZZED(-41.49), min(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? injectionSwitch.x : _GLF_FUZZED(-41.49), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? injectionSwitch.x : _GLF_FUZZED(-41.49))))) > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((7.1 - -2.5)) : injectionSwitch.y)))), cos(0.0), 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), cos(0.0), 1.0, 1.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), cos(0.0), 1.0, 1.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), cos(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-54.25)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0))))), injectionSwitch.y)))))), true, true, false)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.2, -661.241)))).y, (injectionSwitch.y) / 1.0))), false || (bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(2.2, -661.241)), max(_GLF_FUZZED(vec2(2.2, -661.241)), _GLF_FUZZED(vec2(2.2, -661.241)))))).y, (injectionSwitch.y) / 1.0))))))), true, true, false))))))), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) && true))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.6))), length(vec4(0.0, 0.0, 0.0, 0.0)))), (true ? float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(5.6))), length(vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-74.43))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) || false))), (! ((_GLF_IDENTITY(true, (true) || false)))) || false))))), false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec2((true), false))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) || false))), (! ((_GLF_IDENTITY(true, (true) || false)))) || false)))))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), true, false)))) || false))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))) || false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))))))))))) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true)), (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(-9.6, 61.72, 7932.3453, -4592.0247))))))))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (injectionSwitch) * mat2(1.0)))).y), true, true, true))) || false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4950.8147), _GLF_FUZZED(-63.95)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(461.603))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(1695.1540)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(0.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
