#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0))))), (true ? vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))).y) && true))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, true, false)))) && true))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0))))), (true ? vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))).y) && true))), bool(bvec4(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, true, false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true, true)))))))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), ! (! (! (true && (_GLF_DEAD(false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true)), true, false, true)), (bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true))), true)), true, false, true))) && true))) && true)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false), false)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true), true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true), true, true))))), bool(bvec4(! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])) : _GLF_FUZZED(-92.85))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(1.4)), bool(false)))), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(2.0)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), clamp(min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), float(vec4(min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true), true, true))))), true, true, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED((_GLF_IDENTITY(571.473 - 6.7, (_GLF_IDENTITY(571.473 - 6.7, mix(float(_GLF_FUZZED(-425.166)), float(571.473 - 6.7), bool(true)))) + 0.0)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(_GLF_IDENTITY(2.4, (true ? 2.4 : _GLF_FUZZED(-459.135))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0))).y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false)))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), mat2(1.0) * (vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)))), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)))) : _GLF_FUZZED(vec2(84.22, -9.5)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(2.4)), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (true) && true), true))) * mat2(1.0))).y), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(92.95)), bvec2(false, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(13.85)), bool(false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), (0.0))) / round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec4(7.5, 73.01, -2.9, -92.92) * mat2x4(0.0, -98.33, 6034.0050, -838.441, -0.2, -826.242, -4237.4722, 324.097)).y)), float(1.0), bool(true))), 1.0))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (1.0) - 0.0))), 1.0, 1.0))))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-40.93, max(-40.93, -40.93)), (_GLF_IDENTITY(-40.93, max(-40.93, -40.93))) / 1.0)), (_GLF_FUZZED(_GLF_IDENTITY(-40.93, max(-40.93, -40.93)))) / 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0))), 1.0 * ((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0))), 1.0 * ((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0))), ((false ? _GLF_FUZZED(normalize(-8976.5175)) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5249.2365 - 500.430)) : 1.0)))) - tan(0.0))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, log(1.0), 1.0, 0.0, 1.0, sqrt(1.0)))), 0.0, abs(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), 1.0, 0.0, length(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6)))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-8.9))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.2))))), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))) + (0.0)) : _GLF_FUZZED(8.7))), 0.0, 0.0), (mat4(injectionSwitch.y, 0.0, abs(0.0), 1.0, 1.0, 0.0, length(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6), 0.0 + _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), float(mat2x3((false ? _GLF_FUZZED(53.01) : 0.0), 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(9.8))), clamp((false ? _GLF_FUZZED(53.01) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(53.01, _GLF_IDENTITY(float(mat2x4(53.01, tan(0.0), determinant(mat2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), min(float(mat2x4(53.01, tan(0.0), determinant(mat2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), float(mat2x4(53.01, tan(0.0), determinant(mat2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))))) : 0.0)))) : _GLF_FUZZED(-4.6)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), 1.0 * ((false ? _GLF_FUZZED(53.01) : 0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(53.01) : 0.0)))) : _GLF_FUZZED(-4.6)), mix(float(_GLF_FUZZED(932.226)), float((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp((false ? _GLF_IDENTITY(_GLF_FUZZED(53.01), min(_GLF_FUZZED(53.01), _GLF_FUZZED(53.01))) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(53.01) : 0.0)))) : _GLF_FUZZED(-4.6))), bool(true))), 0.0, tan(0.0), 1.0), (false ? _GLF_FUZZED(vec4(-29.34, -33.85, -2070.6378, -8.3)) : vec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp((false ? _GLF_FUZZED(53.01) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(53.01) : _GLF_IDENTITY(0.0, (0.0) / 1.0))))) : _GLF_FUZZED(-4.6)), mix(float(_GLF_FUZZED(932.226)), float((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp((false ? _GLF_FUZZED(53.01) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(53.01, min(_GLF_IDENTITY(53.01, (true ? 53.01 : _GLF_FUZZED(29.46))), _GLF_IDENTITY(53.01, mix(float(53.01), float(_GLF_FUZZED(-7.7)), bool(false)))))) : 0.0)))) : _GLF_FUZZED(-4.6))), bool(true))), 0.0, tan(0.0), 1.0)))), sin(0.0) + (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp((false ? _GLF_FUZZED(53.01) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(53.01) : 0.0)))) : _GLF_FUZZED(-4.6)), mix(float(_GLF_FUZZED(932.226)), float((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp((false ? _GLF_FUZZED(53.01) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(53.01) : 0.0)))) : _GLF_FUZZED(-4.6))), bool(true))), 0.0, tan(0.0), 1.0), (false ? _GLF_FUZZED(vec4(-29.34, -33.85, -2070.6378, -8.3)) : vec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp((false ? _GLF_FUZZED(53.01) : 0.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(53.01), min(_GLF_FUZZED(53.01), _GLF_FUZZED(53.01))) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(53.01) : 0.0)))) : _GLF_FUZZED(-4.6)), mix(float(_GLF_FUZZED(932.226)), float((true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), clamp((false ? _GLF_FUZZED(53.01) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(53.01) : 0.0), ((false ? _GLF_FUZZED(53.01) : 0.0)) / 1.0), (false ? _GLF_FUZZED(53.01) : 0.0)))) : _GLF_FUZZED(-4.6))), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, _GLF_IDENTITY(false, false || (false)), true))))), 0.0, tan(0.0), 1.0))))))))))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-407.957) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED((true ? -573.645 : -4178.0298))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, 0.0, abs(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, clamp((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0)), min(1.0, 1.0)), max(1.0, 1.0))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, max((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0))))), 1.0, 0.0, length(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6)))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))) ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-8.9))), 0.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, abs(0.0), 1.0, 1.0, 0.0, length(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(53.01), float(_GLF_IDENTITY(vec3(_GLF_FUZZED(53.01), 1.0, sqrt(1.0)), (true ? vec3(_GLF_FUZZED(53.01), 1.0, sqrt(1.0)) : _GLF_FUZZED(vec3(-0.8, -67.69, 9890.9904)))))) : 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-4.6), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(-4.6), 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), (float(mat3(_GLF_FUZZED(-4.6), 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) / round(length(normalize(1.0))))), 0.0 + (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6)))))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6), 0.0 + (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6)))))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6), 0.0 + (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6)))))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6), 0.0 + (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6)))))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_FUZZED(-4.6), 0.0 + (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-4.6), (false ? _GLF_FUZZED(-4.3) : _GLF_FUZZED(-4.6))), float(mat3(true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(53.01) : 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-4.6), (false ? _GLF_FUZZED(-4.3) : _GLF_FUZZED(-4.6))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0)))))))), float(_GLF_FUZZED(6.7)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x3(0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0)), 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(34.04)), float(0.0), bool(true))), max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-407.957) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat4(1.0))))), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), false, true)))))))) && true))))))))))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), false, true)))))))) && true))))))))))) && true), (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), true, true)))))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), false, true))))))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, false), true, true)), false, false)), false, true))))))), false, false)))) && true))))))))))) && true), (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1)) | 0u)) >> 0u) % subgroup_size))) / 1u), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid))), (subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) >> _GLF_IDENTITY(0u, 0u ^ (0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), mix(vec2((vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)))[0], (vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)))[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-95.85)), bvec2(false, false)))), injectionSwitch)).y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 1.0))))), (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0))).y)))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true && (injectionSwitch.x > injectionSwitch.y))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), max(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (4) - 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | 0), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), (1) | 0), clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && true), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0)))))))))))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))), (bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 909.108))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 909.108))), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED((+ 909.108)))))) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-5460.4619), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) - 0.0)), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), uint(uvec2(_GLF_IDENTITY((read_2), _GLF_IDENTITY(((read_2)) | 0u, (((read_2)) | 0u) ^ 0u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) + 0u)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), (int(ivec4(1, 0, 0, 0))) / 1)), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) | (1)), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) | (ivec4(1, 0, 0, 0))))), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) | (ivec4(1, 0, 0, 0))))), min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), max(_GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), (int(ivec4(1, 0, 0, 0))) << 0), int(ivec4(1, 0, 0, 0))))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) : _GLF_FUZZED(int(true)))) | (1))))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), (int(ivec4(1, 0, 0, 0))) / 1)), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) | (1)), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) | (ivec4(1, 0, 0, 0))))), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) | (ivec4(1, 0, 0, 0))))), min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), max(_GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), (int(ivec4(1, 0, 0, 0))) << 0), int(ivec4(1, 0, 0, 0))))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) : _GLF_FUZZED(int(true)))) | (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), (int(ivec4(1, 0, 0, 0))) / 1)), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) | (1)), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) | (ivec4(1, 0, 0, 0))))), min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) | (ivec4(1, 0, 0, 0))))), min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), max(_GLF_IDENTITY(int(ivec4(1, 0, 0, 0)), (int(ivec4(1, 0, 0, 0))) << 0), int(ivec4(1, 0, 0, 0))))), _GLF_IDENTITY(1, int(ivec4(1, 0, 0, _GLF_IDENTITY(0, (0) | (0)))))))) : _GLF_FUZZED(int(true)))) | (1))))))), 0 | (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))) | (1))), ((_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) / ivec4(1, 1, 1, 1))))) | _GLF_IDENTITY((1), ((1)) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-78884) : 4)), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-78884) : 4)), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-78884) : 4)), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-78884) : 4)), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-78884) : 4)), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-78884) : 4)), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-78884) : 4)), 4, 4)))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true)))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, (read_2) | (read_2))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
