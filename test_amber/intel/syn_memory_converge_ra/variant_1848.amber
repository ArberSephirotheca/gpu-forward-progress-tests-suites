#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y), false, true)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), false, false, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y), false, true)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), false, false, true)))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), false, false, true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true, true, false)), false || (bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true, true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 0.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3755.4079)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), max(uint(uvec2(workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), 0u | (uint(uvec2(workgroup_base, 0u))))))) + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED((87018u % write_val)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), bool(_GLF_IDENTITY(bool(false || (false)), (_GLF_IDENTITY(bool(false || (false)), (bool(false || (false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((false || (false)), true && ((false || (false)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))))))), mix(float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))))) : _GLF_FUZZED(-9.1)))))))), float(_GLF_FUZZED(5.0)), bool(false)))), float(_GLF_FUZZED(7057.2200)), bool(false))) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(953.381)))) - 0.0))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (1u) - 0u), (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(workgroup_base) : uint(0u)))))), max(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), max(_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u), uint(uint(0u))))))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (false ? _GLF_FUZZED(59741u) : _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, 0u ^ (0u))))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))))))) | (uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uint(uint(0u)))))))))))))))))), (((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (false ? _GLF_FUZZED(59741u) : _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, 0u ^ (0u))))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))))))) | (uint(uint(_GLF_IDENTITY(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uint(uint(0u))))))))))))))))))) / 1u)) ^ 0u)), ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) * 1u))) : _GLF_FUZZED(virtual_gid))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u)))) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, 0u, 0u, 0u)))))))) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) * (uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) - 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))))) ? _GLF_FUZZED(workgroup_size) : 0u))), (false ? _GLF_FUZZED(122619u) : _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))))) ? _GLF_FUZZED(workgroup_size) : 0u))), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))))) ? _GLF_FUZZED(workgroup_size) : 0u)))) ^ 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u))))), 0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u)))))))))))) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (1u) - 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))), 0u ^ (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_size) : uint(0u))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))), uint(uvec4(_GLF_IDENTITY((0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))), max((0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))), (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))))))) ^ 0u)), ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) | (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u)))) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, 0u, 0u, 0u)))))))) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) * (uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (1u) - 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) ? _GLF_FUZZED(workgroup_size) : 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), 0u ^ ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u)))))))), 0u | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) ? _GLF_FUZZED(workgroup_size) : 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))))), 0u ^ ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u)))))))))))) ^ 0u)))))), (_GLF_IDENTITY(uint(virtual_gid), uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, min((1u) - 0u, (1u) - 0u))), (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY((7u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((7u), (_GLF_IDENTITY((7u), (true ? (7u) : _GLF_FUZZED(num_workgroup)))) / 1u), 1u)), clamp(uint(uvec2(_GLF_IDENTITY((7u), (_GLF_IDENTITY((7u), (true ? (7u) : _GLF_FUZZED(num_workgroup)))) / 1u), 1u)), uint(uvec2(_GLF_IDENTITY((7u), (_GLF_IDENTITY((7u), (true ? (7u) : _GLF_FUZZED(num_workgroup)))) / 1u), 1u)), uint(uvec2(_GLF_IDENTITY((7u), (_GLF_IDENTITY((7u), (true ? (7u) : _GLF_FUZZED(num_workgroup)))) / 1u), 1u))))), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))), 0u))))))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))))))) + 0u) : _GLF_FUZZED(virtual_gid)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))), 0u))))))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))))))) + 0u) : _GLF_FUZZED(virtual_gid))))))))) >> 0u) ^ 0u)), ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), (uvec4(0u)) << (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))))) - uvec4(0u, 0u, 0u, 0u)), uvec4(_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u)))), ~ (~ ((_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u))))))) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | _GLF_IDENTITY((uint(uint(1u))), clamp(_GLF_IDENTITY((uint(uint(1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((uint(uint(1u))), ((uint(uint(1u)))) / 1u))), (uint(uint(1u))), _GLF_IDENTITY((uint(uint(1u))), 1u * ((uint(uint(1u))))))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), min(uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))))) ^ uvec4(0u, 0u, 0u, 0u)))))))) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) * (uvec4(uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), min(_GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, (1u) - 0u))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) ? _GLF_FUZZED(workgroup_size) : 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), uint(0u)))))), 0u ^ ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u)))))))))) ^ 0u))))))) | (_GLF_IDENTITY(uint(virtual_gid), uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (1u) - 0u), (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u, (_GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u) | (_GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(1u, 1u * (1u))))))) | (_GLF_IDENTITY((7u), ((7u)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))) / 1u))) / (0u ^ 1u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))) ^ 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))) | 0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u)))) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(1u, (1u) + 0u) * (uint(1u)))), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY(uvec4(0u), clamp(uvec4(0u), uvec4(0u), uvec4(0u))))) ^ uvec4(0u, 0u, 0u, 0u)))))))), clamp((_GLF_IDENTITY(uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u)))) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(1u, (1u) + 0u) * (uint(1u)))), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY(uvec4(0u), clamp(uvec4(0u), uvec4(0u), uvec4(0u))))) ^ uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u)))) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(1u, (1u) + 0u) * (uint(1u)))), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY(uvec4(0u), clamp(uvec4(0u), uvec4(0u), uvec4(0u))))) ^ uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), uvec4(0u)))) - uvec4(0u, 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(1u, (1u) + 0u) * (uint(1u)))), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY(uvec4(0u), clamp(uvec4(0u), uvec4(0u), uvec4(0u))))) ^ uvec4(0u, 0u, 0u, 0u)))))))))) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) * (uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) ? _GLF_FUZZED(workgroup_size) : 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))), 0u | (uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))))))), 0u ^ ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u)))))))))) ^ 0u))))))))) | (_GLF_IDENTITY(uint(virtual_gid), uint(_GLF_IDENTITY(uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (1u) - 0u), (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), (_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)) - (1u ^ 1u))) - 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))))))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))), (true ? (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))) : _GLF_FUZZED(workgroup_base)))) | ((_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (true ? uint(uint(0u)) : _GLF_FUZZED(subgroup_size)))), max(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, uint(uint(0u)))))))))) ^ 0u) >> 0u))), ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), min(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u))))) - uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)), 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u))))) - uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)), 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (_GLF_IDENTITY(uvec4(0u), max(uvec4(0u), _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u))))) - uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)), 0u, 0u, 0u)), uvec4(0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | (uint(uint(1u))))), 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ uvec4(0u, 0u, 0u, 0u)))))))) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) * (uvec4(uint(virtual_gid), _GLF_IDENTITY(1u, (1u) - 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (_GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(105270u))))), uint(7u)))), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec2(uint(7u), 0u)), uint(uvec2(uint(uvec2(uint(7u), 0u)), 0u))))) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(7u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) ? _GLF_FUZZED(workgroup_size) : 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) ? _GLF_FUZZED(workgroup_size) : 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u + (_GLF_FUZZED(workgroup_size)))))) : 0u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), min(uint(0u), uint(0u)))))), 0u ^ ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), uint(0u)))), uint(uint(0u)))))))))) ^ 0u)))))))), 4, _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(4, (4) + 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false || (false), false || (false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), ! (! (bool(false))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (! ((_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false))), false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-9.7)), bool(false))), _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-94.49)), bool(false))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, sqrt(1.0)))).y) + 0.0))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0)), 1.0, sqrt(1.0)))).y) + 0.0)))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, sqrt(1.0)))).y) + 0.0), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, sqrt(1.0)))).y) + 0.0), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, sqrt(1.0)))).y) + _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.0)), float(0.0), bool(true))), 0.0)))) && true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))) || (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
