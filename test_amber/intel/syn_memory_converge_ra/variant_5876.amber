#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 vec4 _f0;
} ;

struct _GLF_struct_17 {
 float _f0;
 mat2x4 _f1;
 mat3 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_14 {
 mat3x2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_13 {
 int _f0;
 uvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_11 {
 uint _f0;
 uvec2 _f1;
 bvec3 _f2;
 bvec4 _f3;
 mat3x4 _f4;
 uvec2 _f5;
 float _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 mat2x4 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 int _f1;
 mat4 _f2;
 uint _f3;
 mat4 _f4;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 mat2 _f1;
 mat2x4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 mat2x3 _f1;
 int _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 mat4x3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 float _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 ivec4 _f1;
 ivec2 _f2;
 mat4 _f3;
 ivec3 _f4;
 mat3x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_6 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_15 _f2;
 uvec3 _f3;
 uint workgroup_base;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_0 {
 uint num_workgroup;
 mat4x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) && true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) && true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) && true))))))) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-498.774)), bool(false)))) || _GLF_IDENTITY(false, true && (false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, cos(0.0)), (vec3(1.0, 0.0, cos(0.0))) / exp(vec3(0.0, 0.0, 0.0))), vec3(0.0, 1.0, length(vec2(0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, cos(0.0)), vec3(0.0, 1.0, length(vec2(0.0, 0.0)))), min(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)), cos(0.0)), vec3(0.0, 1.0, length(vec2(0.0, 0.0)))), dot(vec3(1.0, 0.0, cos(0.0)), vec3(0.0, 1.0, length(vec2(0.0, 0.0))))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(3.9, (3.9) * 1.0), 9.4)))).y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(3471.1300, (true ? 3471.1300 : _GLF_FUZZED(48.84))))), vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))) || false)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(gl_NumWorkGroups.x, mat4x2(1.0), uvec2(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6191.6340))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(-6844.4168, 380.940)))).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_6(bvec3(true), _GLF_struct_2(_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), vec2(1.0)), _GLF_struct_3(uvec2(_GLF_IDENTITY(1u, (1u) - 0u)), ivec2(1)), _GLF_struct_4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.1)), bool(false))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.0), max(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(-4.4)))))), float(1.0), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.0), max(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(-4.4)))))), float(1.0), bool(true)), (true ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.0), max(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(-4.4)))))), float(1.0), bool(true)) : _GLF_FUZZED(322.340))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.0), max(_GLF_FUZZED(-9.0), _GLF_IDENTITY(_GLF_FUZZED(-9.0), (true ? _GLF_FUZZED(-9.0) : _GLF_FUZZED(-4.4)))))), float(1.0), bool(true)))))), ivec4(1), ivec2(1), mat4(1.0), ivec3(1), mat3x2(1.0), mat4x3(1.0)), _GLF_struct_5(bvec4(true), 1.0, ivec2(1))), _GLF_struct_10(mat4x3(1.0), _GLF_struct_7(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(float(_GLF_IDENTITY(1.0, (1.0) / 1.0))))), mat2x3(1.0), 1, bvec3(true)), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) / (ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) << 0)) ^ ivec4(0, 0, 0, 0))), (ivec4(1)) | ivec4(0, 0, 0, 0)), mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), bvec4(_GLF_IDENTITY(true, (true) || false))), _GLF_struct_9(ivec3(1), 1, mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u))))), (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(workgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(workgroup_size)), max((true ? 1u : _GLF_FUZZED(workgroup_size)), (true ? 1u : _GLF_FUZZED(workgroup_size)))) : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))))), ~ (~ (1u)))))), ~ (1u)))))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u | (_GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))), _GLF_IDENTITY((~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), _GLF_IDENTITY((false ? _GLF_FUZZED(5405u) : ~ (1u)), ((false ? _GLF_FUZZED(5405u) : ~ (1u))) - 0u)), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))), ((~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), (_GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u)))) - 0u)))))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(1u, max(1u, 1u))))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u))))) | ((~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))))), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))), (min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), max(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), ~ (_GLF_IDENTITY(1u, uint(uint(1u))))))), ~ (~ (1u)), ~ (~ (1u)))), ~ _GLF_IDENTITY((~ (1u)), min((~ (1u)), _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u))))) / 1u))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))))), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))), (min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), max(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), ~ (_GLF_IDENTITY(1u, uint(uint(1u))))))), ~ (~ (1u)), ~ (~ (1u)))), ~ _GLF_IDENTITY((~ (1u)), min((~ (1u)), _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u))))) / 1u))), 0u, (0u ^ 1u))), clamp(uint(uvec3((_GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))))), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))), (min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), max(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), ~ (_GLF_IDENTITY(1u, uint(uint(1u))))))), ~ (~ (1u)), ~ (~ (1u)))), ~ _GLF_IDENTITY((~ (1u)), min((~ (1u)), _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u))))) / 1u))), 0u, (0u ^ 1u))), uint(uvec3((_GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))))), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))), (min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), max(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), ~ (_GLF_IDENTITY(1u, uint(uint(1u))))))), ~ (~ (1u)), ~ (~ (1u)))), ~ _GLF_IDENTITY((~ (1u)), min((~ (1u)), _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u))))) / 1u))), 0u, (0u ^ 1u))), uint(uvec3((_GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) + 0u), (0u | 0u), 1u, 1u))))), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))), (min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), max(~ (_GLF_IDENTITY(1u, uint(uint(1u)))), ~ (_GLF_IDENTITY(1u, uint(uint(1u))))))), ~ (~ (1u)), ~ (~ (1u)))), ~ _GLF_IDENTITY((~ (1u)), min((~ (1u)), _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u))))) / 1u))), 0u, (0u ^ 1u))))))), ~ (1u))))))))), (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), uint(uint(_GLF_IDENTITY((1u), 0u ^ ((1u))))))) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : ~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u)) * 1u))))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ _GLF_IDENTITY((~ (1u)), (true ? (~ (1u)) : _GLF_FUZZED(subgroup_local_id))))), ~ (~ (1u)))))), ~ (1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (1u)), max((~ (1u)), (~ (1u)))), 1u, 1u, 0u), (uvec4((~ (1u)), 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ _GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), 0u + ((1u)))))), (1u), (1u))))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))))), ~ (1u))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) / 1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))))), ~ (1u)))))))))) / 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), uint(_GLF_IDENTITY(uvec4((~ (1u)), 1u, 1u, _GLF_IDENTITY(0u, (0u) << 0u)), (uvec4((~ (1u)), 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))), clamp(~ (~ (1u)), ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u)))) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u))), clamp(clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u))), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u))), _GLF_IDENTITY(clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u))), clamp(clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u))), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u))), _GLF_IDENTITY(clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u))), (clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))) << 0u)))))), ~ (~ (1u)))))), ~ (1u)))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))))), ~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))), (true ? ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))) : _GLF_FUZZED(write_val))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))), (min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))) + 0u)))), ~ (1u)))))))))) / 1u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), uint(_GLF_IDENTITY(uvec4((~ (1u)), 1u, 1u, 0u), (uvec4((~ (1u)), 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))), (_GLF_IDENTITY((~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), uint(_GLF_IDENTITY(uvec4((~ (1u)), 1u, 1u, 0u), (uvec4((~ (1u)), 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))), uint(uvec3((~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), uint(_GLF_IDENTITY(uvec4((~ (1u)), 1u, 1u, 0u), (uvec4((~ (1u)), 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))), 1u, 1u)))) >> (0u ^ 0u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u))), (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u))), 0u | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (_GLF_IDENTITY(1u, (1u) - (64205u & 0u))))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), max((1u), (1u))), (1u), (1u)))), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))))), ~ (1u))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(124235u))))), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) - 0u) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ (1u)))), ~ (~ (1u)))))), ~ (1u)))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u))))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ (~ (1u)))), ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))))), ~ (1u))))), 1u * (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u)))), uint(uvec2(clamp(~ (1u), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(5405u) : ~ (1u))), _GLF_IDENTITY(~ (1u), (false ? _GLF_FUZZED(workgroup_size) : ~ (1u)))), 1u)))), ~ (_GLF_IDENTITY(~ (~ (1u)), min(_GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), ~ _GLF_IDENTITY((~ (1u)), max(_GLF_IDENTITY((~ (1u)), uint(uvec3((~ (1u)), 1u, 0u))), (~ (1u)))))), ~ (~ (_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), min(_GLF_IDENTITY(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 0u))), uvec3(1u, 1u, 0u)))))))))))))), ~ (1u)))))))))))) / 1u))))) / 1u)))))))) ^ 0u)) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, 1.0, 1.0)))), mat4x3(1.0), _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), vec2(1.0)))), _GLF_struct_15(_GLF_struct_11(1u, uvec2(1u), bvec3(_GLF_IDENTITY(true, false || (true))), bvec4(true), mat3x4(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (1u)), max(1u, 1u))), 1.0), _GLF_struct_12(bvec4(true), mat3x4(1.0)), _GLF_struct_13(1, uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))))) << 0u)), mat3x4(1.0)), mat2x4(1.0), _GLF_struct_14(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))) / 1.0)), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) - 0.0))))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, 1u, 1u)), workgroup_size * workgroup_id, _GLF_struct_17(1.0, mat2x4(1.0), mat3(1.0), _GLF_struct_16(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), clamp((vec4(1.0)) * mat4(1.0), (vec4(1.0)) * mat4(1.0), (vec4(1.0)) * mat4(1.0))))) / exp(vec4(0.0, 0.0, 0.0, 0.0))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true))))))))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, ! (! ((_GLF_IDENTITY(false, (false) && true)) || false)))), _GLF_IDENTITY(false, (false) || false) || ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, ! (! ((_GLF_IDENTITY(false, (false) && true)) || false)))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.0, 4324.4862)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)), true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat2x3(min(injectionSwitch, injectionSwitch), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)))).y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), false, false, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), false, false, false))))), bool(bvec2(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), false, false, false))))), false)))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), false, false, false))))), bool(bvec2(bool((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false)), false, false, false))))), false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_18.workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false)))) && true)))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))) || false), false, true))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))))))), false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false))))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))))), bool(bvec2((! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) || false)))))), true)))), false), false))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(839.627), _GLF_FUZZED(-3.9)), bvec2(false, false))), (injectionSwitch) + vec2(0.0, 0.0)))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * cos(vec2(0.0, 0.0)))))).y))), false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false)))), bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false)))), true, false, true))))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), false, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, sqrt(0.0), tan(0.0), 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(0.0, 1.0)), dot(vec2(1.0, sqrt(0.0)), vec2(0.0, 1.0))), 0.0, 1.0))).x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u ^ (atomicLoad(write_val, 4, 64, 2))), atomicLoad(write_val, 4, _GLF_IDENTITY(64, (64) ^ 0), 2)))) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4789.3778)), vec2(_GLF_FUZZED(-4104.3673), (injectionSwitch)[1]), bvec2(false, true))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
