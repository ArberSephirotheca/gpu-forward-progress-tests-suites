#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_34 {
 uvec2 _f0;
 mat2x3 _f1;
 bool _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_33 {
 mat3x4 _f0;
} ;

struct _GLF_struct_31 {
 mat3x4 _f0;
 int _f1;
 mat2 _f2;
 mat3 _f3;
 ivec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_30 {
 uint _f0;
 float _f1;
 vec2 _f2;
 int _f3;
} ;

struct _GLF_struct_32 {
 _GLF_struct_30 _f0;
 ivec2 _f1;
 vec2 _f2;
 uint _f3;
 _GLF_struct_31 _f4;
} ;

struct _GLF_struct_28 {
 float _f0;
 ivec4 _f1;
 mat2 _f2;
 bvec3 _f3;
 uint _f4;
 uvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_29 {
 _GLF_struct_28 _f0;
} ;

struct _GLF_struct_27 {
 bvec3 _f0;
} ;

struct _GLF_struct_35 {
 _GLF_struct_27 _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 bool _f5;
 uint subgroup_base;
} ;

struct _GLF_struct_24 {
 float _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 mat3x2 _f1;
 uint _f2;
 uvec2 _f3;
 mat3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 mat4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_25 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
 uint subgroup_size;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 bvec4 _f1;
 uvec4 _f2;
 ivec4 _f3;
 mat2x4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_18 {
 bool _f0;
 ivec2 _f1;
 uint _f2;
 bool _f3;
 bvec4 _f4;
 uint _f5;
 mat2 _f6;
} ;

struct _GLF_struct_20 {
 mat3x2 _f0;
 _GLF_struct_18 _f1;
 mat2x4 _f2;
 _GLF_struct_19 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
 uint _f1;
 _GLF_struct_20 _f2;
 int _f3;
 _GLF_struct_25 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_12 {
 float _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 mat4x3 _f1;
 _GLF_struct_16 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 vec4 _f1;
 vec3 _f2;
 vec3 _f3;
 bvec4 _f4;
 mat4x2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 int _f1;
 mat3 _f2;
 vec4 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 int _f1;
 vec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 bool _f1;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 vec2 _f1;
 bvec2 _f2;
 int _f3;
 vec3 _f4;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 mat4x3 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 mat4x2 _f4;
 uvec4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_1 {
 uint _f0;
 vec3 _f1;
 mat4 _f2;
 mat3 _f3;
 mat2 _f4;
 uvec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat2x4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_2 {
 uint workgroup_size;
 mat2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_2 _f0;
 bvec3 _f1;
 _GLF_struct_6 _f2;
 vec2 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
    }
  }
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
                    {
                     if(_GLF_DEAD(false))
                      break;
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        break;
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   return;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    continue;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
              }
            }
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false)))))))
                    {
                     return;
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
                        return;
                      }
                    }
                  }
                }
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(mat3x2(1.0), 1u, _GLF_struct_20(mat3x2(1.0), _GLF_struct_18(true, ivec2(1), 1u, true, bvec4(true), 1u, mat2(1.0)), mat2x4(1.0), _GLF_struct_19(uvec4(1u), bvec4(true), uvec4(1u), ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1))), mat2x4(1.0), uvec4(1u)), uvec3(1u)), 1, _GLF_struct_25(_GLF_struct_21(uvec3(1u), mat4(1.0), ivec3(1)), _GLF_struct_22(vec4(1.0), mat3x2(1.0), 1u, uvec2(1u), mat3(1.0), vec2(1.0)), _GLF_struct_23(uvec4(1u)), _GLF_struct_24(1.0, bvec4(true)), gl_SubgroupSize), mat2x4(1.0));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter)) != _GLF_IDENTITY(0, (0) / 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)); _injected_loop_counter --)
        {
         return;
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.x))))) - 0.0) > injectionSwitch.y))))
        continue;
       return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (true)), bool(bvec2(bool(! (true)), true)))), (bool(_GLF_IDENTITY(bool(! (true)), bool(bvec2(bool(! (true)), true))))) || false))), (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (true)), bool(bvec2(bool(! (true)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), (bool(_GLF_IDENTITY(bool(! (true)), bool(bvec2(bool(! (true)), true))))) || false)))) && true))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))), true, true, false)), bool(bvec2(bool(bvec4((! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))), true, true, false)), true))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))), true, true, false)), bool(bvec2(bool(bvec4((! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))), true, true, false)), true)))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec3(int(6), 1, _GLF_IDENTITY(1, max(1, 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.x = num_workgroup;
  }
 else
  {
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_2(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.6))), 1.0)), 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.6))), 1.0)), 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.6))), 1.0)), 1.0, 1.0)))))))), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (true ? mat2(1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(3.0, 7.6, 66.35, 5.6)))))) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.9) : 0.0))) + 0.0), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), 1.0 * (max(0.0, 0.0)))))))), mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0))), ((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) * mat2(1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(5.6)))))) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6573.1699))), 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(5.6)))))) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)))))))))))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), mat2(mat4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(5.6)))))) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)))))))))))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), mat2(mat4x3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(5.6)))))) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), mat2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), transpose(transpose(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)))))))))))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), mat3x2(mat4(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))))))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), mat3x2(mat4(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))))))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), mat3x2(mat4(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), mat3x2(mat4(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (true ? dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(-2945.4944)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))))))))), mix(float(_GLF_FUZZED(-897.232)), float(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), mat3x2(mat4(mat3x2(1.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (true ? dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(-2945.4944)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), mat2(mat2((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.5), (_GLF_FUZZED(-2.5)) * _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), float(1.0), bool(true))), 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? mat2(1.0) : _GLF_FUZZED(mat2(-6260.4771, 5951.2503, -43.31, -598.378))), (true ? (_GLF_IDENTITY(true, ! (! (true))) ? mat2(1.0) : _GLF_FUZZED(mat2(-6260.4771, 5951.2503, -43.31, -598.378))) : _GLF_FUZZED(outerProduct(injectionSwitch, injectionSwitch))))), (mat2(1.0)) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (mat2(1.0, 1.0, 1.0, 1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(917.930))), 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mat2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.91)), bool(false))))) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), (mat2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))) / mat2(1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)), (mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) : _GLF_FUZZED((mat2(-246.113, 4.9, -4.7, -3.9) / mat2(0.4, 3.0, -7.2, -9.4))))))))), mat2(mat2x3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (transpose((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0))), mat2(0.0, 0.0, 0.0, 0.0) + ((_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))) + mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)), min(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)), max(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0))), mat2(0.0, 0.0, 0.0, 0.0) + ((_GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))) + mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)), min(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)), max(min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0)))), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0)))))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0), mat2(mat4x2(((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), (true ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-256.666))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, cos(0.0), sqrt(1.0), tan(sqrt(0.0)), cos(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0))), min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))))))), _GLF_struct_0(mat2x4(1.0), mat2x4(1.0), bvec4(true)), _GLF_struct_1(1u, vec3(1.0), mat4(1.0), mat3(1.0), mat2(1.0), uvec2(1u), mat4x2(1.0))), bvec3(true), _GLF_struct_6(vec3(1.0), mat4x3(1.0), _GLF_struct_3(ivec2(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) + 0))))), max((1), (1))))), vec2(1.0), bvec2(true), 1, vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - 0.0))) + 0.0, ((_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) - 0.0))) + 0.0) / 1.0)))), _GLF_struct_4(vec4(1.0), true), mat4x2(1.0), uvec4(1u), _GLF_struct_5(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), 1, _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), bvec2(true))), vec2(1.0), _GLF_struct_8(mat4x3(1.0), 1, mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.2))), 1.0))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(max(vec4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(14.20)), bool(false))), (false ? _GLF_FUZZED(6661.1053) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), float(_GLF_FUZZED(14.20)), bool(false)))))), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), (max(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(821.537)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(168.874)))), float(_GLF_FUZZED(233.051)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.6), _GLF_FUZZED(6752.9410)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true)))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true), bvec2(bvec2(bvec2((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true)))), bvec2(bvec4(bvec2((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true), false, true)))), (bool(_GLF_IDENTITY(bvec2((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true), bvec2(bvec4(bvec2((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true), false, true))))) || false)))), bool(bool(false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * ((vec4(1.0)) * mat4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)), mat4(1.0) * (mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))) * ((vec4(1.0)) * mat4(1.0))))), ((vec4(1.0)) * mat4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))) / vec4(1.0, 1.0, 1.0, 1.0))), _GLF_struct_7(vec3(1.0), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, _GLF_IDENTITY(abs(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? abs(1.0) : _GLF_FUZZED(ldexp(-92.49, 890)))))), mix(float(_GLF_FUZZED((3.2 + 537.953))), float(float(vec2(1.0, abs(1.0)))), bool(true))))))), _GLF_struct_10(_GLF_struct_9(uvec2(1u), vec4(1.0), vec3(1.0), vec3(1.0), bvec4(true), mat4x2(1.0), vec3(1.0)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))))), ((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(174168u))))), 0u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, (1u) - (17209u & 0u)), 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))))), ((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), min(_GLF_IDENTITY(uvec2(1u, 0u), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))), uvec2(1u, 0u)))))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))) | 0u)))), max((~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))))), ((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))))), ((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u | (1u)), 1u, _GLF_IDENTITY(1u, max(1u, 1u)))), 0u))))))))) | 0u)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))))), ((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))))), ((_GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), ~ (~ (clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))))) | 0u)))))))), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(uvec2(1u, 0u)))))) << 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(1u, 0u))))), ((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u), 0u)))))) ^ uvec2(0u, 0u)) << _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))))))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))), _GLF_IDENTITY(uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(1u, 0u))))), ((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u), 0u)))))) ^ uvec2(0u, 0u)) << _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))))))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))))), min(uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(1u, 0u))))), ((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u), 0u)))))) ^ uvec2(0u, 0u)) << _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))))))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))))), uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(1u, 0u))))), ((_GLF_IDENTITY(uvec2(1u, 0u), ~ (~ (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u), 0u)))))) ^ uvec2(0u, 0u)) << _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))))))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))))))))))));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_13(_GLF_struct_12(1.0, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))).x), vec2(1.0)), mat4x3(1.0), _GLF_struct_16(_GLF_struct_14(uvec4(1u)), _GLF_struct_15(mat3x4(1.0), mat4x3(1.0), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(-66.81)), bool(false))), mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-66.81)), bool(false)))), _GLF_IDENTITY(float(_GLF_FUZZED((true ? _GLF_IDENTITY(-1833.9890, float(mat3x2(_GLF_IDENTITY(-1833.9890, (-1833.9890) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0))) : 3.2))), (_GLF_IDENTITY(float(_GLF_FUZZED((true ? -1833.9890 : 3.2))), (float(_GLF_FUZZED((true ? -1833.9890 : 3.2)))) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-44.48)), bool(false))))) / 1.0), bool(false))), 1.0)), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), mat4x2(1.0), ivec2(1), 1u), mat2x3(1.0)), mat2x4(1.0));
 uint workgroup_base = _GLF_struct_replacement_11._f0.workgroup_size * _GLF_struct_replacement_17._f0._f0.workgroup_id;
 _GLF_struct_35 _GLF_struct_replacement_35 = _GLF_struct_35(_GLF_struct_27(bvec3(true)), _GLF_struct_29(_GLF_struct_28(1.0, ivec4(1), mat2(1.0), bvec3(true), 1u, uvec3(1u), 1)), _GLF_struct_32(_GLF_struct_30(1u, 1.0, vec2(1.0), 1), ivec2(1), _GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), vec2(1.0))), 1u, _GLF_struct_31(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1, mat2(1.0), mat3(1.0), _GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), 1u)), _GLF_struct_33(mat3x4(1.0)), _GLF_struct_34(uvec2(1u), mat2x3(1.0), true, bvec4(true)), true, subgroup_id * _GLF_struct_replacement_26._f4.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.z = _GLF_struct_replacement_35.subgroup_base, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.z = _GLF_struct_replacement_35.subgroup_base));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((true ? -5.8 : (8217.5482))) : 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(vec3(25.83, -1931.8252, 45.51), vec3(76.64, 6.7, 2146.8862))) : injectionSwitch.x)) > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.z + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) / (0 ^ 1)), max(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) / (0 ^ 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) / (0 ^ 1)), max(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) / (0 ^ 1)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0))), dot(vec2(1.0, 0.0), vec2(0.0, sqrt(1.0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) / (0 ^ 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.w = _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
          {
           do
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, true && (false)), true)))) && true)));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     atomicStore(write_val, _GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.w), (_GLF_IDENTITY(uint(GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.w), uint(uvec3(uint(GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.w), 1u, 0u)))) << 0u), 4, _GLF_IDENTITY(64, int(ivec2(64, 1))), 4);
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, false)), false)))), true)))), false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ! (_GLF_IDENTITY(! (_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, 0, 0)))) * 1) : _GLF_FUZZED(_injected_loop_counter))) != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (_GLF_IDENTITY(int(2), ~ (~ (int(2))))))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (_GLF_IDENTITY(int(2), ~ (~ (int(2))))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (_GLF_IDENTITY(int(2), ~ (~ (int(2))))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (_GLF_IDENTITY(int(2), ~ (~ (int(2))))))))))))))))); _injected_loop_counter ++)
        {
         do
          {
           GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.y = read_val;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, true && (false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.7)))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.7))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0)), (vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, exp(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.3), _GLF_FUZZED(float(-4867))), bvec2(false, false))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.03), _GLF_FUZZED(-8.6)), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-596.514), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0)), 1.0, 1.0))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2(-487.499, 2821.2734, -9193.9435, 39.82)) : mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), transpose(transpose(_GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2(-487.499, 2821.2734, -9193.9435, 39.82)) : mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), (true ? mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2(-487.499, 2821.2734, -9193.9435, 39.82)) : mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))) : _GLF_FUZZED(mat2(-9621.1137, -2599.1905, 6.9, -804.120))))))))))), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(7.6), (_GLF_FUZZED(7.6)) + 0.0) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) + 0.0))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), 1.0, 1.0))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0), 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), mix(float(_GLF_FUZZED(-943.099)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), (float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(79.62))), float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0)))) / 1.0), abs(log(1.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), (float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0)), mix(vec3(_GLF_FUZZED(-76.41), (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0)))[1], (vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0)))[2]), vec3((vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0)))[0], _GLF_FUZZED(-7.7), _GLF_FUZZED(-379.032)), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(204.903))), 0.0, 0.0)), 0.0)))) / 1.0)))) / 1.0))))))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0)), (vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, exp(0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-596.514), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-596.514), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 1.0))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6764.8531)), float(0.0), bool(true))), mix(float(0.0), float(_GLF_FUZZED(-994.622)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-192.610)), bool(false))), 0.0)), 0.0)))), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))), max(clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))), _GLF_IDENTITY(float(vec4(clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(6215.4612) : float(vec4(clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))), 0.0, 1.0, 0.0))))))))), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED((+ -975.466))), vec2((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), (0.0) + 0.0) : _GLF_FUZZED(-54.33)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)), true)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0))) / 1.0))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 0.0)), 1.0, 1.0))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * _GLF_IDENTITY(1.0, (1.0) + 0.0)), 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(74.44, 19.22, -18.76, 928.943) * injectionSwitch)) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 0))], _GLF_FUZZED(29.78)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(74.44, 19.22, -18.76, 928.943) * injectionSwitch)) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 0))], _GLF_FUZZED(29.78)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(74.44, 19.22, -18.76, 928.943) * injectionSwitch)) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 0))], _GLF_FUZZED(29.78)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(74.44, 19.22, -18.76, 928.943) * injectionSwitch)) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 0))], _GLF_FUZZED(29.78)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(74.44, 19.22, -18.76, 928.943) * injectionSwitch)) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 0))], _GLF_FUZZED(29.78)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(74.44, 19.22, -18.76, 928.943) * injectionSwitch)) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 0))], _GLF_FUZZED(29.78)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(74.44, 19.22, -18.76, 928.943) * injectionSwitch)) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1))), 0))], _GLF_FUZZED(29.78)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((float(84354u) / 8025.7196))), bool(false))), length(vec3(0.0, 0.0, 0.0)), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), max(length(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), length(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, cos(0.0), 0.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(float(_GLF_FUZZED(1.7)), float((_GLF_IDENTITY(0.0, (0.0) + 0.0))), bool(true))) * 1.0))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))), (true ? (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) : _GLF_FUZZED(390.819))) / 1.0, mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0))), bool(true))))))) / 1.0)))))))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, exp(0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-596.514), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-596.514), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 1.0))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6764.8531)), float(0.0), bool(true))), mix(float(0.0), float(_GLF_FUZZED(-994.622)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-192.610)), bool(false))), 0.0)), 0.0)))), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0) : _GLF_FUZZED(-54.33)))))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED((+ -975.466))), min(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED((+ -975.466))), vec2(_GLF_FUZZED(5.9), _GLF_FUZZED((+ -975.466))))), vec2((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) / 1.0)), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 0.0)), 1.0, 1.0))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * _GLF_IDENTITY(1.0, (1.0) + 0.0)), 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0)))[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], mix(float(_GLF_FUZZED(-6.2)), float((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0]), bool(true))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], mix(float(_GLF_FUZZED(-6.2)), float((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0]), bool(true))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], mix(float(_GLF_FUZZED(-6.2)), float((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0]), bool(true))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((float(84354u) / 8025.7196))), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y, 1.0, length(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(float(_GLF_FUZZED(1.7)), float((_GLF_IDENTITY(0.0, (0.0) + 0.0))), bool(true))), (_GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(float(_GLF_FUZZED(1.7)), float((_GLF_IDENTITY(0.0, (0.0) + 0.0))), bool(true)))) / 1.0) * 1.0))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))), (true ? (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) : _GLF_FUZZED(390.819))) / 1.0, mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0))), bool(true))))))) / 1.0)))))))), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0)), (vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, exp(0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-596.514), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-596.514), _GLF_FUZZED(9.3)), bvec2(false, false)))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))), 1.0, 1.0))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6764.8531)), float(0.0), bool(true))), mix(float(0.0), float(_GLF_FUZZED(-994.622)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-192.610)), bool(false))), 0.0)), max(length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6764.8531)), float(0.0), bool(true))), mix(float(0.0), float(_GLF_FUZZED(-994.622)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-192.610)), bool(false))), 0.0)), length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6764.8531)), float(0.0), bool(true))), mix(float(0.0), float(_GLF_FUZZED(-994.622)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-192.610)), bool(false))), 0.0)))), 0.0)))), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))))), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED((+ -975.466))), vec2((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.7) : 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-54.33)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), ((0.0)) / 1.0)) + 0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mat2(mat3x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))))))), 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)) / 1.0)), 1.0))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * _GLF_IDENTITY(1.0, (1.0) + 0.0)), 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-1.8 - -317.713))), float(0.0), bool(true))), 0.0)), sqrt(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(vec2(1424.2999, -4.5).t)), vec2(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], float(mat4x2((max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[0], 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) * mat4(1.0), vec4(mat3x4(_GLF_IDENTITY((vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) * mat4(1.0), clamp((vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) * mat4(1.0), (vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) * mat4(1.0), (vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) * mat4(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0)))))), 1.0))), (max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4186.8296), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(29.78)), bvec2(true, false))), injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.8)))), float(_GLF_FUZZED(_GLF_IDENTITY((float(84354u) / 8025.7196), float(mat4x2((float(84354u) / 8025.7196), 0.0, 0.0, 0.0, abs(sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), bool(false))), length(vec3(0.0, 0.0, 0.0)), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)))))), length(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(float(_GLF_FUZZED(1.7)), float((_GLF_IDENTITY(0.0, (0.0) + 0.0))), bool(true))) * 1.0))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))), (true ? (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) : _GLF_FUZZED(390.819))) / 1.0, mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) + 0.0) : _GLF_FUZZED(-5.8))), 0.0)), 0.0)), 0.0)))) / 1.0) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))) / 1.0))), bool(true))))))) / 1.0)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true))
  {
  }
 else
  {
   buf[GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.w] = uint(subgroupAllEqual(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.y, ~ (~ (GLF_merged4_0_1_13_1_1_8_2_1_13_3_1_11num_workgroupread_valsubgroup_basevirtual_gid.y)))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
