#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) && true))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5441.9987), _GLF_FUZZED(5390.2756)), bvec2(false, false))), sin(0.0), 0.0)), mix(vec2((vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5441.9987), _GLF_FUZZED(5390.2756)), bvec2(false, false))), sin(0.0), 0.0)))[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(-6.5), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5441.9987), _GLF_FUZZED(5390.2756)), bvec2(false, false))), sin(0.0), 0.0)))[1]), bvec2(false, true)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(494.993, -428.105)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(494.993, -428.105)), (_GLF_FUZZED(vec2(494.993, -428.105))) / vec2(1.0, 1.0)), _GLF_FUZZED(vec2(494.993, -428.105)))))).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec3(5370.0322, 0.3, 246.284) + -2.1).x)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((28.32 - -49.22))), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-18.20) : float(mat2x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > injectionSwitch.y)))) || false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), (uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(min(642.561, -9016.4305)) : _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y : _GLF_FUZZED(4195.9741)), float(float((true ? _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y : _GLF_FUZZED(4195.9741)))))), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-63.94), _GLF_FUZZED(-6.9)), bvec2(false, false))).y))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0)))) * (injectionSwitch)).y : _GLF_FUZZED(4195.9741)), float(float((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (injectionSwitch), _GLF_IDENTITY((exp(vec2(0.0, 0.0)) * (injectionSwitch)) * mat2(1.0), max((exp(vec2(0.0, 0.0)) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY((exp(vec2(0.0, 0.0)) * (injectionSwitch)) * mat2(1.0), ((exp(vec2(0.0, 0.0)) * (injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)))))).y : _GLF_FUZZED(4195.9741)))))), injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.7)), bool(false))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) || false))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false))), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, (false ? _GLF_FUZZED(-0.1) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), (max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u), subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))) ^ (subgroup_id * subgroup_size)))) + 0u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))), (max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u, max((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))) ^ (subgroup_id * subgroup_size)))) + 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false))), false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))) || false), true, true, true)), false, false))), false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) || false)))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true, true, true)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false))), false)))))), false || (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-2643.2929), (injectionSwitch)[1]), bvec2(false, true)))[1])).x > injectionSwitch.y)))), true, true, true)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), true, true, false)), bool(bvec3(bool(bvec4(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), true, true, false)), true, false)))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), bvec3(bvec4(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), false))), true))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), bvec3(bvec4(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)), false, false)), true)))))), true))), true))))))), false))))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), true && (_GLF_IDENTITY(false || ((false)), (false || ((false))) || false)))))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, false)))), false)))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), true, false)))), false, true, false)))) || false)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6361.3154, -62.60)) : injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, (true) || false)))))), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true))))) && (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)), true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)), true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), false, false)))))), true && (bool((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))) && true), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))
  barrier();
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), ~ (~ _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), ~ (~ _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid)))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), (uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))) | (uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), _GLF_IDENTITY(0u, 0u + (0u)))))))), min((_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(virtual_gid, 1u, 1u, 0u), (true ? uvec4(virtual_gid, 1u, 1u, 0u) : _GLF_FUZZED(uvec4(38338u, 135750u, 43373u, 35644u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid)))) ^ 0u)), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) | (0u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid)))) ^ 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid)))) ^ 0u))) + 0u), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, 0u + (0u))))))), (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid)))) ^ 0u)), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, 0u + (0u)))))))) | 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED((163158u << workgroup_id)) : ~ (~ (virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))))) ^ 0u)), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, 0u + (0u))))))), (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED((163158u << workgroup_id)) : ~ (~ (virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))))) ^ 0u)), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, 0u + (0u)))))))) | (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED((163158u << workgroup_id)) : ~ (~ (virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))))) ^ 0u)), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, 0u + (0u))))))))), (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) | (virtual_gid))) / 1u), ~ (~ (virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (virtual_gid) / 1u), ~ (~ (virtual_gid)))) ^ 0u)), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), 1u * (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) + (0u)))))))) | 0u))) ^ 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ~ (~ (virtual_gid)))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, _GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) * 1u)))))) * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), ~ (~ (virtual_gid)))), uint(uvec2(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(0u, 0u + (0u)))))))))) >> 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, _GLF_IDENTITY(min(write_val, _GLF_IDENTITY(write_val, (write_val) / 1u)), (min(write_val, _GLF_IDENTITY(write_val, (write_val) / 1u))) | (_GLF_IDENTITY(min(write_val, _GLF_IDENTITY(write_val, (write_val) / 1u)), 0u ^ (min(write_val, _GLF_IDENTITY(write_val, (write_val) / 1u))))))), write_val)), (true ? write_val : _GLF_FUZZED(workgroup_id))), 4, 64, 2), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_id))), 4, 64, 2), max(atomicLoad(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_id))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(true ? write_val : _GLF_FUZZED(workgroup_id), (true ? write_val : _GLF_FUZZED(workgroup_id)) / 1u))), 4, 64, 2))), (false ? _GLF_FUZZED(subgroup_size) : atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY((true ? write_val : _GLF_FUZZED(workgroup_id)), max((true ? write_val : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)), _GLF_IDENTITY((true ? write_val : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))), ~ (_GLF_IDENTITY(~ ((true ? write_val : _GLF_FUZZED(workgroup_id))), (~ ((true ? write_val : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(~ ((true ? write_val : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_IDENTITY((true ? write_val : _GLF_FUZZED(workgroup_id)), min((true ? write_val : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((true ? write_val : _GLF_FUZZED(workgroup_id)), uint(uvec2((true ? write_val : _GLF_FUZZED(workgroup_id)), 1u)))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id))), (false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id)))) >> 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id))), clamp(false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id))), false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id))), (false ? _GLF_FUZZED(workgroup_size) : false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id))))))), false ? _GLF_FUZZED(workgroup_base) : ~ ((true ? write_val : _GLF_FUZZED(workgroup_id)))))))))))))), 4, 64, 2)))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), false, true, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-13.29))))) - 0.0) > injectionSwitch.y)) || false), false), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-37.05, 148.269)))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-37.05, 148.269)))))).x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-37.05, 148.269)))))).x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-37.05, 148.269)))))).x > injectionSwitch.y))))))))))))
    barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED((++ read_val)) : read_val))))) >> 0u)) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED((++ read_val)) : read_val))))) >> 0u)) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u)))))) * 1u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u), ~ (~ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u))))) * (0u ^ 1u))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) | (3u))))))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED((++ read_val)) : read_val))))) >> 0u)) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u), ~ (~ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u))))) * (0u ^ 1u))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) | (3u))))))) / 1u) | 0u, (((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED((++ read_val)) : read_val))))) >> 0u)) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u), ~ (~ (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) >> 0u)) ^ 0u))))) * (0u ^ 1u))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) | (3u))))))) / 1u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) | 0u)))), max(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), ((subgroup_base)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bool(bool(bvec3(true, false, true)))))) ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), uint(uvec3(~ (subgroup_base), 0u, 1u)))) - 0u)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))))) << 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_val)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) / 1u)), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))))) << _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) << 0u) : _GLF_FUZZED(subgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))))) << 0u), (true ? _GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))))) << 0u) : _GLF_FUZZED(floatBitsToUint(43.26)))), (true ? _GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (true ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) : _GLF_FUZZED(workgroup_id)))) >> 0u), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u), (false ? _GLF_FUZZED(read_val) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)))) | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), ((subgroup_base)) / 1u)))), 0u | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), ((subgroup_base)) / 1u))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))) - 0u)))) << 0u) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(read_val))))))))), _GLF_IDENTITY(((true ? buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) | 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) / _GLF_IDENTITY(1u, (1u) ^ 0u), 0u ^ (_GLF_IDENTITY(((true ? buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) | 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) / _GLF_IDENTITY(1u, (1u) ^ 0u), (true ? ((true ? buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) | 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) / _GLF_IDENTITY(1u, (1u) ^ 0u) : _GLF_FUZZED(num_workgroup)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))))), max(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), uint(uvec4(_GLF_IDENTITY(~ (~ (subgroup_base)), (~ _GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) >> 0u)) / 1u), 0u, 0u, 0u)))))))))), 0u ^ ((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))))), max(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), uint(uvec4(_GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) / 1u), 0u, 0u, 0u))))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))))), max(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), uint(uvec4(_GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) / 1u), 0u, 0u, 0u)))))))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))))), max(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), uint(uvec4(_GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) / 1u), 0u, 0u, 0u)))))))))))))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), 0u | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max(_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))), (subgroup_base))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))), ~ (~ (subgroup_base)))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base))))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base))))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base))))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base))))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base))))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), min(uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))))))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), (0u ^ 0u) | ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))), ~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), max(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), max(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))) << 0u)) << 0u)))))))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), subgroup_base)), ~ (~ (subgroup_base))))))))) << 0u))), 0u | (((_GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(read_val))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (~ (subgroup_base)))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base)), 0u ^ (max(_GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_base))), (subgroup_base)))) : _GLF_FUZZED(4990u)))))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), min(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), ~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))), ~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))))))))), clamp(~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), min(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), ~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))), ~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))))))))), ~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), min(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), ~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))), ~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))))))))))), ~ (_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), min(~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), ~ ((_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))), ~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))))))))))), _GLF_IDENTITY(0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << 0u))))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))), (0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u))))))), _GLF_IDENTITY(((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), max((subgroup_base), _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))))))))) / 1u, (false ? _GLF_FUZZED(num_workgroup) : ((_GLF_IDENTITY(true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) | ((~ (subgroup_base)))))), (true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), ~ (~ ((~ (subgroup_base)))))))) << 0u))) / 1u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(subgroup_base)), _GLF_IDENTITY(0u, (0u) ^ 0u) | ((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(subgroup_base)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false))))), (! ((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false))))), (! ((_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), true && (! (false))), false)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) ? _GLF_FUZZED(num_workgroup) : ~ (~ ((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(subgroup_base))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))) ? _GLF_FUZZED(num_workgroup) : ~ (~ ((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(subgroup_base))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((false), true && ((false))), false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((false), true && ((false))), false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((false), true && ((false))), false)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((false), true && ((false))), false)))))), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((false), true && ((false))), false)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! _GLF_IDENTITY((false), true && ((false))), false)))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))))))))) ? _GLF_FUZZED(num_workgroup) : ~ (~ ((true ? buf[virtual_gid] = uint(subgroupAllEqual(read_val)) : _GLF_FUZZED(subgroup_base)))))) >> 0u)) / 1u)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(5319u, uint(uvec2(5319u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uvec3(2u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), clamp(2u, 2u, 2u))) >> (0u | 0u)))))), (uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uvec3(2u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), clamp(2u, 2u, 2u))) >> (0u | 0u))))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), uint(2u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uvec3(2u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), clamp(2u, 2u, 2u))) >> (0u | 0u)))))), (uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uvec3(2u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), clamp(2u, 2u, 2u))) >> (0u | 0u))))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uvec3(2u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), clamp(2u, 2u, 2u))) >> (0u | 0u)))))), (uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uvec3(2u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), clamp(2u, 2u, 2u))) >> (0u | 0u))))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(uint(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), uint(2u)))) ^ 0u)) - 0u) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) ^ 0u)), uint(2u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(5319u, uint(uvec2(5319u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(5319u, uint(uvec2(5319u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), clamp(_GLF_IDENTITY(5319u, uint(uvec2(5319u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(5319u, uint(uvec2(5319u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(5319u, uint(uvec2(5319u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), _GLF_IDENTITY(5319u, uint(uvec2(5319u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), _GLF_IDENTITY(5319u, uint(uvec2(5319u, ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) ^ 0u)) | (1u)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(read_val) : uint(2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))))))))))), ~ (~ _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))), ((buf[virtual_gid] = uint(subgroupAllEqual(read_val)))) + 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false)), true && (bool(bvec4(false, false, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), true && (bool(bvec4(false, false, false, false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false)), true && (bool(bvec4(false, false, false, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6468.7802), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1277.8396)), bvec2(true, false)))[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
