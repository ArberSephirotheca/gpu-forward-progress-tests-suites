#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup;
 uvec4 GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size;
 uvec4 GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0)) >> _GLF_IDENTITY(int(7), int(7))), ((_GLF_IDENTITY(0, 0 ^ (0)) >> _GLF_IDENTITY(int(7), int(7)))) * 1)); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         barrier();
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz = GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, true, false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), clamp((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), mix(float((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-74.68)), bool(false))))) - _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0)))) > injectionSwitch.y)))) && true))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))
                barrier();
               barrier();
              }
             return;
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))), bool(bool(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_base;
 GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz = GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.xyz;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))))))), (! (_GLF_WRAPPED_LOOP(false))) || false))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         break;
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), true, false)))) && true))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, int(int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))) && true)))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(74.74, 5339.8392)) : injectionSwitch)).x)) ^ (subgroup_id))) >> 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id))) >> 0u) | ((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.9), max(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(488.180)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (subgroup_id))) >> 0u))) << 0u));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z = subgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y = GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (86621 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, (6) | (6))))), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-673.316)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.9) : 0.0))))), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / exp(0.0)), abs(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(-7044.5328, 4446.8896, 9.5, -6.7, 1.5, 7621.6127, 5263.8776, 922.965, -0.3, 1.5, -968.438, 77.84, -481.576, -5914.0900, 8654.5979, 2098.2315)))))), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), length(0.0))), float(vec4(float(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, exp(0.0), length(0.0))), 1.0, sqrt(1.0), 1.0)))), abs(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0), _GLF_IDENTITY(vec4(vec4(vec4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) - 0.0), exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0))), injectionSwitch.x))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), float(mat2(float(0.0), 1.0, 1.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), float(mat2(float(0.0), 1.0, 1.0, 1.0)))))))), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))), min(vec4(_GLF_IDENTITY(vec4(vec4(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))).x)), max(vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(130.167)), float(0.0), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((1798.8673 / vec4(2.4, -8084.5570, 207.049, 217.737))) : vec4(vec4(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))).x)), max(vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(130.167)), float(0.0), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))))), _GLF_IDENTITY(vec4(vec4(vec4(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.5, -1699.1682)) : injectionSwitch)), injectionSwitch)).x))), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-4.6)))))), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) - abs(vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))), (vec4(vec4(vec4(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.5, -1699.1682)) : injectionSwitch)), injectionSwitch)).x))), min(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-4.6)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-4.6))) - determinant(mat3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0))))))), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.5) : _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.5) : _GLF_ZERO(0.0, injectionSwitch.x)))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.5) : _GLF_ZERO(0.0, injectionSwitch.x)))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.5) : _GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.0), (true ? _GLF_IDENTITY(_GLF_FUZZED(8.0), mix(float(_GLF_FUZZED(5386.1094)), float(_GLF_FUZZED(8.0)), bool(true))) : _GLF_FUZZED(-820.021))), _GLF_FUZZED((true ? 3.6 : 87.09))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x = GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.w = subgroup_local_id;
  }
 else
  {
  }
 GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y = GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(85.17)), bool(false))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0) / 1.0))) * 1.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false))))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(85.17)), bool(false))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0) / 1.0))) * 1.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false))))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) * 1.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(85.17)), bool(false))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0) / 1.0))) * 1.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)) || false))))) && true)) || false))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.w = num_workgroup;
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.x = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.w, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.x = GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.w) ^ 0u);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6752.0851)), float(1.0), bool(true))), 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(floor(-597.659))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1342.3233)), bool(false))) > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), true && (bool(bvec4(false, false, false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 0.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
          break;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         break;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       continue;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < injectionSwitch.y)))) && true))))
        {
         _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.x = GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.x, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.x = GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.x) * 1u);
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(91767u)), _GLF_FUZZED(2.1)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), false))).y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        continue;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-670.007)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-670.007)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))))) * 1.0))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-670.007)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-670.007)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))))) * 1.0)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false, false, true)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9605.5617))), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (injectionSwitch.x > injectionSwitch.y) || false))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true))))), (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false))))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))))) && true))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
          continue;
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))) > injectionSwitch.y))))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(2973.5882, -304.812).r)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))); _injected_loop_counter ++)
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                 barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), true))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.5)), bvec2(true, false))))).y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) || _GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (false ? _GLF_FUZZED(62679) : ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), max((1 << _GLF_IDENTITY(int(5), int(5))), (1 << _GLF_IDENTITY(int(5), int(5)))))) | 0), (1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       for(int _injected_loop_counter = (1 | ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 1, 0))))) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)); _injected_loop_counter --)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        barrier();
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   else
    {
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true)))))))
    return;
  }
 else
  {
  }
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.z = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) - (0u & 36329u)) | (workgroup_size));
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z = workgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))) != (0 & 97323)); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 & -81971); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2452.2481) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x), 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(mix(float(cos(0.0)), float(_GLF_FUZZED(-5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(float(cos(0.0)), float(_GLF_FUZZED(-5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(cos(0.0)), float(_GLF_FUZZED(-5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(mat4x2(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(85.94))))), min(float(mat4x2(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))), _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(mod(-1.1, -6.7)))), 0.0, 0.0, 1.0)), (float(mat4x2(injectionSwitch.y, determinant(mat4(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 0.0, 0.0, 1.0))) * 1.0)))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))), min(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | (_GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0))) : _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(9) : _injected_loop_counter --)))))
            {
             return;
            }
          }
        }
      }
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0))).y))))
          {
           for(int _injected_loop_counter = (1 & _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 1) + (int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.w = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z, (GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(atomicCompSwap(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z, subgroup_id, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(atomicCompSwap(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z, subgroup_id, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y)) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(atomicCompSwap(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z, subgroup_id, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(_GLF_IDENTITY(atomicCompSwap(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z, subgroup_id, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y), 0u ^ (atomicCompSwap(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z, subgroup_id, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y)))) : _GLF_FUZZED(subgroup_local_id)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(_GLF_IDENTITY(atomicCompSwap(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z, subgroup_id, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y), 0u ^ (atomicCompSwap(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.z, subgroup_id, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y)))) : _GLF_FUZZED(subgroup_local_id))) - 0u))))))));
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), false, true)), false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 uint workgroup_base = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.z * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id) - uvec4(0u, 0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id, uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id), uvec4(0u, 0u, 0u, 0u) | ((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id))), max((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id), ~ (~ ((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id))))))), (~ (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id), max((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id), ~ (~ ((GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id)))))))) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))) - uvec4(0u, 0u, 0u, 0u))))))).w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.z = workgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), bool(bvec3(bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true, false, true))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))))).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (((injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), true))), false))))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0 >> _GLF_IDENTITY(int(1), int(1))))))], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0 >> _GLF_IDENTITY(int(1), int(1))))))], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.8, 597.796)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0))))), 0.0, 1.0, 0.0, 0.0, sqrt(1.0), sqrt(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(789.520) : _GLF_IDENTITY(1.0, float(mat4(1.0, sqrt(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0))).y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0))).y), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0))).y), (false ? _GLF_FUZZED(0.6) : (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0))).y)))), float(_GLF_FUZZED(-49.12)), bool(false)))), max(injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))).x) / 1.0) > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(0, 0 + (0)), _GLF_IDENTITY(~ (~ ((int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(0, 0 + (0)))), (~ (~ ((int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : injectionSwitch.x))))) >> _GLF_IDENTITY(0, 0 + (0))))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((353.276 / 2801.7895))), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), bool(bool(! (_injected_loop_counter < 1))))))); _injected_loop_counter ++)
                      {
                       barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                        continue;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (1) ^ 0) | 1)); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))
                  return;
                 break;
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false) || (false))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                  barrier();
                 return;
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) ^ 0))
              {
               barrier();
              }
            }
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-22886 & 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED((+ _injected_loop_counter)) : _injected_loop_counter --)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0)))))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  barrier();
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id, uvec4(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id[0], GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id[1], GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id[2], GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id[3])).xyz.z;
 uint subgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x, clamp(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x, max(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x, GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x)), GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x)) * GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x;
 _GLF_IDENTITY(GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.y = _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.y = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), min(subgroup_base, subgroup_base))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.y = subgroup_base, (GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.y = subgroup_base) >> 0u)), (~ (GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.y = subgroup_base)) ^ 0u)) + 0u)));
 do
  {
   GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y = _GLF_IDENTITY(GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz, uvec3(_GLF_IDENTITY(uvec3(GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz), _GLF_IDENTITY((uvec3(GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz)) << uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uvec3(GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz)) << uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(77146u, 181615u, 186887u))))))).y;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, uint(uvec3(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, 1u, 0u))) + GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.2, 65.28)))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 & -22631); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 do
  {
   GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.z = virtual_gid;
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(injectionSwitch.y), bool(true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), (true && (_GLF_IDENTITY(false, (false) && true))) || false))))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, false))));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(false))), (bool(bool(_GLF_WRAPPED_LOOP(false)))) && true)));
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false, true))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 0.0)), mix(float(float(vec2(injectionSwitch.x, 0.0))), float(_GLF_FUZZED(7.9)), bool(false)))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false, true))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false, true))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false, true))))), true, false))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z = GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.z;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + _GLF_IDENTITY(1, (1) << 0)) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y), (true ? _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y), ((GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec3((_GLF_FUZZED(workgroup_id)) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 0u)))))) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x), (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) | (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) + 0u), (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) | (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1))) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x))), (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u))) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x), (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / _GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u))) << 0u, (((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u))) << 0u) << 0u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, max(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, (true ? GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.w), clamp(_GLF_FUZZED(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.w), _GLF_FUZZED(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.w), _GLF_FUZZED(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenum_workgroup.w))))), GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)))) | (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id, max(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id, GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id)).xyz.y) / 1u)) >> 0u), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u, ~ (~ (_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u, ((GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u) << 0u)))))) >> 0u)) / 1u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)))) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (false ? _GLF_FUZZED(((subgroup_id / 42779u) | workgroup_id)) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y)), (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, max(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x), (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, max(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1))))) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y, (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y, (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), min((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y, 1u * (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y)) + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) ^ uvec3(0u, 0u, 0u))) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, min(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y))) / 1u, (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))).y, min(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y))) / 1u)))) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x), (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) * 1u)) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y), (~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y)) >> 0u))))), (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y), (~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y)) >> 0u))))), (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) >> 0u) >> 0u)) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) | _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u))) + 0u)) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size)).y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, uint(_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), clamp(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1)))))) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) : _GLF_FUZZED(virtual_gid)))) | ((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id, ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) * (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id)).xyz.y) / 1u)) >> 0u) + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), min((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), ((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u))) / 1u)))))), uint(uint(_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u))) + 0u)) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size)).y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, uint(_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), clamp(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1)))))) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) : _GLF_FUZZED(virtual_gid)))) | ((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id, ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) * (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id)).xyz.y) / 1u)) >> 0u) + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), min((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), ((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u))) / 1u))))))))))), ((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) ^ uvec3(0u, 0u, 0u))) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, min(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y))) / 1u, (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))).y, min(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y))) / 1u)))) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x), (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) * 1u)) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y), (~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y)) >> 0u))))), (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) : _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y), (~ (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y)) >> 0u))))), (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) >> 0u) >> 0u)) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) | _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u))) + 0u)) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size)).y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, uint(_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), clamp(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1)))))) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) : _GLF_FUZZED(virtual_gid)))) | ((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id, ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) * (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id)).xyz.y) / 1u)) >> 0u) + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), min((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), ((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u))) / 1u)))))), uint(uint(_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz) | (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz)).y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u))) + 0u)) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size)).y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1, uint(_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), clamp(uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1), uint(GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1)))))) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y) / 1u)) >> 0u) + ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x)) : _GLF_FUZZED(virtual_gid)))) | ((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.y + _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id.xyz.y, (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id, ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) * (GLF_merged2_0_3_72_3_1_17GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_basesubgroup_local_id)).xyz.y) / 1u)) >> 0u) + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), min((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u)), ((_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x, ((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y + 1) % GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.xyz.x) - 0u))) / 1u)))))))))))) | 0u) << 0u))) | 0u) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, min(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) / 1u)) / 1u))), 5u, 5u))) << _GLF_IDENTITY(0u, ~ (~ (0u))))) >> 0u)), uint(5u))), (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, min(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) / 1u)) / 1u))), 5u, 5u))) << _GLF_IDENTITY(0u, ~ (~ (0u))))) >> 0u)), uint(5u)))) ^ _GLF_IDENTITY(0u, (0u) | (0u))));
 do
  {
   GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.x = next_virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.w = GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / 1)), int(3)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(85389, min(85389, 85389))) : 0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), determinant(mat3(1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-1270.4234))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), abs(0.0), _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2838.5868)), bool(false))), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(sqrt(1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), determinant(mat3(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), abs(0.0), _GLF_IDENTITY(abs(0.0), float(_GLF_IDENTITY(mat2x3(abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))))))), _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(sqrt(1.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   do
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
  }
 GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.w = read;
 GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.x = GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.w;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.y = GLF_merged2_0_3_59_3_1_4GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gidread.xyz.x;
 atomicStore(buf[GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_sizenext_virtual_gid.w], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) / (0 ^ 1), max((64) / (0 ^ 1), _GLF_IDENTITY((64) / (0 ^ 1), max((64) / (0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((64) / (0 ^ 1), ((64) / (0 ^ 1)) >> 0), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | ((64))) / (0 ^ 1), _GLF_IDENTITY(((64) / (0 ^ 1)), _GLF_IDENTITY(max(((64) / (0 ^ 1)), ((64) / (0 ^ 1))), (max(((64) / (0 ^ 1)), ((64) / (0 ^ 1)))) << 0)) >> 0)))))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if((GLF_merged3_0_1_16_1_1_17_2_1_13next_virtual_gidsubgroup_local_idsubgroup_size.y % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(49327, min(49327, 49327))) : 2))) == 0)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), min((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (true ? _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(_injected_loop_counter)))))) ^ 0)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), clamp(0 << _GLF_IDENTITY(int(1), int(1)), 0 << _GLF_IDENTITY(int(1), int(1)), 0 << _GLF_IDENTITY(int(1), int(1)))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.y = atomicLoad(buf[GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))), clamp(_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))), (true ? _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))) : _GLF_FUZZED(-95890))), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))))), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), min((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36751)), _GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1)), (~ (_GLF_IDENTITY(int(int((true ? 2 : _GLF_FUZZED(36751)))), (int(int((true ? 2 : _GLF_FUZZED(36751))))) / 1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))))))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-80.75, 22.64)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((false)))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, true && (false)))), (false) && true)))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))) || false)))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) || false))))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.y = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z, (true ? GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED(uvec3(35740u, 199133u, 386u))))))).z, clamp(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED(uvec3(35740u, 199133u, 386u))))))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED(uvec3(35740u, 199133u, 386u))))))).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED(uvec3(35740u, 199133u, 386u))))), (true ? ~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED(uvec3(35740u, _GLF_IDENTITY(199133u, clamp(199133u, 199133u, 199133u)), 386u))))) : _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))).z, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED(uvec3(35740u, 199133u, 386u)))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id, (true ? GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id : _GLF_FUZZED(uvec3(35740u, 199133u, 386u)))))))))).z)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z) - 0u)), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z) | (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z)), (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z) - 0u)))))], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))) || false, ((true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))))
        {
         subgroupBarrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) - ivec3(0, 0, 0))))) | 0, ~ (~ ((0) | 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 ^ 0) & 1)); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id.z], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[0], (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[0]) + 0u), GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[_GLF_IDENTITY(2, (2) / _GLF_IDENTITY(1, (1) >> 0))], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[3])).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id, uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))) | (0u)), 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id))[0], (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[0]) + 0u), GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_12num_workgroupreadvirtual_gidworkgroup_id[3])).y) | 0u), 4, 64, 4);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
