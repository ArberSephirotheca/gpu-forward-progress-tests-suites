#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(45.99), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(801.294)), bvec2(true, false)))) + vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(45.99), (injectionSwitch)[_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), _GLF_IDENTITY(int(5), (int(5)) << 0))), int(5))))]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(801.294)), bvec2(true, false)))) + vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(47.99)))) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, log(1.0))), dot(vec2(0.0, 1.0), vec2(1.0, log(1.0))))) > injectionSwitch.y)))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) && true)))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false))))))))) && true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u))) + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_base : _GLF_FUZZED(subgroup_size))), subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u))), uint(uvec4(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u))), (1u ^ 1u), 0u, 0u))) + subgroup_base), _GLF_IDENTITY(clamp(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(subgroup_base, 1u, 0u)), (uint(uvec3(subgroup_base, 1u, 0u))) << 0u)), subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), min(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(subgroup_base, 1u, 0u)), (uint(uvec3(subgroup_base, 1u, 0u))) << 0u)), subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(subgroup_base, 1u, 0u)), (uint(uvec3(subgroup_base, 1u, 0u))) << 0u)), subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base))), 0u | (min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base))), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base), (min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)) << 0u))))) / (1u & 1u))), workgroup_base + subgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base) : _GLF_FUZZED(workgroup_size)))), clamp(clamp(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_base))), clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), 0u | (min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base))), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base), (clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u))))) ^ 0u)), subgroup_base)), workgroup_base + subgroup_base), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.7) : injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base) : _GLF_FUZZED(workgroup_size)))), clamp(min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), 0u | (min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(150537u) : workgroup_base + subgroup_base))))), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? min(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u + (~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base), ~ (~ (min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base))))), workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) : _GLF_FUZZED(workgroup_size)))), clamp(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base), clamp(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), ~ (~ (min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base)))))), 0u | (min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), (true ? uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u) : _GLF_FUZZED(uvec4(96057u, 166585u, 119056u, 111182u))))), (uint(_GLF_IDENTITY(uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), (true ? uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u) : _GLF_FUZZED(uvec4(96057u, 166585u, 119056u, 111182u)))))) << 0u)), ~ (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), (true ? uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u) : _GLF_FUZZED(uvec4(96057u, 166585u, 119056u, 111182u))))), (uint(_GLF_IDENTITY(uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), (true ? uvec4(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u) : _GLF_FUZZED(uvec4(96057u, 166585u, 119056u, 111182u)))))) << 0u))))), min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base))), _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_base)))), subgroup_base)), workgroup_base + subgroup_base), uint(uvec4(min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)), subgroup_base)), workgroup_base + subgroup_base), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))), 0u))) : _GLF_FUZZED(workgroup_size)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(40505u))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2833.7232)), float(injectionSwitch.x), bool(true)), (false ? _GLF_FUZZED(162.000) : mix(float(_GLF_FUZZED(-2833.7232)), float(injectionSwitch.x), bool(true)))))) / cos(0.0)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << 0u) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uint((subgroup_local_id))), 0u ^ (_GLF_IDENTITY(uint(uint((subgroup_local_id))), uint(uint(uint(uint((subgroup_local_id))))))))))) << 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 1), (true ? ivec3(2, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), min(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), _GLF_FUZZED(ivec3(-21075, -30307, -28819))))))))) / 1), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uint((subgroup_local_id))), 0u ^ (_GLF_IDENTITY(uint(uint((subgroup_local_id))), uint(uint(uint(uint((subgroup_local_id))))))))))) << 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 1), (true ? ivec3(2, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), min(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), _GLF_FUZZED(ivec3(-21075, -30307, -28819))))))))) / 1), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uint((subgroup_local_id))), 0u ^ (_GLF_IDENTITY(uint(uint((subgroup_local_id))), uint(uint(uint(uint((subgroup_local_id))))))))))) << 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 1), (true ? ivec3(2, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), min(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), _GLF_FUZZED(ivec3(-21075, -30307, -28819))))))))) / 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) + ((subgroup_local_id)))))), ((_GLF_IDENTITY((subgroup_local_id), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id)))), ((_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))))) << (0u | (144665u & 0u)))))) * 1u) | ((subgroup_local_id))))), (false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(273.574), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((float(true) * -684.553))), bvec2(true, false))).y)))), uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id))) << 0u) % 2)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) << 0u) % 2, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uint((subgroup_local_id))), 0u ^ (_GLF_IDENTITY(uint(uint((subgroup_local_id))), uint(uint(uint(uint((subgroup_local_id))))))))), max(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uint((subgroup_local_id))), 0u ^ (_GLF_IDENTITY(uint(uint((subgroup_local_id))), uint(uint(uint(uint((subgroup_local_id))))))))), _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uint((subgroup_local_id))), 0u ^ (_GLF_IDENTITY(uint(uint((subgroup_local_id))), uint(uint(uint(uint((subgroup_local_id))))))))))))) << 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 1), (true ? ivec3(2, 1, 1) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), (_GLF_FUZZED(ivec3(-21075, -30307, -28819))) - ivec3(0, 0, 0)), min(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), _GLF_FUZZED(ivec3(-21075, -30307, -28819))))))))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id)))))) | ((subgroup_local_id))))), (false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id))) << 0u) % 2)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << 0u) % 2, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uint((subgroup_local_id))), 0u ^ (_GLF_IDENTITY(uint(uint((subgroup_local_id))), uint(uint(uint(uint((subgroup_local_id))))))))))) << 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 1), (true ? ivec3(2, 1, 1) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), min(_GLF_FUZZED(ivec3(-21075, -30307, -28819)), _GLF_FUZZED(ivec3(-21075, -30307, -28819))))))))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id)))))) | ((subgroup_local_id))))), (false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uint(uvec3(subgroup_local_id, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(subgroup_local_id, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u ^ (uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id))) << 0u) * 1u)) >> 0u)) % 2))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1.0, cos(tan(0.0)), 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, log(1.0), 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, log(1.0), 0.0), vec4(1.0, 0.0, 1.0, 1.0)))))))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0)) / round(length(normalize(1.0))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(round(72.83)) : injectionSwitch.x)) < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y)) && true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(degrees(-680.226)))) : _GLF_IDENTITY(_GLF_FUZZED(28.20), mix(float(_GLF_FUZZED(28.20)), float(_GLF_FUZZED(4191.3027)), bool(false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)) * mat2(1.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))) || (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(4, (4) | (4)), 64, 2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(read) : atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-9476))), 2))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(1), int(1))))), 0u + _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), min((atomicLoad(buf[virtual_gid], 4, 64, 2)), (atomicLoad(buf[virtual_gid], 4, 64, 2))))), atomicLoad(buf[virtual_gid], 4, 64, 2))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(read, (read) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))) << 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))) | 0u)))], 4, 64, 2), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))], 4, 64, 2), min(false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), (virtual_gid), (virtual_gid)))) | (_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))))) | 0u)))], 4, 64, 2), false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))], 4, 64, 2))), _GLF_IDENTITY(false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))], 4, 64, 2), (false ? _GLF_FUZZED(workgroup_size) : false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) | 0u)))], 4, 64, 2))), false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u)), 0u + (uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u)), 0u + (uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u))))) | 0u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u)), 0u + (uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u))))) | 0u)) >> 0u)) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u)), 0u + (uint(uvec4((_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uint(-89184)) : _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(uint(uint(virtual_gid))))))))), 1u, 0u, 0u))))) | 0u)))))], _GLF_IDENTITY(4, (4) << 0), 64, 2)))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_base) : (1u))) | (1u))), max(uvec3(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], 4, 64, 2), (false ? _GLF_FUZZED(read) : atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : virtual_gid))], 4, 64, 2))), (0u | 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), ((_GLF_IDENTITY(1u, (1u) ^ 0u))) | ((_GLF_IDENTITY(1u, (1u) ^ 0u)))) | (1u))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u), (false ? _GLF_FUZZED(read) : atomicLoad(buf[virtual_gid], 4, 64, 2))), (0u | 0u), _GLF_IDENTITY(1u, (1u) | (1u)))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) + 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-1.7) : injectionSwitch.y, min(false ? _GLF_FUZZED(-1.7) : injectionSwitch.y, false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / round(length(normalize(1.0)))), float(_GLF_FUZZED(8.2)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / round(length(normalize(1.0)))), float(_GLF_FUZZED(8.2)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / round(length(normalize(1.0)))), float(_GLF_FUZZED(8.2)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / round(length(normalize(1.0)))), float(_GLF_FUZZED(8.2)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / round(length(normalize(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.7)), float(1.0), bool(true))))))), float(_GLF_FUZZED(8.2)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / round(length(normalize(1.0)))), float(_GLF_FUZZED(8.2)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))))))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(true, true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false)))))), ((! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))))) && true), (_GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec4((! (bool(bvec2(true, true)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-1.7) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(-1.7) : injectionSwitch.y), (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y), (_GLF_IDENTITY(false ? _GLF_FUZZED(-1.7) : injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))))))))), false, true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : injectionSwitch.y, max(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(mat3(271.895, -89.66, -3734.9607, -0.4, -7.2, 0.9, 835.080, 483.282, -76.47)) : mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : injectionSwitch.y, max(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(mat3(271.895, -89.66, -3734.9607, -0.4, -7.2, 0.9, 835.080, 483.282, -76.47)) : mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : injectionSwitch.y, max(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(mat3(271.895, -89.66, -3734.9607, -0.4, -7.2, 0.9, 835.080, 483.282, -76.47)) : mat3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), max(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7))) : injectionSwitch.y))) || false))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), max(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7))) : injectionSwitch.y))) || false))))))))), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-1.7) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(-1.7) : injectionSwitch.y), (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y), (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))))), bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))))), true)))), false, true))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.7, float(mat4x3(_GLF_IDENTITY(-1.7, 1.0 * (-1.7)), length(vec2(0.0, 0.0)), cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, length(0.0))))) : injectionSwitch.y)))), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))))), true, false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))))))) || false, _GLF_IDENTITY((((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true)), false || (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true)))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))))))), false, true))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false), true)))), true, true))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), true, true)))))) || false))))))))) || false) || false, false || ((((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.7, mix(float(-1.7), float(_GLF_FUZZED(-8770.4375)), bool(false)))) : injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true)), false || (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true)))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 271.838))), bvec2(true, false))).y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true, false)), (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true, false)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), true, false)))))) || false)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))))))), false, true))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false, ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true, true))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))), true, true)))))) || false))))))))) || false) || false)))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-1.7) : injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y) - determinant(mat2(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))))), false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)), false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)), false, true, false)), bool(bool(bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)), false, true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0))))[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(7514.0558) : (injectionSwitch)[1])), (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), clamp(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7), _GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_IDENTITY(_GLF_FUZZED(-1.7), float(vec4(_GLF_FUZZED(-1.7), 0.0, 1.0, 0.0))), _GLF_FUZZED(-1.7))))) : injectionSwitch.y)))), false, true))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))))), false, true)), false, true, false)), bool(bool(bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.7, min(-1.7, -1.7))) : injectionSwitch.y)))), false, true)), false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x), float(_GLF_FUZZED(-0.2)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x, mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(87.92)), vec2(_GLF_FUZZED(-2513.2394), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(2.3) : (injectionSwitch)[1]))), bvec2(false, true))).x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), max(_GLF_FUZZED(-1.7), _GLF_IDENTITY(_GLF_FUZZED(-1.7), mix(float(_GLF_FUZZED(-1.7)), float(_GLF_FUZZED(1.1)), bool(false))))) : _GLF_FUZZED(6.3))) : injectionSwitch.y)))), false, true))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, cos(0.0), 1.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), false, true)))))))) || false), false, false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(67.13)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))) - vec2(0.0, 0.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, max(_GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(subgroup_size))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.7))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) + 0.0)), float(_GLF_FUZZED((+ -5229.9643))), bool(false))), 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
