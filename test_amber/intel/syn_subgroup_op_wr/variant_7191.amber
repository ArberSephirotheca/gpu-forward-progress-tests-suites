#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(smoothstep(777.268, 2.5, 7.4)) : (injectionSwitch)[0])), _GLF_FUZZED(32.90)), vec2(_GLF_FUZZED(5824.8186), (injectionSwitch)[1]), bvec2(false, true))).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(401.382) : injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) || false)))))) || false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec4(-85.33, -5974.9420, 68.72, 87.21))) : _GLF_IDENTITY(0.0, max(0.0, 0.0))))), float(_GLF_FUZZED(13.22)), bool(false)))), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), tan(sin(0.0)), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-72.88))), 0.0, 0.0)))), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, cos(0.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(tan(sin(0.0)), min(_GLF_IDENTITY(tan(sin(0.0)), (true ? tan(sin(0.0)) : _GLF_FUZZED(-181.978))), _GLF_IDENTITY(tan(_GLF_IDENTITY(sin(0.0), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat3x4(sin(0.0), 1.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (true ? float(mat3x4(sin(0.0), 1.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(-9.5)))), clamp(sin(0.0), sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), sin(0.0))), abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.0)), bool(false)))), 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(tan(sin(0.0)), (tan(sin(0.0))) * 1.0), _GLF_IDENTITY(float(vec3(tan(sin(0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(float(float(vec3(_GLF_IDENTITY(tan(sin(0.0)), max(tan(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat2(sin(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(tan(sin(0.0)), float(_GLF_IDENTITY(float(tan(sin(0.0))), min(float(tan(sin(0.0))), float(tan(sin(0.0))))))))), 0.0, 1.0)))), 0.0 + (float(float(float(vec3(_GLF_IDENTITY(tan(sin(0.0)), max(tan(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat2(sin(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(tan(sin(0.0)), float(_GLF_IDENTITY(float(tan(sin(0.0))), min(float(tan(sin(0.0))), float(tan(sin(0.0))))))))), 0.0, 1.0)))))))), tan(_GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(100.338)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(100.338)), (float(_GLF_FUZZED(100.338))) * 1.0), float(_GLF_FUZZED(100.338)), float(_GLF_FUZZED(100.338)))), bool(false)))))))), 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-988.734) : length(normalize(vec3(1.0, 1.0, 1.0))))), (length(normalize(vec3(1.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), min(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 1.0, 1.0, sqrt(0.0)), _GLF_IDENTITY((mat4(injectionSwitch, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(tan(sin(0.0)), min(_GLF_IDENTITY(tan(sin(0.0)), (true ? tan(sin(0.0)) : _GLF_FUZZED(-181.978))), _GLF_IDENTITY(tan(sin(0.0)), min(tan(sin(0.0)), tan(sin(0.0)))))), 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(mat2(normalize(vec3(1.0, 1.0, 1.0)), 1.0)))))))), clamp(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) - 0.0), length(normalize(vec3(1.0, 1.0, 1.0))), length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mat3(1.0) * (normalize(vec3(1.0, 1.0, 1.0)))))))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), ((mat4(injectionSwitch, 1.0, cos(0.0), 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), _GLF_IDENTITY(tan(sin(0.0)), min(_GLF_IDENTITY(tan(sin(0.0)), _GLF_IDENTITY((true ? tan(sin(0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-181.978, clamp(-181.978, -181.978, -181.978)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? tan(sin(0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-181.978, clamp(-181.978, -181.978, -181.978)))) : _GLF_FUZZED(dot(vec3(29.94, 85.12, 75.80), vec3(-5.8, 9.2, -0.6)))))), _GLF_IDENTITY(tan(sin(0.0)), min(tan(_GLF_IDENTITY(sin(0.0), (sin(0.0)) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, sin(0.0), 0.0))))), tan(sin(0.0)))))), 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(1.0), bool(true))), 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) - 0.0), length(normalize(vec3(1.0, 1.0, 1.0))), length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) - vec3(0.0, 0.0, 0.0)), mat3(1.0) * (_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-6139.1478), (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3(_GLF_FUZZED(0.9), (normalize(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(8.8)), bvec3(false, true, false))) : _GLF_FUZZED(vec3(-9375.5743, -35.25, -9.5)))), normalize(vec3(1.0, 1.0, 1.0)))))))))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0))) - mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))))))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, true)))), true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)))) || false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(workgroup_base, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(workgroup_base, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(workgroup_base, 0u)))), (_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(workgroup_base, 0u))))) | (_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(workgroup_base, 0u)))))))))) - 0u)) + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) + 0u))))))), _GLF_IDENTITY((~ (0u)) + _GLF_IDENTITY((88743u & 0u), clamp((88743u & 0u), (88743u & 0u), _GLF_IDENTITY((88743u & 0u), ~ (~ (_GLF_IDENTITY((88743u & 0u), (true ? (88743u & 0u) : _GLF_FUZZED(subgroup_id)))))))), ((_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))) - 0u)) + (88743u & 0u)) | (_GLF_IDENTITY((~ (0u)) + (88743u & 0u), ((~ (0u)) + (88743u & 0u)) | ((~ (0u)) + (88743u & 0u)))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x))))))), (false ? _GLF_FUZZED(virtual_gid) : ~ ((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))))))))))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(int(ivec3(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))), min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))), 0, 1))))))) % subgroup_size, _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u)), (uint(uvec2((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 1u))) | 0u)), (subgroup_local_id + 1) % subgroup_size))))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) + 0u))))), (~ (0u)) + (88743u & 0u)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))), 0, 1))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), 0, 1))))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), 0u ^ (0u + (subgroup_local_id)))) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u), (subgroup_local_id), (subgroup_local_id)))) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))))) % subgroup_size))))) * 1u), uint(uvec2((subgroup_local_id + 1) % subgroup_size, 1u))), (subgroup_local_id + 1) % subgroup_size))))) ^ 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - (0u | 0u))) - 0u) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ (_GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uint((0u)), min(uint((0u)), uint((0u)))))))) + 0u))))), (~ (0u)) + (88743u & 0u)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(1 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))))), 0), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))))), 0), (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), int(ivec2(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1))))), 0)))))))), 0)) >> ivec2(0, 0)))))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 1)))))) << 0))) % subgroup_size, uint(uvec2((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size, 1u))), (subgroup_local_id + 1) % subgroup_size))))) ^ 0u))))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size) ^ 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u))))))), 0u | (workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size) ^ 0u))) << 0u)))))))))))), ~ (~ (uint(_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) % subgroup_size) ^ 0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))))))))), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) ^ 0u)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> (0u | 0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(72659) : 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))), 0u, 0u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) ^ 0u)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> (0u | 0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(72659) : 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))), 0u, 0u, 1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u)) ^ 0u)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)), uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> (0u | 0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(72659) : 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))), 0u, 0u, 1u)))))))), workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ 0u, (((subgroup_local_id + 1) % subgroup_size) ^ 0u) * 1u))) >> _GLF_IDENTITY((137903u & 0u), ~ (~ ((137903u & 0u)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) ^ 0u, (((subgroup_local_id + 1) % subgroup_size) ^ 0u) * 1u))) >> (137903u & 0u)) << 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2)), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2))) << 0)), (read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2)), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2))) << 0)), ~ (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2)), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2))) << 0)), (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, 0 | (2)))), (false ? _GLF_FUZZED(-56257) : 2)), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2))) << 0))) - 0u))))) + (1u ^ 1u)), ~ (~ (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2)), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-56257) : 2))) << 0)), (read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(-56257) : 2, max(_GLF_IDENTITY(false ? _GLF_FUZZED(-56257) : 2, (false ? _GLF_FUZZED(-56257) : 2) << 0), false ? _GLF_FUZZED(-56257) : 2)))), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(-56257, (-56257) | 0)) : 2))) << 0))) + 0u))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) << ivec3(0, 0, 0)))), 64, _GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((2), ((2)) | ((2)))), _GLF_IDENTITY((false ? _GLF_FUZZED(53170) : ~ (_GLF_IDENTITY(~ (2), (~ (2)) << 0))), ((false ? _GLF_FUZZED(53170) : ~ (~ (2)))) + 0))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4193.6342))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(length(-402.208)) : float(injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
