#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat3x2 _f0;
 uvec3 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_20 {
 bvec2 _f0;
 mat2 _f1;
 vec2 _f2;
 vec4 _f3;
 mat4x3 _f4;
 ivec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_19 {
 mat2x4 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 mat2x4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
 uvec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 mat3x2 _f1;
 int _f2;
 vec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 bool _f1;
 bool _f2;
 float _f3;
 mat2x4 _f4;
 float _f5;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 mat4 _f1;
 mat4 _f2;
 mat4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_14 _f0;
 uint _f1;
 uvec4 _f2;
 _GLF_struct_15 _f3;
 ivec3 _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_23 {
 mat4x2 _f0;
 _GLF_struct_18 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 mat2x3 _f1;
 uint _f2;
 mat2x3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 _GLF_struct_10 _f1;
 vec4 _f2;
 _GLF_struct_11 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 mat3x2 _f1;
 uint _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 mat3x4 _f1;
 vec3 _f2;
 mat2x4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_5 {
 bool _f0;
 mat2x3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_4 {
 bool _f0;
 bvec4 _f1;
 ivec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat4x3 _f1;
 uvec3 _f2;
 bool _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 int _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 mat2x3 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat3x2 _f1;
 bool _f2;
 bvec3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_0 {
 uint _f0;
 bool _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 _GLF_struct_2 _f1;
 mat2 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
 uint virtual_gid;
 _GLF_struct_12 _f5;
 ivec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(2093.2181), (injectionSwitch)[1]), bvec2(false, true))))).y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat4x2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_struct_18(_GLF_struct_14(mat2(1.0), mat4(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)), mat4(1.0), bvec4(true)), 1u, uvec4(1u), _GLF_struct_15(uvec3(1u), true, true, 1.0, mat2x4(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec3(1), _GLF_struct_16(mat4x3(1.0), mat3x2(1.0), 1, vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), ivec2(_GLF_IDENTITY(1, (1) | 0))), _GLF_struct_17(uvec2(_GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u), mat4x3(1.0))), mat4x3(1.0), mat3x2(1.0), _GLF_struct_22(_GLF_struct_19(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3x4(1.0), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(698.465))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), mat2x4(1.0)), _GLF_struct_20(bvec2(true), mat2(1.0), vec2(1.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), 0.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), 0.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), 0.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0))))))))), mat4x3(1.0), ivec4(1), true), _GLF_struct_21(mat3x2(1.0), uvec3(1u), gl_SubgroupInvocationID), mat2x4(1.0), uvec3(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(length(sqrt(vec3(8.3, -923.310, 498.619))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
  return;
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) - uvec2(0u, 0u))))).x, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x)))) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z = workgroup_base;
 uint subgroup_base = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.y * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u)), _GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_IDENTITY(uvec3(~ (1u), 1u, 1u), (uvec3(~ (1u), 1u, 1u)) | (uvec3(~ (1u), 1u, 1u))))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(157179u) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_IDENTITY(uvec3(~ (1u), 1u, 1u), (uvec3(~ (1u), 1u, 1u)) | (uvec3(~ (1u), 1u, 1u))))))), (true ? _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (1u), 1u, 1u), (uvec3(~ (1u), 1u, 1u)) | (uvec3(~ (1u), 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), min(uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ((1u)) << 0u), (1u))), 1u, 1u), (uvec3(~ (1u), 1u, 1u)) | (uvec3(~ (1u), 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(~ (1u), 1u, 1u), (uvec3(~ (1u), 1u, 1u)) | (uvec3(~ (1u), 1u, 1u))))))))) : _GLF_FUZZED(subgroup_base))))), true, mat2x4(1.0)), _GLF_struct_1(mat4x3(1.0), mat3x2(1.0), true, bvec3(true), mat2x3(1.0))), mat2(1.0), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(_GLF_IDENTITY(mat3x4(vec2(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-9.3)), float(sqrt(0.0)), bool(true))), sqrt(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-51.12), 1.0 * (_GLF_FUZZED(-51.12)))))) - 0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0))))), 0.0), mat3x4(mat4(mat3x4(vec2(1.0), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))) * mat2(1.0), vec2(mat4((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))) * mat2(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), exp(0.0))))), _GLF_IDENTITY(clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat2(mat4x3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), min(injectionSwitch, injectionSwitch)))).y)))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat4x3(mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), _GLF_IDENTITY((clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-73.33)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(mat2(1.0, 0.0, 1.0, 1.0))), 1.0)))))) * mat2(1.0), _GLF_IDENTITY(vec2(mat3x4((clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)))))) * (vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))) * mat2(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-808.191), min(_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-808.191), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? 0.0 : _GLF_FUZZED(-808.191) : _GLF_FUZZED(279.189))), true ? 0.0 : _GLF_FUZZED(-808.191))))), 1.0, 1.0, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), _GLF_IDENTITY(float(mat2(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), _GLF_IDENTITY(bool(true), true && (bool(true))))))), 0.0, sin(0.0), 0.0)), max(float(mat2(_GLF_IDENTITY(float(mat4(exp(0.0), cos(0.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), max(_GLF_IDENTITY(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), _GLF_IDENTITY(float(0.0), float(mat3x4(_GLF_IDENTITY(float(0.0), (true ? float(0.0) : _GLF_FUZZED(-9469.2865))), 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), bool(true))))), clamp(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), min(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), min(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))))), float(float(_GLF_IDENTITY(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), min(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))))))))), float(_GLF_FUZZED(-7170.7386)), bool(false))), float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))))), _GLF_IDENTITY(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), max(float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))), float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))))))), 0.0, sin(0.0), 0.0)), float(mat2(float(mat4(exp(0.0), cos(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-62.73) : 0.0)), 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_IDENTITY(abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), (abs(round(length(normalize(vec3(1.0, 1.0, 1.0)))))) * 1.0), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / abs(1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), bool(true))))), 0.0, sin(0.0), 0.0))))), (true ? float(mat4(exp(0.0), cos(0.0), 1.0, 0.0, 1.0, sqrt(1.0), abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true))))) : _GLF_FUZZED(_GLF_IDENTITY(ceil(-7799.0430), (false ? _GLF_FUZZED(-8.4) : _GLF_IDENTITY(ceil(-7799.0430), (ceil(-7799.0430)) / 1.0))))))), 1.0, 1.0)), _GLF_IDENTITY(vec2(mat2(vec2(mat3x4((clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(8609.5635) : max(1.0, 1.0))))), float(_GLF_FUZZED(-4448.8386)), bool(false))))))) * mat2(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0)), 1.0, 1.0)), clamp(vec2(mat2(vec2(mat3x4((clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)) * (vec2(1.0)))) * mat2(1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0)), 1.0, 1.0)), vec2(mat2(vec2(mat3x4((clamp(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) / sqrt(1.0), min((_GLF_ONE(1.0, injectionSwitch.y)) / sqrt(1.0), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) / sqrt(1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) / sqrt(1.0), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(11.16) : (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / sqrt(1.0))), clamp((_GLF_ONE(1.0, injectionSwitch.y)) / sqrt(1.0), (_GLF_ONE(1.0, injectionSwitch.y)) / sqrt(1.0), (_GLF_ONE(1.0, injectionSwitch.y)) / sqrt(1.0))))))))) * (vec2(1.0)), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-970.106, clamp(-970.106, _GLF_IDENTITY(-970.106, (-970.106) / 1.0), -970.106)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)))) * mat2(1.0), 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(551.733), 1.0 * (_GLF_FUZZED(551.733))) : 1.0)), injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0)), 1.0, 1.0)), vec2(mat2(vec2(mat3x4((clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0)), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0)))) * mat2(1.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0)), 1.0, 1.0))))))))), 1, _GLF_struct_3(1u, mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0)), 1.0))), uvec3(1u), _GLF_IDENTITY(true, false || (true)), bvec3(true)), _GLF_struct_4(true, bvec4(true), ivec4(1), _GLF_IDENTITY(true, (true) && true)), mat2x3(1.0), _GLF_struct_5(true, mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.4)))), mat4(1.0)), _GLF_struct_6(uvec3(1u), mat3x4(1.0), vec3(1.0), mat2x4(1.0), _GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), uvec4(1u), uvec4(1u))))), _GLF_struct_9(_GLF_struct_8(mat4x3(1.0), mat3x2(1.0), 1u, ivec3(1))), GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_23._f4._f2.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_23._f4._f2.subgroup_local_id) << _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), uint(uvec4((_GLF_struct_replacement_23._f4._f2.subgroup_local_id) << 0u, (0u | (0u | 0u)), 0u, 1u)))), _GLF_struct_12(uvec3(1u), _GLF_struct_10(ivec4(1), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1u, mat2x3(1.0), mat3x2(1.0)), vec4(1.0), _GLF_struct_11(mat2x4(1.0), ivec2(1)), vec3(1.0)), _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), ivec3(1))));
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + subgroup_base + ((_GLF_struct_replacement_23._f4._f2.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(189.344)))) - sqrt(0.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])), 0.0, exp(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(0.0), 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(189.344)))) - sqrt(0.0)), (false ? _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(189.344)))) - sqrt(0.0)))), sin(0.0))))))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_13.virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_struct_replacement_23._f4._f2.subgroup_local_id % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- -33788)) : 0)), (0) | (0)))
  {
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) | (2))))))))))), uint(2))), (uint(2)) >> 0u)) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))), 0u ^ (_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))) | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))))))))) ^ 0u), uint(2))), (uint(2)) >> 0u)) / 1u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-92329)))))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), max(uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))) | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))), uint(2))), (uint(2)) >> 0u)) / 1u, (1u ^ 1u), 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))), uint(2))), (uint(2)) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))), uint(2))), (uint(2)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), (_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))) ^ 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), min(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), min(_GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))))))))), uint(2))), (uint(2)) >> 0u)) / 1u))))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(_GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))))), uint(2))), (uint(2)) >> 0u)) / 1u))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))) || false)) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true, false, true), false)))))))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(sqrt(vec2(-58.86, 4778.5526))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x], uint(2), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(length(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6.0))), 0.0, 0.0, 0.0)), (length(vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6.0))), 0.0, 0.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0), (mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)))), abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(71.05) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0)), 1.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7149.8235)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
