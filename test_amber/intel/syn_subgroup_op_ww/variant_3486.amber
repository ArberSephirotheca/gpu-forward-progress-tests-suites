#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 mat3 _f0;
} ;

struct _GLF_struct_18 {
 uint workgroup_base;
 mat4 _f0;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 mat4x2 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 ivec2 _f1;
 bool _f2;
 bvec2 _f3;
 bvec4 _f4;
 mat3 _f5;
 int _f6;
} ;

struct _GLF_struct_14 {
 bool _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 int _f1;
 mat3x2 _f2;
 mat2 _f3;
 bvec3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 uvec2 _f2;
 vec2 _f3;
 mat3x4 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 uvec3 _f1;
 mat4x2 _f2;
 mat2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 uvec4 _f1;
 mat4x3 _f2;
 int _f3;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 mat2x4 _f1;
 float _f2;
 vec4 _f3;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 bool _f3;
 mat2x3 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2x4 _f1;
 float _f2;
 bvec2 _f3;
 ivec3 _f4;
 mat4x2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_0 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_8 _f2;
 uint workgroup_size;
 _GLF_struct_12 _f3;
 _GLF_struct_14 _f4;
 _GLF_struct_16 _f5;
 vec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false)))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 1.2)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 1.2)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 1.2)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.8, 1.2)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), vec2(_GLF_FUZZED(74.67), (injectionSwitch)[1]), bvec2(false, true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true)))), false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-39.79) : injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true, false, false)), true, false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2.9))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)))) || false))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, sqrt(1.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-90.36)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(1.6)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec3(-3.1, 53.50, 9.6).x), (normalize(vec2(1.0, 1.0)))[1]), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(9.7)), bvec2(true, false))))), 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-90.36)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(1.6)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec3(-3.1, 53.50, 9.6).x), (normalize(vec2(1.0, 1.0)))[1]), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(9.7)), bvec2(true, false))))), 1.0, 0.0, 0.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(-4.1)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), (false ? _GLF_FUZZED(-263.246) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9212.7292)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 1.0, 1.0, 0.0, abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-90.36)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(1.6)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec3(-3.1, 53.50, 9.6).x), (normalize(vec2(1.0, 1.0)))[1]), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(9.7)), bvec2(true, false))))), 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-90.36)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(1.6)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec3(-3.1, 53.50, 9.6).x), (normalize(vec2(1.0, 1.0)))[1]), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(9.7)), bvec2(true, false))))), 1.0, 0.0, 0.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(-4.1)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), (false ? _GLF_FUZZED(-263.246) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9212.7292)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 1.0, 1.0, 0.0, abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y)), (float(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-90.36)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(1.6)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec3(-3.1, 53.50, 9.6).x), (normalize(vec2(1.0, 1.0)))[1]), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(9.7)), bvec2(true, false))))), 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-90.36)), bool(false))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(1.6)), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec3(-3.1, 53.50, 9.6).x), (normalize(vec2(1.0, 1.0)))[1]), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED(9.7)), bvec2(true, false))))), 1.0, 0.0, 0.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(-4.1)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), (false ? _GLF_FUZZED(-263.246) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9212.7292)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 1.0, 1.0, 0.0, abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y))) - 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), false))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), false))))))))))))), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false))) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(7096.0107), _GLF_FUZZED(2.1)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(float(-93389)), _GLF_FUZZED(vec2(1.9, 7.3).r)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(float(-93389)), _GLF_FUZZED(vec2(1.9, 7.3).r)), bvec2(false, false)))[0], ((mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(float(-93389)), _GLF_FUZZED(vec2(1.9, 7.3).r)), bvec2(false, false)))[0]) / 1.0), (mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(float(-93389)), _GLF_FUZZED(vec2(1.9, 7.3).r)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED(6.5), _GLF_FUZZED(float(99036))), bvec2(false, false))))) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(float(-93389)), _GLF_FUZZED(vec2(1.9, 7.3).r)), bvec2(false, false)))) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(float(-93389)), _GLF_FUZZED(vec2(1.9, 7.3).r)), bvec2(false, false)), (mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(float(-93389)), _GLF_FUZZED(vec2(1.9, 7.3).r)), bvec2(false, false))) * vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)), false)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(98.38, -706.973)))))).y) - 0.0))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) && true)))), false))) || false))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(98.38, clamp(98.38, _GLF_IDENTITY(_GLF_IDENTITY(98.38, clamp(98.38, 98.38, 98.38)), (false ? _GLF_FUZZED(3.2) : 98.38)), _GLF_IDENTITY(98.38, float(mat3(98.38, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), -706.973)), (true ? _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(98.38, mix(float(_GLF_FUZZED(-440.142)), float(98.38), bool(true))), clamp(98.38, _GLF_IDENTITY(98.38, (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(98.38, (true ? 98.38 : _GLF_FUZZED(_GLF_IDENTITY(sqrt(833.869), (sqrt(833.869)) / 1.0)))))), _GLF_IDENTITY(98.38, float(mat3(98.38, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), -706.973)) : _GLF_FUZZED(injectionSwitch))))))).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))))))), false || ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(unpackHalf2x16(subgroup_local_id)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)).y, false)))))) && true) || false))), true)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))) && true), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))) && true), true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(540.757)), bool(false)))), float(_GLF_FUZZED(2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_0(vec4(1.0)), _GLF_struct_2(bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_struct_1(bvec3(true), mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, bvec2(true), ivec3(1), mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(log(1.0)), _GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 1.0))), uvec2(1u))), _GLF_struct_8(_GLF_struct_3(vec4(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), _GLF_struct_4(uvec3(1u), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7942.1292), (true ? _GLF_IDENTITY(_GLF_FUZZED(-7942.1292), max(_GLF_IDENTITY(_GLF_FUZZED(-7942.1292), min(_GLF_FUZZED(-7942.1292), _GLF_FUZZED(-7942.1292))), _GLF_FUZZED(-7942.1292))) : _GLF_FUZZED(0.1))) : 1.0)), 1.0))), 1.0, vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_5(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << 0u)), (false ? _GLF_FUZZED(uvec4(109800u, _GLF_IDENTITY(87733u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(87733u, min(87733u, 87733u)))), _GLF_IDENTITY(65342u, (_GLF_IDENTITY(65342u, (_GLF_IDENTITY(65342u, (65342u) + 0u)) >> 0u)) | 0u), 36881u)) : uvec4(1u))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) << 0u), 1u))))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(109800u, 87733u, 65342u, 36881u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_FUZZED(uvec4(109800u, _GLF_IDENTITY(87733u, min(_GLF_IDENTITY(87733u, uint(uint(87733u))), 87733u)), 65342u, 36881u)))) : uvec4(1u)), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 0u | (_GLF_IDENTITY(36881u, (36881u) / 1u))))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_FUZZED(_GLF_IDENTITY(uvec4(109800u, 87733u, 65342u, 36881u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(109800u, 87733u, 65342u, 36881u), _GLF_IDENTITY((uvec4(109800u, 87733u, 65342u, 36881u)), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))) ^ (_GLF_IDENTITY((uvec4(109800u, 87733u, 65342u, 36881u)), max((uvec4(109800u, 87733u, 65342u, 36881u)), (uvec4(109800u, 87733u, 65342u, 36881u)))))) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))) : _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))), uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 0u, 0u) ^ ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, min(_GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 1u * (36881u)))), _GLF_IDENTITY(36881u, _GLF_IDENTITY(0u ^ (36881u), (false ? _GLF_FUZZED((num_workgroup & subgroup_id)) : 0u ^ (36881u))))))), clamp(uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, min(_GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 1u * (36881u)))), _GLF_IDENTITY(36881u, _GLF_IDENTITY(0u ^ (36881u), (false ? _GLF_FUZZED((num_workgroup & subgroup_id)) : 0u ^ (36881u))))))), _GLF_IDENTITY(uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, min(_GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 1u * (36881u)))), _GLF_IDENTITY(36881u, _GLF_IDENTITY(0u ^ (36881u), (false ? _GLF_FUZZED((num_workgroup & subgroup_id)) : 0u ^ (36881u))))))), (_GLF_IDENTITY(uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, min(_GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 1u * (36881u)))), _GLF_IDENTITY(36881u, _GLF_IDENTITY(0u ^ (36881u), (false ? _GLF_FUZZED((num_workgroup & subgroup_id)) : 0u ^ (36881u))))))), min(uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, min(_GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 1u * (36881u)))), _GLF_IDENTITY(36881u, _GLF_IDENTITY(0u ^ (36881u), (false ? _GLF_FUZZED((num_workgroup & subgroup_id)) : 0u ^ (36881u))))))), uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, min(_GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 1u * (36881u)))), _GLF_IDENTITY(36881u, _GLF_IDENTITY(0u ^ (36881u), (false ? _GLF_FUZZED((num_workgroup & subgroup_id)) : 0u ^ (36881u)))))))))) + uvec4(0u, 0u, 0u, 0u)), uvec4(109800u, 87733u, 65342u, _GLF_IDENTITY(36881u, min(_GLF_IDENTITY(36881u, 0u ^ (_GLF_IDENTITY(36881u, 1u * (36881u)))), _GLF_IDENTITY(36881u, _GLF_IDENTITY(0u ^ (36881u), (false ? _GLF_FUZZED((num_workgroup & subgroup_id)) : 0u ^ (36881u)))))))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_FUZZED(uvec4(109800u, 87733u, 65342u, 36881u)), (_GLF_FUZZED(uvec4(109800u, 87733u, 65342u, 36881u))) >> (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), uvec4(5u)))))) : uvec4(1u))))) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | 0u) - 0u)))) | 0u)))), _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(109800u, max(109800u, 109800u)), 87733u, _GLF_IDENTITY(65342u, (_GLF_IDENTITY(65342u, max(65342u, 65342u))) * (1u | 1u)), 36881u)) : uvec4(1u))))), mat4x3(1.0), 1), true, mat2x3(1.0), _GLF_struct_6(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) >> 0u) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(subgroup_size), 1u * (true ? 1u : _GLF_FUZZED(subgroup_size)))))) | 0u)))) * 1u))), _GLF_struct_7(bvec3(true), uvec3(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1u, (1u) ^ 0u)))), mat4x2(1.0), mat2(1.0), bvec3(true))), gl_WorkGroupSize.x, _GLF_struct_12(_GLF_struct_9(bvec2(true)), _GLF_struct_10(bvec4(true), 1, mat3x2(1.0), mat2(1.0), bvec3(_GLF_IDENTITY(true, (true) || false)), mat2x3(1.0)), _GLF_IDENTITY(uvec2(1u), uvec2(uvec3(uvec2(1u), 0u))), vec2(_GLF_IDENTITY(1.0, (1.0) - sqrt(sin(0.0)))), mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), 1.0))), _GLF_struct_11(bvec2(_GLF_IDENTITY(true, false || (true))))), _GLF_struct_14(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), _GLF_struct_13(_GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0)))), ivec2(1), true, bvec2(true), bvec4(true), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1)), _GLF_struct_16(mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_struct_15(mat2x3(1.0), mat2x4(1.0))), vec3(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(7.9)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), true, false)), true && (bool(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), true, false)))), false, true, true))))))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true)))))), false, false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))), false, false, true))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(mat4x3(1.0), mat4x2(1.0), _GLF_struct_18(_GLF_struct_replacement_17.workgroup_size * workgroup_id, _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_struct_19(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))))))), mat3(1.0) * (mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))))), true, mat4x2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))) || false))), true)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(463.818) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, length(tan(vec2(0.0, 0.0))), exp(0.0), abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(463.818) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, length(tan(vec2(0.0, 0.0))), exp(0.0), abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(463.818) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, length(tan(vec2(0.0, 0.0))), exp(0.0), abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0)), transpose(transpose(mat4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(463.818) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, length(tan(vec2(0.0, 0.0))), exp(0.0), abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), 1.0, exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0))))))))), injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(463.818) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, length(tan(vec2(0.0, 0.0))), exp(0.0), abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(1.1, 833.474)))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(1.1, 833.474)))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(1.1, 833.474)))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(1.1, 833.474)))))).y), float(_GLF_FUZZED(66.18)), bool(false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(1.1, 833.474)))))).y))), float(_GLF_FUZZED(vec2(-0.6, -9.0).r)), bool(false))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(769.491) : injectionSwitch.y)))), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y)))), false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) && true))), _GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), (subgroup_size))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (subgroup_size) / 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), min(min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size)))))), (subgroup_size) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_20._f2.workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_20._f2.workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(-210.128, (true ? -210.128 : _GLF_FUZZED(-88.65))), _GLF_IDENTITY(896.313, _GLF_IDENTITY(clamp(896.313, 896.313, 896.313), mix(float(_GLF_FUZZED(-22.85)), float(_GLF_IDENTITY(clamp(896.313, 896.313, 896.313), max(clamp(896.313, 896.313, 896.313), clamp(896.313, 896.313, 896.313)))), bool(true)))), 9.1).x)), (false ? _GLF_FUZZED(vec2(-6.8, -280.741)) : vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(-210.128, (true ? -210.128 : _GLF_FUZZED(-88.65))), _GLF_IDENTITY(896.313, clamp(896.313, 896.313, 896.313)), 9.1).x)))), vec2(_GLF_FUZZED(9.1), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0)) | (1))]), bvec2(false, true))).x > injectionSwitch.y))))))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> (_GLF_IDENTITY(0u & 106284u, (0u & 106284u) << (_GLF_IDENTITY(0u & _GLF_IDENTITY(1865u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (1865u)), ~ (~ (0u & _GLF_IDENTITY(1865u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (1865u)))))))))) == _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))))), 0 ^ (((_GLF_IDENTITY(0, ~ (~ (0))))))) | ((_GLF_IDENTITY(0, ~ (~ (0)))))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, (0 ^ 0) + 0)), (_GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))) | (_GLF_IDENTITY((0 ^ 0), min((0 ^ 0), (0 ^ 0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))), ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))) && true), false))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) >> 0u), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) >> 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(int(ivec4((~ (_GLF_IDENTITY(64, min(64, 64)))), 1, 1, (0 & -62532))), (int(ivec4((~ (_GLF_IDENTITY(64, min(64, 64)))), 1, 1, (0 & -62532)))) | 0))), 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, true, true))))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, true)), false || (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, true)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, true)), false || (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, true)))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, true)), false || (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-604.384), _GLF_FUZZED((true ? 5.7 : 166.432))), bvec2(false, false))).y, true))))))))) || false), true, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(9207, -89098, -59499).g, int(_GLF_IDENTITY(ivec3(ivec3(9207, -89098, -59499).g, 0, 1), ivec3(0, 0, 0) ^ (ivec3(ivec3(9207, -89098, -59499).g, 0, 1)))))) : 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) / 1), 64, _GLF_IDENTITY(64, max(64, 64)))), min(_GLF_IDENTITY(64, _GLF_IDENTITY(0, 0 ^ (0)) ^ (_GLF_IDENTITY(64, 0 | (64)))), 64))) >> 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
