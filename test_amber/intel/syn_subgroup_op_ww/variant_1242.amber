#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 bvec3 _f0;
 vec4 _f1;
 bvec2 _f2;
 uint _f3;
 mat2 _f4;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 uint _f1;
 mat4x3 _f2;
 uint _f3;
 mat3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 float _f0;
 ivec2 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2x3 _f1;
 uint _f2;
} ;

struct _GLF_struct_0 {
 int _f0;
 uvec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec2 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_8 _f2;
 uint num_workgroup;
 _GLF_struct_9 _f3;
 float _f4;
 _GLF_struct_10 _f5;
 int _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (79660 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (int(3))))), min((int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (int(3))))), (int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (int(3)))))))), _GLF_IDENTITY(int(3), max(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (int(3))))), min((int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (int(3))))), (int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (int(3)))))))), _GLF_IDENTITY(int(3), max(int(3), int(3))))) | 0)) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   for(int _injected_loop_counter = (0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(563.437, -2.5)))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(563.437, -2.5)))).y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((true ? _injected_loop_counter -- : _GLF_FUZZED(min(93728, _injected_loop_counter))), 0 | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_injected_loop_counter --, 0 | (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))) : _GLF_FUZZED(min(93728, _injected_loop_counter))), ((true ? _injected_loop_counter -- : _GLF_IDENTITY(_GLF_FUZZED(min(93728, _injected_loop_counter)), clamp(_GLF_FUZZED(min(93728, _injected_loop_counter)), _GLF_IDENTITY(_GLF_FUZZED(min(93728, _injected_loop_counter)), min(_GLF_FUZZED(min(93728, _injected_loop_counter)), _GLF_FUZZED(min(93728, _injected_loop_counter)))), _GLF_IDENTITY(_GLF_FUZZED(min(93728, _injected_loop_counter)), (_GLF_FUZZED(min(93728, _injected_loop_counter))) | 0))))) / 1)))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = ((0 | 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x = subgroup_local_id;
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(_GLF_struct_0(1, uvec4(1u), bvec3(true)), _GLF_struct_1(bvec3(true), mat2x3(1.0), 1u), ivec2(1), _GLF_struct_2(vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? 1.0 : _GLF_FUZZED(825.185)))), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), (_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), (float(vec2(1.0, 1.0))) - sin(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(vec2(1.0, 1.0))))), (false ? _GLF_FUZZED(728.275) : _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))))), _GLF_struct_5(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u ^ ((1u))) - 0u)), (max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u ^ ((1u))) - 0u))) - 0u))), _GLF_struct_4(mat3x2(1.0), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (! (_GLF_IDENTITY(false, (false) || false))))))))))), true, true)))))))) ? _GLF_FUZZED(ivec4(2804, -94864, _GLF_IDENTITY(16455, (true ? 16455 : _GLF_FUZZED(76555))), 36487)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(ivec4(-27914, -45650, -31313, -69146)) : _GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_struct_8(_GLF_IDENTITY(1.0, (1.0) / 1.0), ivec2(1), mat4x3(1.0), _GLF_struct_6(uvec4(1u)), _GLF_struct_7(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) - uvec2(0u, 0u)) / uvec2(1u, 1u)), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, 0u), (uvec4(1u, 0u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))), mat4x3(1.0), _GLF_IDENTITY(1u, max(1u, 1u)), mat3(1.0), vec4(1.0)), mat2x4(1.0)), gl_NumWorkGroups.x, _GLF_struct_9(bvec3(true), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.9)), float(1.0), bool(true)))), (_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(true ? mat4(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-2.0, -82.04, _GLF_IDENTITY(398.198, float(_GLF_IDENTITY(float(398.198), (_GLF_IDENTITY(float(398.198), (_GLF_IDENTITY(float(398.198), min(float(398.198), _GLF_IDENTITY(float(398.198), 1.0 * (float(398.198)))))) + tan(0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))), -1395.7551, 621.827, _GLF_IDENTITY(_GLF_IDENTITY(814.277, mix(float(_GLF_FUZZED(-8.1)), float(814.277), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(mix(float(814.277), float(_GLF_FUZZED(-917.612)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(mat3x4(mix(float(814.277), float(_GLF_FUZZED(-917.612)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(abs(1.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), exp(0.0), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7583.3273) : 0.0)))))), 7.3, -450.142, -214.644, _GLF_IDENTITY(-27.55, float(_GLF_IDENTITY(mat2x4(-27.55, 0.0, 1.0, 1.0, exp(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y) * 1.0), injectionSwitch.y))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(614.366)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), bool(true)))), transpose(transpose(mat2x4(-27.55, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(915.597)), bool(false)))) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(4.9, max(4.9, 4.9)), 8.3, 8.2, -601.610, 162.454, 2.5)), mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, sqrt(0.0))))) - tan(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(8.4)), ((true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(8.4))) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))) ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(6.4))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-877.521)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0 * (injectionSwitch.x)))) + (_GLF_FUZZED(mat4(-2.0, -82.04, _GLF_IDENTITY(398.198, float(_GLF_IDENTITY(float(_GLF_IDENTITY(398.198, float(mat3x2(_GLF_IDENTITY(398.198, mix(float(398.198), float(_GLF_FUZZED(-650.797)), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x), 1.0, 0.0, abs(1.0), 0.0)))), (float(398.198)) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)), 1.0 * (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec4(9.7, 471.362, 2.2, 636.598)[2]))))))) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))), -1395.7551, 621.827, _GLF_IDENTITY(814.277, mix(float(814.277), float(_GLF_FUZZED(-917.612)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))) || false)))), 7.3, _GLF_IDENTITY(-450.142, min(-450.142, _GLF_IDENTITY(-450.142, float(vec2(-450.142, 1.0))))), _GLF_IDENTITY(-214.644, mix(float(-214.644), float(_GLF_FUZZED(-2279.4284)), bool(false))), _GLF_IDENTITY(-27.55, float(_GLF_IDENTITY(mat2x4(-27.55, 0.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.7))), max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(20.41))), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0)), float(_GLF_IDENTITY(mat4(float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat4(float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, exp(0.0), 0.0, cos(0.0))))), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), (true ? _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec4(88.50, 3.8, -3.6, 1581.8813))) : 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))), 0.0)), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8366.8870) : 1.0)), 1.0, 1.0))), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-636.354)), float(0.0), bool(true)), min(mix(float(_GLF_FUZZED(-636.354)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-636.354)), float(0.0), bool(true)))))) - 0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(-6.5, (false ? _GLF_FUZZED(mix(-0.7, dot(vec4(-7.3, 5.9, 6745.2363, 16.05), vec4(-318.573, -7.4, -8.8, 5.3)), true)) : -6.5)))))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0)))), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0))))), min(mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0))))), mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0)))))))), min(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0)))), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0))))), min(mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0))))), mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0)))))))), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0)))), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0))))), min(mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0))))), mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0)))))))))), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-572.630)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-572.630)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-572.630)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-572.630)), float(1.0), bool(true)))))))))), vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0)))))), transpose(transpose(mat2x4(-27.55, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), exp(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(int(1)))])).y), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)), 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4.9, max(4.9, 4.9)), min(_GLF_IDENTITY(_GLF_IDENTITY(4.9, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(4.9, max(4.9, _GLF_IDENTITY(4.9, min(4.9, 4.9)))), 0.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(4.9, max(4.9, _GLF_IDENTITY(4.9, min(4.9, 4.9)))), 0.0, 1.0, sqrt(1.0))), float(mat2(float(vec4(_GLF_IDENTITY(4.9, max(4.9, _GLF_IDENTITY(4.9, min(4.9, 4.9)))), 0.0, 1.0, sqrt(1.0))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0)), (true ? float(mat2x3(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(4.9, max(4.9, _GLF_IDENTITY(4.9, min(4.9, 4.9)))), 0.0, 1.0, sqrt(1.0))), float(mat2(float(vec4(_GLF_IDENTITY(4.9, max(4.9, _GLF_IDENTITY(4.9, min(4.9, 4.9)))), 0.0, 1.0, sqrt(1.0))), 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(-124.964))))), max(4.9, 4.9)), _GLF_IDENTITY(_GLF_IDENTITY(4.9, max(4.9, 4.9)), max(_GLF_IDENTITY(4.9, max(4.9, _GLF_IDENTITY(4.9, max(4.9, 4.9)))), _GLF_IDENTITY(4.9, max(4.9, 4.9)))))), 8.3, 8.2, -601.610, 162.454, _GLF_IDENTITY(2.5, (2.5) - 0.0))))), (false ? _GLF_FUZZED(mat4(-320.367, -6.4, -8940.3594, 4.3, 23.83, 9.5, 948.825, 3515.1351, -57.74, -3.4, -339.034, _GLF_IDENTITY(-6301.4525, clamp(-6301.4525, -6301.4525, -6301.4525)), 5863.9337, 2.6, 9.1, 780.118)) : true ? mat4(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(-2.0, -82.04, _GLF_IDENTITY(398.198, float(_GLF_IDENTITY(float(_GLF_IDENTITY(398.198, 0.0 + (398.198))), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-123.439)), float(1.0), bool(true))))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-123.439)), float(1.0), bool(true))))))))))))), -1395.7551, 621.827, _GLF_IDENTITY(814.277, mix(float(814.277), float(_GLF_FUZZED(-917.612)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 7.3, -450.142, -214.644, _GLF_IDENTITY(-27.55, float(_GLF_IDENTITY(mat2x4(-27.55, 0.0, 1.0, 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.42)), bool(false)))), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(1.1), _GLF_FUZZED(26.04)), vec3(_GLF_FUZZED(6350.3393), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, true, true))), vec3(0.0, 0.0, 1.0)))))))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.42)), bool(false)))), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), clamp(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), clamp(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), (vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)) * mat3(1.0)), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(1.1), _GLF_FUZZED(26.04)), vec3(_GLF_FUZZED(6350.3393), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, true, true)), vec3(mat3x2(_GLF_IDENTITY(mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(1.1), _GLF_FUZZED(26.04)), vec3(_GLF_FUZZED(6350.3393), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, true, true)), clamp(mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(1.1), _GLF_FUZZED(26.04)), vec3(_GLF_FUZZED(6350.3393), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, true, true)), mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(1.1), _GLF_FUZZED(26.04)), vec3(_GLF_FUZZED(6350.3393), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, true, true)), mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(1.1), _GLF_FUZZED(26.04)), vec3(_GLF_FUZZED(6350.3393), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, true, true)))), 0.0, 0.0, 0.0)))), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-293.542))), 0.0, 1.0))))))))) / 1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), transpose(transpose(mat2x4(-27.55, 0.0, 1.0, 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(4.9, max(4.9, 4.9)), 8.3, 8.2, -601.610, 162.454, 2.5)), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(mat4(-2.0, -82.04, _GLF_IDENTITY(398.198, _GLF_IDENTITY(float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))), 1.0 * (float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))))), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(1.0))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))), 1.0 * (float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))))), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(1.0))), max(float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))), 1.0 * (float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))))), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(1.0))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))), 1.0 * (float(_GLF_IDENTITY(float(398.198), (float(398.198)) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), min(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(vec3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0)))) * 1.0)))))))), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, abs(1.0)))))) * 1.0))), -1395.7551, 621.827, _GLF_IDENTITY(814.277, mix(float(814.277), float(_GLF_FUZZED(-917.612)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 7.3, _GLF_IDENTITY(_GLF_IDENTITY(-450.142, min(-450.142, _GLF_IDENTITY(-450.142, float(vec2(-450.142, 1.0))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-450.142, min(-450.142, _GLF_IDENTITY(-450.142, float(vec2(-450.142, 1.0))))), min(_GLF_IDENTITY(-450.142, min(-450.142, _GLF_IDENTITY(-450.142, float(vec2(-450.142, 1.0))))), _GLF_IDENTITY(-450.142, min(-450.142, _GLF_IDENTITY(-450.142, float(vec2(-450.142, 1.0)))))))), float(_GLF_FUZZED(107.131)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -214.644, _GLF_IDENTITY(-27.55, float(_GLF_IDENTITY(mat2x4(-27.55, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0))))), 0.0), (true ? mat2x3(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0))))), 0.0) : _GLF_FUZZED(mat2x3(-658.820, -3887.1530, -7.2, -25.62, -250.330, 8077.0195)))))), 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asin(2.1)) : 0.0)), clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asin(2.1)) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asin(2.1)) : 0.0)), float(mat3x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asin(2.1)) : 0.0)), log(1.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(asin(2.1)) : 0.0)))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-5929.0918, max(-5929.0918, -5929.0918))) : 0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(dot(vec4(1.0, abs(1.0), 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, abs(length(0.0)), 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0))), 1.0, 1.0))))), vec4(0.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, abs(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec4(0.0, 0.0, 0.0, log(1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), _GLF_IDENTITY(1.0 * (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - log(1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-572.630)), float(1.0), bool(true)))))))), vec3(0.0, 0.0, 1.0))), float(vec3(1.0 * (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - log(1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-572.630)), float(1.0), bool(true)))))))), vec3(0.0, 0.0, 1.0))), 0.0, 1.0)))))), transpose(transpose(mat2x4(-27.55, 0.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) + (_GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)), 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(4.9, max(4.9, 4.9)), 8.3, 8.2, -601.610, 162.454, 2.5))))))))) + mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((7.9 * 5270.8759)) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? 0.0 : _GLF_FUZZED(-701.132))))), max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), mix(vec2((min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(6195.5806)), _GLF_IDENTITY(vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))), injectionSwitch))[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), clamp(vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), clamp(vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]), vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]))), vec2(_GLF_FUZZED((45.45 * 3764.0589)), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))), injectionSwitch))[1]))), vec2(_GLF_IDENTITY(_GLF_FUZZED((45.45 * 3764.0589)), min(_GLF_IDENTITY(_GLF_FUZZED((45.45 * 3764.0589)), 0.0 + (_GLF_FUZZED((45.45 * 3764.0589)))), _GLF_FUZZED((45.45 * 3764.0589)))), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))), injectionSwitch))[1]))))), bvec2(false, true)))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED((+ -70.48)), _GLF_FUZZED(2.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(767.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(69.44)), bvec2(true, false))))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED((+ -70.48)), _GLF_FUZZED(2.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(767.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(69.44)), bvec2(true, false))))))))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED((+ -70.48)), _GLF_FUZZED(2.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(767.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(69.44)), bvec2(true, false))))))))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED((+ -70.48)), _GLF_FUZZED(2.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(767.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(69.44)), bvec2(true, false))))))))).x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED((+ -70.48)), _GLF_FUZZED(2.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(767.560), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(69.44)), bvec2(true, false))))))))).x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + sin(vec2(0.0, 0.0)), ((injectionSwitch) + sin(vec2(0.0, 0.0))) / vec2(1.0, 1.0))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)).x))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(126.853), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], clamp((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], min((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0])))), _GLF_FUZZED(-97.63)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.3)), bool(false))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0))))), 0.0, 1.0)), (float(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0), transpose(transpose(mat4(0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-77.25)), float(1.0), bool(true))), 1.0)), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0)))))) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0))))))), 0.0)), injectionSwitch.x)))), 1.0, _GLF_struct_10(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true))))), vec4(1.0), bvec2(true), 1u, mat2(1.0)), 1);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, exp(0.0), exp(0.0), 1.0, length(_GLF_ZERO(0.0, injectionSwitch.x)))), (vec2(mat2x3(injectionSwitch, exp(0.0), exp(0.0), 1.0, length(_GLF_ZERO(0.0, injectionSwitch.x))))) / vec2(1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-232.290), _GLF_FUZZED((true ? 5.5 : 53.92))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_id, ~ (~ (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_id)));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), ~ (~ ((workgroup_size)))))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u, ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u) | ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u))) | 0u) * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), ~ (~ ((workgroup_size)))))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u, ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u) | ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u))) | 0u) * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), ~ (~ ((workgroup_size)))))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u, ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u) | ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u))) | 0u) * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z, clamp(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), ~ (~ ((workgroup_size)))))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u, ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u) | ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u))) | 0u) * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), ~ (~ ((workgroup_size)))))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u, ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u) | ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u))) | 0u) * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), ~ (~ ((workgroup_size)))))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u, ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u) | ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u))) | 0u) * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z))) | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(~ (~ ((workgroup_size))), (_GLF_IDENTITY(~ (~ ((workgroup_size))), max(~ (~ ((workgroup_size))), ~ (~ ((workgroup_size)))))) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u, ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u) | ((_GLF_IDENTITY((workgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (workgroup_size)))) | 0u))) | 0u) * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z)) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.t)));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((83706 & 0), ((83706 & 0)) | ((83706 & 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y = workgroup_base;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + subgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id, (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id) | (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id)).x;
 uint next_virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size, ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | 0u), _GLF_IDENTITY(((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u), _GLF_IDENTITY((((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u)) << 0u, ((((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u)) << 0u) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size, ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | 0u), _GLF_IDENTITY(((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u), _GLF_IDENTITY((((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u)) << 0u, ((((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u)) << 0u) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size, ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | 0u), _GLF_IDENTITY(((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u), _GLF_IDENTITY((((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u)) << 0u, ((((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % subgroup_size) | ((131635u & 118869u) & 0u)) << 0u) + 0u))))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-2922.3065) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-2922.3065) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-2922.3065) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-2922.3065) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-2922.3065) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) && true), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))))))))))))))))) && true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))), (_GLF_DEAD(false)) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-34.90)))), min(injectionSwitch, injectionSwitch)).y))))), false))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, false)), ! (! (bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, false))))))) && true))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2, uint(uint(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2, _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2) | (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2), ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2) | (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2)) / 1u)), GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), _GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), ((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id, uvec3(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id[0], GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id[2], (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id[2]) >> 0u))), GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id)).x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), ((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), max((_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), _GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), ((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (true ? (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x) : _GLF_FUZZED(subgroup_id))), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | _GLF_IDENTITY(((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)), (((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x))) | (((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)))) | (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), uint(_GLF_IDENTITY(uvec2((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), 1u), uvec2(uvec3(uvec2((~ _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))), 1u), 0u))))), ((~ _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), ~ (~ (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))))), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), max((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x), (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x)))) | ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id, clamp(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id, (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id) | uvec3(0u, 0u, 0u)), GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id, GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id)).x))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u))))) % 2)) | 0u) == 0)
  {
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), ~ (_GLF_IDENTITY(~ ((0 >> _GLF_IDENTITY(int(8), int(8)))), min(~ ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (8)))), int(8)))), ~ ((0 >> _GLF_IDENTITY(int(8), int(8)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((-99439 >> 50395) & (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, (6) + 0))), 6))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(0 | (int(6)), 0 + (0 | (int(6))))))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false))) || false)), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- _GLF_IDENTITY(-4.6, (true ? -4.6 : _GLF_FUZZED(9.2)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false))) || false)))))))))))))
              barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-940.040)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), abs(0.0), sqrt(1.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), injectionSwitch)).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-940.040)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false, false))))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & _GLF_IDENTITY(53417, clamp(53417, 53417, 53417)))); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, false)))))));
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(2, 2))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) / (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)), (~ (_GLF_IDENTITY(2, max(2, 2)))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 0 + ((_GLF_IDENTITY(2, max(2, 2))))), _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), max((_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(2, max(2, 2))))), (_GLF_IDENTITY(2, max(2, 2)))))))) >> 0, max((~ (_GLF_IDENTITY(2, max(2, 2)))) >> 0, (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), max(~ (_GLF_IDENTITY(2, max(2, 2))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, 0), ~ (~ (ivec3(2, 1, 0))))))) >> (0 | 0)), max(2, 2)))))) >> 0))))), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) | (2)), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ _GLF_IDENTITY(((0)), 1 * (((0))))) >> (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-87643))), 0, 0)) << _GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(81821) : _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) >> (0 << _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) >> (0 << _GLF_IDENTITY(int(6), int(6))))) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(int(6), int(6)))))))))) ^ (_GLF_IDENTITY(2, ~ (~ (2))))))), 2))), 4, 64, _GLF_IDENTITY(4, (4) / 1));
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0)) >> 0))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0)))) * 1.0), injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0)))) * 1.0), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0)))) * 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) || false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), min(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), ((0 << _GLF_IDENTITY(int(2), int(2)))) / 1)) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), max((0 << _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(2), int(2)))))), 0 | (~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), max((0 << _GLF_IDENTITY(int(2), int(2))), (0 << _GLF_IDENTITY(int(2), int(2)))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) && true))), true && (false || (! (_GLF_IDENTITY(false, (false) && true))))), true)))))), true)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(false, (false) && true)))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))))))), false || (! (_GLF_IDENTITY(false, (false) && true))))))), true)), (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(false, (false) && true)))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), true))) && true)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))), true)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, false || ((false) && true)))))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))), bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, false || ((false) && true)))))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), true), true)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(false, (false) && true)))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(false, (false) && true)))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(false, (false) && true)))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))))))) || false), true))) && true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (false) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (false) && true))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(false, (false) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(bool(bool((_GLF_IDENTITY(false, (false) && true)))), true, false, false))))))))), bool(bool(bool(bool((_GLF_IDENTITY(false, (false) && true))))))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), true)), (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))), true))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))))), false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false)))))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), ! (! (true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))))))), false, true))) && true), true))))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))) && true)) && true)))), (bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))) && true)) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(false, (false) && true)))), true))) && true))))))))))))) && true))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bool(_injected_loop_counter != 0)))); _injected_loop_counter --)
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false))))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))) || (_GLF_WRAPPED_LOOP(false))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(int(1))))), 1, 1))])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, true))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = ((-15479 >> (9779 ^ 9822)) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), 0u | (uint(uint(next_virtual_gid))))), (true ? _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.g))) : _GLF_FUZZED(subgroup_size)))], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (2), (0 ^ (2)) * 1))), 4, 64, _GLF_IDENTITY(4, (4) << 0));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(abs(vec2(-6.1, -478.225)), min(abs(vec2(-6.1, -478.225)), abs(vec2(-6.1, -478.225))))))).y))))
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) < 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.8)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))), mix(float(_GLF_FUZZED(5.6)), float(injectionSwitch.y), bool(true)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && true))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
