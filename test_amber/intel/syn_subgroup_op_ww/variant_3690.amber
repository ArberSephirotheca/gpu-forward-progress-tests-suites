#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(6232.5648)), bvec2(false, false)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-3.1), _GLF_FUZZED(6232.5648)), bvec2(false, false)))).x > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4366.1103, -4546.4998)) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))).x), _GLF_IDENTITY(float(_GLF_FUZZED(-7832.0481)), clamp(float(_GLF_FUZZED(-7832.0481)), float(_GLF_FUZZED(-7832.0481)), float(_GLF_FUZZED(-7832.0481)))), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.5, -710.690)) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.5, -710.690)) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true))))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))).x), _GLF_IDENTITY(float(_GLF_FUZZED(-7832.0481)), clamp(float(_GLF_FUZZED(-7832.0481)), float(_GLF_FUZZED(-7832.0481)), float(_GLF_FUZZED(-7832.0481)))), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.5, -710.690)) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.5, -710.690)) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true))))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true)))))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))).x), _GLF_IDENTITY(float(_GLF_FUZZED(-7832.0481)), clamp(float(_GLF_FUZZED(-7832.0481)), float(_GLF_FUZZED(-7832.0481)), float(_GLF_FUZZED(-7832.0481)))), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.5, -710.690)) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4.5, -710.690)) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true))))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7832.0481)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true)))), true, true)))))))), true, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), clamp((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(7.0)), bool(false)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))), (_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0)))) * 1.0))))))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + _GLF_IDENTITY((0.0), float(mat4((0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0)), (dot(vec3(exp(0.0), 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 0.0, 0.0, 0.0))))))).y)))) << 0u))))) | ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, false, false)), false || (bool(bvec4(bool(bool(false)), true, false, false))))), true)))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))).y))))))) << 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))) ^ 0u)) | 0u)), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(7.0)), bool(false)))) / 1.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))))))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED((-3490.9983 + 98.59))), bool(false))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))) << 0u))))), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))) ^ 0u)) | 0u)), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(7.0)), bool(false)))) / 1.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))))))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(float(1.0)), float(_GLF_FUZZED((-3490.9983 + 98.59))), bool(false))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))) << 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u ^ 0u), 0u))) | ((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658)))), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658)))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))).y))))))) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp(_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, true)))))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), clamp((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(7.0)), bool(false)))) / 1.0), _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))))))))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))) << 0u))))) | ((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(188.950)), bool(false))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))).y))))))) << 0u, _GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y), 0.0))).y))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), clamp((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), _GLF_IDENTITY((_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(7.0, min(7.0, 7.0)))), bool(false)))), ((_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(7.0, min(7.0, 7.0)))), bool(false))))) * 1.0) / 1.0), _GLF_IDENTITY((0.0), clamp((0.0), _GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), max((0.0), (0.0)))) - 0.0), (0.0))))))))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))) << 0u))))) | ((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))).y)), (true ? uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.1) : 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))).y)) : _GLF_FUZZED(workgroup_size)))))))) << 0u, _GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base)))) | 0u) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), clamp((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(7.0)), bool(false)))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-60.38) : 0.0)), 0.0, 0.0))), clamp((0.0), (0.0), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp2(-171.371))))))))))))))).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))))).y)))) << 0u))))) | ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))) ? _GLF_FUZZED(workgroup_base) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))), (true ? mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, sin(0.0) + (0.0))) : _GLF_FUZZED(mat3(181.906, -9448.8533, 7199.2569, 5.9, 8.4, -611.956, -2.2, -5.5, -7022.5658))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))).y) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))))) << 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, min((workgroup_base + subgroup_base) | 0u, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, clamp((workgroup_base + subgroup_base) | 0u, (workgroup_base + subgroup_base) | 0u, (workgroup_base + subgroup_base) | 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, clamp((workgroup_base + subgroup_base) | 0u, (workgroup_base + subgroup_base) | 0u, (workgroup_base + subgroup_base) | 0u))))))), max((workgroup_base + subgroup_base) | 0u, (workgroup_base + subgroup_base) | 0u)), _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base) | 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base + subgroup_base) | 0u : _GLF_FUZZED(subgroup_id))), (workgroup_base + subgroup_base) | 0u)))))), (_GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, ((workgroup_base + subgroup_base) | 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) / 1)), 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-5.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) ^ (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, int(int(1))), 1, 1)))))))) | (1)), 0 ^ (1))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), int(ivec4(_GLF_IDENTITY(1, (1) << 0), 1, 1, 1))), 1 * (_GLF_IDENTITY(1, int(ivec4(1, 1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))) | (1)), 0 ^ (_GLF_IDENTITY(1, (1) << 0))))) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u)) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(false, ! (! (false))))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, int(int(1)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) % 2, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id % 2))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) ^ 0u), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(num_workgroup) : subgroup_local_id % 2)))) ^ (0u ^ 0u)) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false, false)))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false, false)))))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false, false, false)))))), true, true)), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (64) * 1), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, 1 * (4)), 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
