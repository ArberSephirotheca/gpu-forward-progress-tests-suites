#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))))))))))), true && (false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) || false))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0)), mix(float(_GLF_FUZZED(52.49)), float(float(mat3(1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0))), bool(true)))))), 0.0 + _GLF_IDENTITY((float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), mix(float(_GLF_IDENTITY((float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), ((float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) - 0.0)), float(_GLF_FUZZED(9806.6873)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_FUZZED(750.130))), float(_GLF_FUZZED(1.7)), bool(false))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (true) || false))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(965.974), _GLF_FUZZED(-4228.4736)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, (true) && true), true))).x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.1))) > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), true && (! (false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false)))), true)))))))))))), (bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false))), ! (_GLF_IDENTITY(! (bool(bvec3(! (bool(bool(! (false)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false)))), ! (_GLF_IDENTITY(! (! (bool(bvec3(! (bool(bool(! (false)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false))))), ! (! (_GLF_IDENTITY(! (! (bool(bvec3(! (bool(bool(! (false)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false))))), true && (! (! (bool(bvec3(! (bool(bool(! (false)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false))))))))))))))), (_GLF_IDENTITY(! (bool(bool(! (false)))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))), true, true)), ! (! (bool(bvec3(! (bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))), true, true))))))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY(! (false), bool(bool(! (false))))) || false))))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(tan(-483.691)))) > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))), true, true))))))) && true))), (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (false))), true && (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(bool(bool(! (false))))), bool(bool(bool(bool(bool(bool(! (false)))))))))))), bool(bvec3(! (bool(bool(! (false)))), true, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))))))))))), true, true))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))))))))))), true, true))))))) && true), (! ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), bool(bool((false)))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), bool(bool((false)))))), (bool(bool(! _GLF_IDENTITY((false), bool(bool((false))))))) || false), false, false, true))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), bool(bvec4(bool(bool(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, true))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))))))))))), true, true))))))) && true)) || false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)), bool(bvec3(bool(bvec4(((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)), false, false))))))), bool(bool(! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(! (false), bool(bool(! (false))))) || false))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false))), true, true))), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), bool(bvec4((bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), true, _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(bool(bool(! (false))), _GLF_IDENTITY(false, (false) || false), true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))), true, true))))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), false || (bool(_GLF_IDENTITY((false), ((false)) || false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((bool(bool(! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(! (false))))), (((bool(bool(! (false)))))) && true), true && (! ((bool(bool(! (false))))))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! _GLF_IDENTITY((false), true && ((false))))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bvec4(bool(bool(! (false))), false, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(bool(! (false))), false, true, true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(bool(! (false))), false, true, true)), (bool(bvec4(bool(bool(! (false))), false, true, true))) && true), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(bool(! (false))), false, true, true)), (bool(bvec4(bool(bool(! (false))), false, true, true))) && true), false, false, true)))))) || false))))))))), true, true))))))) && true))), (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))), true, true))))))) && true)))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)) && true)), bool(bvec2(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)) && true)), false)))))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! _GLF_IDENTITY((false), true && ((false)))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, _GLF_IDENTITY(true, (true) || false), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))))))), true, true))))))) && true))), (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))), true, true))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, _GLF_IDENTITY(false, (false) && true))))) && true), ! (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! _GLF_IDENTITY((! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec3(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)), false, true, true)))), true, true)))), false, true, true)))))))))), true, true)))), ((! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec3(_GLF_IDENTITY(bool(! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))), true)), false, true, true)))), true, true)))), false, true, true)))))))))), true, true))))) || false)))) && true)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)), true && (bool(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))), false || (! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))))))), true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))), false || (! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))))))), true, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))), false || (! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))))))), true, true)), true)))), true && (! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))), false || (! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))))))), true, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))), false || (! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), bool(bvec4(bool(bool(! (false))), false, true, true))))))))))))))), true, true)), true))))))))))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false), true)))))))))), bool(bvec4(bool(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))), true, true))))))) && _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), true && (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), false || (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))) || false)) && true)))))))))))), true, true))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), true && (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), false || (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))) || false)) && true)))))))))))), true, true))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), true && (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), false || (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))) || false)) && true)))))))))))), true, true))))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), true && (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))), false || (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))) || false)) && true)))))))))))), true, true))))))) && true))) && true)))) && true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), ! (! (((false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, false)))))))))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))), false || (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))))))), true, true))))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec4(bool(! (false)), _GLF_IDENTITY(false, (false) && true), true, false))))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true)), ! (! (bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, false)))) && true))))))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))))), ((! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true))))))) && true))))), (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(! (false)))), bool(bvec3(! (bool(bool(! (false)))), true, true))), (_GLF_IDENTITY(! (bool(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), true && (_GLF_IDENTITY((false), ((false)) && true))), true, true, false)))) && true)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(! (false)))), _GLF_IDENTITY(true, ! (! (true))), true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec4(bool(bool(! (false))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), true, true)))))))))), true, true))))))) && true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)) && true)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 1.0))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(subgroup_base, 1u, 0u)), _GLF_IDENTITY(0u ^ (uint(uvec3(subgroup_base, 1u, 0u))), ~ (_GLF_IDENTITY(~ (0u ^ (uint(uvec3(subgroup_base, 1u, 0u)))), (~ (0u ^ _GLF_IDENTITY((uint(uvec3(subgroup_base, 1u, 0u))), (true ? (uint(uvec3(subgroup_base, 1u, 0u))) : _GLF_FUZZED(subgroup_id))))) / 1u)))))) >> 0u) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) - _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u))))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec4(! ((! (false))), true, true, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)), mix(vec2(_GLF_FUZZED((- 322.399)), (vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)))[1]), vec2((vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)))[0], _GLF_FUZZED(-9.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + log(vec2(1.0, 1.0))).y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + log(vec2(1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + log(vec2(1.0, 1.0))).y)) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + log(vec2(1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + log(vec2(1.0, 1.0))).y)) && true)) && true), ! (! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((4048.0318 + 38.18), (false ? _GLF_FUZZED(-268.240) : (4048.0318 + 38.18)))), _GLF_FUZZED(-94.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + _GLF_IDENTITY(log(vec2(1.0, 1.0)), _GLF_IDENTITY((log(vec2(1.0, 1.0))) * mat2(1.0), clamp((log(vec2(1.0, 1.0))) * mat2(1.0), (log(vec2(1.0, 1.0))) * mat2(1.0), (log(vec2(1.0, 1.0))) * mat2(1.0))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4048.0318 + 38.18)), _GLF_FUZZED(-94.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + log(vec2(1.0, 1.0))).y)) && true)) && true)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(9.3, mix(float(_GLF_FUZZED(9.3)), float(9.3), bool(true))))), bool(false))) > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.3, -45.99)))).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp(_GLF_IDENTITY((0) | (0), clamp((0) | (0), _GLF_IDENTITY((0) | _GLF_IDENTITY((0), max((0), (0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((0) | (0), 0 + ((0) | (0))))), max(int(int(_GLF_IDENTITY((0) | (0), 0 + ((0) | (0))))), int(int(_GLF_IDENTITY((0) | (0), 0 + ((0) | (0)))))))), (0) | (0))), (0) | (0), (0) | (0)))), (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(74728))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), sin(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, sqrt(0.0), sin(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), sin(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), _GLF_IDENTITY((_GLF_IDENTITY(max(2, 2), clamp(max(2, 2), _GLF_IDENTITY(max(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) >> 0)), (max(2, 2)) >> 0), max(2, 2)))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(max(2, 2), clamp(max(2, 2), _GLF_IDENTITY(max(2, 2), (max(2, 2)) >> 0), max(2, 2)))) << 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(max(2, 2), clamp(max(2, 2), _GLF_IDENTITY(max(2, 2), (max(2, 2)) >> 0), max(2, 2)))), max((_GLF_IDENTITY(max(2, 2), clamp(max(2, 2), _GLF_IDENTITY(max(2, 2), (max(2, 2)) >> 0), max(2, 2)))), _GLF_IDENTITY((_GLF_IDENTITY(max(2, 2), clamp(max(2, 2), _GLF_IDENTITY(max(2, 2), (max(2, 2)) >> 0), max(2, 2)))), ((_GLF_IDENTITY(max(2, 2), clamp(max(2, 2), _GLF_IDENTITY(max(2, 2), (max(2, 2)) >> 0), max(2, 2))))) | ((_GLF_IDENTITY(max(2, 2), clamp(max(2, 2), _GLF_IDENTITY(max(2, 2), (max(2, 2)) >> 0), max(2, 2)))))))) << 0 : _GLF_FUZZED(-13837)))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(tan(0.0))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
