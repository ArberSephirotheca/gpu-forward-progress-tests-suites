#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), determinant(mat4(sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, sqrt(1.0), sin(0.0), 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, sqrt(1.0), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0))), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6210.8750)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-126.981)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8398.7887)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5059.1645)))), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), min(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))) : _GLF_FUZZED(-9287.2171))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) / 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-403.940) : 0.0)))), sqrt(0.0), 1.0)), min(float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(57.91))), 0.0)), 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(1.0, 0.0))) / 1.0)), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), (_GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0 * (_GLF_IDENTITY((dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-4.8, 417.516, 297.036)[0]) : (dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))) - 0.0) / 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.0)), float(0.0), bool(true))), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) / 1.0)), (false ? _GLF_FUZZED(sign(_GLF_IDENTITY(-94.61, max(-94.61, _GLF_IDENTITY(-94.61, float(float(-94.61))))))) : _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) / 1.0)))))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0)))) - 0.0), 0.0, 0.0, sqrt(0.0), 1.0)), float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(0.0, 0.0) + (vec2(0.0, 1.0))), vec2(1.0, 0.0))) / 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-295.827)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), true && (bool(bool(false)))))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), bool(bool(_GLF_DEAD(false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false))), bool(bool(_GLF_DEAD(false))))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) || false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))) || (true))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, true))), true, _GLF_IDENTITY(true, true && (true)))))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)))), true, true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true) && (false)), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) || false))))), true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false)), true))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true)))), true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y, true, true, false)))) || false)))) && true) && (false)), true)))))) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, _GLF_IDENTITY(true, (true) && true))))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), bool(bvec2(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true))))), true, false)), bool(bvec2(bool(bvec3(true, true, false)), false)))), bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), true, true, true)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))))), true))))), true, true, _GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false)), true))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))) && true), bool(bvec4(true, true, true, true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true))))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false)), true)), ! (! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, (true) && true), false, false)), ! (! (bool(bvec4(true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (_GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true)), ! (_GLF_IDENTITY(! (bool(bvec4(true, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), true && (! (bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(false, true && (false))), true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec4(bvec2(! (false), _GLF_IDENTITY(false, true && (false))), true, false)))), true, true, false)))), true && (! (false))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true, true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(uvec4(122748u, 75202u, 148290u, 68353u).a)), _GLF_FUZZED(vec2(131.479, -5.1).y)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, (false ? _GLF_FUZZED(93.65) : injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(_GLF_IDENTITY(false, (false) || false))), mix(float(_GLF_FUZZED(584.265)), float(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(_GLF_IDENTITY(false, (false) || false)))), bool(true)))) < injectionSwitch.y))) && true) && (false)), true))))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), bool(bvec4((! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), _GLF_IDENTITY(bool(bvec3(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, true)), (_GLF_IDENTITY(bool(bvec3(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, true)), bool(bvec3(bool(bvec3(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, true)), true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec3(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, true)), bool(bvec3(bool(bvec3(false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, true)), true, false))), true), false, false)))))) || false))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (false)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false)), true)), ! (! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), false || ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), true, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(285.233), (injectionSwitch)[1]), bvec2(false, true))).y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false)), true))))))))) && true, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) && true))))), true, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1771.0513)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0), 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false)), true)), ! (! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) || false), true))), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / abs(vec2(1.0, 1.0)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (_GLF_IDENTITY(false, ! (! (false))))), true))))))))) && true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false))))))), true)))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true)))))), true, false, true))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], clamp(((injectionSwitch))[0], ((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(-53.41)), vec2(_GLF_FUZZED(-1494.7829), ((injectionSwitch))[1]), bvec2(false, true))) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false)), true)), ! (! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true), false), true)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(15.11), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-8.2)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, sin(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), cos(0.0), 1.0)))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false)), true))))))))) && true, true, true)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x : _GLF_FUZZED(4.3))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) : _GLF_FUZZED(ceil(normalize(636.817))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < injectionSwitch.y))) && true) && (false)) && true)), true)), ! (! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, true, true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(-8533.6486)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4678.6641)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))))) && true) && (false)), true))))))))) && true, true, true)), true, true, true)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, true, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)) || false))), false, true)))))) || false), true && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y)), false, true)), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, true, true, true)))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, true, true, true))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), false, true)))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), true))), true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), true, true, _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, false, true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)))))), true, true)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) || false), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), true, true, _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, false, true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)))))), true, true)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) || false), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), true, true, _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, false, true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)))))), true, true)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) || false), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), true, true, _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), true, false, true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)))))), true, true)))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) || false), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false)))))) && true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), true, true, true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(86.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), false, true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) && true))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y)))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), true, true, true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(86.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), false, true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) && true))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y)))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), false, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))), true, true, true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(86.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), false, true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) && true))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y)))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(true, _GLF_IDENTITY(true, (true) || false), true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), (bool(bvec4(true, true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, false || (true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false)))), false, false))))))) || false)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) || false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), ((_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) || false)))))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, ! (! (true))), true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, ! (! (true))), true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true))))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(true && (bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false))), bool(bvec2(true && (bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false))), false))))), bool(bvec4(true, true, _GLF_IDENTITY(true, ! (! (true))), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)), false, true)))))), bool(bvec3((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), true && (bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false))))), bool(bvec4(true, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true))))), true)))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y)), false, true, true))))), false, true)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false))) && true)) || false)))))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, log(1.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), false || ((false))), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true)), (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bvec3(false || ((false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, abs(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0))).y)))), true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)), 0u ^ (_GLF_FUZZED(atomicMax(subgroup_id, _GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))))))) : subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)), 0u ^ (_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)))) : subgroup_base)), (true ? workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)), 0u ^ (_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)))) : subgroup_base)) : _GLF_FUZZED(subgroup_id)))), (true ? (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)), 0u ^ (_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)))) : subgroup_base)), (true ? workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)), 0u ^ (_GLF_FUZZED(atomicMax(subgroup_id, virtual_gid)))) : subgroup_base)) : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED(atomicAdd(workgroup_size, num_workgroup)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(ivec3(ivec3(1, 0, 1))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))], uint(1), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(42465) : 4)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), clamp(_GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (2) | (2))) + 0)))) | (2)))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) << 0u)) == 0, ! (! (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), clamp(_GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (2) | (2))) + 0)))) | (2)))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) << 0u)) == 0))))
  {
   subgroupAll(true);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true, false)))))) && _GLF_IDENTITY(true, false || (true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), clamp(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false))))), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false)))))), false, true, false)))) && true)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)), ((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), clamp(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))) : _GLF_FUZZED(14.92)))), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false)))))), false, true, false)))) && true)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), clamp(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false))))), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false)))))), false, true, false)))) && true)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)), ((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), clamp(true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)), true ? injectionSwitch.y : _GLF_FUZZED(degrees(6.8)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))) : _GLF_FUZZED(14.92)))), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false)))))), false, true, false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))) : _GLF_FUZZED(14.92)))), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false)))))), false, true, false)))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.08)), bool(false)))) : _GLF_FUZZED(14.92)))), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false)))))), false, true, false)))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true), false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (1 ^ 1)), (_GLF_IDENTITY(4, (4) / ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) * 1))))))) >> _GLF_IDENTITY(int(1), int(1))))) / 1), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (4) / 1)), ((_GLF_IDENTITY(4, (4) / 1))) | 0) | (_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (0) | 0), 0)))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(4, (4) / 1)))), (true ? (_GLF_IDENTITY(4, (4) / 1)) : _GLF_FUZZED(ivec3(80240, 81598, 72465).t))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ((_GLF_IDENTITY(4, (4) / 1))) | ((_GLF_IDENTITY(4, (4) / 1)))), min((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY(4, (4) / 1))))) - _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), min(int(3), int(3))))), int(3))), int(3))), clamp((0 >> _GLF_IDENTITY(int(3), int(3))), (0 >> _GLF_IDENTITY(int(3), int(3))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))))))))))))) / 1)) >> 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(39.31, -808.684)) : injectionSwitch)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackHalf2x16(next_virtual_gid)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
