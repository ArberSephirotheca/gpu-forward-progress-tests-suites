#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-4.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, true, true, true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, true, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true, true, false))))), true, true, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), false, true, false)), bool(bvec2(bool(bvec4(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), false, true, false)), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true))))), true && (false)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))))) > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(_GLF_IDENTITY(6759.1710, mix(float(6759.1710), float(_GLF_FUZZED((-5141.2126))), bool(false))), min(6759.1710, 6759.1710)))))), 1.0 * (float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(_GLF_IDENTITY(6759.1710, mix(float(6759.1710), float(_GLF_FUZZED((-5141.2126))), bool(false))), min(6759.1710, 6759.1710)))))))), bool(false))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710))))), min(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710))))), _GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(6759.1710, min(6759.1710, _GLF_IDENTITY(6759.1710, min(6759.1710, 6759.1710)))))), bool(false))))) > injectionSwitch.y))))))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))), true, false, false)), (bool(bvec4(false, true, false, false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, false)), _GLF_IDENTITY((bool(bvec4(false, true, false, false))) || false, true && ((bool(bvec4(false, true, false, false))) || false))), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))), false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false))))) || false), (bool(bvec4(false, true, false, false))) || false))), false, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) || false))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), bvec2(true, false)))) * mat2(1.0)).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-543.270 * -937.326))), bool(false))))) || (true))))))))) || false)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, tan(0.0)))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, tan(0.0)))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, tan(0.0)))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, tan(0.0)))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, tan(0.0)))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, tan(0.0)))).x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id >> 98810u)) : _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), _GLF_IDENTITY(max(false ? _GLF_FUZZED((subgroup_id >> 98810u)) : _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), false ? _GLF_FUZZED((subgroup_id >> 98810u)) : _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))), (_GLF_IDENTITY(max(false ? _GLF_FUZZED((subgroup_id >> 98810u)) : _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), false ? _GLF_FUZZED((subgroup_id >> 98810u)) : _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))), (max(false ? _GLF_FUZZED((subgroup_id >> 98810u)) : _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), false ? _GLF_FUZZED((subgroup_id >> 98810u)) : _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))) >> 0u)) / 1u)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))), max(~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) * 1u))))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) : subgroup_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) << 0u, ((subgroup_id) << 0u) | ((subgroup_id) << 0u)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED((num_workgroup & num_workgroup)) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) / 1u)))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - 0u) : subgroup_id)))), 0u, 0u, 0u)) * uvec4(1u, _GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id))))) | 0u)))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), float(mat3x2(_GLF_FUZZED(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)))), float(injectionSwitch.y), bool(true)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | (0u | (subgroup_base))))) | (subgroup_base)), _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) / 1u)) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - ((0u ^ 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) | 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))) | (subgroup_base))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | (0u | (subgroup_base))))) | (subgroup_base)), _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) / 1u)) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - ((0u ^ 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) | 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))) | (subgroup_base))) | 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | (0u | (subgroup_base))))) | (subgroup_base)), _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) / 1u)) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - ((0u ^ 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) | 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))) | (subgroup_base))) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | (0u | (subgroup_base))))) | (subgroup_base)), _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) / 1u)) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - ((0u ^ 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) | 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))) | (subgroup_base))) | 0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) | (0u | (subgroup_base))))) | (subgroup_base)), _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) / 1u)) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - ((0u ^ 0u) >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) ^ 0u) | (subgroup_base))) | 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))) | (subgroup_base))) | 0u))))))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) - 0u, _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) - 0u, 1u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) - 0u, 1u, 1u, 1u)), (uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) - 0u, 1u, 1u, 1u))) << 0u)) * 1u))) - 0u))) >> 0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + subgroup_local_id), (uint(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + subgroup_local_id)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), min(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), uint(uvec3(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u, 0u))))), clamp(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), clamp(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), clamp(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), clamp(1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), uvec3(uvec4(uvec3(subgroup_base, 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), 1u)))))))))))) / 1u), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), clamp(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | _GLF_IDENTITY((subgroup_base), (true ? (subgroup_base) : _GLF_FUZZED(num_workgroup))))), 1u * (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (subgroup_base))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id), ~ (~ (uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(5u)))), 0u | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), clamp(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u))), 1u)) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), min((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) >> 0u) | (subgroup_base))), (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), 1u * (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) ^ 0u)) | 0u))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u) * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), clamp(1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), min((_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), 1u * (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (_GLF_IDENTITY(0u | (subgroup_base), (0u | (subgroup_base)) ^ 0u)) | 0u))), 1u * (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + subgroup_local_id)))), clamp(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, min(0u, 0u)))))), (uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, min(0u, 0u))))))) << 0u))), (~ (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec2(subgroup_base, 0u), ~ (_GLF_IDENTITY(~ (uvec2(subgroup_base, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (uvec2(subgroup_base, 0u)) : _GLF_FUZZED(uvec2(136384u, 89512u)))))))))) - 0u))), min(subgroup_base, subgroup_base))) / 1u))) + subgroup_local_id), uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), min(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))) >> 0u), (_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) | 0u), (false ? _GLF_FUZZED(86709u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), _GLF_IDENTITY(min(subgroup_base, subgroup_base), min(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base))))))))) | 0u))) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), _GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), uint(uvec3(0u | (subgroup_base), 1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))), ((_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))), clamp((_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))), (_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))), (_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))))), (_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))), (_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u))))))))))))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, ~ (~ (4u))), _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(_GLF_IDENTITY(4u, ~ (~ (_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 1u, 0u)))))))))) * 1u))))) + subgroup_local_id), (uint(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + subgroup_local_id)) ^ 0u)))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), max(min(1u, 1u), min(1u, 1u)))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), max(min(1u, 1u), min(1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), max(min(1u, 1u), min(1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), max(min(1u, 1u), min(1u, 1u)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_IDENTITY(false, (false) && true))))))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, sqrt(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, abs(0.0), sin(0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(8414.9686, -11.26)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))) / 1u))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)), false, false), false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-45.73), _GLF_FUZZED(-8.5)), bvec2(false, false))).y)))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec3(78.16, -412.510, -6.8).rb))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || false))))))))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.4))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, mix(float(_GLF_FUZZED(-2.4)), float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), bool(true))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.4)), (float(_GLF_FUZZED(-2.4))) / 1.0), float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), bool(true)))))))) || false), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-678.159))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))))), max(injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)), 1.0, 1.0)), float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(injectionSwitch.y, injectionSwitch.y)), clamp(max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) * _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? 7660.7177 : -0.7))), vec2(_GLF_FUZZED(947.898), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(6938.1182)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0)), 1.0, 1.0)), float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 1.0, 1.0)))), max(injectionSwitch.y, injectionSwitch.y))))))), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) < injectionSwitch.y))))))), true)), bool(bvec4(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))) && (! (true))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) < injectionSwitch.y))))))), true)), false, false, false))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.8)), bool(false))), injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) || false), (injectionSwitch.x < injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(91.84), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.1)), float(1.0), bool(true))), 1.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) || false), true && (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))).y) || false))))) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-3.0 / 32.19)), _GLF_FUZZED(-645.935)), bvec2(false, false))).x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(_GLF_IDENTITY(bool(bool((false))), (bool(bool(_GLF_IDENTITY((false), false || ((false)))))) || false))))), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0)))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2) == 0), ! (_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), (_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), (! (! ((subgroup_local_id % 2) == 0))) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), (! (! ((subgroup_local_id % 2) == 0))) || false), true, false, false))))))) && true))), ! (! (bool(bool(_GLF_IDENTITY(! (! ((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(28102) : 2))) == 0)), (! (! ((subgroup_local_id % 2) == 0))) && true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true) && (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (false)))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (false)))) && true, true)), (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), true && ((! (true)))))))), ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), true && ((! (true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) && (false)))) && true, true))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false))), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (true ? float(vec2(injectionSwitch.y, 1.0)) : _GLF_FUZZED(-9.6)))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5006.7818)), bool(false))), injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true)))) && _GLF_IDENTITY(true, ! (! (true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), true, true))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ (0u & 15821u)), 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (true ? max(1u, 1u) : _GLF_FUZZED(next_virtual_gid))))) << 0u)) + 0u)) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ (0u & 15821u)), 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) << 0u, ~ (~ ((_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, max(1u, 1u)))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), min(((_GLF_IDENTITY(1u, max(1u, 1u)))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, max(1u, 1u)))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (((_GLF_IDENTITY(1u, max(1u, 1u)))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) / 1u)))) : _GLF_FUZZED(virtual_gid))) << 0u)) + 0u)) << 0u))) + 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ (0u & 15821u)), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(1u, (1u) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), 0u, 0u, 1u)), clamp(uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), 0u, 0u, 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), 0u, 0u, 1u))) << 0u), uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), 0u, 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))))) << 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))) + (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) ? uint(5u) : _GLF_FUZZED(66523u)))))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ (0u & 15821u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), max(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), uint(uint(_GLF_IDENTITY(1u, (1u) | 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), uint(uint(_GLF_IDENTITY(1u, (1u) | 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), uint(uint(_GLF_IDENTITY(1u, (1u) | 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), uint(uint(_GLF_IDENTITY(1u, (1u) | 0u))))))))) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(65636u) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) << 0u))), _GLF_IDENTITY(0u, min(0u, 0u)))))) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ (_GLF_IDENTITY(0u & 15821u, (false ? _GLF_FUZZED(min(subgroup_size, workgroup_id)) : 0u & 15821u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) ^ 0u)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ (0u & 15821u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) ^ 0u)) | 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | ((1u))) ^ (0u & 15821u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) ^ 0u)) | 0u)))))))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) & 15821u)), 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (1u))), ((_GLF_IDENTITY(1u, 0u ^ (1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) << 0u, ((_GLF_IDENTITY(1u, max(1u, 1u))) << 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) << 0u, (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ (0u & 15821u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) + 0u))) ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | 0u)))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u))) / 1u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | 0u)))), max(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | 0u)))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | 0u)))))) : _GLF_FUZZED(next_virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ (0u & 15821u), ((1u) ^ (0u & 15821u)) << 0u)), 0u ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ (0u & 15821u), ((1u) ^ _GLF_IDENTITY((0u & 15821u), (true ? (0u & 15821u) : _GLF_FUZZED(subgroup_local_id)))) << 0u)), 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ (0u & 15821u), ((1u) ^ (0u & 15821u)) << 0u)), 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u)))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ (0u & 15821u), ((1u) ^ (0u & 15821u)) << 0u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u)), ((_GLF_IDENTITY(1u, (1u) | 0u))) ^ 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), ((_GLF_IDENTITY(1u, max(1u, 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), ~ (~ ((_GLF_IDENTITY(1u, max(1u, 1u)))))), (_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))))) << _GLF_IDENTITY(0u, (0u) - 0u))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(1u, max(1u, 1u))), 0u, 1u, 0u)), max(uint(uvec4((_GLF_IDENTITY(1u, max(1u, 1u))), 0u, 1u, 0u)), uint(uvec4((_GLF_IDENTITY(1u, max(1u, 1u))), 0u, 1u, 0u))))), (_GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), (min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))) - 0u)) << 0u))) / 1u)) ^ 0u))))))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true, true, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true, true, true))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true)))) + 0.0)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true))), true, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), bool(bvec2(! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), false))))))) || false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))) || false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))) || false))))))))))))))))), false, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), ((false)) && true)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY((false), ((false)) && true))))), ! (! (! (! ((! (_GLF_IDENTITY((false), ((false)) && true))))))))))))))), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), (true) || false)))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ((false)) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), ((false)) && true)))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY((false), ((false)) && true))))), ! (! (! (! ((! (_GLF_IDENTITY((false), ((false)) && true))))))))))))))), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), (true) || false))))))))))), false, false, false)), _GLF_IDENTITY(true, true && (true)), true)))) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(8506.0846) : injectionSwitch[1])))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))), true, false, true)))))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(8768.6304), mix(float(_GLF_FUZZED(9.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8768.6304), (_GLF_FUZZED(8768.6304)) - 0.0), (true ? _GLF_FUZZED(8768.6304) : _GLF_FUZZED(-11.87)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8768.6304), (_GLF_FUZZED(8768.6304)) - 0.0), (true ? _GLF_FUZZED(8768.6304) : _GLF_FUZZED(-11.87))))) * 1.0), bool(true))), _GLF_FUZZED(40.75)), bvec2(false, false))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(8768.6304), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(_GLF_FUZZED(8768.6304), (true ? _GLF_FUZZED(8768.6304) : _GLF_FUZZED(-11.87)))), bool(true))), _GLF_FUZZED(40.75)), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, true))), false))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool((! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true, false))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true, false)))) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(920.660) : 1.0))))) + 0.0)), 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)))) * 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(920.660) : 1.0))))) + 0.0)), 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)))) * 1.0, ((_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(920.660) : 1.0))))) + 0.0)), 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5284.0269))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)))) * 1.0) - 0.0)) - 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(920.660) : 1.0))))) + 0.0)), 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(920.660) : 1.0))))) + 0.0)), 1.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)))) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), max(_GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(2, 2))))))) * 1), _GLF_IDENTITY(2, max(2, 2)))), clamp(2, 2, _GLF_IDENTITY(2, (2) ^ 0)))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, 0 ^ ((64) + 0))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) || false))), bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) || false))), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4288.8807, -72.86)))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), (injectionSwitch) * mat2(1.0)), (clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7144.5751)), vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), bvec2(false, true)))), clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7144.5751)), vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), bvec2(false, true)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7144.5751)), vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), bvec2(false, true)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7144.5751)), vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), bvec2(false, true)))))) * mat2(1.0)) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)))), (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(6332.6017, 5.4, -2.0, -5148.5534)))))), (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))) * mat2(1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0))))).y) * 1.0))))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
