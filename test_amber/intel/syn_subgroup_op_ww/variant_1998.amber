#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false)))), true))))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true), bvec3(bvec4(bvec3((false), true, true), false)))))) && true) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)).x))) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x))) | 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x))), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) / 1u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), gl_WorkGroupSize)))).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))) | (gl_WorkGroupSize.x))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)))))) | 0u));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((mat4x3(8123.2029, -2.6, -5.9, -721.253, 7.2, -95.86, -3.0, -8.8, -70.24, _GLF_IDENTITY(552.805, float(mat2(552.805, 1.0, 1.0, 0.0))), _GLF_IDENTITY(973.890, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(973.890, 1.0, 0.0, 1.0), mat4(1.0) * (vec4(973.890, 1.0, 0.0, 1.0)))), float(mat4(float(_GLF_IDENTITY(vec4(973.890, 1.0, 0.0, 1.0), mat4(1.0) * (vec4(973.890, 1.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), -0.3) , subgroup_size), ((mat4x3(8123.2029, -2.6, -5.9, -721.253, _GLF_IDENTITY(7.2, max(7.2, 7.2)), -95.86, -3.0, -8.8, -70.24, 552.805, 973.890, -0.3) , subgroup_size)) - 0u)), uint(uvec4(_GLF_FUZZED(_GLF_IDENTITY((mat4x3(8123.2029, -2.6, -5.9, -721.253, 7.2, -95.86, -3.0, -8.8, -70.24, _GLF_IDENTITY(552.805, float(mat2(552.805, 1.0, 1.0, 0.0))), _GLF_IDENTITY(973.890, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(973.890, 1.0, 0.0, 1.0), mat4(1.0) * (vec4(973.890, 1.0, 0.0, 1.0)))), float(mat4(float(_GLF_IDENTITY(vec4(973.890, 1.0, 0.0, 1.0), mat4(1.0) * (vec4(973.890, 1.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), -0.3) , subgroup_size), ((mat4x3(8123.2029, -2.6, -5.9, -721.253, _GLF_IDENTITY(7.2, max(7.2, 7.2)), -95.86, -3.0, -8.8, -70.24, 552.805, 973.890, -0.3) , subgroup_size)) - 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))) * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) | (subgroup_base))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))))) | (subgroup_base)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(~ (~ (subgroup_base)), (true ? ~ (~ (subgroup_base)) : _GLF_FUZZED(subgroup_id))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), max((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) : _GLF_FUZZED(workgroup_id))) | (subgroup_base))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(296.366))), injectionSwitch.x)))) - 0u) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, min((subgroup_local_id) << 0u, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << 0u))), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, min((subgroup_local_id) << 0u, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, min((subgroup_local_id) << 0u, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << 0u))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, min((subgroup_local_id) << 0u, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << 0u)))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, min((subgroup_local_id) << 0u, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << 0u)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), clamp(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), (0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) - 0u), 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))), 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, min((subgroup_local_id) << _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) << 0u))))))) >> 0u) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) && true)), false || ((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) && true))))))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((8.5 * 1.0)), _GLF_FUZZED((vec3(600.541, -7.0, -4680.6067) - 1701.8729).p)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), false, true, false))))))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(exp(-75.78))) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.2 / 6128.2368))), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0)))), (mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.2 / 6128.2368))), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, clamp((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(0.0), 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), tan(0.0), 1.0)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << (148199u & 0u)))) * 1u);
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), (max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (0)))) | (1))), ~ (~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (0)))) | (1))))))), min(~ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(int(1))))))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), clamp(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), max(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))), uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))))))) ^ 0u)), _GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), max(_GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), ~ (~ (min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), clamp(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(~ (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1), ((1)) | ((1))) : _GLF_FUZZED(19838)))))), ~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1) | (1)))))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 0)), 0 ^ (int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 0))))))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), (uint(_GLF_IDENTITY(1, 0 | (1)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), clamp(uint(_GLF_IDENTITY(1, 0 | (1))), uint(_GLF_IDENTITY(1, 0 | (1))), uint(_GLF_IDENTITY(1, 0 | (1))))))))))))))), _GLF_IDENTITY(1u, (1u) - 0u), 1u, (1u & _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), int(ivec3(0 | (1), 0, 1)))) << 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), (min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))) << 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), min(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) | ((1)))))), ((uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) | ((1))))))) - 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), min(uvec3(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec3(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) | _GLF_IDENTITY(0u, (0u) | (0u)))), 1u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), int(ivec3(0 | (1), 0, 1)))) << 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), (min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))) << 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), min(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) | ((1)))))), ((uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) | ((1))))))) - 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), min(uvec3(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec3(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))) | _GLF_IDENTITY(0u, (0u) | (0u)))), 1u, 1u, (1u & 1u))) | uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))) | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))) | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))))) ^ 0u)), 1u, 1u, (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)) & 1u)), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) << 0)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), 0 | (1)))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), (uint(_GLF_IDENTITY(1, 0 | (1)))) + 0u))))), (~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))) << 0u)), 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(70824u))), (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) | ((1)))))))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, 0))))), 0 | (1)))))))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), 1u, (1u & 1u))))) << uvec4(0u, 0u, 0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), (~ (uint(_GLF_IDENTITY(1, 0 | (1))))) / 1u))))), 1u, 1u, (1u & 1u)), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), 0u + (~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))) + 0u))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), (_GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), min(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), _GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), ~ (~ (min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))))))) | (min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), uint(uvec4(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), 0 ^ (_GLF_IDENTITY((1), 0 ^ ((1)))))))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), 1u, ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) & 22641u), 0u))))), 1u, 1u, (1u & 1u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))) + 0)))), ((1)) * (1 & 1)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-81392) : _GLF_IDENTITY(1, max(1, 1)))), 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))) + 0)))), ((1)) * (1 & 1)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-81392) : _GLF_IDENTITY(1, max(1, 1)))), 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u))))))) << uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(1, 0 | (1))) - 0))))))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (1u & 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) - 0))))))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (1u & 1u)), (true ? uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) - 0))))))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (1u & 1u)) : _GLF_FUZZED(uvec4(177485u, 128487u, 8735u, 113596u))))) << uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) - 0))))))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (1u & 1u)), (true ? uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) - 0))))))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (1u & 1u)) : _GLF_FUZZED(uvec4(177485u, 128487u, 8735u, 113596u))))) << uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) - 0))))))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (1u & 1u)), (true ? uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, 0 | (1))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) - 0))))))))), 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (1u & 1u)) : _GLF_FUZZED(uvec4(177485u, 128487u, 8735u, 113596u))))) << uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))), ((uint(_GLF_IDENTITY(1, 0 | (1))))) | ((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1)) << ivec2(0, 0))) | ivec2(0, 0))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1)) << ivec2(0, 0))) | ivec2(0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1)) << ivec2(0, 0))) | ivec2(0, 0))), (true ? int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), (int(_GLF_IDENTITY(1, 0 | (1)))) | (int(_GLF_IDENTITY(1, 0 | (1))))))), 1)) << ivec2(0, 0))) | ivec2(0, 0))) : _GLF_FUZZED(-30032)))))))))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(int(true))))))))))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), (~ (uint(_GLF_IDENTITY(1, 0 | (1))))) | (~ (uint(_GLF_IDENTITY(1, 0 | (1)))))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 | (1)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findMSB(workgroup_size)) : 0)) | (1)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, 0 | (1)))), ((uint(_GLF_IDENTITY(1, 0 | (1))))) | ((uint(_GLF_IDENTITY(1, 0 | (1)))))), min(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, _GLF_IDENTITY(0, (0) | (0))), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, _GLF_IDENTITY(0, (0) | (0))))))) ^ ivec3(0, 0, 0))))))) ^ 0u), ~ (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), (0 ^ 0) | ((1))))))))))))), 1u, 1u, (1u & 1u))))) << uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), clamp((1), (1), (1)))))), min(~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-51369) : 0)))) | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), min(0 | (1), _GLF_IDENTITY(0 | (1), ~ (~ (0 | (1))))))))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (true ? ~ ((1)) : _GLF_FUZZED(50738)))))) << 0)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, 0 | (1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0))))))), 1u, 1u, (1u & 1u)))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))), min(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), (uint(_GLF_IDENTITY(1, 0 | (1)))) | (uint(_GLF_IDENTITY(1, 0 | (1)))))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, 0 | (1)))), ((uint(_GLF_IDENTITY(1, 0 | (1))))) | ((uint(_GLF_IDENTITY(1, 0 | (1)))))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, _GLF_IDENTITY(1u, max(1u, 1u)), (1u & 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, 0 | (1))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))), ~ (~ (min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - 0), 0 | (1)))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, 0 | (1)))), ((uint(_GLF_IDENTITY(1, 0 | (1))))) << 0u)))))))), 1u, 1u, (1u & 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u))))) << uvec4(0u, 0u, 0u, 0u), ~ (~ ((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), int(int(0 | (1))))))), ~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), 0 ^ (0 | (1)))))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(int(1))))))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u))))) << uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0 | (1), (true ? 0 | (1) : _GLF_FUZZED(-43182)))) ^ 0)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (_GLF_IDENTITY(1u & 1u, uint(uvec2(_GLF_IDENTITY(1u & 1u, max(1u & 1u, 1u & 1u)), 0u))))), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, 0 | (1)))), ((uint(_GLF_IDENTITY(1, 0 | (1))))) + 0u))))), 1u, 1u, (1u & 1u)))), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), clamp(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), max(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))))))), 1u, 1u, (1u & 1u)), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), 1 * ((1)))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), (~ (uint(_GLF_IDENTITY(1, 0 | (1))))) | (~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))))), 1u, 1u, (1u & 1u)), uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1))))))), ((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), min(~ (uint(_GLF_IDENTITY(1, 0 | (1)))), ~ (uint(_GLF_IDENTITY(1, 0 | (1)))))))) | 0u)), 1u, 1u, (1u & 1u)))) : _GLF_FUZZED(uvec4(113765u, 128855u, 177523u, 184649u))))))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))))))))), uint(1))) | _GLF_IDENTITY(0u, ~ (~ (0u))))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))), max((subgroup_local_id % 2), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % 2))), ~ (~ ((subgroup_local_id % 2)))))) == 0, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) | (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u), (subgroup_local_id), (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))) % 2) == 0, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)) | (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))) | _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u), (subgroup_local_id), (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))) % 2) == 0, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  {
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec4((_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))), false, true, false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0, max(0, 0)) + (4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))), false || (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(50.89) : injectionSwitch.x)))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) || false))))) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.5) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3912.6767))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_FUZZED(1.9)), float(injectionSwitch.y), bool(true)))) / exp(0.0)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), true))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
