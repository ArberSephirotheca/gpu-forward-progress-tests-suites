#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))));
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec2(2, ((1 ^ 1) >> _GLF_IDENTITY(int(4), int(4))))))), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), true), false))))))), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 1.0 * (0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-195.451) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), float(vec3(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0, 1.0))))) + (injectionSwitch.x)))))) > injectionSwitch.y), true, true)), bool(bvec3(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))) > injectionSwitch.y), true, true)), false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, max(6, 6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1, 0, 1)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, true)), _GLF_IDENTITY(false, (false) && true))), (bool(bvec2(bool(bvec4((false), false, false, true)), false))) && true))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 | ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0), float(_GLF_FUZZED(-857.195)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, cos(0.0), 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(200.845))), 0.0), vec3(0.0, cos(0.0), 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, log(1.0), 0.0, sin(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-511.091)), bool(false))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0)))), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) + 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / sqrt(1.0)), 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))))) + vec3(0.0, 0.0, 0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4239.9895) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(float(1.0))))), 0.0), vec3(0.0, cos(0.0), 0.0)), min(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, cos(0.0), 0.0), mix(vec3(_GLF_FUZZED(-45.37), (vec3(0.0, cos(0.0), 0.0))[1], _GLF_FUZZED(-2.6)), vec3((vec3(0.0, cos(0.0), 0.0))[0], _GLF_FUZZED(-6541.4306), (vec3(0.0, cos(0.0), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), 1.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.1) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), vec2(1.0, 1.0))), abs(0.0))) * mat3(1.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(false);
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false))), true, false, true)))))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) / 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0))), (mat2(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-670.438) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter)))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) | 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) < (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) + 0.0)), clamp((_GLF_IDENTITY(1.0, (1.0) + 0.0)), (_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) + 0.0)), 0.0 + ((_GLF_IDENTITY(1.0, (1.0) + 0.0)))))) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0))) * 1.0)) * 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) + 0.0)) - 0.0, 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) + 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.2), mix(float(_GLF_FUZZED(877.804)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7.2), float(mat2(_GLF_FUZZED(-7.2), 0.0, 0.0, tan(0.0)))), (_GLF_IDENTITY(_GLF_FUZZED(-7.2), clamp(_GLF_FUZZED(-7.2), _GLF_FUZZED(-7.2), _GLF_IDENTITY(_GLF_FUZZED(-7.2), min(_GLF_FUZZED(-7.2), _GLF_FUZZED(-7.2)))))) * 1.0)), (false ? _GLF_FUZZED(acos(3755.2345)) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7.2), float(mat2(_GLF_FUZZED(-7.2), 0.0, 0.0, tan(0.0)))), (_GLF_IDENTITY(_GLF_FUZZED(-7.2), clamp(_GLF_FUZZED(-7.2), _GLF_FUZZED(-7.2), _GLF_IDENTITY(_GLF_FUZZED(-7.2), min(_GLF_FUZZED(-7.2), _GLF_FUZZED(-7.2)))))) * 1.0)), 0.0 + (float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7.2), float(mat2(_GLF_FUZZED(-7.2), 0.0, 0.0, tan(0.0)))), (_GLF_IDENTITY(_GLF_FUZZED(-7.2), clamp(_GLF_FUZZED(-7.2), _GLF_FUZZED(-7.2), _GLF_IDENTITY(_GLF_FUZZED(-7.2), min(_GLF_FUZZED(-7.2), _GLF_FUZZED(-7.2)))))) * 1.0)))))), bool(true))) : (_GLF_IDENTITY(1.0, (1.0) + 0.0)))) - 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))) - 0.0)) - 0.0) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
