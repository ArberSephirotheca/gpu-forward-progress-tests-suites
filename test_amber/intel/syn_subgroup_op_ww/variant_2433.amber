#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-1.6))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true, false, false)))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true, false, false)))))))), (bool(bool(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true, false, false))))))))) && true), true, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false)))), true)))), true)))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)), false, false)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true, false)), false, false)))), false)))))), bvec2(bvec2(bvec2(false, true))))))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec2(bvec2(false, true))))))))) || false))))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), max(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))), (uvec3(gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false))), true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), true))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false))))))))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false))))))))), bool(bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))))))))))), true))), bool(bvec4((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), true)))))))), true, false, false))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false, ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false) && true))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false)))))))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, sin(0.0), abs(0.0), 1.0, 1.0, 0.0, 1.0)))))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0), injectionSwitch.x)), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x2(-5.3, 4.0, 6515.0867, -79.74, 241.567, -74.97))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x2(-5.3, 4.0, 6515.0867, -79.74, 241.567, -74.97))))), clamp(float(_GLF_IDENTITY(mat3x2(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x2(-5.3, 4.0, 6515.0867, -79.74, 241.567, -74.97))))), float(_GLF_IDENTITY(mat3x2(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x2(-5.3, 4.0, 6515.0867, -79.74, 241.567, -74.97))))), float(_GLF_IDENTITY(mat3x2(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))) / 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat3x2(-5.3, 4.0, 6515.0867, -79.74, 241.567, -74.97)))))))), float(_GLF_FUZZED(float((72295 > -73135)))), bool(false)))), cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))) || false), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(2.4)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((~ ((workgroup_base + subgroup_base))), uint(uvec4((~ ((workgroup_base + subgroup_base))), 0u, (1u & 1u), 0u))), (~ (~ ((workgroup_base + subgroup_base)))) | 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((workgroup_base + subgroup_base))), (~ (~ ((workgroup_base + subgroup_base)))) | 0u)), 1u * ((_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))), (~ (~ ((workgroup_base + subgroup_base)))) | 0u)))), 0u)))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-64.51)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), max(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-64.51)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-64.51)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), float(_GLF_FUZZED(2646.0197)), bool(false))))), _GLF_IDENTITY(1u, 0u | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(_GLF_IDENTITY(-8659.8697, (-8659.8697) * 1.0)) : _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-2886.1803))) : _GLF_FUZZED(-94.92))))), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))) ^ (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), (~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 0u, 0u, 1u)))) >> 0u))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), ~ (~ (~ ((workgroup_base + subgroup_base)))))), (~ (~ ((workgroup_base + subgroup_base)))) | 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((workgroup_base + subgroup_base))), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), 0u ^ (~ ((workgroup_base + subgroup_base)))))) | 0u)), 1u * ((_GLF_IDENTITY(~ (~ ((workgroup_base + subgroup_base))), (~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) ^ 0u))))) | 0u)))), 0u)))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-64.51)), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), max(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))), float(_GLF_FUZZED(2646.0197)), bool(false))))), _GLF_IDENTITY(1u, 0u | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-8659.8697, (-8659.8697) * 1.0)) : _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9093.6778)))), float(_GLF_FUZZED(697.486)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), injectionSwitch.x)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(-8659.8697, (-8659.8697) * 1.0)) : _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9093.6778)))), float(_GLF_FUZZED(697.486)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), injectionSwitch.x))) * 1.0)) : _GLF_FUZZED(-2886.1803))) : _GLF_FUZZED(-94.92)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0 + (0.0))) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))), 1u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u))), 1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u))), 1u), (uvec2(_GLF_IDENTITY(min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u))), 1u)) ^ uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))), 0u ^ ((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(0u, max(0u, 0u)) + (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))), 0u ^ ((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))), 0u ^ ((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), 1u * (uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))), 0u ^ ((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) | (uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))), 0u ^ ((_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(1u, (1u) | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u), min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u))), max(1u, 1u)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) | 0u)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base) | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base, clamp(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base, false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base, false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base), ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)) / 1u), ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)) | ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))))))), max((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0, 1.0)))).x))), 1u, 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-626.840)))))) - 0.0), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | 0u), workgroup_base + subgroup_base))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(102458u) : workgroup_base + subgroup_base))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.4) : 0.0)), injectionSwitch.x))), 1u, 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(392.595, 8.8, -11.14, -4.3, 34.06, 7515.5716, -6.1, -30.60, -8.8, 190.072, 998.368, 1.5, 467.084, -5.1, 7.8, 0.8))))), (false ? _GLF_FUZZED(616.383) : float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(392.595, 8.8, -11.14, -4.3, 34.06, 7515.5716, -6.1, -30.60, -8.8, 190.072, 998.368, 1.5, 467.084, -5.1, 7.8, 0.8))))))))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))) << 0u)), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) || false))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), (true ? workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)) : _GLF_FUZZED(virtual_gid))), workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 0u)))))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base) + 0u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))) ^ 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), (uint(uvec2(workgroup_base, 0u))) | (uint(uvec2(workgroup_base, 0u))))))) + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))) ^ 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))) ^ 0u))) / 1u)) >> 0u))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))))), 1u, 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), 0u | (_GLF_IDENTITY((workgroup_base + subgroup_base), uint(uvec4((workgroup_base + subgroup_base), 1u, 1u, 0u))))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, cos(0.0), tan(sin(0.0)), 0.0)), (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, cos(0.0), tan(sin(0.0)), 0.0)), min(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, cos(0.0), tan(sin(0.0)), 0.0)), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, cos(0.0), tan(sin(0.0)), 0.0))))))))), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), min(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) : subgroup_base))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base), ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)) >> 0u)))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), 1u, 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, exp(0.0)))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), (subgroup_base) | 0u), (workgroup_base + subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(float(mat3x4(max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, exp(0.0), cos(0.0), 1.0, 0.0, 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), clamp(float(mat3x4(max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, exp(0.0), cos(0.0), 1.0, 0.0, 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(float(mat3x4(max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, exp(0.0), cos(0.0), 1.0, 0.0, 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), float(float(float(mat3x4(max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, exp(0.0), cos(0.0), 1.0, 0.0, 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))), float(mat3x4(max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, exp(0.0), cos(0.0), 1.0, 0.0, 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)))))), injectionSwitch.x))), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base), 0u | _GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), max(((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)), ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))))))))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), max((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec4(subgroup_base, 1u, 1u, 1u))))), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_base)))))) ^ 0u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))), (1u) | (1u)), 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))))) * 1u)) + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), ~ (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))), max(~ (uint(1)), ~ (uint(1)))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(17516) : _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-15342))))) : _GLF_IDENTITY(_GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-49785) : _GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801))))))))]), mix(vec2(_GLF_FUZZED(-283.472), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(17516) : _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-15342))))) : _GLF_IDENTITY(_GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-49785) : _GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801))))))))]))[1], mix(float((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(17516) : _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-15342))))) : _GLF_IDENTITY(_GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-49785) : _GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801))))))))]))[1]), float(_GLF_FUZZED(-708.708)), bool(false)))), vec2((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(17516) : _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-15342))))) : _GLF_IDENTITY(_GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-49785) : _GLF_FUZZED((mat2(-318.641, -1.7, 3.3, 0.4) , -48801))))))))]))[0], _GLF_FUZZED(235.014)), bvec2(true, false)))))).y))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)).y))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (64) * _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-38479) : 1))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-32.19))), ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec3(vec2(vec4(injectionSwitch, 1.0, 0.0)), 1.0)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), _GLF_IDENTITY((_GLF_IDENTITY((64) | (64), max((64) | (64), (64) | (64)))) + 0, max((_GLF_IDENTITY((64) | (64), max((64) | (64), (64) | (64)))) + 0, _GLF_IDENTITY((_GLF_IDENTITY((64) | (64), max((64) | (64), _GLF_IDENTITY((64), ((64)) | 0) | (64)))) + 0, 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY((64) | (64), _GLF_IDENTITY(max((64) | (64), (64) | (64)), max(max((64) | (64), (64) | (64)), _GLF_IDENTITY(max((64) | (64), (64) | (64)), (false ? _GLF_FUZZED(-22803) : max((64) | (64), (64) | (64)))))))), ((_GLF_IDENTITY((64) | (64), _GLF_IDENTITY(max((64) | (64), (64) | (64)), max(max((64) | (64), (64) | (64)), _GLF_IDENTITY(max((64) | (64), (64) | (64)), (false ? _GLF_FUZZED(-22803) : max((64) | (64), (64) | (64))))))))) / 1) + 0)))))), _GLF_IDENTITY(4, 0 ^ (4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
