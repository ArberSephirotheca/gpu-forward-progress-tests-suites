#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) / 1), (_GLF_IDENTITY((0), ((0)) / 1)) << 0)) >> 0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(uint(uint(gl_WorkGroupSize[1])), min(_GLF_IDENTITY(uint(uint(gl_WorkGroupSize[1])), (uint(uint(gl_WorkGroupSize[1]))) | 0u), uint(uint(gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))]), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))]), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))]), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))]), 0u + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))])))), max(~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))]), 0u + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))])))), ~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))]), 0u + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))])))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))])))))))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), 0u ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), max(~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1])))) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) | (~ (gl_WorkGroupSize[1]))), ~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1])))), uint(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize[1])), 1u, 0u), max(uvec3((~ (gl_WorkGroupSize[1])), 1u, 0u), uvec3((~ (gl_WorkGroupSize[1])), 1u, 0u)))))) + 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), ((gl_WorkGroupSize) | (gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u)))))[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))[_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(51217) : _GLF_IDENTITY(1, 0 | (1)))), 0, 1)))]))) | (0u | 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], min(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), gl_WorkGroupSize[1]))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) ^ (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), max(~ (~ (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), min(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) ^ (0u | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) ^ (0u | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) ^ (0u | 0u))))))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), uint(uvec3(~ (gl_WorkGroupSize[1]), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))[2])), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), max(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (_GLF_IDENTITY(0u, 1u * (0u))) - 0u))), 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), (1u & 1u)))))), 0u), (false ? _GLF_FUZZED(uvec3(38026u, 48057u, 104173u)) : uvec3(0u, 0u, 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))))))) ^ uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), 0 ^ (0))], min(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), 0 ^ (0))], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), 0 ^ (0))])), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[1])))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[1])))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (gl_WorkGroupSize[1])))), _GLF_IDENTITY(0u | ((~ (gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-62260), (true ? _GLF_FUZZED(-62260) : _GLF_FUZZED(34663)))))]))), (0u | ((~ (gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-62260), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-62260), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-62260), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-62260)))) | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-62260)))))])))) >> 0u))))), _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) >> 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)), 1u))) | (gl_WorkGroupSize))[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec3(gl_WorkGroupSize[1], 0u, 0u)))), ((_GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec3(gl_WorkGroupSize[1], 0u, 0u))))) - 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), 0u ^ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), max(~ (~ (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1]))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], 1u * (gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))])), ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), clamp(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), clamp(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) | 0u) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))))), (_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))) * 1u)), clamp(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), max(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ((~ (gl_WorkGroupSize[1]))) + 0u)) + 0u)), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))]))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1], (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]) >> 0u), ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) | (1))) << (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))))]))), (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], (true ? gl_WorkGroupSize[2] : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[2]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize[2]) : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), 0u ^ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), ~ (~ (~ (~ (gl_WorkGroupSize[1])))))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], 0u + (_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) / 1u))))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (~ _GLF_IDENTITY(((~ (gl_WorkGroupSize[1]))), (true ? ((~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(116983u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), uint(uint((gl_WorkGroupSize[1])))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ((~ (gl_WorkGroupSize[1]))) | ((~ (gl_WorkGroupSize[1]))))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), clamp((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), clamp((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), clamp((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), clamp((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1]))))))))))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[2]), min(_GLF_IDENTITY((gl_WorkGroupSize[2]), max((gl_WorkGroupSize[2]), (gl_WorkGroupSize[2]))), (gl_WorkGroupSize[2])))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(ivec3(99703, -49406, -12735).x) : (0))))) - 0)))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))))))))), (uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) >> 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), clamp(~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), 1u * (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) * 1u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), (true ? (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))], (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))]))) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u), 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), ~ (~ (~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))))))))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))], (gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))]) | 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), min(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], 0u + (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)]))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))), ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))[_GLF_IDENTITY(1, 1 * (1))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), 0u | (~ (~ (gl_WorkGroupSize[1])))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))))))) | uvec3(0u, 0u, 0u)), 0u)))), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(ivec3(99703, -49406, -12735).x) : (0))))) - 0)))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))))))))), (uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) >> 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), clamp(~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), 1u * (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) * 1u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), (true ? (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))], (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))]))) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u), 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), ~ (~ (~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))))))))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))], (gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))]) | 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), min(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], 0u + (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)]))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))), ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))[_GLF_IDENTITY(1, 1 * (1))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), 0u | (~ (~ (gl_WorkGroupSize[1])))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))))))) | uvec3(0u, 0u, 0u)), 0u)))), clamp(uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(ivec3(99703, -49406, -12735).x) : (0))))) - 0)))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))))))))), (uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) >> 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), clamp(~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), 1u * (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) * 1u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), (true ? (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))], (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))]))) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u), 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), ~ (~ (~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))))))))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))], (gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))]) | 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), min(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], 0u + (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)]))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))), ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))[_GLF_IDENTITY(1, 1 * (1))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), 0u | (~ (~ (gl_WorkGroupSize[1])))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))))))) | uvec3(0u, 0u, 0u)), 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(ivec3(99703, -49406, -12735).x) : (0))))) - 0)))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))))))))), (uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) >> 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), clamp(~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), 1u * (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) * 1u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), (true ? (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))], (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))]))) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u), 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), ~ (~ (~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))))))))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))], (gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))]) | 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), min(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], 0u + (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)]))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))), ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))[_GLF_IDENTITY(1, 1 * (1))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), 0u | (~ (~ (gl_WorkGroupSize[1])))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))))))) | uvec3(0u, 0u, 0u)), 0u)))), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), (false ? _GLF_FUZZED(ivec3(99703, -49406, -12735).x) : (0))))) - 0)))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))))))))), (uint(_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1]))))))), ~ (~ (~ (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((~ (gl_WorkGroupSize[1])), clamp((~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])), (~ (gl_WorkGroupSize[1])))))))))))))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) >> 0u), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), clamp(~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1]), ~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), 1u * (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) * 1u))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), (true ? (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))], (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85938)))]))) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u), 0u))))), ~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))))), ~ (~ (~ (~ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)), ((gl_WorkGroupSize) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))))))))))))))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (true ? ~ (gl_WorkGroupSize[1]) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED(subgroup_id)))))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))], (gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))]) | 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec3(~ (gl_WorkGroupSize))))))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), min(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)], 0u + (gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)]))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))), ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))[_GLF_IDENTITY(1, 1 * (1))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), 0u | (~ (~ (gl_WorkGroupSize[1])))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), 0u), uvec4(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 ^ _GLF_IDENTITY((0), min((0), (0))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29581) : 1))))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2]))))))) | uvec3(0u, 0u, 0u)), 0u)))))))))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), 0u + (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], (88643u & 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))) : _GLF_FUZZED(subgroup_size)))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize[1])), (~ (~ (gl_WorkGroupSize[1]))) ^ 0u)) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, (1) >> 0)]))) : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, (1) >> 0)]))) : _GLF_FUZZED(subgroup_id))) + 0u))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) * 1u)) >> 0u))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, min(2, 2))), (0 << _GLF_IDENTITY(int(3), int(3))) + (~ (_GLF_IDENTITY(2, min(2, 2)))))))], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))))), max(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, int(ivec4(1, 1, 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))])))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], min(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), ~ (~ (gl_WorkGroupSize[1]))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, (1) - 0)]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, 0 ^ (1))], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))) | (_GLF_IDENTITY(0u, min(0u, 0u)))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), min((gl_WorkGroupSize[1]), _GLF_IDENTITY((gl_WorkGroupSize[1]), 1u * ((gl_WorkGroupSize[1])))))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(uvec3(gl_WorkGroupSize)))))[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ (gl_WorkGroupSize[2])))))), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), max((0), (0))))))), (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))))) / 1)], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize[1]), ((gl_WorkGroupSize[1])) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (~ (gl_WorkGroupSize[1])) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) | (~ (gl_WorkGroupSize[1])))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1))])), 0u ^ (~ (~ (gl_WorkGroupSize[1]))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(gl_WorkGroupSize[1], 0u))), ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0)))]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(gl_WorkGroupSize[1], 0u))), ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0)))]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], uint(uvec2(gl_WorkGroupSize[1], 0u))), ~ (~ (gl_WorkGroupSize[1]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0)))]))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))) : _GLF_FUZZED(subgroup_id)))) >> 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))))))))), _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[2]), min((gl_WorkGroupSize[2]), (gl_WorkGroupSize[2]))))))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), 0u + ((gl_WorkGroupSize[1]))))), min(_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), 0u + ((gl_WorkGroupSize[1]))))), _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ _GLF_IDENTITY((gl_WorkGroupSize[1]), 0u + ((gl_WorkGroupSize[1]))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], min(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))), (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))[1], ~ (~ (gl_WorkGroupSize[1])))) | (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | 0)], ~ (~ (gl_WorkGroupSize[1]))))) | ((_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) >> 0u))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))))) : _GLF_FUZZED(subgroup_id))))), gl_WorkGroupSize[2]))) << uvec3(0u, 0u, 0u)))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) : _GLF_FUZZED(atomicXor(subgroup_id, workgroup_id)))), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)))))) + 1)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (~ ((subgroup_local_id + 1) % subgroup_size)))) / 1u)) * 1u)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) : _GLF_FUZZED(atomicXor(subgroup_id, workgroup_id)))), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)))))) + 1)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ~ (~ ((subgroup_local_id + 1) % subgroup_size)))) / 1u)) * 1u))))) ^ 0u);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, max(2, 2))), (~ (_GLF_IDENTITY(2, max(2, 2)))) | (~ (_GLF_IDENTITY(2, max(2, 2))))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0)), round(length(normalize(exp(0.0)))), 1.0, 0.0)), float(mat2x3(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), round(length(normalize(exp(0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))), float(_GLF_FUZZED(-53.37)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sqrt(1.0), 0.0, log(1.0), 0.0), mat2x3(mat3x4(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sqrt(1.0), 0.0, log(1.0), 0.0)))))), 1.0, 1.0, 0.0))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)), false || (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)))))))), true, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0)), round(length(normalize(exp(0.0)))), 1.0, 0.0)), float(mat2x3(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), round(length(normalize(exp(0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))), float(_GLF_FUZZED(-53.37)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sqrt(1.0), 0.0, log(1.0), 0.0), mat2x3(mat3x4(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sqrt(1.0), 0.0, log(1.0), 0.0)))))), 1.0, 1.0, 0.0))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)), false || (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)))))))), true, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - 0.0)), round(length(normalize(exp(0.0)))), 1.0, 0.0)), float(mat2x3(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), round(length(normalize(exp(0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0)))), float(_GLF_FUZZED(-53.37)), bool(false))))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sqrt(1.0), 0.0, log(1.0), 0.0), mat2x3(mat3x4(mat2x3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sqrt(1.0), 0.0, log(1.0), 0.0)))))), 1.0, 1.0, 0.0))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)), false || (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y)))))))), true, true)))))))))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY((mat2(1.0)), (true ? (mat2(1.0)) : _GLF_FUZZED((-7.3 - mat2(1.8, -93.01, 3.3, -0.6))))))))) : _GLF_FUZZED(mat2(6.5, 806.431, 238.432, -1.3)))), (_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY((mat2(1.0)), (true ? (mat2(1.0)) : _GLF_FUZZED((-7.3 - mat2(1.8, -93.01, 3.3, -0.6))))))))) : _GLF_FUZZED(mat2(6.5, 806.431, 238.432, -1.3))))) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(0.0, (0.0) + log(1.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false)))), max(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(0.0, (0.0) + log(1.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false)))), vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(0.0, (0.0) + log(1.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false)))))))).y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bool(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > 0)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), ! (! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))) || false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), bool(bool(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > 0)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), ! (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), (_GLF_IDENTITY(! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), ! (! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))) || false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))))))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if((subgroup_local_id % 2) == 0)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 subgroupAll(false);
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false)))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), false || (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bvec4(bool(_GLF_WRAPPED_LOOP(false)), true, false, true))))), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (bool(_GLF_WRAPPED_LOOP(false)))))))));
              }
            }
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           subgroupAll(false);
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(ivec3(1, 1, 0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = ((0 | 0) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))), int(2)))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)))))))))), min(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (2) >> 0)))), int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-2089))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), int(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), false), false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), false), false)))))), bool(bvec3(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), false), false)))))), false, true)))))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               do
                                {
                                 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(180.830), (injectionSwitch)[1]), bvec2(false, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), vec2(_GLF_FUZZED(180.830), (injectionSwitch)[1]), bvec2(false, true))))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), 0.0, determinant(mat3(0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))) && true)))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true)))))))), ! (! (true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true)))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, _GLF_IDENTITY(true, false || (true))))))))))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, _GLF_IDENTITY(true, false || (true)))))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, _GLF_IDENTITY(true, false || (true))))))))))))), false, true, false)), false, false, false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
          }
        }
       else
        {
        }
      }
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), min(max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_injected_loop_counter, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> ivec3(0, 0, 0))), 0 ^ (int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-23.89, 7.8)) : injectionSwitch)).x))), (ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (0 | 0)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> ivec3(0, 0, 0)))))) != int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (true) || false) ? 0.0 : _GLF_FUZZED(8.2)))) + 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8259.9112, 107.926)) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8259.9112, 107.926)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8259.9112, 107.926)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8259.9112, 107.926)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8259.9112, 107.926)) : injectionSwitch))) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x))); _injected_loop_counter --)
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
