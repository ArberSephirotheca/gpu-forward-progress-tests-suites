#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 bvec4 _f0;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 ivec4 _f3;
 uvec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uvec2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 bvec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat2 _f1;
 bvec4 _f2;
 _GLF_struct_3 _f3;
 bool _f4;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(0.0, 0.0) + (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch, injectionSwitch))) * vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0))), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(5.7), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY((vec2(vec2(injectionSwitch))), mat2(1.0) * ((vec2(vec2(injectionSwitch))))) + vec2(0.0, 0.0)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((3801.3535))), bool(false)))), 0.0, exp(0.0), sqrt(0.0), 1.0)), vec2(vec4(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(1.0), 0.0, exp(0.0), sqrt(0.0), 1.0)), 0.0, 0.0))))), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0))), clamp((_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((3801.3535))), bool(false)))), 0.0, exp(0.0), sqrt(0.0), 1.0)), vec2(vec4(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(1.0), 0.0, exp(0.0), sqrt(0.0), 1.0)), 0.0, 0.0))))), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((3801.3535))), bool(false)))), 0.0, exp(0.0), sqrt(0.0), 1.0)), vec2(vec4(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(1.0), 0.0, exp(0.0), sqrt(0.0), 1.0)), 0.0, 0.0))))), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((3801.3535))), bool(false)))), 0.0, exp(0.0), sqrt(0.0), 1.0)), vec2(vec4(vec2(mat3(vec2(injectionSwitch), 0.0, 0.0, sqrt(1.0), 0.0, exp(0.0), sqrt(0.0), 1.0)), 0.0, 0.0))))), (vec2(vec2(injectionSwitch))) + vec2(0.0, 0.0)))))[0], _GLF_FUZZED(4.4)), bvec2(true, false)))) + vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(vec2(injectionSwitch), 0.0, log(1.0), 0.0, 0.0)), (vec2(mat3x2(vec2(injectionSwitch), 0.0, log(1.0), 0.0, 0.0))) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))), vec2(vec2(injectionSwitch)))), 0.0, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0)), (vec2(mat3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))), vec2(vec2(injectionSwitch)))), 0.0, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0))) + vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(vec2(injectionSwitch), 0.0, log(1.0), 0.0, 0.0)), (vec2(mat3x2(vec2(injectionSwitch), 0.0, log(1.0), 0.0, 0.0))) / vec2(1.0, 1.0))))) + vec2(0.0, 0.0))) * mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : injectionSwitch)), injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(29.32), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), bvec2(true, false))), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))) : injectionSwitch)), injectionSwitch, injectionSwitch))) * vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)) / 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) || false), true), bvec3(bvec3(bvec3(false, true, true))))))))), true, true, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.x : _GLF_FUZZED(817.309))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-95.24)), bool(false))), injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), clamp(max(gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (_GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) | (max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[2]))))))), gl_NumWorkGroups)))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (_GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), clamp(max(gl_NumWorkGroups, gl_NumWorkGroups), max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))), gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), max(gl_NumWorkGroups, gl_NumWorkGroups)))) | (max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) * (gl_NumWorkGroups))))))), 0u)))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (0u | 0u)), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (0u | 0u))) | (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (0u | 0u))))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (0u | 0u)), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (0u | 0u))) | (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (0u | 0u))))))))) / uvec3(1u, 1u, 1u))))), max(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))).x) * 1u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(uvec3(1u), bvec3(true), _GLF_struct_0(mat2x3(1.0), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), (uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))) - uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), ~ (~ (_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), (uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), min(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))))))) >> uvec2(0u, 0u))))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), uint(uvec2(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), 1u))))), max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) + 0u))), (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))), uvec2(0u, 0u) | (_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))), (1u))), ~ (~ (_GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), 1u)))))))) | (1u))), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) << 0u)), uvec2(0u, 0u) + (uvec2(1u)))), (clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u)))), clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uvec2(0u, 0u) + (uvec2(1u)))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(max(1u, 1u), 0u ^ (_GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), max(1u, 1u)))))))))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))) << 0u), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))) << 0u), 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) + ((1u))))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), ~ (~ (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(_GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), clamp(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) ^ uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))))))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), min(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), _GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), min(_GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), uvec2(0u, 0u) ^ (uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))), uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))))))))), min(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | 0u), 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u))), uvec2(0u, 0u) + (uvec2(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u))), uvec2(0u, 0u) + (uvec2(1u)))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))), 0u) + _GLF_IDENTITY((uvec2(1u)), _GLF_IDENTITY(uvec2(0u, 0u) + ((uvec2(1u))), (_GLF_IDENTITY(uvec2(0u, 0u) + ((uvec2(1u))), (uvec2(0u, 0u) + ((uvec2(1u)))) << uvec2(0u, 0u))) / uvec2(1u, 1u))))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u)) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))))))))) / uvec2(1u, 1u))), max(clamp(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(0u, 0u) | (_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))), (1u))) | (1u))), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | 0u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), _GLF_IDENTITY((clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u), clamp(_GLF_IDENTITY((clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u), max((clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u), (clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u))), (clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u), (clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u)))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec4(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uvec2(0u, 0u) + (uvec2(1u)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), 0u + ((1u))))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(_GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) >> 0u)) + (_GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), min(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))))))), min(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | 0u), 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u))), uvec2(0u, 0u) + (uvec2(1u))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u) + _GLF_IDENTITY((uvec2(1u)), uvec2(0u, 0u) + ((uvec2(1u)))))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u)))))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u + (_GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u)) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))) + (uvec2(1u))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), 0u ^ (_GLF_IDENTITY(1u, (1u) | (1u))))) | (_GLF_IDENTITY(1u, (1u) | (1u))))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))))))))) / uvec2(1u, 1u))), clamp(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), _GLF_IDENTITY(uvec2(0u, 0u), max(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) / uvec2(1u, 1u)), uvec2(0u, 0u))) | (_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))), (1u))) | (1u))), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | 0u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), (clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(uint(1u)))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))) >> uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))) | uvec2(0u, 0u)))), clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uvec2(0u, 0u) + (uvec2(1u)))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), (true ? _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) << 0u) : _GLF_FUZZED(subgroup_local_id))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | _GLF_IDENTITY((1u), 0u + ((1u))), 0u | (_GLF_IDENTITY((1u) | _GLF_IDENTITY((1u), 0u + ((1u))), ((1u) | _GLF_IDENTITY((1u), 0u + ((1u)))) << 0u))))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(0u, 0u) + (uvec2(1u)), (uvec2(0u, 0u) + (uvec2(1u))) | uvec2(0u, 0u)))), uvec2(_GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), min(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))), uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))))))), min(_GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | 0u), 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u)))) - (uvec2(1u, 1u) ^ uvec2(1u, 1u))), uvec2(0u, 0u) + (uvec2(1u))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), (uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))) | (uvec2(_GLF_IDENTITY(1u, (1u) | (1u))))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u) + _GLF_IDENTITY((uvec2(1u)), uvec2(0u, 0u) + ((uvec2(1u)))))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u)) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))), uvec2(uvec2(clamp(uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u)))))))))) / uvec2(1u, 1u))))))), vec3(1.0)), _GLF_struct_1(vec2(1.0), mat4x3(1.0), uvec3(1u), ivec4(1), uvec2(1u), bvec4(true))), mat2(1.0), bvec4(true), _GLF_struct_3(bvec4(true)), true, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6286.6853, -2501.8682)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), mix(float(_GLF_FUZZED((929.326 / -678.008))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y, (injectionSwitch.y) + 0.0)) / 1.0)), bool(true)))), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-6286.6853, -2501.8682)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-6286.6853, -2501.8682)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED((929.326 / -678.008))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)), bool(true)), clamp(mix(float(_GLF_FUZZED((929.326 / -678.008))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)), bool(true)), mix(float(_GLF_FUZZED((929.326 / -678.008))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)), bool(true)), mix(float(_GLF_FUZZED((929.326 / -678.008))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)), bool(true))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4.workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, 0u ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u)), clamp(uvec2(uvec3(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u)), uvec2(uvec3(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u)), _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u)), (uvec2(uvec3(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u))) | (uvec2(uvec3(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u))))))).y;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-8288.1884, 253.560, -8189.1503).s))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6668.2342) : injectionSwitch.x)))), float(mat3x2(float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6668.2342) : injectionSwitch.x)))), 1.0, 0.0, 1.0, 0.0, 0.0)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-344.945))), injectionSwitch.x)) > injectionSwitch.y))), false || _GLF_IDENTITY((false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! ((false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))))) > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9129.8854, mix(float(_GLF_IDENTITY(-9129.8854, 0.0 + (-9129.8854))), float(_GLF_FUZZED(-559.630)), bool(false))))), bool(false))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)), true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false)), true)))), true), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), false)))))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(-41.33, -3.0, 0.4)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) / 1.0)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(-41.33, -3.0, 0.4)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-9129.8854, clamp(-9129.8854, _GLF_IDENTITY(-9129.8854, float(mat3x4(-9129.8854, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, log(1.0)))), -9129.8854)))), bool(false))) > injectionSwitch.y))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.48) : injectionSwitch.y))))))))), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) > injectionSwitch.y))) || false), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.48) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.8)))))))))))), true && ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-9129.8854, float(mat4x2(_GLF_IDENTITY(-9129.8854, (true ? -9129.8854 : _GLF_FUZZED(-7.9))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sin(0.0)), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sin(0.0)), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, abs(0.0), sqrt(0.0)))))), _GLF_IDENTITY(bool(false), false || (bool(false)))), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), abs(1.0) * (float(injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(-9129.8854, max(-9129.8854, _GLF_IDENTITY(-9129.8854, mix(float(-9129.8854), float(_GLF_FUZZED(-132.086)), bool(false))))))), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false)), mix(float(_GLF_FUZZED(float(false))), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9129.8854)), bool(false))), bool(true)))))))) > injectionSwitch.y))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-30.33)), float(injectionSwitch.y), bool(true))))), (false ? _GLF_FUZZED(-86.48) : injectionSwitch.y)))))))))))) || _GLF_IDENTITY(false, (false) && true))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), ((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).y))), true, false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), bool(true))) < injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (false))))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(634.504, 44.01)))))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) || false)))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((- vec2(8.1, 2.5))) : injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((- vec2(8.1, 2.5))) : injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, exp(length(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, determinant(mat4(abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, abs(1.0))), 1.0))) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(191.703), _GLF_FUZZED(-882.956)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.5)), bool(false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))))), _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))))), false)))) || false), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), true, false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false), true, false)))), false, false, true))))))))
    return;
   return;
  }
 if((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), min(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(vec2(-1349.9501, 7.4).r)), float(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 1.0)))))), vec2(1.0, 1.0)), float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), float(mat4x2(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, 0.0, abs(0.0), log(1.0), 0.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), cos(0.0)), mat4x2(mat4x3(mat4x2(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec4(-36.78, 4.4, -68.35, -9262.0190) / -1.6).x)), float(0.0), bool(true))), abs(0.0), log(1.0), 0.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, 0.0, 0.0, cos(0.0))))))))), _GLF_IDENTITY(float(mat2x4(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0))))))) > injectionSwitch.y), true, false)))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), false)))) || false, false)), (bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) || false, false))) && true)))) ? _GLF_FUZZED(vec2(183.777, -471.689)) : injectionSwitch)).y)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (false ? _GLF_FUZZED(-322.285) : float(mat2x4(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(vec2(183.777, -471.689)) : injectionSwitch)), mix(vec2(_GLF_FUZZED(-3676.2919), _GLF_FUZZED(-191.487)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), true, true, true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(183.777, -471.689)) : injectionSwitch), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(183.777, float(vec2(_GLF_IDENTITY(183.777, min(_GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, float(mat2x3(183.777, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 183.777)), cos(0.0)))), -471.689)) : injectionSwitch)), clamp(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(183.777, float(vec2(_GLF_IDENTITY(183.777, min(_GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, float(mat2x3(183.777, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 183.777)), cos(0.0)))), -471.689)) : injectionSwitch)), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(183.777, float(vec2(_GLF_IDENTITY(183.777, min(_GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, float(mat2x3(183.777, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 183.777)), cos(0.0)))), -471.689)) : injectionSwitch)), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(183.777, float(vec2(_GLF_IDENTITY(183.777, min(_GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, float(mat2x3(183.777, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))))), 183.777)), cos(0.0)))), -471.689)) : injectionSwitch)))) - vec2(0.0, 0.0))))[_GLF_IDENTITY(0, (0) / 1)], max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5608.6732)), bvec2(true, false))).y)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, mix(float(183.777), float(_GLF_FUZZED(-8.4)), bool(false))))))), -471.689)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), max((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5608.6732)), bvec2(true, false))).y)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, mix(float(183.777), float(_GLF_FUZZED(-8.4)), bool(false))))))), -471.689)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5608.6732)), bvec2(true, false))).y)) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, min(183.777, _GLF_IDENTITY(183.777, mix(float(183.777), float(_GLF_FUZZED(-8.4)), bool(false))))))), -471.689)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))) ? _GLF_FUZZED(vec2(183.777, -471.689)) : injectionSwitch)))[0])), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(69.44))))) ? _GLF_FUZZED(vec2(183.777, -471.689)) : injectionSwitch)))[1]), bvec2(true, true))).y)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-0.7 + -61.30))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-22.27)), float(1.0), bool(true))) : _GLF_FUZZED(mix(_GLF_IDENTITY(2.7, (2.7) - _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), -6155.8380, (uvec3(59120u, 55285u, 197722u) != uvec3(1676u, 145007u, 17217u)))))), 1.0, 0.0, 0.0, sqrt(0.0), 1.0))))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(2, 0), clamp(ivec2(2, 0), ivec2(2, 0), ivec2(2, 0))))), (true ? _GLF_IDENTITY(ivec2(2, 0), (true ? ivec2(2, 0) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(72659, (-53885 & 0) ^ (72659)), -39943)))) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(_GLF_IDENTITY(83207, (83207) >> 0), 72285)), (_GLF_FUZZED(ivec2(_GLF_IDENTITY(83207, (83207) >> 0), 72285))) >> ivec2(0, 0))))))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), false, true, true)))))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-57.77)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), _GLF_IDENTITY(false, false || (false)))))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u | (uint(1)), clamp(0u | (uint(1)), _GLF_IDENTITY(0u | (uint(1)), (true ? 0u | (uint(1)) : _GLF_FUZZED(subgroup_base))), 0u | (uint(1))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) << 0, ((64) << 0) >> 0)), 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), injectionSwitch, injectionSwitch)).y)))), bool(bvec4((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))), injectionSwitch, injectionSwitch)).y)))), false, false, true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))))), ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))))) || false), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))) && true), false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true && ((! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true))), true && (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)) || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))) && true)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), bool(bvec2(true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), true))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-86.10)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2136.7563)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(true)))), bool(true))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-86.10)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2136.7563)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(true)))), bool(true)), (mix(float(_GLF_FUZZED(-86.10)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2136.7563)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(true)))), bool(true))) / 1.0))))))) || (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))) && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))))))), ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))), true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))))))))))) && true))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))) && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))))))), ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))), true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))))))))))) && true))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))) && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))))))), ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))), true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))))))))))) && true))), false), true, true)))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), (mat2(1.0) * ((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(928.522, 9.5)) : injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))).y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((false ? 1.2 : (+ 2.9)))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)))))))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))) || false)) || false))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)), false))))) && true) && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(1.9), min(_GLF_FUZZED(1.9), _GLF_IDENTITY(_GLF_FUZZED(1.9), float(vec2(_GLF_FUZZED(1.9), 1.0))))))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
