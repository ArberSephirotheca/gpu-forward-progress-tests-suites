#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-68.23)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(513.565) : injectionSwitch.y)), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))))).x))), gl_WorkGroupID.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))) | 0u)) / 1u) : _GLF_FUZZED(min(atomicMin(num_workgroup, num_workgroup), subgroup_size)))), (false ? _GLF_FUZZED((num_workgroup & _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (false ? _GLF_FUZZED(num_workgroup) : min(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) ^ 0u)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? subgroup_id : _GLF_FUZZED(packUnorm4x8(vec4(-4.4, -7831.7168, -8817.5702, _GLF_IDENTITY(-8.4, min(_GLF_IDENTITY(-8.4, _GLF_IDENTITY((-8.4), clamp((-8.4), (-8.4), _GLF_IDENTITY((-8.4), ((-8.4)) * 1.0))) * 1.0), -8.4))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, (gl_WorkGroupID.x) - 0u), max(gl_WorkGroupID.x, gl_WorkGroupID.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (~ (_GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) / 1u)))))) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u ^ 0u)) + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))) | (workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(55.45)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && true))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(abs(-294.557)) : injectionSwitch.x)), (injectionSwitch.x) - 0.0) > injectionSwitch.y) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(47.32) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) - 0.0)) - 0.0) > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) && true)))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec2(bool(bvec4(false, true, false, true)), true))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 1u, 1u), ~ (~ (uvec4((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) + 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u), 0u, 0u)))), clamp(uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) * 1u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) | (1u ^ 1u)) ^ 0u) ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | 0u), 0u | (_GLF_IDENTITY(4u, (4u) | 0u)))))))), 0u))))), 1u, 1u)))), uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))), 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, 0u + (subgroup_local_id + 1)))))), uint(_GLF_IDENTITY(uvec2(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))))), 0u), (uvec2(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))) | 0u)))))), 0u)) / uvec2(1u, 1u)))))) - 0u, (subgroup_local_id + 1) - 0u), uint(uvec4(min((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))))))), (uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))))))))) << 0u), uint(_GLF_IDENTITY(uvec2(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))))), 0u), (uvec2(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))))))), 0u)) / uvec2(1u, 1u)))))) - 0u, (subgroup_local_id + 1) - 0u), 1u, 1u, 1u)))))) / _GLF_IDENTITY(1u, 0u ^ (1u)))) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 1u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 1u, 0u, 0u))) | (uint(uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 1u, 0u, 0u)))), clamp(uint(uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 1u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 1u, 0u, 0u))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, ((_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), 1u, 1u, 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), 1u), min(uvec4(uvec3(1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4u, clamp(4u, 4u, _GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (_GLF_IDENTITY(uint(uint(4u)), 1u * (uint(uint(4u))))) ^ 0u)))) : _GLF_FUZZED(subgroup_base), 0u ^ (true ? _GLF_IDENTITY(4u, clamp(4u, 4u, _GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), (_GLF_IDENTITY(uint(uint(4u)), 1u * (uint(uint(4u))))) ^ 0u)))) : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY(4u, max(4u, 4u))))))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, max(4u, 4u)), 4u))) - 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), (true ? uint(_GLF_IDENTITY(4u, (4u) | (_GLF_IDENTITY(4u, (4u) >> 0u)))) : _GLF_FUZZED(atomicMax(subgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id))) / 1u))))), 1u), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), (true ? uint(4u) : _GLF_FUZZED(atomicMax(subgroup_id, workgroup_id)))), 1u), (uvec2(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(true, (true) && true) ? uint(4u) : _GLF_FUZZED(atomicMax(subgroup_id, workgroup_id)))), 1u)) / uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) ^ 0u))))))))), (false ? _GLF_FUZZED(workgroup_size) : 1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) >> 0u)) + 0u)))))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(4u)), max(_GLF_IDENTITY(~ (uint(4u)), 0u | (~ (uint(4u)))), ~ (uint(4u)))), (~ (uint(4u))) + 0u))))), 0u), 1u), uvec4(uvec3(1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), 1u)))))), clamp(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(1u, 1u, 1u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)), uint(_GLF_IDENTITY(uvec3(1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), _GLF_IDENTITY((uvec3(1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u))))), 0u)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), min(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : _GLF_IDENTITY(1u, (1u) | (1u))))) / 1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))) | ((uvec3(1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), (true ? uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u) : _GLF_FUZZED(uvec4(174216u, 147625u, 3110u, 75288u))))))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), (true ? uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : _GLF_IDENTITY(1u, (1u) ^ 0u))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u) : _GLF_FUZZED(uvec4(174216u, 147625u, 3110u, 75288u))))))), 0u, 0u)), (uint(uvec3(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u)) * uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u), (true ? uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)))), 0u, 1u, 1u) : _GLF_FUZZED(uvec4(174216u, 147625u, 3110u, 75288u))))))), 0u, 0u))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(104823u) : 1u))) / 1u)))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))))))), uint(uvec3(1u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), uint(uint(_GLF_IDENTITY(4u, (4u) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) / 1u), (_GLF_IDENTITY(4u, (4u) / 1u)) - 0u)))))))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u))))) & (_GLF_IDENTITY(98292u, (98292u) ^ 0u) & 195693u)) ^ (uint(4u))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), 0u | (uint(_GLF_IDENTITY(4u, (4u) / 1u)))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u)))), uint(_GLF_IDENTITY(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u)))), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), ~ (~ (_GLF_IDENTITY(0u, uint(uint(0u))))))) | (_GLF_IDENTITY(0u, uint(uint(0u)))))), 0u, 0u)))))) & (98292u & 195693u)) ^ (uint(4u))))), max((_GLF_IDENTITY(1u, (1u) | 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), 0u | (uint(_GLF_IDENTITY(4u, (4u) / 1u)))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u))))) & (98292u & 195693u)) ^ (uint(4u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), 0u | _GLF_IDENTITY((uint(_GLF_IDENTITY(4u, (4u) / 1u))), ((uint(_GLF_IDENTITY(4u, (4u) / 1u)))) ^ 0u)), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u))))) & (98292u & 195693u)), ((_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u))))) & (98292u & 195693u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u))))) & (98292u & 195693u)), 0u | ((_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), clamp((_GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), min((_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(0u, uint(uint(0u)))))), (_GLF_IDENTITY(0u, uint(uint(0u))))))) & (98292u & 195693u)))))) ^ (uint(4u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_id))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), 0u | (uint(_GLF_IDENTITY(4u, (4u) / 1u)))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, uint(uint(0u))))))))) | 0u)) & (98292u & 195693u)) ^ (uint(4u)))))) * 1u)))) << 0u) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u))))), 1u, 1u)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5733.6955, -7700.5058)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, abs(1.0), 0.0, 1.0), vec4(_GLF_IDENTITY(mat2x4(vec4(injectionSwitch.y, abs(1.0), 0.0, 1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, log(1.0)), mat2x4(mat3x4(mat2x4(vec4(injectionSwitch.y, abs(1.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(76.94)), float(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, log(1.0))))))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((1.7 - 2846.4847)))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((1.7 - 2846.4847)))) > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)))), bool(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-8.8) : injectionSwitch[1])))).y), false || ((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    return;
   return;
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), 0u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)))))], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (~ (64))))), 2), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (2)))))) >> 0u);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 + (1)), 1, 1))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (bool(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)) && (bool(false)), false || (_GLF_IDENTITY(true, ! (! (true))) && (bool(false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (bool(false)), false || (_GLF_IDENTITY(true, ! (! (true))) && (bool(false)))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (bool(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (bool(false)), (_GLF_IDENTITY(true, ! (! (true))) && (bool(false))) || false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), false, false, false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), false, false, false))), _GLF_IDENTITY(false, true && (false)))))) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))))))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false)))))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))))))))), false)))))))), false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, false))), true)))), bvec3(bvec3(bvec3(true, false, false)))))) && true)), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false)))))))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false)))))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))))))))), false)))))))), false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, false))), true)))), bvec3(bvec3(bvec3(true, false, false)))))) && true))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat3x4(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(vec2(mat3x4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(abs(0.0), float(float(abs(0.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)), vec2(mat3x4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), max(vec2(mat3x4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), vec2(mat3x4(_GLF_FUZZED(injectionSwitch), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.9)), bool(false))) : _GLF_FUZZED(2.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
