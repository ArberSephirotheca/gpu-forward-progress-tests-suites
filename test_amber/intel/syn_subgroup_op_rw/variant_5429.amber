#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2773.0479)), vec2(_GLF_FUZZED(-641.545), (injectionSwitch)[1]), bvec2(false, true))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)) || false)) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 0.0, log(1.0), 1.0, 1.0, log(1.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))).x, 0u)), max(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))).x, 0u)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))).x, 0u))))), max(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))).x, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))), (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))) | (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))), (_GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))), (uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)))))))).x) / 1u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(2.1, mix(float(_GLF_FUZZED((false ? 1.8 : -506.209))), float(2.1), bool(true)))), _GLF_FUZZED(5007.4094)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]))), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])))) * mat2(1.0), mix(vec2(((vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])))) * mat2(1.0))[0], ((vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1])))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-642.292), _GLF_FUZZED(49.56)), bvec2(false, false)))), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - (0u | 0u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) >> 0u) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(uint(-48327)))), ~ (~ (subgroup_local_id))) + 1)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-4.3), _GLF_FUZZED(5.1)), bvec2(false, false)))), injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) / exp(vec2(0.0, 0.0)))))), injectionSwitch)), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0))), mix(vec2(_GLF_FUZZED(-6266.0885), _GLF_FUZZED(-899.449)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))).y))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), clamp(~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id)), ~ (~ (subgroup_local_id))))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(uint(-48327)))), ~ (~ (subgroup_local_id))) + 1)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0))))))).y))) % subgroup_size, (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(uint(_GLF_IDENTITY(-48327, int(ivec4(-48327, (0 >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY((0 ^ 0), 0 | ((0 ^ 0))), ((0 ^ 0) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) + 0)))))))))), ~ (~ (subgroup_local_id))) + 1)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-795.207, -7.4)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0))))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-795.207, -7.4)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0))))))).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)), 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-795.207, -7.4)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0))))))).y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-592.123)))))) % subgroup_size : _GLF_FUZZED(workgroup_size)))) << 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8970.9295))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8970.9295))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8970.9295))) > injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), max((+ num_workgroup), _GLF_IDENTITY((+ num_workgroup), min((+ num_workgroup), (+ num_workgroup))))), uint(uvec3((+ num_workgroup), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), ~ (~ (_GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) >> 0u))))))))), 0u)))) : _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) + 0u)))) >> 0u), 1u, (174593u & 0u))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(_GLF_IDENTITY(uint((+ num_workgroup)), (uint((_GLF_IDENTITY(+ num_workgroup, (_GLF_IDENTITY(+ _GLF_IDENTITY(num_workgroup, max(_GLF_IDENTITY(num_workgroup, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (num_workgroup)), num_workgroup)), max(_GLF_IDENTITY(+ num_workgroup, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (+ num_workgroup)), + num_workgroup))) | (+ num_workgroup))))) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_id)))))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), (174593u & 0u)), min(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((+ num_workgroup)), min(_GLF_IDENTITY(uint((+ num_workgroup)), max(uint((+ num_workgroup)), uint((+ num_workgroup)))), uint((+ num_workgroup)))), (uint((+ num_workgroup))) / 1u))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))), min(~ (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))))))), 1u, 1u)), _GLF_IDENTITY((174593u & 0u), ~ (~ ((174593u & 0u))))), uvec4(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(_GLF_IDENTITY(uint((+ _GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup))))), (uint((+ num_workgroup))) / 1u))), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), (_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), ((+ num_workgroup)) * 1u), clamp((+ num_workgroup), (+ num_workgroup), (+ num_workgroup)))) << 0u), 0u, 0u)))) : buf[virtual_gid]), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(_GLF_IDENTITY(uint((+ num_workgroup)), (uint((_GLF_IDENTITY(+ num_workgroup, min(+ num_workgroup, + num_workgroup))))) / 1u))), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), (_GLF_IDENTITY((+ num_workgroup), clamp((+ num_workgroup), (_GLF_IDENTITY(+ num_workgroup, (+ num_workgroup) >> 0u)), (+ num_workgroup)))) << 0u), 0u, 0u)))) : buf[virtual_gid]), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(_GLF_IDENTITY(uint((+ num_workgroup)), (uint((+ num_workgroup))) / 1u))), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), (_GLF_IDENTITY((+ num_workgroup), clamp((+ num_workgroup), (+ num_workgroup), (+ num_workgroup)))) << 0u), 0u, 0u)))) : buf[virtual_gid]), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(_GLF_IDENTITY(uint((+ num_workgroup)), (uint((+ num_workgroup))) / 1u))), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), (_GLF_IDENTITY((+ num_workgroup), clamp((+ num_workgroup), (+ num_workgroup), (+ num_workgroup)))) << 0u), 0u, 0u)))) : buf[virtual_gid])))), 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (174593u & 0u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ num_workgroup, ~ (~ (_GLF_IDENTITY(+ num_workgroup, ~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u))))))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, _GLF_IDENTITY(1u, (1u) << 0u), (174593u & 0u))), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ num_workgroup, ~ (~ (_GLF_IDENTITY(+ num_workgroup, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u)), clamp(~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u)), ~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u)), ~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u)))), ~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u))))))))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))), (true ? uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ num_workgroup, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(+ num_workgroup, uint(_GLF_IDENTITY(uvec2(+ num_workgroup, 1u), (uvec2(+ num_workgroup, 1u)) >> uvec2(0u, 0u)))), ~ (_GLF_IDENTITY(~ (+ num_workgroup), (~ (+ num_workgroup)) << 0u))))))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), (false ? _GLF_FUZZED(uvec3(120504u, 162241u, 198234u)) : _GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), clamp(uvec3((+ num_workgroup), 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), ~ (~ (uvec3((+ num_workgroup), 0u, 0u)))), uvec3((+ num_workgroup), 0u, 0u)))))), uint(uvec3(uint(_GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), (false ? _GLF_FUZZED(uvec3(120504u, 162241u, 198234u)) : _GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), clamp(uvec3((+ num_workgroup), 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 0u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), ~ (~ (uvec3((+ num_workgroup), 0u, 0u)))), uvec3((+ num_workgroup), 0u, 0u)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : buf[virtual_gid]), min((false ? _GLF_FUZZED(_GLF_IDENTITY((+ _GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), uint(_GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3((+ num_workgroup), 0u, 0u)), min(~ (uvec3((+ num_workgroup), 0u, 0u)), ~ (uvec3((+ num_workgroup), 0u, 0u))))))))) : buf[virtual_gid]), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), ((+ num_workgroup)) ^ (0u ^ 0u)), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])))), 0u, 1u, (174593u & 0u))), _GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))), (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))) | (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), min(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))), (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))) | (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))), (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))) | (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))), (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))) | (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))), (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))) | (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))), (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))) | (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])))))), 0u, 1u, (_GLF_IDENTITY(174593u & 0u, min(174593u & _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u | 0u)))), 174593u & 0u))))))), (_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, _GLF_IDENTITY(0u, 1u * (0u)))))) : _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), 0u, 1u, (174593u & 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED((12.07 - -57.88)) : _GLF_ZERO(0.0, injectionSwitch.x))))), 1u)), 0u | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(+ num_workgroup, min(+ num_workgroup, + num_workgroup))), uint(uvec3((+ num_workgroup), 0u, 0u)))) - 0u)) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), clamp(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), min(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), _GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))), _GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), 0u, 1u, (_GLF_IDENTITY(174593u & 0u, 0u | (174593u & 0u))))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ _GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), (true ? (+ num_workgroup) : _GLF_FUZZED((workgroup_size * subgroup_local_id)))), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(_GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3((+ num_workgroup), 0u, 0u), max(uvec3((+ num_workgroup), 0u, 0u), uvec3((+ num_workgroup), 0u, 0u)))))))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)), ~ (~ (uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, _GLF_IDENTITY((1u | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)), ((1u | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u))) >> (0u | 0u)), 1u)), 0u | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, _GLF_IDENTITY((174593u & 0u), ((174593u & 0u)) - 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, _GLF_IDENTITY(1u, (1u) - 0u), (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), 0u | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & _GLF_IDENTITY(0u, min(0u, 0u))))))), (~ _GLF_IDENTITY((~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), (1u ^ 1u) | (_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), ((~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), (1u ^ 1u) | (_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | ((~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), (1u ^ 1u) | (_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), ~ (~ ((+ num_workgroup)))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, _GLF_IDENTITY((174593u & _GLF_IDENTITY(0u, min(0u, 0u))), uint(uvec2((174593u & _GLF_IDENTITY(0u, min(0u, 0u))), 1u))))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ num_workgroup, (false ? _GLF_FUZZED(next_virtual_gid) : + num_workgroup))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (_GLF_IDENTITY(174593u, ~ (~ (174593u))) & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), ~ (~ ((+ num_workgroup)))), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 1u * (0u))))), 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))))))) << 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), min(_GLF_IDENTITY((+ num_workgroup), ((+ num_workgroup)) | ((+ num_workgroup))), (+ num_workgroup))), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), 0u | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), (_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) >> 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u)))) : buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u)))) : buf[virtual_gid]) * 1u))), 0u, 1u, _GLF_IDENTITY((174593u & 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((174593u & 0u), uint(uvec2((174593u & 0u), 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((174593u & 0u), uint(uvec2((174593u & 0u), 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(_GLF_IDENTITY((174593u & 0u), uint(uvec2((174593u & 0u), 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))))))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), 0u ^ (_GLF_IDENTITY((+ num_workgroup), ((+ num_workgroup)) << 0u))), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])))))), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, uint(uint(1u))))), 0u | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)) && true) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))), (true ? _GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))) : _GLF_FUZZED(workgroup_id)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3(_GLF_IDENTITY((+ num_workgroup), uint(uvec2(_GLF_IDENTITY((+ num_workgroup), ~ (~ ((+ num_workgroup)))), 1u))), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((_GLF_IDENTITY(+ num_workgroup, clamp(+ num_workgroup, _GLF_IDENTITY(+ num_workgroup, (+ num_workgroup) | (+ num_workgroup)), + num_workgroup))), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)), 0u | (uint(uvec4(_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))), (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))), (_GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u))))) << 0u) : buf[virtual_gid])), 0u, 1u, (174593u & 0u)))))) | (~ (~ (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(_GLF_IDENTITY((+ num_workgroup), uint(uvec3((+ num_workgroup), 0u, 0u)))) : buf[virtual_gid])), 0u, 1u, (174593u & 0u))))))), 1u, (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))))))) | _GLF_IDENTITY((0u ^ 0u), 1u * ((0u ^ 0u))))))), (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((+ num_workgroup)) : buf[virtual_gid])), 0u, 1u, (_GLF_IDENTITY(174593u, max(174593u, 174593u)) & 0u)))) / 1u)), 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-35.24)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(50128)))], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, ! (! (true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, ! (! (true))))))))))))), false, true, true)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(58.61) : injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, max(0, 0)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y)), true))))))) || false))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(false)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (false)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)).y), false || (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))))), 0.0)).y))))), bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))))).y)))), ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) && true)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), clamp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))))), 0.0)).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y))))), true && (((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 0.0)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y))))))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))), true)), false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), bool(bvec4(! (false), false, false, false))))), false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2((true), false)))) || false)), true && ((! (true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2((true), false)))) || false)), true && ((! (true)))))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2((true), false)))) || false)), true && ((! (true)))))))))) || false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.0) : injectionSwitch.x)) < injectionSwitch.y))) || false), false, false))))), false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, true))), false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, max(1, 1)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(1))), _GLF_IDENTITY(uint(uvec2(~ (~ (uint(1))), 0u)), (uint(uvec2(~ (~ (uint(1))), 0u))) - 0u)), (_GLF_IDENTITY(~ (~ (uint(1))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(~ (~ (uint(1))), (~ (~ (uint(1)))) >> 0u), 0u)), (uint(uvec2(~ (~ (uint(1))), 0u))) - 0u))) / 1u)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + tan(0.0)), injectionSwitch[1])).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true))), false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), true, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_size) : read))), ~ (~ ((_GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_size) : read)))))), _GLF_IDENTITY(((_GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_size) : read)))), max(_GLF_IDENTITY(((_GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_size) : read)))), (((_GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_size) : read))))) << 0u), ((_GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_size) : read)))))) + 0u) | (read)))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
