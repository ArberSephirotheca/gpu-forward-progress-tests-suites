#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(true ? _GLF_IDENTITY(7.9, min(7.9, 7.9)) : float(_GLF_IDENTITY(119039u, max(119039u, 119039u))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(true ? 7.9 : float(_GLF_IDENTITY(_GLF_IDENTITY(119039u, clamp(119039u, _GLF_IDENTITY(119039u, (119039u) >> 0u), 119039u)), max(119039u, 119039u))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0) * (vec2(true ? 7.9 : float(_GLF_IDENTITY(_GLF_IDENTITY(119039u, clamp(119039u, _GLF_IDENTITY(119039u, _GLF_IDENTITY((119039u) >> 0u, max((119039u) >> 0u, (119039u) >> 0u))), 119039u)), max(119039u, 119039u))), _GLF_ZERO(0.0, injectionSwitch.x))))), mix(float(float(_GLF_IDENTITY(vec2(true ? 7.9 : float(_GLF_IDENTITY(_GLF_IDENTITY(119039u, clamp(119039u, _GLF_IDENTITY(119039u, (119039u) >> 0u), 119039u)), max(119039u, 119039u))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0) * (vec2(true ? 7.9 : float(_GLF_IDENTITY(_GLF_IDENTITY(119039u, clamp(119039u, _GLF_IDENTITY(119039u, (119039u) >> 0u), 119039u)), max(119039u, 119039u))), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED((-0.8 + 603.607))), bool(false))))))), bool(_GLF_IDENTITY(false, bool(bool(false)))))) > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6316.4077))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY((true ? 7.9 : float(119039u)), clamp((true ? 7.9 : float(119039u)), (true ? 7.9 : float(119039u)), (true ? 7.9 : float(119039u)))))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6316.4077))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY((true ? 7.9 : float(119039u)), clamp((true ? 7.9 : float(119039u)), (true ? 7.9 : float(119039u)), (true ? 7.9 : float(119039u)))))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(false))) > injectionSwitch.y), false, false)), bool(bvec2(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(false))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? 7.9 : float(119039u)))), bool(false))), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), false, false)), true)))))))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (bool(bvec4(_GLF_DEAD(false), true, true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec2((! (true)), false), bvec2(bvec4(bvec2((! (true)), false), true, true)))))) && (bool(bvec4(_GLF_DEAD(false), true, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))))), true && ((! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) && true)) || ((! (true))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) || false, ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) || false, bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, ! (! (true)))))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) || false, _GLF_IDENTITY(false, ! (! (false)))))))))))))), true && _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_DEAD(false), true, true, true)))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), true, true)))), ! (! (((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), true, true))))))), _GLF_IDENTITY(true, (true) || false) && (! _GLF_IDENTITY(((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), true, true)))), false || (((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), true, true)))))))), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), true && ((! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), false || (bool(bvec3(! (true), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && true, (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && true, ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! _GLF_IDENTITY((true), ((true)) || false))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), true && ((true)))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! _GLF_IDENTITY((true), ((true)) || false))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), false)))))) && true) && true)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))), false || (((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) || false))))), bool(bool(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), true && ((! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), false || (bool(bvec3(! (true), true, true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! _GLF_IDENTITY((true), bool(bvec2((true), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), false))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) || false)))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), true && ((! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), false || (bool(bvec3(! (true), true, true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, true && (true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))))))) || false))))), bool(bool(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), true && ((! (_GLF_IDENTITY(true, ! (! (true)))))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), false || (bool(bvec3(! (true), true, true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, false))), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), false || ((! (true)))), bool(bool(! _GLF_IDENTITY((! (true)), false || ((! (true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), false || (bool(bvec3(! (true), true, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))))))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))), false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))) && true), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))), true, false, false))) && true)))))))) || false)))))))))), true && _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))))))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_DEAD(false), true, true, true)))), bool(bvec3(_GLF_IDENTITY(! ((bool(bvec4(_GLF_DEAD(false), true, true, true)))), _GLF_IDENTITY(true, (true) || false) && (! ((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true))) || false))))))), true, false)))))))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 11.18)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4625.9775)), bvec2(true, false))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.y = num_workgroup, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.y = num_workgroup) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), uint(uint(0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, abs(0.0))), mix(float(float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(mat4(0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 1.0, 1.0, log(1.0), sqrt(1.0), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0), vec3(1.0, 1.0, 1.0))), sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((+ 9.7))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0, 0.0, 1.0)))))), 1.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), abs(0.0)))))), float(_GLF_FUZZED(-5958.4261)), bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-373.334, 994.226)) : injectionSwitch)).y, (injectionSwitch.y) / sqrt(1.0))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 1u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), max(uvec4(gl_WorkGroupSize, 1u), uvec4(gl_WorkGroupSize, 1u)))) | uvec4(0u, 0u, 0u, 0u)))) | (uvec3(uvec4(gl_WorkGroupSize, 1u))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ ((_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 1u)), (uvec3(uvec4(gl_WorkGroupSize, 1u))) - uvec3(0u, 0u, 0u))) | (uvec3(uvec4(gl_WorkGroupSize, 1u))))))).x) + 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * workgroup_id)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u + (_GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) / 1u) * workgroup_id : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) / 1u) * workgroup_id : _GLF_FUZZED(subgroup_id)), ((true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) / 1u) * workgroup_id : _GLF_FUZZED(subgroup_id))) ^ 0u)) ^ 0u))) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u + (_GLF_FUZZED(num_workgroup))))), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(0u + (_GLF_FUZZED(num_workgroup)), clamp(_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_FUZZED(num_workgroup)), min((_GLF_FUZZED(num_workgroup)), (_GLF_FUZZED(num_workgroup)))), (0u + (_GLF_FUZZED(num_workgroup))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(0u + (_GLF_FUZZED(num_workgroup)), (0u + (_GLF_FUZZED(num_workgroup))) | 0u), 0u + (_GLF_FUZZED(num_workgroup))))))))))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), true)), false, true)))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))), false))) || false)))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)) * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (false ? _GLF_FUZZED(packUnorm4x8(vec4(-196.567, 7.9, -3.2, -343.337))) : 0u)))), 1u), (uvec3(subgroup_id * subgroup_size, 0u, 1u)) / uvec3(1u, 1u, 1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base.y = _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_base), 0u ^ (uint(subgroup_base))), 0u ^ (_GLF_IDENTITY(uint(subgroup_base), 0u ^ (uint(subgroup_base)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_base), _GLF_IDENTITY(~ (~ (uint(subgroup_base))), ~ _GLF_IDENTITY((~ (~ (~ _GLF_IDENTITY((uint(subgroup_base)), ((uint(subgroup_base))) | ((uint(subgroup_base))))))), ~ (~ ((~ (~ (~ _GLF_IDENTITY((uint(subgroup_base)), ((uint(subgroup_base))) | ((uint(subgroup_base)))))))))))), ~ (~ (uint(subgroup_base)))), _GLF_IDENTITY(0u ^ (uint(subgroup_base)), (0u ^ (uint(subgroup_base))) | 0u)))) / 1u));
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w = GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w) ^ (0u | (0u | 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base.x = next_virtual_gid, 0u ^ (GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base.x = next_virtual_gid));
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x = GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_base.x;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = read, _GLF_IDENTITY((true ? GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = read : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) / 1u))), ~ (~ ((_GLF_IDENTITY(true, (true) && true) ? GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = read : _GLF_FUZZED(workgroup_id))))));
 if((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), ~ (~ (uint(uint(0u)))))) | 0u)), subgroup_local_id), max(max(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))))), (~ ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))))) / 1u))) | 0u), subgroup_local_id))), max(subgroup_local_id, subgroup_local_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), max(max(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(uvec2(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(uvec4(max(subgroup_local_id, subgroup_local_id), 0u, 0u, 0u))), 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), min(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))), clamp((max(subgroup_local_id, subgroup_local_id)), (max(subgroup_local_id, subgroup_local_id)), (max(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), uint(uvec4(uint(subgroup_local_id), 1u, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), uint(subgroup_local_id))))), subgroup_local_id)))) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(bitfieldInsert(workgroup_id, subgroup_size, 5887, -36747)))), 0u))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(bitfieldInsert(workgroup_id, subgroup_size, 5887, -36747)))), 0u)))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) * 1u))))) * 1u))) << 0u), 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) << 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), min(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) ^ 0u))), max(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))), max(subgroup_local_id, subgroup_local_id))))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid))), (_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))) | (0u ^ 0u)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u))))))) : subgroup_local_id))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))), min(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)), 0u | (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))), subgroup_local_id), max(max(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY((max(subgroup_local_id, subgroup_local_id)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((max(subgroup_local_id, subgroup_local_id)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ ((max(subgroup_local_id, subgroup_local_id)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id), uint(_GLF_IDENTITY(uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u), (false ? _GLF_FUZZED(uvec3(197884u, 47632u, 164853u)) : uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u), (false ? _GLF_FUZZED(uvec3(197884u, 47632u, 164853u)) : uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u))))), min(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u), (false ? _GLF_FUZZED(uvec3(197884u, 47632u, 164853u)) : uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u))))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u), (false ? _GLF_FUZZED(uvec3(197884u, 47632u, 164853u)) : uvec3(max(subgroup_local_id, subgroup_local_id), 0u, 1u)))))))) - 0u), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), max(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))), max(subgroup_local_id, subgroup_local_id))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(next_virtual_gid) : max(subgroup_local_id, subgroup_local_id))), (max(subgroup_local_id, subgroup_local_id)) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u, 1u, 0u)))), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), max(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id))), max(subgroup_local_id, subgroup_local_id))))))))))) % 2) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))), (injectionSwitch) * cos(vec2(0.0, 0.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))), (injectionSwitch) * cos(vec2(0.0, 0.0))).y)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)).y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base)), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base)).x], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1)), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, true))))))
    barrier();
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
