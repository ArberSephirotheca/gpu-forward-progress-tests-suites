#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))))))))))))), true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)))))))))), true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), 0u | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u) + (gl_NumWorkGroups.x))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u), (uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u)) - uvec3(0u, 0u, 0u)))) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), gl_NumWorkGroups, gl_NumWorkGroups)).x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), 0u, 1u, 0u))))) >> (0u | 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), 0u | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u) + (gl_NumWorkGroups.x))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u), (uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u)) - uvec3(0u, 0u, 0u)))) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), gl_NumWorkGroups, gl_NumWorkGroups)).x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), 0u, 1u, 0u))))) >> (0u | 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), 0u | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u) + (gl_NumWorkGroups.x))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u), (uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u)) - uvec3(0u, 0u, 0u)))) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), gl_NumWorkGroups, gl_NumWorkGroups)).x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), clamp((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups.x), 0u, 1u, 0u))))) >> (0u | 0u))))))))) | (gl_NumWorkGroups.x), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x)), min(0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))), clamp(false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))), false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))), false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))))) + (gl_NumWorkGroups.x)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(154925u, 73249u, 37076u)) : _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x, (gl_NumWorkGroups.x) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-126.226), (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(-0.5) : _GLF_FUZZED(-126.226)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))))) ^ 0u, ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))))) ^ 0u) - 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))))) ^ 0u, ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))))) ^ 0u) | ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-126.226)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x))))) ^ 0u))))) + (gl_NumWorkGroups.x), _GLF_IDENTITY(uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((_GLF_IDENTITY((mat4x3(-9.8, -3.9, -854.522, 255.144, -31.63, -5.7, 1.7, -1.0, -81.93, 20.00, -88.06, -802.494) , subgroup_local_id), min(_GLF_IDENTITY((mat4x3(-9.8, -3.9, -854.522, 255.144, -31.63, -5.7, 1.7, -1.0, -81.93, 20.00, -88.06, -802.494) , subgroup_local_id), (true ? (mat4x3(-9.8, -3.9, -854.522, 255.144, -31.63, -5.7, 1.7, -1.0, -81.93, 20.00, -88.06, -802.494) , subgroup_local_id) : _GLF_FUZZED(subgroup_size))), (mat4x3(-9.8, -3.9, -854.522, 255.144, -31.63, -5.7, 1.7, -1.0, -81.93, 20.00, -88.06, -802.494) , subgroup_local_id))))) : 1u)), 0u)), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, _GLF_IDENTITY(1u, (1u) | 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)) >> 0u), 0u, 1u, 0u))))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4983.7460)), bool(false)))) - tan(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_NumWorkGroups)).x), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4983.7460)), bool(false)))) - tan(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_NumWorkGroups)).x), (false ? _GLF_FUZZED(max(subgroup_size, subgroup_local_id)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4983.7460)), bool(false)))) - tan(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_NumWorkGroups)).x))))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-842.899))), injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (gl_NumWorkGroups.x), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (gl_NumWorkGroups.x), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (gl_NumWorkGroups.x), (true ? uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_id)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uvec2((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, cos(0.0), 1.0, 0.0, 1.0, 0.0))))), (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (gl_NumWorkGroups.x)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)), 0u)), (uint(uvec2((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x))) + log(1.0)), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), min(float(mat2x3(injectionSwitch.x, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat2x3(injectionSwitch.x, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))))) + (gl_NumWorkGroups.x)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)), 0u))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((gl_NumWorkGroups.x), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u), (uvec3(_GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x))) / 1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u)) << uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))), ~ (~ ((gl_NumWorkGroups.x)))), 0u, 1u, 0u), ~ (~ (uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))), ~ (~ ((gl_NumWorkGroups.x)))), 0u, 1u, 0u))))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec4(uvec3(uvec3(gl_NumWorkGroups)), 1u)))).x), 0u, 1u, 0u))) | _GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (true ? _GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), clamp((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))))), clamp(~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), clamp((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))))), ~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), clamp((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), clamp((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), clamp((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))))), ~ (~ (~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), clamp((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))))))))), ~ (_GLF_IDENTITY((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), clamp((uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))), (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)))))))))))) : _GLF_FUZZED(subgroup_local_id))))))))) | (gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], _GLF_IDENTITY(min(gl_NumWorkGroups[1], gl_NumWorkGroups[1]), (min(gl_NumWorkGroups[1], gl_NumWorkGroups[1])) | 0u)), gl_NumWorkGroups[2])))).x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.x), bool(true)))) - 0.0), float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 0.0, 0.0))))) + (gl_NumWorkGroups.x), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) + (gl_NumWorkGroups.x))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), injectionSwitch.x)), uint(uint(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-3926.7933, (-3926.7933) * 1.0)) : 0.0)))), injectionSwitch.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), clamp(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))))))), 0.0 + (max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), clamp(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), clamp(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))))), 0.0, 0.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), clamp(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))))), 0.0, 0.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0))))), (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), clamp(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))))), 0.0, 0.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), clamp(float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))), float(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3926.7933) : 0.0)))))), 0.0, 0.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0)))))) / 1.0))))))), injectionSwitch.x))))))) + (gl_NumWorkGroups.x), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))) : _GLF_FUZZED(-6263.0090))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0))), 0.0))), (false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(atanh(injectionSwitch)), (_GLF_FUZZED(atanh(injectionSwitch))) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(6.0)), float(mat3x4(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(6.0)), ((true ? injectionSwitch.x : _GLF_FUZZED(6.0))) - 0.0), 0.0, cos(tan(0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0)))))))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -6.9 : -7387.4712)), _GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-544.218)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x : _GLF_FUZZED(6.0))))))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0)))))), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-76.15), clamp(_GLF_IDENTITY(_GLF_FUZZED(-76.15), float(vec2(_GLF_FUZZED(-76.15), 1.0))), _GLF_FUZZED(-76.15), _GLF_IDENTITY(_GLF_FUZZED(-76.15), (true ? _GLF_FUZZED(-76.15) : _GLF_FUZZED(smoothstep(11.83, 8706.6319, -3866.3455)))))) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0)))))), float(mat2(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))), (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0)))))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0)))))), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))) + 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-2808.1776 - -303.019))), vec2(_GLF_FUZZED(-308.876), (injectionSwitch)[1]), bvec2(false, true))).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.15) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(float(50422u))), bool(false))))).x, (true ? injectionSwitch.x : _GLF_FUZZED(6.0))))))) : _GLF_FUZZED(-6263.0090))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(mat4x3(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(571.992) : 1.0))))))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), 1.0))), 0.0))))))) + (gl_NumWorkGroups.x)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(1.9)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) + (gl_NumWorkGroups.x), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(1.9)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) + (gl_NumWorkGroups.x)) ^ 0u), 0u, 1u, 0u)), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)), (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x)), 0u + (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x))))) >> 0u))), 0u, 1u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u), _GLF_IDENTITY((uvec4(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))) + (gl_NumWorkGroups.x), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, max(0u, 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY((uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u)), ((uvec4(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(454.512)), bool(false)))) + (gl_NumWorkGroups.x), 0u, 1u, 0u))) >> uvec4(0u, 0u, 0u, 0u)))) | uvec4(0u, 0u, 0u, 0u))))))) | (uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_NumWorkGroups.x), 0u, 1u, 0u))))))))) | _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))))), bool(bvec2(false, false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.79)), float(injectionSwitch.y), bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.79)), float(injectionSwitch.y), bool(true)))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-897.812) : injectionSwitch[1])), 0.0, 0.0, 1.0)), min(float(vec4(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-897.812) : injectionSwitch[1])), 0.0, 0.0, 1.0)), float(vec4(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-897.812) : injectionSwitch[1])), 0.0, 0.0, 1.0))))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-897.812) : injectionSwitch[1])), 0.0, 0.0, 1.0)), min(float(vec4(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-897.812) : injectionSwitch[1])), 0.0, 0.0, 1.0)), float(vec4(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-897.812) : injectionSwitch[1])), 0.0, 0.0, 1.0))))))).x)) < injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(182168u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))) / 1.0), (false ? _GLF_FUZZED(vec4(-876.003, 5214.0722, -7.7, -3.8).z) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))) / 1.0)))) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-908.183))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-908.183))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true), true))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bool(true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0))))) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), (float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) * 1.0))))), 1.0, 1.0))).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), float(float(sin(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sin(0.0), 0.0, 1.0)), 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0))))) - determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), (float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), determinant(mat3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) * 1.0))))), 1.0, 1.0))).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true))) || false) && (bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y)), true, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false) && (bool(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), false || (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false) && (bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false)))))))))), true && (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false) && (bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1.8, max(1.8, 1.8)))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), log(1.0), 0.0, 0.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) && _GLF_IDENTITY(true, (true) || false)) && (bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, true, false)))))))))), true && (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))), true && (_GLF_IDENTITY(true, (true) || false) && (bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(0.4) : injectionSwitch[0])), injectionSwitch[1])).y, true, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))))))))))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))) && _GLF_IDENTITY(true, (true) || false)) && (bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), false)))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 1.6))), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, true, false)))))))))), true && (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), true), true))))) && (bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(true, (true) || false) && (bool(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(-3.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(0.4) : injectionSwitch[0])), injectionSwitch[1])).y, true, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))))))))))) && true))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false, false)), bool(bool(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false, false))))), ! (! (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false, false)), bool(bool(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u)))), (1u ^ 1u)))))) | 0u)), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u)))), (1u ^ 1u)))))) | 0u))) - 0u))), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) * 1u)))), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, (1u ^ 1u)))))) | 0u))))) | 0u), 0u | (workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u)))), (1u ^ 1u)))))) | 0u)), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u)))), (1u ^ 1u)))))) | 0u))) - 0u))), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) * 1u)))), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, (1u ^ 1u)))))) | 0u))))) | 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-36210))))), (subgroup_local_id % 2) | (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (2))) >> 0u)))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), ((! (false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((! (false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[1])).x > injectionSwitch.y)))), ((! (false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), false, true), bvec3(bvec3(bvec3(bool(bvec2(false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), false, true, false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4((_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, false)))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))))))))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-554.359, -385.385, -2.5, 25.85, -6125.8274, 8.8))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-554.359, -385.385, -2.5, 25.85, -6125.8274, 8.8)))))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))))).x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)), (1.0) - 0.0)))))))))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) || false)) || false))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y)))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), 0.0 + (float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))), float(_GLF_FUZZED(-371.800)), bool(false)))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(67.09)), bvec2(true, false))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, false)), true, true, _GLF_IDENTITY(true, ! (! (true)))))), bool(bool(bool(bvec3(_GLF_DEAD(false), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (false || (false)) && true)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec4(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u), 1u, 1u, (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(1u, 0u ^ (1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) << (0u & 123033u))))))))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (read) | (read)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(true ? 64 : _GLF_FUZZED(_GLF_IDENTITY(65646, (false ? _GLF_FUZZED(91511) : 65646))), (true ? 64 : _GLF_FUZZED(_GLF_IDENTITY(65646, (false ? _GLF_FUZZED(91511) : 65646)))) ^ 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))), 0, 0), (ivec3(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))), 0, 0)) ^ ivec3(0, 0, 0)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(true, bool(bool(true))) ? 64 : _GLF_FUZZED(65646))))), min(_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))), max(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))), _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))), (false ? _GLF_FUZZED(-24298) : _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646))))))), _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(65646)))))) << 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
