#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x4((injectionSwitch) * mat2(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch) * mat2(1.0)))).y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, ! (! (false)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, ! (! (false)))))))), false)))), true))))))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.21)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.21)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.21)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true))))))))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.21)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.21)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-96.21)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true))))))))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false)))), false))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), max(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-222.711)), bool(false))), log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false)))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((injectionSwitch - -3.5)))))))))).x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false))) && true)))) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))) || false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), min(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).x > injectionSwitch.y))) || false)))), true, true))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)))))))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false)))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((injectionSwitch - -3.5)))))))))).x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false))) && true)))) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))) || false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), min(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).x > injectionSwitch.y))) || false)))), true, true))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)))))))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.36))), 0.0))) + 0.0))) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))))) || false)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)))).x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, true && (false))))))) || false)))))))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), injectionSwitch)), mat2(1.0) * (injectionSwitch))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((injectionSwitch - _GLF_IDENTITY(-3.5, min(-3.5, -3.5)))))))))))).x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(1.0), bool(true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-19.32)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)), bool(true)))) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), transpose(transpose(mat2x4(mat2(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), transpose(transpose(mat2x4(mat2(1.0))))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), transpose(transpose(mat2x4(mat2(1.0)))))))))))) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false))) && true)))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), injectionSwitch)), mat2(1.0) * (injectionSwitch))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((injectionSwitch - _GLF_IDENTITY(-3.5, min(-3.5, -3.5)))))))))))).x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(1.0), bool(true))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-19.32)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)), bool(true)))) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), transpose(transpose(mat2x4(mat2(1.0)))))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), transpose(transpose(mat2x4(mat2(1.0))))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), transpose(transpose(mat2x4(mat2(1.0)))))))))))) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y)) || false))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (! ((_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))) || false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), min(tan(vec2(0.0, 0.0)), tan(vec2(0.0, 0.0)))) + (injectionSwitch)).x > injectionSwitch.y))) || false)))), true, true))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)))) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / cos(0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), min(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(0.0, 0.0, 0.0) + (vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0))) * mat2(1.0))[0], _GLF_FUZZED(59.42)), vec2(_GLF_FUZZED((-1.1 + 5.2)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch))) / vec2(1.0, 1.0))) * mat2(1.0))[1]), bvec2(false, true)))).x > injectionSwitch.y)))) && true)))))))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.5)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), (0u ^ 1u), 1u, 0u), (uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), (0u ^ 1u), 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))))) * _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) & uvec3(898u, 142865u, 139229u)) ^ (uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) & uvec3(898u, 142865u, 139229u)) ^ (uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u))))).x) ^ 0u, clamp((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), uint(8u)))), 0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), min(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), clamp(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))) | (uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))))) * uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(subgroup_local_id))), 1u)), 1u, 1u)))).x) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x) ^ 0u, min((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)))).x), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u)))))) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))) * uvec3(1u, 1u, 1u)))).x)))) ^ 0u, clamp((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u)) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (1u)))), 1u, 1u)))).x) ^ 0u, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, uint(uint(1u))) : _GLF_FUZZED(subgroup_id))), 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)))), max((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))))) * uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))))))).x) ^ _GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, _GLF_IDENTITY(0u, (0u) * 1u)) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), 1u)))).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, 0u + (0u))), 0u | (0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (0u | 0u) + (0u)), 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))), 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x))) ^ 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u)))).x) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))) | (workgroup_id))) << 0u)) | (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), true, false))))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), true, false)))))))))))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, min(0u, 0u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-195.638), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(530.173)), bvec2(true, false)))) + vec2(0.0, 0.0)).y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(true, ! (! (true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true))))))), true && (bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), false)), _GLF_IDENTITY(true, ! (! (true))))))))))), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), (! ((injectionSwitch.x < injectionSwitch.y))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), (! ((injectionSwitch.x < injectionSwitch.y))) && true))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))))))), _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), false || ((! ((injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true))))), false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.3))), 1.0, 1.0, 1.0))))) < injectionSwitch.y)), false))))) || false)) && true), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((7310.1110 / -1.5)), _GLF_FUZZED((- 49.91))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED((mix(injectionSwitch, vec2(7626.5125, 5.1), -49.17) - vec2(485.135, _GLF_IDENTITY(-14.62, (-14.62) - 0.0)))))))).x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((7310.1110 / -1.5)), _GLF_FUZZED((- 49.91))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED((mix(injectionSwitch, vec2(7626.5125, 5.1), -49.17) - vec2(485.135, _GLF_IDENTITY(-14.62, (-14.62) - 0.0)))))))).x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), bool(bvec4((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((7310.1110 / -1.5)), _GLF_FUZZED((- 49.91))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED((mix(injectionSwitch, vec2(7626.5125, 5.1), -49.17) - vec2(485.135, _GLF_IDENTITY(-14.62, (-14.62) - 0.0)))))))).x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), true, false, true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((7310.1110 / -1.5)), _GLF_FUZZED((- 49.91))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED((mix(injectionSwitch, vec2(7626.5125, 5.1), -49.17) - vec2(485.135, _GLF_IDENTITY(-14.62, (-14.62) - 0.0)))))))).x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), bool(bvec4((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((7310.1110 / -1.5)), _GLF_FUZZED((- 49.91))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED((mix(injectionSwitch, vec2(7626.5125, 5.1), -49.17) - vec2(485.135, _GLF_IDENTITY(-14.62, (-14.62) - 0.0)))))))).x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), true, false, true))))) || false)))), ((! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED((mix(injectionSwitch, vec2(7626.5125, 5.1), -49.17) - vec2(485.135, -14.62))))))).x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(661.009) : injectionSwitch.y)), injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) / 1u)))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size)) | 0u);
 if(_GLF_DEAD(false))
  return;
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) | 0)), clamp(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(2, _GLF_IDENTITY((2) | 0, ((2) | 0) - 0))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((2)), _GLF_IDENTITY(clamp(~ ((2)), ~ ((2)), ~ ((2))), (false ? _GLF_FUZZED(13813) : clamp(~ ((2)), ~ ((2)), ~ ((2)))))), int(ivec2(_GLF_IDENTITY(~ ((2)), clamp(~ ((2)), ~ ((2)), ~ (_GLF_IDENTITY((2), ((2)) >> 0)))), 0))))) | 0)), (false ? _GLF_FUZZED(workgroup_id) : atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 + (_GLF_IDENTITY((0), int(ivec4((0), 1, 0, 1))))) ^ 0))) | (_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(-84922), max(_GLF_FUZZED(-84922), _GLF_FUZZED(-84922))) : _GLF_IDENTITY(2, min(2, 2))))))) | 0)))), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))]) / 1u), 4, 64, _GLF_IDENTITY(2, (2) | 0)), max(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) | 0)), _GLF_IDENTITY((atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) >> _GLF_IDENTITY(int(0), int(0))) * (4)), 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), int(ivec2(_GLF_IDENTITY(4, max(4, 4)), 0)))) >> 0) : _GLF_FUZZED(94447))), 64, _GLF_IDENTITY(2, (2) | 0))), ((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(94447))), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, 64, 64)))), _GLF_IDENTITY(2, (2) | 0)))) | ((atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(94447), (_GLF_FUZZED(94447)) / 1)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(94447), (_GLF_FUZZED(94447)) / 1)), 0 | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(94447), (_GLF_FUZZED(94447)) / 1))))) * 1)), 64, _GLF_IDENTITY(2, (2) | 0))))) | 0u), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | 0) | 0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(91762) : 2))) ^ 0)) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.9)), vec2(_GLF_FUZZED(float(4140u)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.9)), vec2(_GLF_FUZZED(float(4140u)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.9)), vec2(_GLF_FUZZED(float(4140u)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), true && (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
      return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), max(uint(next_virtual_gid), uint(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))], uint(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, (1 ^ 1), int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec4(-40312, ivec2(-77623, -42986), 63507)) : ivec4(1, 1, (1 ^ 1), int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec4(-40312, ivec2(-77623, -42986), 63507)) : ivec4(1, 1, (1 ^ 1), int(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ ((false ? _GLF_FUZZED(ivec4(-40312, ivec2(-77623, -42986), 63507)) : ivec4(1, 1, (1 ^ 1), int(_GLF_ONE(1.0, injectionSwitch.y)))))))) | ivec4(0, 0, 0, 0))))), 1, _GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), 1))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), false || (_GLF_IDENTITY((false), ((false)) && true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), false || (_GLF_IDENTITY((false), ((false)) && true))))))))))))) || false)) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0))), 1.0, 0.0, 1.0)), float(mat2x4(float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0))), 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0))), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0)))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0))), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0)))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0))), (vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0)))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0)))))).y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(-55.75) : min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, log(1.0) + (1.0)), abs(0.0))), max(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mix(float(_GLF_FUZZED(785.894)), float(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), bool(true)))), mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), float(_GLF_FUZZED(-1.8)), bool(false))), abs(0.0))), (vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, abs(0.0)))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), abs(0.0)))))).y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, (_GLF_IDENTITY(read, clamp(read, read, read))) | 0u))), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
