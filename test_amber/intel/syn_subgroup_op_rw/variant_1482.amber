#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), true && ((false))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ((_GLF_WRAPPED_IF_FALSE(false)) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), false, true, true)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false), true, false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))) | (workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    break;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.78)), bool(false)))))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.78)), bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -16956)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0)) * mat2(1.0))).y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(4), int(4))), ~ (_GLF_IDENTITY(~ ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(~ ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(4), int(4)))), 0 ^ (~ ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(4), int(4))))))) ^ 0))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-7654.7538)))))))))))
                barrier();
               return;
              }
             barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))) && true)))
                continue;
              }
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), 0 | (0))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true))
        break;
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < 1), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < 1), true, false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), int(ivec3(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), 0, 0)))) | 0) < 1), true, false)))) || false)) || false); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter), (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter)) | 0))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false) || false)))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2))))))) - 0u)) == 0)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), (injectionSwitch.x > injectionSwitch.y)), false)))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))), true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))), true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              return;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(567.408)), bvec2(true, false))).x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(567.408)), bvec2(true, false))).x > injectionSwitch.y)))))), ! (! ((! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(567.408)), bvec2(true, false))).x > injectionSwitch.y)))))))))))))))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false))))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(87348, 55004))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      break;
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), 0u ^ _GLF_IDENTITY((next_virtual_gid), min(_GLF_IDENTITY((next_virtual_gid), (true ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), (next_virtual_gid))))], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55516) : clamp(4, 4, 4)))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), ((4)) >> 0))) / 1));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(false, false, false, false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), false, true)), true && (bool(bvec3(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), false, true)))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(5), int(5))) | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                return;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           continue;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         break;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), abs(0.0), 0.0, 1.0, 0.0, 0.0))), injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(int(int(_GLF_ONE(1.0, injectionSwitch.y))), 1, _GLF_IDENTITY(0, (0) * 1))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-3148) : int(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (false)))) && true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || false, ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), length(sin(vec4(0.0, 0.0, 0.0, 0.0)))))).y))))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, _GLF_IDENTITY(min(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), max(_GLF_IDENTITY(min(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), (min(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)) | (min(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))), min(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))))) >> 0))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))).x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0), ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), (false ? _GLF_FUZZED(629.426) : _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), clamp(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)))))) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(315.957, (_GLF_IDENTITY(315.957, float(mat3x4(315.957, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / sqrt(1.0)))), bool(false))))) | 0)) / 1) : _GLF_FUZZED(-17402), (true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))).x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0), ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), (false ? _GLF_FUZZED(629.426) : _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), clamp(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)))))) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(315.957, (_GLF_IDENTITY(315.957, float(mat3x4(315.957, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / sqrt(1.0)))), bool(false))))) | 0)) / 1) : _GLF_FUZZED(-17402)) ^ 0)), ((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - tan(0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0, clamp((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0, _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0, clamp((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0, (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0, (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))) | 0), ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0)) / 1) : _GLF_FUZZED(_GLF_IDENTITY(-17402, (-17402) << 0)))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0), ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, float(mat3x2(1.0, sin(0.0), length(0.0), 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) * 1.0)) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0)) / 1) : _GLF_FUZZED(-17402)), ((true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (false ? _GLF_FUZZED(tan(pow(28.71, 7.4))) : float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0)), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4340.4700))), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))))) | 0), ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))), min(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))), max(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))))))))) | 0)) / 1) : _GLF_IDENTITY(_GLF_FUZZED(-17402), _GLF_IDENTITY(int(ivec3(_GLF_FUZZED(-17402), 1, 0)), min(int(ivec3(_GLF_FUZZED(-17402), 1, 0)), int(ivec3(_GLF_FUZZED(-17402), 1, 0))))))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(-1.4) : (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(abs(0.0)), 0.0, 0.0))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(-1.4) : (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(abs(0.0)), 0.0, 0.0))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false)))))), 1.0 * (float(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(-1.4) : (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(float(_GLF_FUZZED(-29.46)), float(_GLF_IDENTITY((float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-510.872)))), bool(true))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), length(abs(0.0)), 0.0, 0.0))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false)))))))))) | 0), ((int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))) ? _GLF_IDENTITY(_GLF_FUZZED(-96.50), (_GLF_FUZZED(_GLF_IDENTITY(-96.50, max(-96.50, -96.50)))) * 1.0) : 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (false ? _GLF_FUZZED(72.99) : _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7341.6542), _GLF_FUZZED(-8.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.3) : 0.0)), 0.0, 0.0, 0.0))))))) / 1.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(246.078, -7.1)) : injectionSwitch.x))), 0.0), (vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(246.078, -7.1)) : injectionSwitch.x))), 0.0)) + vec2(0.0, 0.0))), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0, mix(float((_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0), float(_GLF_FUZZED(-5219.1549)), bool(false)))) : _GLF_FUZZED(263.185))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, tan(0.0) + ((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))) / 1.0)) - 0.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.9) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0))))))), max((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, tan(0.0) + ((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))) / 1.0)) - 0.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.9) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, tan(0.0) + ((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))) / 1.0)) - 0.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.9) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0))))))), ((_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, tan(0.0) + ((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))) / 1.0)) - 0.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.9) : 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)))))))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), sin(0.0), sqrt(1.0), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), sin(0.0), sqrt(1.0), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), sin(0.0), sqrt(1.0), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), sin(0.0), sqrt(1.0), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), sin(0.0), sqrt(1.0), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), sin(0.0), sqrt(1.0), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.3)), float(1.0), bool(true))), sin(0.0), sqrt(1.0), 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0, 1.0, 1.0), mat2x3(mat3(mat2x3(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) * cos(0.0)))), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(14.73))), injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(mat3(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0)))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(10.02)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, min(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0, (true ? (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0 : _GLF_FUZZED(-8.3))), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / _GLF_IDENTITY(1.0, (1.0) / sqrt(sqrt(1.0))))), round(length(normalize(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-242.658)), bool(false))), 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(1.0)))))), 1.0))))), min(float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0), mat2x3(mat3(mat2x3(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8086.5724)), bool(false))))), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((3.7 + -597.203)), _GLF_FUZZED(-20.80)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0) + (_GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4370.6982)), bool(false))))) / _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), abs(1.0), 1.0)))))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), clamp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0))))))) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 1.0))))), float(_GLF_IDENTITY(mat2x3(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-89.33)), bool(false))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), (mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-89.33)), bool(false))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)), (float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), mix(vec2(_GLF_FUZZED(-4.3), _GLF_FUZZED(float(183727u))), vec2(_GLF_IDENTITY((vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0], mix(float(_GLF_FUZZED(-196.587)), float((vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))[0]), bool(true))), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))[1]), bvec2(true, true))))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-96.50, (_GLF_IDENTITY(-96.50, clamp(-96.50, -96.50, -96.50))) / 1.0)) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), (_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - sin(vec2(0.0, 0.0))))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0), mat2x3(mat3(mat2x3(float(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6199.2969) : _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5682.3646)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-96.50) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-811.174) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(114.471)), float(injectionSwitch.x), bool(true))))) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), 0.0))) / 1.0), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-811.174) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(114.471)), float(injectionSwitch.x), bool(true))))) / 1.0))), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(263.185)) : _GLF_FUZZED(4.4)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0))))))))) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(315.957)), bool(false))))) | 0)) / 1) : _GLF_FUZZED(-17402)), (_GLF_IDENTITY((true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-12.49, 45.57)))).x), 0.0), vec2(mat3x2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-149.093)), bool(false)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-149.093)), bool(false)))), clamp(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-149.093)), bool(false)))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-149.093)), bool(false)))), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-149.093)), bool(false)))))) : _GLF_FUZZED(3.5))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0), ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1]), clamp(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])))), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) + 0.0), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(vec3(4.7, -4483.8534, 3311.2485), vec3(-7509.0650, -8375.5831, -0.4))) : 0.0)), 0.0))), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-30.39))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(935.998))))), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | _GLF_IDENTITY(0, 0 | (0)))) / 1) : _GLF_FUZZED(-17402)), int(ivec2(_GLF_IDENTITY((true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(mat3x2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), 1.0, 0.0, 1.0, cos(0.0)))), (_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(mat3x2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), 1.0, 0.0, 1.0, cos(0.0))))) * cos(vec2(0.0, 0.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-149.093)), bool(false)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)))), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0), ((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), 0.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false)), clamp(mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false)), (mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))) / 1.0), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))))) | _GLF_IDENTITY(0, 0 | (0)))) / 1) : _GLF_FUZZED(-17402)), ((true ? _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.8) : _GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(mat3x2(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), 1.0, 0.0, 1.0, cos(0.0))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))), float(_GLF_FUZZED(-149.093)), bool(false)))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)))), injectionSwitch.x), 0.0))) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) * mat2(1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | 0), ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | _GLF_IDENTITY(0, 0 | (0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), mix(float(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-7750.3876)), float(injectionSwitch[0]), bool(true))))), mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6331.5581)), bool(false))), injectionSwitch[1])), 0.0, 0.0, 1.0, 1.0))).x), 0.0)), (_GLF_IDENTITY(float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, min((0.0) + 0.0, (0.0) + 0.0))), injectionSwitch.x), 0.0)), (true ? float(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, min((0.0) + 0.0, (0.0) + 0.0))), injectionSwitch.x), 0.0)) : _GLF_FUZZED(6958.4993)))) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-8.0, 6927.9223, -0.8, 6452.0114).q)), float(0.0), bool(true)))), transpose(transpose(mat4x2(_GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 0.0)), (float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) / 1.0)), float(_GLF_FUZZED(315.957)), bool(false))))) | _GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0)))))) / 1) : _GLF_FUZZED(-17402))) | 0), 0)))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(96665, (96665) / 1)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1714.8399)), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(vec3(vec4(3.3, 99.78, 72.94, -8.2)).b)), bool(false))))), true, false, false)), bool(bvec4(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1714.8399)), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(vec3(vec4(3.3, 99.78, 72.94, -8.2)).b)), bool(false))))), true, false, false)), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))))))) && true) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))), (_GLF_IDENTITY(false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))), ! (! (false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), (int(2)) | (int(_GLF_IDENTITY(2, (2) ^ 0)))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), min(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 ^ 1) | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
                return;
               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec2(_injected_loop_counter < 1, false))), true, false, false)))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-69267) : _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) < 1)))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))))), false || (false))))
                    {
                    }
                   else
                    {
                     return;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 4, 64, 4);
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
             continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
              barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), false), false), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(bool(bvec2((bool(bvec2(_GLF_DEAD(false), false))), true)), (_GLF_IDENTITY(bool(bvec2((bool(bvec2(_GLF_DEAD(false), false))), true)), false || (bool(bvec2((bool(bvec2(_GLF_DEAD(false), false))), true))))) && true))))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               return;
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && true))) || false))))))))
            {
             barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            }
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) & 1, 1 * (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (~ ((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                continue;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.6), _GLF_FUZZED(-496.314)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                continue;
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 do
                  {
                   return;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bool(true))))), bool(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bool(true))))))))))))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          break;
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 subgroupBarrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 0, (false ? _GLF_FUZZED(-56023) : _GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, max(1 ^ 0, 1 ^ 0))) | (1 ^ 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) >> 0)); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
      break;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2((false) || false, true))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, bool(bool(true))), true, false))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 1.0))), max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-97.46) : 0.0)), cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0)), _GLF_IDENTITY(mat4x2(mat4(mat4x2(injectionSwitch.x, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(507.643)), bool(false))), cos(0.0))))), _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, log(exp(0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(450.465)), float(0.0), bool(true)))) * 1.0), 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), (false ? _GLF_FUZZED(mat4x2(-99.20, -3.7, -511.696, -9491.7424, -1510.6454, -0.0, 269.935, 96.70)) : mat4x2(_GLF_IDENTITY(mat4(mat4x2(injectionSwitch.x, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, _GLF_IDENTITY(cos(0.0), float(mat2x3(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, 1.0, length(0.0), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-304.311)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0)) * mat4(1.0)), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0))))))), cos(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8601.1980))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(5173.8473), clamp(_GLF_IDENTITY(_GLF_FUZZED(5173.8473), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(-2561.3174) : _GLF_FUZZED(5173.8473))), _GLF_FUZZED(5173.8473), _GLF_FUZZED(_GLF_IDENTITY(5173.8473, max(5173.8473, 5173.8473)))))), float(0.0), bool(true))), 0.0, 0.0, 1.0))) / 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0))), transpose(transpose(mat4(mat4x2(injectionSwitch.x, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, _GLF_IDENTITY(cos(0.0), float(mat2x3(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, 1.0, length(0.0), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-304.311)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0), (vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0)) * mat4(1.0)), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), float(_GLF_FUZZED(-69.35)), bool(false)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0))))))), cos(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8601.1980))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(5173.8473), clamp(_GLF_IDENTITY(_GLF_FUZZED(5173.8473), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) ? _GLF_FUZZED(-2561.3174) : _GLF_FUZZED(5173.8473))), _GLF_FUZZED(5173.8473), _GLF_FUZZED(_GLF_IDENTITY(5173.8473, max(5173.8473, 5173.8473)))))), float(0.0), bool(true))), 0.0, 0.0, 1.0))) / 1.0), 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0)))))))))))) < injectionSwitch.y)))) && true)))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 ^ 1)))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) | 0u), (virtual_gid) - 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
