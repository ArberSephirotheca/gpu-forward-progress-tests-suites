#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (0.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))), true && ((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.67)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), false, false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))), true && ((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.67)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.67)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)).y) || false))), false, false))))), false || ((! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.67)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.67)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), injectionSwitch)).y) || false))), false, false))))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), true && ((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), false || (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.67)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), false, false)))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)))))), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)))))), false), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec2(71.11, -1.4), (vec2(71.11, -1.4)) * mat2(1.0)).x)), bvec2(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec2(71.11, -1.4), (vec2(71.11, -1.4)) * mat2(1.0)).x)), bvec2(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y : _GLF_FUZZED(6578.5679))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-901.496)), (float(_GLF_FUZZED(-901.496))) + 0.0), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.6), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(14.80) : injectionSwitch.x)))), injectionSwitch.x))) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(-8.9) : _GLF_FUZZED(-2.6)), float(mat4x3((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(14.80) : injectionSwitch.x)))), injectionSwitch.x))) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(-8.9) : _GLF_FUZZED(-2.6)), determinant(mat4(1.0, 0.0, 0.0, cos(0.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0)), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(71.11, -1.4).x)), bvec2(true, false))).y), bool(true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))))) : _GLF_FUZZED(7.9))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-456.542)), float(injectionSwitch[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-486.745, 1.0 * (-486.745)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-486.745, 1.0 * (-486.745)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-486.745, 1.0 * (-486.745)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0)), (false ? _GLF_FUZZED(-35.89) : float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-486.745, 1.0 * (-486.745)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), _GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), false)))))))))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), round(length(normalize(1.0))), _GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))))))), injectionSwitch, injectionSwitch)).y, determinant(mat3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), (false ? _GLF_FUZZED(26.75) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), _GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5879.2003), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-756.614)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0 + (determinant(mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-486.745)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), clamp(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0)))), round(length(normalize(1.0))), _GLF_IDENTITY(exp(0.0), float(mat2(exp(0.0), 1.0, 1.0, 1.0))), 1.0, 1.0))))) : _GLF_FUZZED(7.9)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.0, 6.2)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false)))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat2(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) > injectionSwitch.y)))) && true), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! ((! (_GLF_DEAD(false))) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! ((! (_GLF_DEAD(false))) || false))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! ((! (_GLF_DEAD(false))) || false))))), true, true, false)))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-48.22, -134.846)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))))), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-48.22, -134.846)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))))), mat2(1.0) * (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-48.22, -134.846)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))))))))).x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))) || false))))))))), _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, bool(_GLF_IDENTITY(bvec2((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, true), bvec2(bvec2(bvec2((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))) || false))))))))), _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, bool(_GLF_IDENTITY(bvec2((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, true), bvec2(bvec2(bvec2((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))) || false))))))))), _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, bool(_GLF_IDENTITY(bvec2((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, true), bvec2(bvec2(bvec2((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y)))) && true, true)))))))) && true), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch.x) / 1.0, clamp((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0) : _GLF_FUZZED(mat4(0.2, 57.56, -829.064, -1.5, -187.106, -80.26, 4.1, -1802.0067, 9.4, 2.2, -3.2, -0.8, 3328.7153, -66.10, 2.4, -7.3)))))), mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(9069.5777)), bool(false))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-77.50))) / 1.0), float(_GLF_FUZZED(9069.5777)), bool(false))))), max((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-77.50))) / 1.0), float(_GLF_FUZZED(9069.5777)), bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-77.50))) / 1.0), float(_GLF_FUZZED(9069.5777)), bool(false)))))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) || false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), true, false), false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), false)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))), true)))))), true), false))))))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u) + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id)))), max(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) / 1u)))))) << 0u) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), uint(uvec4(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), 0u, 0u, 0u))), uint(uvec3(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), 1u, 1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u))))), clamp(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % subgroup_size), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_size))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), max(max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))))) % subgroup_size))), min(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (1u ^ 0u) * ((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) % subgroup_size))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), uint(uvec4(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), 0u, 0u, 0u))), uint(uvec3(_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), clamp(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), _GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), (_GLF_IDENTITY(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), clamp(clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base)))) / 1u), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base))), 1u, 1u)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u))))), 0u ^ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u))))))), clamp(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) ^ ((0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u ^ (3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 0u, 1u)))))))) + 1) % subgroup_size), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), max(max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))))), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), max(max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (subgroup_local_id + 1) ^ 0u)), max(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u))))))) - 0u)) % subgroup_size))), min((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (1u ^ 0u) * ((_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) % subgroup_size))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u) : _GLF_FUZZED(subgroup_id))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 1u, 1u))), (subgroup_local_id + 1))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, 2)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, uint(uvec4(subgroup_local_id % 2, 0u, (_GLF_IDENTITY(0u & 59819u, (0u & 59819u) << 0u)), 0u)))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.1) : 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-3372.0708)), bool(false)))) > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(roundEven(2.5)), min(_GLF_FUZZED(roundEven(2.5)), _GLF_FUZZED(roundEven(2.5)))) : injectionSwitch.y), float(_GLF_IDENTITY(mat3x2((false ? _GLF_IDENTITY(_GLF_FUZZED(roundEven(2.5)), min(_GLF_FUZZED(roundEven(2.5)), _GLF_FUZZED(roundEven(2.5)))) : injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, round(length(normalize(1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x2(691.469, -2532.2297, -44.33, -1141.6082, -738.999, -9.4)) : mat3x2((false ? _GLF_IDENTITY(_GLF_FUZZED(roundEven(2.5)), min(_GLF_FUZZED(roundEven(2.5)), _GLF_FUZZED(roundEven(2.5)))) : injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, round(length(normalize(1.0)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(95861)))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(95861)))), (true ? (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? ~ (4) : _GLF_FUZZED(95861)))) : _GLF_FUZZED(-26526)))))), int(ivec2(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(95861)))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(95861)))), (true ? (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? ~ (4) : _GLF_FUZZED(95861)))) : _GLF_FUZZED(-26526)))))), 1))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-12.09 - -1.7))), bool(false))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.7))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(next_virtual_gid, (_GLF_IDENTITY(0u ^ 0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u : _GLF_FUZZED((num_workgroup | workgroup_base))))), 1u, 1u), (uvec4(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 0u, (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ 0u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))), min(_GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))), _GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base)))))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u ^ 0u, (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ 0u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))), _GLF_IDENTITY(min(_GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))), _GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base)))), clamp(min(_GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))), _GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base)))), min(_GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))), _GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base)))), min(_GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))), _GLF_IDENTITY((num_workgroup | workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup | workgroup_base), max((num_workgroup | workgroup_base), _GLF_IDENTITY((num_workgroup | workgroup_base), (true ? (num_workgroup | workgroup_base) : _GLF_FUZZED(26600u))))), 1u * ((num_workgroup | workgroup_base))), (_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u) | workgroup_base))))))))))))), 1u, 1u)) | uvec4(0u, 0u, 0u, 0u))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec3(_GLF_IDENTITY((1), 0 | ((1))), 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) >> 0), 1))))) >> (0 & -90697))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.33, 734.986)) : injectionSwitch)), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), length(0.0), 1.0, tan(0.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x)))), min(float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x)))), float(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-62.27)), float(injectionSwitch.y), bool(true))))), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(810.056)), bool(false)))), float(_GLF_FUZZED(-5514.2989)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-607.985) : injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, true))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))) && true)), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), true)))))), true, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-5.6, 0.5, -6.7).r)), bool(false))) > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)), (bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) || false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, false)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, false)))), true)))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, false)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, false)))), true)))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (false || (_GLF_DEAD(false))))), true, true, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(41174) : 64))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(41174) : 64))), ((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(41174) : 64)))) | 0) : _GLF_FUZZED(-20351))) ^ 0), (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, clamp(64, 64, 64))))) >> _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), ((0 >> _GLF_IDENTITY(int(8), int(8)))) / 1)), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, 0 + (1)), 1), min(ivec3(4, 1, 1), ivec3(4, _GLF_IDENTITY(1, min(1, 1)), 1))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))) || false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-840.985)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && true))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) && true))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(-5666.9456, 96.95)))).y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(false))) || false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-3.8, 221.408)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-3.8, 221.408)) : injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat3x4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0)))).y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 1.0, 0.0, 1.0, 0.0), mat3(1.0) * (mat2x3((injectionSwitch), 1.0, 0.0, 1.0, 0.0)))))), determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(9504.5957))), 1.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), float(float(cos(0.0))))), float(_GLF_FUZZED(vec2(-120.542, -3.0).g)), bool(false))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0))), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-35.55)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false)))))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false)))))))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false))), (_GLF_IDENTITY(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false))), (bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false)))) || false)) && true))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false))), (_GLF_IDENTITY(bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false))), (bool(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false)))) || false)) && true))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(9.5, 0.5, 89.01, 0.9, -2898.0315, 2.7)) : mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, 1.0, 0.0, 0.0, 1.0, 0.0)))))))) > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
