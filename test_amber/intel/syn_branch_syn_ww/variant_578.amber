#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true, false))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), uint(uvec4(gl_NumWorkGroups.x, 0u, 0u, 0u)))) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(40190u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.5))), injectionSwitch.x)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)), (uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))) / (1u & 1u))))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) + 0u)) ^ 0u), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), 0u ^ (_GLF_FUZZED(40190u))), _GLF_FUZZED(40190u))))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(_GLF_IDENTITY(40190u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(40190u, (_GLF_IDENTITY(40190u, (40190u) | (40190u))) << 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), ~ (~ (uint(uvec4(_GLF_IDENTITY(40190u, (_GLF_IDENTITY(40190u, (40190u) | (40190u))) << 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (1u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(40190u), (_GLF_IDENTITY(_GLF_FUZZED(40190u), clamp(_GLF_FUZZED(40190u), _GLF_IDENTITY(_GLF_FUZZED(40190u), ~ (~ (_GLF_FUZZED(40190u)))), _GLF_FUZZED(40190u)))) ^ 0u), 0u | (_GLF_FUZZED(40190u))), uint(uvec4(_GLF_FUZZED(40190u), 0u, 0u, 1u))))) | 0u)))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true))), true)), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false, false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.4)), max(_GLF_IDENTITY(float(_GLF_FUZZED(3.4)), min(_GLF_IDENTITY(float(_GLF_FUZZED(3.4)), (float(_GLF_FUZZED(3.4))) - 0.0), float(_GLF_FUZZED(3.4)))), float(_GLF_FUZZED(3.4)))), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1458.2138), _GLF_FUZZED(-86.12)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(3.4)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1458.2138), _GLF_FUZZED(-86.12)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(3.4)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1458.2138), _GLF_FUZZED(-86.12)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(3.4)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1458.2138), _GLF_FUZZED(_GLF_IDENTITY(-86.12, clamp(-86.12, -86.12, -86.12)))), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)))))) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, cos(tan(0.0)), 1.0, 0.0)))))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, true, true))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(981.801), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(0.0, (0.0) - 0.0) + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED((7.0 + -7.4)), _GLF_FUZZED(-6415.4468)), bvec2(false, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y : _GLF_FUZZED(-88.95)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(53.17), _GLF_FUZZED(_GLF_IDENTITY(427.141, max(427.141, _GLF_IDENTITY(427.141, min(427.141, _GLF_IDENTITY(427.141, max(427.141, 427.141)))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)) || false)))) && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false))))) || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(53.17), _GLF_FUZZED(_GLF_IDENTITY(427.141, max(427.141, _GLF_IDENTITY(_GLF_IDENTITY(427.141, mix(float(427.141), float(_GLF_FUZZED(-60.11)), bool(false))), min(427.141, _GLF_IDENTITY(427.141, max(427.141, 427.141)))))))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4002.5911)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))).y)), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) && true) || (false)), (injectionSwitch.x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))))), gl_WorkGroupSize))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), ~ (~ (uvec3(3u))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), bool(bvec3(false, false, true))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))))), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-8559.1056 * 40.75))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(-29.04)), float(injectionSwitch.y), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))))), true, false)))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < injectionSwitch.y)) && (false))) || false)), true)))), true, true, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1296.8484), _GLF_FUZZED(-24.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(35.45), ((injectionSwitch))[1]), bvec2(false, true))) / vec2(1.0, 1.0)))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), true, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-8559.1056 * 40.75))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(-29.04)), float(injectionSwitch.y), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))))), true, false)))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < injectionSwitch.y)) && (false))) || false)), true)))), true, true, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1296.8484), _GLF_FUZZED(-24.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(35.45), ((injectionSwitch))[1]), bvec2(false, true))) / vec2(1.0, 1.0)))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), true, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec4(bvec2((! (true)), true), false, true)))), false || (bool(_GLF_IDENTITY(bvec2((! (true)), true), bvec2(bvec4(bvec2((! (true)), true), false, true)))))))) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-8559.1056 * 40.75))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(-29.04)), float(injectionSwitch.y), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))))), true, false)))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), true, false, false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x < injectionSwitch.y)) && (false))) || false)), true)))), true, true, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), float(mat3(injectionSwitch.y, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1296.8484), _GLF_FUZZED(-24.89)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(35.45), ((injectionSwitch))[1]), bvec2(false, true))) / vec2(1.0, 1.0)))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], min(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(35.45), ((injectionSwitch))[1]), bvec2(false, true))) / vec2(1.0, 1.0)))).y), true && ((injectionSwitch.x > injectionSwitch.y))))))))) || false)))), _GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED((-761.013))), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))).y), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), true, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))), true, false))))))))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))) && true), true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2818.8481), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.3)), bvec2(true, false))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec2(bvec2(false, false))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec2(bvec2(false, false)))))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.y) - 0.0), 0.0))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (injectionSwitch.y) - 0.0), 0.0)))))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)))))), false, true, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0)))))), bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(907.850)) : injectionSwitch.y))) - 0.0), 0.0)))))), false, true, true))))) || false, ! (! ((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4280.9439), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, false))).y, (injectionSwitch.y) - 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0)))))), bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(907.850)) : injectionSwitch.y))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(907.850)) : injectionSwitch.y))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(907.850)) : injectionSwitch.y))) - 0.0) : _GLF_FUZZED(-5696.1462))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sqrt(907.850)) : injectionSwitch.y))) - 0.0))), 0.0)))))), false, true, true))))) || false)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, max(3u, 3u)), 3u, 3u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))))), 0u | _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), clamp(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))))))))), 1u * (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, clamp(3u, _GLF_IDENTITY(3u, (3u) * 1u), 3u))))) * ((((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), max(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), max(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, 0u ^ (3u)), 3u, 3u))))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), max(~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))), uint(3u))), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))))))))))) >> (0u | 0u)))), _GLF_IDENTITY(((uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))))))), 0u + (((uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) << (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(3u, 3u, 3u)))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))))))))) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u ^ (3u))), uint(3u)))), min(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) / 1u)), (_GLF_IDENTITY(uint(3u), max(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), uint(3u)))) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), uint(uvec2(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 1u)))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, uint(uint(3u)))), _GLF_IDENTITY(uint(3u), (0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, 0u | (_GLF_IDENTITY(2u, 0u + (2u))))))))), ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, 0u | (_GLF_IDENTITY(2u, 0u + (2u)))))))))) | 0u), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(workgroup_size) : uint(2u))), uint(2u))), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))) | 0u)) - 0u)) ^ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(3u)))))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) + (subgroup_local_id + 1))), uint(uvec3((subgroup_local_id + 1), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) + 0u))), 0u))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(3u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u))) << 0u))), uint(_GLF_IDENTITY(uint(3u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u))))), (min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u))) << 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u))) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u))) << 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u))) << 0u))))), uint(_GLF_IDENTITY(uint(3u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)))))) - 0u)))), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)))))) + subgroup_base : _GLF_FUZZED(subgroup_id))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, uint(uvec2(3u, 1u)))), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u + (3u)))))), ~ (~ (_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))))))))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), _GLF_IDENTITY(((false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) | ((false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMin(subgroup_size, num_workgroup)) : ((false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) | ((false ? _GLF_FUZZED((subgroup_local_id)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))))) + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-7776, (-7776) ^ 0)) : _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7735, (7735) << 0)), (_GLF_FUZZED(_GLF_IDENTITY(7735, (7735) << 0))) | (_GLF_FUZZED(_GLF_IDENTITY(7735, (7735) << 0)))) : 1))))) % subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, uint(uint(3u)))), _GLF_IDENTITY(uint(3u), (0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, uint(uvec3(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)), 0u, (0u ^ 1u)))), 2u)))))), 0u | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u | (2u))), min(uint(2u), uint(2u))))))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), clamp(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), 0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, uint(uint(2u))), 2u))), min(uint(2u), uint(2u)))), 0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))), 0u ^ ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), 0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(min(uint(2u), uint(2u)), clamp(min(uint(2u), uint(2u)), min(uint(2u), uint(2u)), _GLF_IDENTITY(min(uint(2u), uint(2u)), min(min(uint(2u), uint(2u)), min(uint(2u), uint(2u))))))))), ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), min(uint(2u), uint(2u)))))) << 0u)) >> 0u)), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), 0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(min(uint(2u), uint(2u)), clamp(min(uint(2u), uint(2u)), min(uint(2u), uint(2u)), _GLF_IDENTITY(min(uint(2u), uint(2u)), min(min(uint(2u), uint(2u)), min(uint(2u), uint(2u))))))))), ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), min(uint(2u), uint(2u)))))) << 0u)) >> 0u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), 0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(min(uint(2u), uint(2u)), clamp(min(uint(2u), uint(2u)), min(uint(2u), uint(2u)), _GLF_IDENTITY(min(uint(2u), uint(2u)), min(min(uint(2u), uint(2u)), min(uint(2u), uint(2u))))))))), ((0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), min(uint(2u), uint(2u)))))) << 0u)) >> 0u))))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), clamp(0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), 0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uint(2u))), (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uint(2u))), (_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(uint(2u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(2u, uint(uint(2u)))))) >> 0u)) / 1u), 2u), _GLF_IDENTITY(min(min(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), uint(uint(2u))), 2u), min(_GLF_IDENTITY(2u, uint(uint(2u))), 2u)), (true ? min(min(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), uint(uint(2u))), 2u), min(_GLF_IDENTITY(2u, uint(uint(2u))), 2u)) : _GLF_FUZZED(56342u)))))), min(uint(2u), uint(2u)))), 0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))))))))) - 0u)) ^ (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(3u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size))), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), 0 ^ ((1))))) ^ 0)) % subgroup_size)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(3u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * (uint(3u)))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)))), uint(_GLF_IDENTITY(uint(3u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)))))))), uint(3u)), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(3u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * (uint(3u)))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-944.510)))) * (uint(3u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(3u)))))))), uint(3u))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (_GLF_IDENTITY(4, ~ (~ (4))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 0, 0), max(ivec3(2, 0, 0), ivec3(2, 0, 0)))))), (subgroup_local_id % 2)))))) == 0, ! (! (_GLF_IDENTITY((subgroup_local_id % 2), ~ (~ (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))))) == 0))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec4(false, true, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), false, false)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, false || (true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false))))))) && true))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, abs(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, abs(0.0), 0.0)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), vec2(_GLF_FUZZED(float((vec2(6.0, 6.7) != vec2(62.87, 766.938)))), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), vec2(_GLF_FUZZED(float((vec2(6.0, 6.7) != vec2(62.87, 766.938)))), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))), true)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.4, 9.3)))).y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), false || (bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false, true)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)))) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4), ~ (~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4)))), (min(_GLF_IDENTITY(4, (4) ^ 0), 4)) << 0)), 4, 4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4), ~ (~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4)))), (min(_GLF_IDENTITY(4, (4) ^ 0), 4)) << 0)), 4, 4)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4), ~ (~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4)))), (min(_GLF_IDENTITY(4, (4) ^ 0), 4)) << 0)), 4, 4)), 0, 0), max(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4), ~ (~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4)))), (min(_GLF_IDENTITY(4, (4) ^ 0), 4)) << 0)), 4, 4)), 0, 0), ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4), ~ (~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(85287))))) ^ 0), 4)))), (min(_GLF_IDENTITY(4, (4) ^ 0), 4)) << 0)), 4, 4)), 0, 0))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), min(int(64), int(64)))))) - 0), 64)), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false, true))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))) || (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
