#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bool((false))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), bool(bool((false))))))), bool(bvec4(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), bool(bool((false))))))), ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), bool(bool((false)))))))) || false), true, true, true))))) || false))), ! (! ((false)))) || false)))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) * uvec3(1u, 1u, 1u))))) | (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))) * uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))))) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))))) | (gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))), (false ? _GLF_FUZZED(uvec3(175274u, 26196u, 127290u)) : (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))))) | (gl_NumWorkGroups)).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(48011u, 121885u, 10852u)))), (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), min((gl_NumWorkGroups) | (gl_NumWorkGroups), (gl_NumWorkGroups) | (gl_NumWorkGroups)))).x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((81.66)), _GLF_FUZZED(-93.46)), bvec2(false, false)))[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(86.85), _GLF_FUZZED(-4.9)), bvec2(false, _GLF_IDENTITY(false, false || (false))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-73.82)), float(injectionSwitch.y), bool(true))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.9, 3188.0982)))), injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-39.51) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-73.82)), float(injectionSwitch.y), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-73.82)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(-73.82)), float(injectionSwitch.y), bool(true))) / 1.0)) + 0.0)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.y), bool(true))))))) || _GLF_IDENTITY(false, (false) || false)))), false, false)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false))), false), true))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0))[0], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(6491.7162), _GLF_FUZZED(4621.3122)), bvec2(false, false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0))[0], ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))[1]), vec2(_GLF_FUZZED(6491.7162), _GLF_FUZZED(4621.3122)), bvec2(false, false)))))).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-97461))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-97461))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-97461))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-97461))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(sqrt(0.0)), 0.0, 0.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) * vec2(1.0, 1.0)))) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), _GLF_IDENTITY(bool(false), true && (bool(false))))), mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), float(_GLF_FUZZED(7.3)), bool(false))), exp(0.0), 1.0, 0.0), _GLF_IDENTITY(clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.9)), float(1.0), bool(true))), mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0)), vec4(mat4x2(clamp(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.9)), float(1.0), bool(true))), mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(true, bool(bool(true))) ? float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), clamp(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.2)), float(0.0), bool(true)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(450.306) : _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, abs(0.0)))))), float(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), _GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) : _GLF_FUZZED(72.90)))), 1.0), (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), mix(_GLF_IDENTITY(float(1.0), min(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0))), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), clamp(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(_GLF_IDENTITY(false, ! (! (false)))))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), mix(float(float(vec2(1.0, 0.0))), float(_GLF_FUZZED(-15.22)), bool(false))))), _GLF_IDENTITY(float(_GLF_FUZZED(330.322)), 1.0 * (float(_GLF_FUZZED(330.322)))), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(1.5)))), 1.0, 0.0)))), (true ? float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false)), (mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))) + 0.0)), exp(0.0), 1.0, 0.0), _GLF_IDENTITY(clamp(vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(4.8) : float(1.0))), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))) / 1.0)), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0)), mix(vec4((clamp(vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(4.8) : float(1.0))), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))) / 1.0)), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0)))[0], (clamp(vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(4.8) : float(1.0))), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))) / 1.0)), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0)))[1], _GLF_FUZZED(-2.7), _GLF_FUZZED(-64.71)), vec4(_GLF_FUZZED((- -15.12)), _GLF_FUZZED(-264.391), (clamp(vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(4.8) : float(1.0))), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))) / 1.0)), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0)))[2], (clamp(vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(4.8) : float(1.0))), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))) / 1.0)), float(_GLF_FUZZED(330.322)), bool(false))), exp(0.0), 1.0, 0.0)))[3]), bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) : _GLF_FUZZED(72.90)))), 1.0)) * mat2(1.0))).y)) && true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(1.0), 1.0))).x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false))))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.y = num_workgroup, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.y = num_workgroup), (0u | 0u) | (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.y = num_workgroup), 0u ^ ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.y = num_workgroup))))), ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.y = num_workgroup)) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) << (1u ^ 1u));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.y), bool(true)))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))))), false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec2(! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false)), true && (bool(_GLF_IDENTITY(bvec2(! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (! ((false))) && true)), ! (! ((_GLF_IDENTITY(! ((false)), (! ((false))) && true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))))), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(99686u), 0u ^ (_GLF_FUZZED(_GLF_IDENTITY(99686u, min(99686u, _GLF_IDENTITY(99686u, (99686u) ^ 0u)))))) : workgroup_id), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(99686u), 0u ^ (_GLF_FUZZED(99686u))) : workgroup_id) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(99686u) : workgroup_id)))), (workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(99686u) : workgroup_id, (true ? false ? _GLF_FUZZED(99686u) : workgroup_id : _GLF_FUZZED(((workgroup_size --) & subgroup_id))))))))) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), injectionSwitch.x)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w) * 1u), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w)))))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z = _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)).z, (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z, min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (false ? _GLF_FUZZED(uvec4(81537u, 188453u, 46348u, 37438u)) : GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size[1], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size[2], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size[3])))), ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), uvec4(0u, 0u, 0u, 0u) ^ (~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size))))).z, workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z))) | (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z, _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z) * 1u, (false ? _GLF_FUZZED((uvec3(99815u, 85120u, 6575u)[0] * subgroup_id)) : _GLF_IDENTITY((workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z) * 1u, ~ (~ ((workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z) * 1u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))).z + (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)) >> 0u) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (true ? GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(31075u, 192157u)[0]) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))).z + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), min(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1))) ^ 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)))) >> 0u) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w), 0u + (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) ^ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))) | (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))))).z + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u), _GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_local_id)) + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), 1u, 0u))))), uint(uvec3(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), 1u, 0u))))), 1u, 0u))), uint(uvec3((_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1)), uint(uvec2(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1)), 1u)))), 0u, (0u & 157483u))))) >> 0u) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w))) / 1u)))))), ~ (~ (false ? _GLF_FUZZED(uvec2(31075u, 192157u)[0]) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))).z + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), min(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1))) ^ 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + 1)))) >> 0u) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w), 0u + (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size) ^ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))) | (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))))).z + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u), _GLF_IDENTITY(0u, ~ (~ (0u))) | (subgroup_local_id)) + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), 1u, 0u))))), uint(uvec3(((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0)))) - 0)), 1u, 0u))))), 1u, 0u))), uint(uvec3((_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1)), uint(uvec2(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1)), 1u)))), 0u, (0u & 157483u))))) >> 0u) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w))) / 1u)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x = next_virtual_gid;
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (1) << 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-440.178), _GLF_FUZZED(225.361)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)) == 0)
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), true && (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))))) && true))) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (false), true), false))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.5), _GLF_FUZZED(8863.4502)), bvec2(false, false))), 1.0, 1.0, 0.0, sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.5), _GLF_FUZZED(8863.4502)), bvec2(false, false))), 1.0, 1.0, 0.0, sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))).x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) >> 0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0), min(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((2), max((2), (2))) >> 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 1 * (0))))))) | ((2) >> 0)), (2) >> 0), clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0), min(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((2), max((2), (2))) >> 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 1 * (0))))))) | ((2) >> 0)), (2) >> 0), clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0), min(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((2), max((2), (2))) >> 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 1 * (0))))))) | ((2) >> 0)), (2) >> 0), clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0), min(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((2), max((2), (2))) >> 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 1 * (0))))))) | ((2) >> 0)), (2) >> 0), clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0), min(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((2), max((2), (2))) >> 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 1 * (0))))))) | ((2) >> 0)), (2) >> 0), clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0), min(clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((2), max((2), (2))) >> 0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 1 * (0))))))) | ((2) >> 0)), (2) >> 0), clamp(_GLF_IDENTITY((2) >> 0, ((2) >> 0) | ((2) >> 0)), _GLF_IDENTITY((2) >> 0, 0 | ((2) >> 0)), (2) >> 0)))))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
