#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true)), _GLF_IDENTITY(false, false || (false)) || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true), false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4147.1690) : injectionSwitch.x)))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, exp(tan(0.0)), log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))), true), false))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false))), true))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), true && ((injectionSwitch.x < injectionSwitch.y)))), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(true, ! (! (true))), true, false))))))), bool(_GLF_IDENTITY(bvec2(! (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), true && ((injectionSwitch.x < injectionSwitch.y)))), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(true, ! (! (true))), true, false))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), true && ((injectionSwitch.x < injectionSwitch.y)))), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(true, ! (! (true))), true, false))))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(! (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), true && ((injectionSwitch.x < injectionSwitch.y)))), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(true, ! (! (true))), true, false))))))), false))), false, true))))))))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))
    return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) | 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) - 0u)) ^ 0u)), (subgroup_local_id) | 0u))), ~ (~ (uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))))))) / 1u), min(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) + 0u), 0u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), bool(true)))) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), false || (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, abs(length(0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), round(length(normalize(1.0))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), round(length(normalize(1.0))), 0.0, 1.0))))), mix(vec2((vec2(mat3x4(injectionSwitch, abs(length(0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), round(length(normalize(1.0))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), round(length(normalize(1.0))), 0.0, 1.0))))))[0], _GLF_FUZZED(70.47)), vec2(_GLF_FUZZED((-2958.7245 * -1988.8449)), (vec2(mat3x4(injectionSwitch, abs(length(0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), round(length(normalize(1.0))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(sqrt(1.0), round(length(normalize(1.0))), 0.0, 1.0))))))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1, 1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), true)), true && (_GLF_IDENTITY(bool(bvec2((! (false)), true)), ! (! (bool(bvec2((! (false)), true)))))))), ! (! (! (! (false)))))))))), false, true, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 5531.2854)) : injectionSwitch), ((false ? _GLF_FUZZED(vec2(-9.9, 5531.2854)) : injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), false))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(70.25), _GLF_FUZZED(4.9)), bvec2(false, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec3(subgroup_local_id % 2, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec3(subgroup_local_id % 2, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * 1u)), (subgroup_local_id % 2) >> _GLF_IDENTITY(0u, max(0u, 0u)))) == 0)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, ~ (~ (2))), 2)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(-84987)))) << 0)), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), (uint(2)) | (uint(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, ~ (~ (2))))))))) : _GLF_FUZZED(subgroup_base))), 0u + (uint(2)))), ((uint(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))) : _GLF_FUZZED(subgroup_base))), 0u + (uint(2))))) >> 0u), ~ (~ (_GLF_IDENTITY((uint(2)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))) : _GLF_FUZZED(subgroup_base))), 0u + (uint(2)))), ((uint(2)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))) : _GLF_FUZZED(subgroup_base))), 0u + (uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))) : _GLF_FUZZED(subgroup_base))), 0u + (uint(2))))) ^ (0u | 0u))) >> 0u))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), (_GLF_IDENTITY((4) | (4), _GLF_IDENTITY(((4) | (4)), (_GLF_IDENTITY(((4) | (4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((4) | (4)), (((4) | (4))) | 0)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(((4) | (4)), (((4) | (4))) | 0)), (true ? ~ (_GLF_IDENTITY(((4) | (4)), (((4) | (4))) | 0)) : _GLF_FUZZED(45212))), ~ (_GLF_IDENTITY(((4) | (4)), (((4) | (4))) | 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(((4) | (4)), (((4) | (4))) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (0)))))), int(_GLF_IDENTITY(ivec3(~ (_GLF_IDENTITY(((4) | (4)), (((4) | _GLF_IDENTITY((4), 0 ^ ((4))))) | 0)), 0, 0), (ivec3(~ (_GLF_IDENTITY(((4) | (4)), (((4) | (4))) | 0)), 0, 0)) << ivec3(0, 0, 0))))))))) | 0) | 0)) / _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) | 0)))) >> _GLF_IDENTITY(int(1), int(1))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 1, 1, 1)), clamp(int(ivec4(int(1), 1, 1, 1)), int(ivec4(int(1), 1, 1, 1)), _GLF_IDENTITY(int(ivec4(int(1), 1, 1, 1)), int(ivec3(int(ivec4(int(1), 1, 1, 1)), 1, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (true ? (1 << _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(bitfieldExtract(32348, 50421, -69172)))))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | 0)))) << 0)) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), 0 | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), 0 | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 1, 0)))) ^ 0))))) >> _GLF_IDENTITY(int(1), int(1))), 0 | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), 0 | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1))), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (true && (false))), ! (! (_GLF_IDENTITY(! (! (true && (false))), bool(bvec3(! (! (true && (false))), true, false)))))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(1.0), bool(true))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(_GLF_IDENTITY(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), (vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1])) / abs(vec2(1.0, 1.0))))), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))), ((_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false))))))))) * mat2(1.0)) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(_GLF_IDENTITY(-9548.0656, (-9548.0656) * 1.0))), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.2, float(mat4x3(2.2, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, determinant(mat2(sin(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), float(1.0), bool(true))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(_GLF_IDENTITY(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), (vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1])) / abs(vec2(1.0, 1.0))))), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + tan(vec2(0.0, 0.0)))) + sin(vec2(0.0, 0.0))), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))), ((_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-99.38, clamp(-99.38, -99.38, -99.38))), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false))))))))) * mat2(1.0)) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0))[1], mix(float((vec2(1.0, 1.0))[1]), float(_GLF_FUZZED(-8302.9716)), bool(false)))), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(_GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), max(mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), (false ? _GLF_FUZZED(vec2(9.1, 7.8)) : mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(6.0, 3296.0238)) : _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))))))).y))) || false))))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)) || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.2)), float(1.0), bool(true))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0)), clamp(_GLF_IDENTITY((vec2(1.0, 1.0)), clamp((vec2(1.0, 1.0)), (vec2(1.0, 1.0)), (vec2(1.0, 1.0)))), (vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), mix(_GLF_IDENTITY(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED((-9.0)), ((vec2(1.0, 1.0)))[1]), vec2(((vec2(1.0, 1.0)))[0], _GLF_FUZZED(-3.5)), bvec2(true, false)))[1]), (vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1])) / abs(vec2(1.0, 1.0))))), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3355.6611) : 1.0)), 0.0, 1.0), max(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3355.6611) : 1.0)), 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3355.6611) : 1.0)), 0.0, 1.0), vec3(mat2x4(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3355.6611) : 1.0)), 0.0, 1.0), 0.0, 0.0, 1.0, 1.0, 1.0))))))), 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))) || false))))))))), ((_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5484.5304)), float(1.0), bool(true))), 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), _GLF_IDENTITY(min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false))), mat2(1.0) * (min(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false))))))))))) * mat2(1.0)) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-9548.0656)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))), _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), min(mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1588.3089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-99.38), _GLF_FUZZED(832.176)), bvec2(false, false)))))))) / vec2(1.0, 1.0)) * (injectionSwitch))) * vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - tan(vec2(0.0, 0.0)), ((injectionSwitch) - tan(vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y)))))))))))), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))))))) && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), false || (bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))))))) && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), true && (bool(bool(_GLF_IDENTITY((false), true && ((false)))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((false))))) || false), ! (! (! ((false))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) || false)), (! ((false))) || false), ! (! (! _GLF_IDENTITY(((false)), true && (((false))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((false))) || false), ! _GLF_IDENTITY((! (! ((false)))), ! (! ((! (! ((false)))))))))))))))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2401.3524) : injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))), ! (! ((! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))))))), ! (_GLF_IDENTITY(! ((false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), true)))) || false), true && ((false))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), true)))) || false), true && ((false))))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sin(vec2(0.0, 0.0)), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sin(vec2(0.0, 0.0))) * mat2(1.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + sin(vec2(0.0, 0.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(38.04), _GLF_FUZZED((849.835 + (-7258.5962 + -2913.2231)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + _GLF_IDENTITY(sin(vec2(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(5.8, _GLF_IDENTITY(154.624, (154.624) * 1.0))) : sin(vec2(0.0, 0.0))))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sin(vec2(0.0, 0.0)), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sin(vec2(0.0, 0.0))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sin(vec2(0.0, 0.0)), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + sin(vec2(0.0, 0.0))) * mat2(1.0))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(cos(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), max(cos(vec2(0.0, 0.0)), cos(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.0))), 0.0)))))) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, min(2, 2)))), 2)) : _GLF_FUZZED(_GLF_IDENTITY(91709, min(91709, 91709)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec4(int(4), (0 << _GLF_IDENTITY(int(3), int(3))), 0, 1)), (int(ivec4(int(4), (0 << _GLF_IDENTITY(int(3), int(3))), 0, 1))) - 0))))) - 0), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (true ? _GLF_IDENTITY(4, 0 | (4)) : _GLF_FUZZED(abs(-75717)))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
