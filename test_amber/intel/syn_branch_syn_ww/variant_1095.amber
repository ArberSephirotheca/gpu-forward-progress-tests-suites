#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(1.0)))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[1])))))[_GLF_IDENTITY(0, (0) - 0)], _GLF_FUZZED(-652.845)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), true && ((! (_GLF_IDENTITY(false, ! (! (false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y))), false, true)))) || false), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(asin(vec2(86.30, -428.532))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, clamp(false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch)))).y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, clamp(false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch)))).y, false, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, clamp(false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch, false ? _GLF_FUZZED(faceforward(vec2(7.6, -8425.7355), injectionSwitch, injectionSwitch)) : injectionSwitch)))).y, false, true))))))), false, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), max((0u), (0u))) * _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u)))) - 0u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u))))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))).x)) << _GLF_IDENTITY(0u, (0u) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) >> 0u), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) | (_GLF_IDENTITY(0u, (0u) * 1u)))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u)), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u))) | (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) << _GLF_IDENTITY(0u, (0u) * 1u))))) | _GLF_IDENTITY(0u, (0u) | 0u))))) : _GLF_FUZZED(subgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), (! (_GLF_DEAD(false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), (! (_GLF_DEAD(false))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true), false || (bool(bvec2(false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, ((0u | 0u) | 0u), 0u)), (_GLF_IDENTITY(uint(uvec3(0u, ((0u | 0u) | 0u), 0u)), min(uint(uvec3(0u, ((0u | 0u) | 0u), 0u)), uint(uvec3(0u, ((0u | 0u) | 0u), 0u))))) + 0u)))), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))))), ((_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ((subgroup_local_id)) | ((subgroup_local_id)))))))) | 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), (((subgroup_local_id)) | ((subgroup_local_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))))) | 0u))) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) && true))))))), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, false || (false))))), false)), (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false))) || false)) || false))), false, false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), false || ((false))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), true))))), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bool(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true))))))), bool(bvec4((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), true && (((false))))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true))))))), true, false, false)))))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false, false, true)))))))), false || ((_GLF_IDENTITY(false, (false) || false)))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true)))))), (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false, false, true)))))))), false || ((_GLF_IDENTITY(false, (false) || false)))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false, false, true)))))))), false || ((_GLF_IDENTITY(false, (false) || false)))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true)))))) || false))) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true))))))), bool(bvec4((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bvec3(false || ((false)), true, false)))), false)))), false, false, true))))))), true, _GLF_IDENTITY(false, ! (! (false))), false)))), (true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))), false, false, true)))))))) && true)))))), bool(bvec4((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || ((false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || ((false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false || ((false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false || ((false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || ((false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(false || ((false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), false))))), false)), true && (bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))), false)))), false, false, true))))))), true, false, false))))) && true))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) | ((_GLF_IDENTITY(199229u, uint(uvec4(199229u, 1u, 0u, (0u & 47742u)))) & 0u) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))))))))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (true ? uint(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))))) : _GLF_FUZZED(num_workgroup)))) + 0u))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (true ? uint(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))))) : _GLF_FUZZED(num_workgroup)))) + 0u))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))), (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (true ? uint(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))))) : _GLF_FUZZED(num_workgroup)))) + 0u))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (true ? uint(_GLF_IDENTITY((subgroup_id), uint(uint(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))))) : _GLF_FUZZED(num_workgroup)))) + 0u))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))))))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), min(~ (subgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u))), subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (false ? _GLF_FUZZED((workgroup_id)) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))) - 0u)))))))))) << 0u), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(100114u) : subgroup_id)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), min((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))), ~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id), uint(uvec4(min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id), 0u, 1u, 0u)))))))))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (1u & 1u) * (max(subgroup_id, subgroup_id)))), subgroup_id)))))), min((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), subgroup_id))))))))))) - 0u))))) : workgroup_base), ~ (~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) | ((199229u & 0u) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (~ (4u)))), uint(4u)))), (~ (_GLF_IDENTITY(0u, (0u) | 0u))) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), uint(uint((subgroup_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (true ? uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))) : _GLF_FUZZED(num_workgroup)))) + 0u))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (false ? _GLF_FUZZED((workgroup_id)) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))) - 0u)))))))))) << 0u), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u)))) >> 0u) | _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), min((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))))))))))), min(min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), uint(uint((subgroup_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (true ? uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))) : _GLF_FUZZED(num_workgroup)))) + 0u))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (false ? _GLF_FUZZED((workgroup_id)) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))) - 0u)))))))))) << 0u), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u)))) >> 0u) | _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), min((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))))))))))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), uint(uint((subgroup_id))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), (true ? uint(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))) : _GLF_FUZZED(num_workgroup)))) + 0u))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))) | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), (false ? _GLF_FUZZED((workgroup_id)) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))) - 0u)))))))))) << 0u), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u)))) >> 0u) | _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), min((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))), (_GLF_IDENTITY(~ (subgroup_id), min(~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(num_workgroup))), ~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))))))))))))) : workgroup_base))))), workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) + 0u), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), clamp((64), (64), (64))) | (64)), max(64, _GLF_IDENTITY(64, 0 ^ (64)))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))) ^ 0u), 1u))) ^ 0u), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(subgroup_local_id, 1u))) ^ 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), 1u)))), uint(uvec2(subgroup_local_id, 1u)))))) ^ 0u)), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))), min((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))))) ^ 0u)))))) % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(max(0, 0), _GLF_IDENTITY((_GLF_IDENTITY(max(0, 0), (max(0, 0)) ^ (0 | 0))) / 1, ((max(0, 0)) / 1) << 0))), 0, 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 1)), int(ivec2(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63534) : 1)), 1, 1)))))))) - 0), _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0)))), max(0, 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0)))), max(0, 0)))), 0, 0, 1))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)) && true)) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(6.8, (true ? 6.8 : _GLF_FUZZED(0.7))))), _GLF_IDENTITY(float(vec3((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 1.0, 1.0)), min(float(_GLF_IDENTITY(vec3((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 1.0, 1.0), min(vec3((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 1.0, 1.0), vec3((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 1.0, 1.0)))), float(vec3((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(6.8)), 1.0, 1.0)))))), (true ? (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), _GLF_IDENTITY(float(vec3((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 1.0, 1.0)), min(float(vec3((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 1.0, 1.0)), float(vec3((true ? injectionSwitch.x : _GLF_FUZZED(6.8)), 1.0, 1.0)))))) : _GLF_FUZZED(-5.7)))))), float(_GLF_FUZZED(-9521.8907)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(3.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(404.986), clamp(_GLF_FUZZED(404.986), _GLF_IDENTITY(_GLF_FUZZED(404.986), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(404.986), (false ? _GLF_FUZZED(_GLF_IDENTITY(2589.4092, max(2589.4092, 2589.4092))) : _GLF_FUZZED(404.986))) : _GLF_FUZZED(921.853), tan(0.0) + (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(404.986), (false ? _GLF_FUZZED(_GLF_IDENTITY(2589.4092, max(2589.4092, 2589.4092))) : _GLF_FUZZED(404.986))) : _GLF_FUZZED(921.853), min(true ? _GLF_IDENTITY(_GLF_FUZZED(404.986), (false ? _GLF_FUZZED(_GLF_IDENTITY(2589.4092, max(2589.4092, 2589.4092))) : _GLF_FUZZED(404.986))) : _GLF_FUZZED(921.853), true ? _GLF_IDENTITY(_GLF_FUZZED(404.986), (false ? _GLF_FUZZED(_GLF_IDENTITY(2589.4092, max(2589.4092, 2589.4092))) : _GLF_FUZZED(404.986))) : _GLF_FUZZED(921.853))))))), _GLF_IDENTITY(_GLF_FUZZED(404.986), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(404.986), max(_GLF_IDENTITY(_GLF_FUZZED(404.986), (_GLF_FUZZED(404.986)) / 1.0), _GLF_FUZZED(404.986)))), (float(_GLF_IDENTITY(_GLF_FUZZED(404.986), max(_GLF_IDENTITY(_GLF_FUZZED(404.986), (_GLF_FUZZED(404.986)) / 1.0), _GLF_FUZZED(404.986))))) - 0.0)), max(float(float(_GLF_IDENTITY(_GLF_FUZZED(404.986), max(_GLF_FUZZED(404.986), _GLF_FUZZED(404.986))))), float(float(_GLF_IDENTITY(_GLF_FUZZED(404.986), max(_GLF_FUZZED(404.986), _GLF_FUZZED(404.986))))))))))), _GLF_IDENTITY(bool(false), false || (bool(false))))))), 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-64.68)), bool(false))), 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.8)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9521.8907, max(-9521.8907, -9521.8907)))), bool(false))))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(48.32) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7273.8201))))), max(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.9)), 0.0 + (float(_GLF_FUZZED(1.9)))), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-615.696)), float(0.0), bool(true))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(404.986)), clamp(float(_GLF_FUZZED(404.986)), _GLF_IDENTITY(float(_GLF_FUZZED(404.986)), min(_GLF_IDENTITY(float(_GLF_FUZZED(404.986)), max(float(_GLF_FUZZED(404.986)), float(_GLF_FUZZED(404.986)))), float(_GLF_FUZZED(404.986)))), float(_GLF_FUZZED(404.986)))), _GLF_IDENTITY(bool(false), true && (bool(false)))), (false ? _GLF_FUZZED(793.300) : mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, log(1.0), 0.0)))) * 1.0)), (float(0.0)) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED(404.986), (_GLF_FUZZED(404.986)) - 0.0)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)))), ! (! (! ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false))))))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false))) && true))) && true)) && (bool(false))))))))), 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-64.68)), bool(false))), 0.0, 1.0, 0.0, 1.0)))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4)))), 4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true && (! (! (true))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true && (! (! (true))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true && (! (! (true)))))) || false)) || false))) && (false)))), (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true), false), bvec3(bvec3(bvec3(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true), false)))))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
