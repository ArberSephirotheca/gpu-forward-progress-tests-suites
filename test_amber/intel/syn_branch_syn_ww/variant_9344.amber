#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 mat3x2 _f0;
 uint _f1;
 uint subgroup_size;
 mat4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 mat3x4 _f1;
 mat2 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
 int _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 bvec4 _f3;
 ivec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
 _GLF_struct_2 _f3;
 vec2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_4(_GLF_struct_0(mat4x3(1.0), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false, false)))), _GLF_struct_1(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(clamp(72398u, 197283u, 165930u)))), min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(clamp(72398u, 197283u, 165930u)))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(clamp(72398u, 197283u, 165930u))))))), ivec2(1)), mat4x2(1.0), _GLF_struct_2(mat4x3(1.0), mat4x3(1.0), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(false || (bool(bvec2(true, false))), _GLF_IDENTITY(bool(bvec3(false || (bool(bvec2(true, false))), false, true)), bool(bvec4(bool(bvec3(false || (bool(bvec2(true, false))), false, true)), true, false, false))))))) || false), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true))), ! (! (bool((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true)))))))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true))))))), ! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true, false || (_GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true)))))))) && true))))) || false))), bvec4(true), ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))), _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u ^ 1u)), (false ? _GLF_FUZZED(uvec4(90804u, 149679u, 153976u, 132660u)) : uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u ^ _GLF_IDENTITY(1u, (1u) * 1u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))) : _GLF_FUZZED(72038u))) >> 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u)))), uint(uvec4(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, cos(0.0), 0.0))))), 1u, 0u)))) : _GLF_FUZZED(subgroup_id))))) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u), uint(uvec3((1u), 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((1u), uint(uvec3((1u), 0u, 1u))), uint(uvec4(_GLF_IDENTITY((1u), uint(uvec3((1u), 0u, 1u))), 0u, 0u, 1u)))) | (_GLF_IDENTITY((1u), uint(uvec3((1u), 0u, 1u))))) | (_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, (1u) ^ 0u), 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u ^ 1u)), (false ? _GLF_FUZZED(uvec4(90804u, 149679u, 153976u, 132660u)) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY((1u), 0u | ((1u))), ((1u)) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, 1u * (1u)), (0u ^ 1u))))), uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u ^ 1u)), (false ? _GLF_FUZZED(uvec4(90804u, 149679u, 153976u, 132660u)) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY((1u), ~ (~ ((1u)))), ((1u)) | _GLF_IDENTITY(0u, (0u) / 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, 1u * (1u)), (0u ^ 1u)))))), clamp(uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u ^ 1u)), (false ? _GLF_FUZZED(uvec4(90804u, 149679u, 153976u, 132660u)) : uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), 1u * (1u)), (0u ^ 1u)))))), uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u ^ 1u)), (false ? _GLF_FUZZED(uvec4(90804u, 149679u, 153976u, 132660u)) : uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, 1u * (1u)), (0u ^ 1u)))))), uint(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (0u ^ 1u)), (false ? _GLF_FUZZED(uvec4(90804u, 149679u, 153976u, 132660u)) : uvec4(_GLF_IDENTITY((1u), ((1u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, 1u * (1u)), (0u ^ 1u))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, max(1u, 1u)), 0u)))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec3(-8088.7704, 2.3, 713.207).b))), injectionSwitch.y)), 1u, 0u))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))))))) : _GLF_FUZZED(72038u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))))))) : _GLF_FUZZED(72038u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), max(_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))), _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))))))) : _GLF_FUZZED(72038u)) << 0u)) | 0u))) >> 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) | (_GLF_IDENTITY((1u), uint(uvec4((1u), 0u, 1u, 1u)))))), (~ (_GLF_IDENTITY((1u), ((1u)) | (_GLF_IDENTITY((1u), uint(uvec4((1u), 0u, 1u, 1u))))))) + 0u)))), uint(uvec4(1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0))), 0.0))))), 1u, 0u)))) : _GLF_FUZZED(subgroup_id))))) ^ 0u) : _GLF_FUZZED(packSnorm2x16(injectionSwitch))))), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), _GLF_struct_3(mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(float(47549), mix(float(_GLF_FUZZED(89.25)), float(float(47549)), bool(true))))), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), mat3x4(1.0), mat2(1.0), mat2x4(1.0), mat3x2(1.0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0), bvec3(true))), _GLF_struct_6(_GLF_struct_5(mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4809.1849)), bool(false)))), 1u, gl_SubgroupSize, mat4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6837.6642) : injectionSwitch.x)), 0.0, 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2((! (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2((! (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5199.1592)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 312.173))), bvec2(true, false))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) ? _GLF_FUZZED(vec2(-262.313, -29.53)) : vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 312.173))), bvec2(true, false))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-56.77) : injectionSwitch.y), _GLF_IDENTITY(float(mat3x4((false ? _GLF_FUZZED(-56.77) : injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat3x4((false ? _GLF_FUZZED(-56.77) : injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-8263.5833) : float(mat3x4((false ? _GLF_FUZZED(-56.77) : injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), float(_GLF_FUZZED(-587.098)), bool(false))))))), _GLF_IDENTITY(true, false || (true)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_7._f1._f0.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))) + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u, min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))) >> 0u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u))), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(118426u) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : 0u | (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | 0u))), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) - 0u))), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u) | _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), 0u | (subgroup_local_id))))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), uint(uvec2(_GLF_IDENTITY(0u | (subgroup_local_id), min(0u | (subgroup_local_id), _GLF_IDENTITY(0u | (subgroup_local_id), (_GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) >> 0u)) - 0u))), 1u)))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED((mat2x4(-1198.1061, -92.90, 53.12, 2.1, 328.537, 203.183, 7.3, 83.00) , workgroup_size))))) | (_GLF_IDENTITY(0u | (subgroup_local_id), 0u + (0u | (subgroup_local_id)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))))), min(subgroup_local_id, subgroup_local_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), _GLF_IDENTITY(max((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (max((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) << 0u))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % _GLF_struct_replacement_7._f1._f0.subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % _GLF_struct_replacement_7._f1._f0.subgroup_size) << 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) | next_virtual_gid))))), ((_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | next_virtual_gid)))))) ^ 0u)) - 0u) == 0, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) | next_virtual_gid))))), ((_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | next_virtual_gid)))))) ^ 0u)) - 0u) == 0))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) % 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, (_GLF_IDENTITY((subgroup_local_id) / 1u, ((subgroup_local_id) / 1u) + 0u)) - (0u & 178433u))) % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), subgroup_local_id % 2)))) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) % 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, (_GLF_IDENTITY((subgroup_local_id) / 1u, ((subgroup_local_id) / 1u) + 0u)) - (0u & 178433u))) % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), subgroup_local_id % 2)))) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) % 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / 1u, (_GLF_IDENTITY((subgroup_local_id) / 1u, ((subgroup_local_id) / 1u) + 0u)) - (0u & 178433u))) % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), subgroup_local_id % 2)))) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((_GLF_IDENTITY(clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) : _GLF_FUZZED(atomicOr(num_workgroup, uvec2(97506u, 171531u)[1])))) | next_virtual_gid))))), ((_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), 0u | 0u, 0u | 0u))), 0u | ((_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), 0u | 0u, 0u | 0u)))))), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | next_virtual_gid)))))) ^ 0u)) - 0u) == 0, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) % 2, 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, workgroup_id) | next_virtual_gid)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) | next_virtual_gid))), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) | next_virtual_gid))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) | next_virtual_gid))))))), ((_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), ~ (~ ((subgroup_local_id % 2)))))) | (0u | 0u)), 0u | (subgroup_local_id % 2)) : _GLF_FUZZED((clamp(workgroup_size, _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | next_virtual_gid)))))) ^ 0u)) - 0u) == 0)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) || false) ? _GLF_FUZZED(-939.043) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-1463.9621), max(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(_GLF_IDENTITY(-78.18, clamp(-78.18, -78.18, -78.18)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.5, -7.8)))))[1]), bvec2(true, true))).y : _GLF_FUZZED(-1463.9621), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? injectionSwitch.y : _GLF_FUZZED(-1463.9621)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y) && true))))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, true, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4)))), 64, _GLF_IDENTITY(4, (4) | 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
