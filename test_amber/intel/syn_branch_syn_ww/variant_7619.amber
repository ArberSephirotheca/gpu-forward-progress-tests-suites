#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, mix(float((injectionSwitch.x) * 1.0), float(_GLF_FUZZED(3364.1656)), bool(false)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(397.287)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-666.818 + -12.90))), float(injectionSwitch.y), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, true)))) && true))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     return;
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
        continue;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (1 ^ (0 & 23841)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), false))))))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(54.16, 9.0)) : _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) - vec2(0.0, 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4729.5042)), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, injectionSwitch.y)))), false, true))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))))) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))), false, true))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(abs(1.0)), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(752.099), _GLF_FUZZED(7.5)), vec2((vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(abs(1.0)), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(abs(1.0)), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0)))[1]), bvec2(true, true)))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))), false, true)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), int(ivec4(int(3), 0, 0, 1)))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(abs(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-640.335)), float(1.0), bool(true)))), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))))))) > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((-102.699 * 357.234)), max(_GLF_FUZZED((-102.699 * 357.234)), _GLF_FUZZED((-102.699 * 357.234))))), float(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), (_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), clamp(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true)))))))) + 0.0)))), bool(true)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1.9), (_GLF_FUZZED(-1.9)) * 1.0)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1.9), min(_GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9))) : _GLF_FUZZED(_GLF_IDENTITY(8.5, (8.5) * 1.0))))), float(vec3(float(_GLF_FUZZED(-1.9)), 0.0, 1.0))))), bool(false))))))).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((-102.699 * 357.234)), (true ? _GLF_FUZZED((_GLF_IDENTITY(-102.699, (_GLF_IDENTITY(-102.699, (-102.699) - 0.0)) / cos(0.0)) * 357.234)) : _GLF_FUZZED(1.4))), max(_GLF_FUZZED((-102.699 * 357.234)), _GLF_FUZZED((-102.699 * 357.234))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), min(false ? _GLF_IDENTITY(_GLF_FUZZED(961.647), (false ? _GLF_FUZZED(72.56) : _GLF_FUZZED(961.647))) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234)))))))) / determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-460.287)), float(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0)))), bool(true)))))), bool(true)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), mix(float(_GLF_FUZZED(-1298.1480)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), (_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))))))), bool(true))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))), (max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(9961.2524), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(86.76)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x4(662.642, -887.262, 7518.1316, -4.7, -18.42, -53.36, -5.4, -8.5, -3695.9725, 585.684, 91.93, 5.0)) : mat3x4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(9961.2524), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(86.76)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))) * 1.0)))).y), float(_GLF_FUZZED(4.7)), bool(false)))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((-102.699 * 357.234)), max(_GLF_FUZZED((-102.699 * 357.234)), _GLF_FUZZED((-102.699 * 357.234))))), float(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), (_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), clamp(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true)))))))) + 0.0)))), bool(true)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1.9), (_GLF_FUZZED(-1.9)) * 1.0)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1.9), min(_GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9))) : _GLF_FUZZED(_GLF_IDENTITY(8.5, (8.5) * 1.0))))), float(vec3(float(_GLF_FUZZED(-1.9)), 0.0, 1.0))))), bool(false))))))).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((-102.699 * 357.234)), (true ? _GLF_FUZZED((_GLF_IDENTITY(-102.699, (_GLF_IDENTITY(-102.699, (-102.699) - 0.0)) / cos(0.0)) * 357.234)) : _GLF_FUZZED(1.4))), max(_GLF_FUZZED((-102.699 * 357.234)), _GLF_FUZZED((-102.699 * 357.234))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), min(false ? _GLF_IDENTITY(_GLF_FUZZED(961.647), (false ? _GLF_FUZZED(72.56) : _GLF_FUZZED(961.647))) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234)))))))) / determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-460.287)), float(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0)))), bool(true)))))), bool(true)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), mix(float(_GLF_FUZZED(-1298.1480)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), (_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))))))), bool(true))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))), (max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(9961.2524), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(86.76)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x4(662.642, -887.262, 7518.1316, -4.7, -18.42, -53.36, -5.4, -8.5, -3695.9725, 585.684, 91.93, 5.0)) : mat3x4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(9961.2524), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(86.76)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))) * 1.0)))).y), float(_GLF_FUZZED(4.7)), bool(false)))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED((-102.699 * 357.234)), max(_GLF_FUZZED((-102.699 * 357.234)), _GLF_FUZZED((-102.699 * 357.234))))), float(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), (_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), clamp(round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true))))), round(length(_GLF_IDENTITY(normalize(abs(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-1.4)), vec2((normalize(abs(vec2(1.0, 1.0))))[0], (normalize(abs(vec2(1.0, 1.0))))[1]), bvec2(true, true)))))))) + 0.0)))), bool(true)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1.9), (_GLF_FUZZED(-1.9)) * 1.0)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-1.9), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1.9), min(_GLF_FUZZED(-1.9), _GLF_FUZZED(-1.9))) : _GLF_FUZZED(_GLF_IDENTITY(8.5, (8.5) * 1.0))))), float(vec3(float(_GLF_FUZZED(-1.9)), 0.0, 1.0))))), bool(false))))))).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((-102.699 * 357.234)), (true ? _GLF_FUZZED((_GLF_IDENTITY(-102.699, (_GLF_IDENTITY(-102.699, (-102.699) - 0.0)) / cos(0.0)) * 357.234)) : _GLF_FUZZED(1.4))), max(_GLF_FUZZED((-102.699 * 357.234)), _GLF_FUZZED((-102.699 * 357.234))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), min(false ? _GLF_IDENTITY(_GLF_FUZZED(961.647), (false ? _GLF_FUZZED(72.56) : _GLF_FUZZED(961.647))) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234))))), false ? _GLF_FUZZED(961.647) : float(_GLF_FUZZED((-102.699 * _GLF_IDENTITY(357.234, max(357.234, 357.234)))))))) / determinant(mat2(1.0, 1.0, sqrt(0.0), 1.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-460.287)), float(_GLF_IDENTITY(round(length(normalize(abs(vec2(1.0, 1.0))))), float(mat4x2(round(length(normalize(abs(vec2(1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, cos(tan(0.0)), 0.0, 0.0, 0.0)))), bool(true)))))), bool(true)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), mix(float(_GLF_FUZZED(-1298.1480)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))), (_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))))))), bool(true))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false)))), (max(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(9961.2524), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(86.76)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x4(662.642, -887.262, 7518.1316, -4.7, -18.42, -53.36, -5.4, -8.5, -3695.9725, 585.684, 91.93, 5.0)) : mat3x4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(9961.2524), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(86.76)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[1]), float(_GLF_FUZZED(3414.1886)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-1.9)), float(vec3(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-1.9, (-1.9) / _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), (_GLF_IDENTITY(-1.9, (-1.9) / 1.0)) / 1.0))), 0.0, 1.0))))), bool(false))))) * 1.0)))).y), float(_GLF_FUZZED(4.7)), bool(false)))))))) && true))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / 1)), int(3))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), int(int((3)))) - 0)), int(3)))) | 0) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0), (true ? mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-84.92, -7.9, 0.9, -96.48, 4557.7293, -549.739, -71.28, 722.029, 8.0, 6.3, -7.7, 28.50))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0), (true ? mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-84.92, -7.9, 0.9, -96.48, 4557.7293, -549.739, -71.28, 722.029, 8.0, 6.3, -7.7, 28.50))))), clamp(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0), (true ? mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-84.92, -7.9, 0.9, -96.48, 4557.7293, -549.739, -71.28, 722.029, 8.0, 6.3, -7.7, 28.50))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0), (true ? mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-84.92, -7.9, 0.9, -96.48, 4557.7293, -549.739, -71.28, 722.029, 8.0, 6.3, -7.7, 28.50))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0), (true ? mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-84.92, -7.9, 0.9, -96.48, 4557.7293, -549.739, -71.28, 722.029, 8.0, 6.3, -7.7, 28.50))))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0), (true ? mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-84.92, -7.9, 0.9, -96.48, 4557.7293, -549.739, -71.28, 722.029, 8.0, 6.3, -7.7, 28.50))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0), (true ? mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-84.92, -7.9, 0.9, -96.48, 4557.7293, -549.739, -71.28, 722.029, 8.0, 6.3, -7.7, 28.50)))))))), max(injectionSwitch, injectionSwitch)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, exp(0.0), 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, exp(0.0), 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / vec2(1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false, false))), false || (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, sin(0.0), 1.0, sin(0.0), 0.0)), max(vec2(mat2x3(injectionSwitch, sin(0.0), 1.0, sin(0.0), 0.0)), vec2(mat2x3(injectionSwitch, sin(0.0), 1.0, sin(0.0), 0.0))))).x > injectionSwitch.y), true, false)), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (true ? mat3x4(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))) : _GLF_FUZZED(mat3x4(-2.0, -651.347, -77.64, 386.928, -43.98, -6.5, -7489.6933, 644.407, -3607.5152, -7.4, 6.8, -1.0)))))).y), true, false)), true && (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (true ? mat3x4(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))) : _GLF_FUZZED(mat3x4(-2.0, -651.347, -77.64, 386.928, -43.98, -6.5, -7489.6933, 644.407, -3607.5152, -7.4, 6.8, -1.0)))))).y), true, false)))), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false, false))), false), true, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))), true, true, true)), bool(bvec3(bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))))), true, true, true)), true, false)))))), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false, false))), false), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(bvec3(bool(bvec3((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y), true, false)), false, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(bvec3(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false, false))), false), true, false))))) || false)))), ! _GLF_IDENTITY((! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)))), true, _GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((! (bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, false)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! _GLF_IDENTITY((! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true, true)))), true, false))))))))), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false), bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! _GLF_IDENTITY((! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), ((injectionSwitch) * mat2(1.0)) + abs(vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)) || ((! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))) && true))))))))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false), bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! _GLF_IDENTITY((! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), ((injectionSwitch) * mat2(1.0)) + abs(vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)) || ((! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))) && true))))))))))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false), bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! _GLF_IDENTITY((! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), ((injectionSwitch) * mat2(1.0)) + abs(vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y)) || ((! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))) && true))))))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, true)))))))
              {
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) & -13842, min(0 & -13842, _GLF_IDENTITY(0 & -13842, 0 ^ (0 & -13842)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0 & -13842, min(0 & -13842, _GLF_IDENTITY(0 & -13842, _GLF_IDENTITY(0, (0) >> 0) ^ (0 & -13842)))), 0 | (_GLF_IDENTITY(0 & -13842, min(0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0 & -13842, int(ivec2(_GLF_IDENTITY(0 & -13842, max(0 & -13842, _GLF_IDENTITY(0 & -13842, ~ (~ (0 & -13842))))), 1))), 0 ^ (0 & -13842)))))), _GLF_IDENTITY(0 & -13842, min(0 & -13842, _GLF_IDENTITY(0 & -13842, 0 ^ (_GLF_IDENTITY(0 & -13842, (0 & -13842) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0 & -13842, 0 | (0 & -13842)), _GLF_IDENTITY(0 & -13842, _GLF_IDENTITY(0 | (0 & -13842), (0 | (0 & -13842)) / 1))))) | 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & _GLF_IDENTITY(-13842, (-13842) | (-13842)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, 0 | (_GLF_IDENTITY(0, (0) - 0) & -13842))) | (_GLF_IDENTITY(0, (0) - 0) & -13842)), 0 ^ (0 & -13842)))), 0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408)))))) >> 0)) & -13842))) | 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16771) : (_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0 & -13842, (0 & -13842) | (0 & -13842)), 0 ^ (0 & -13842)))), _GLF_IDENTITY(0 & -13842, (_GLF_IDENTITY(0 & -13842, (0 & -13842) ^ 0)) | (0 & -13842)), 0 & -13842))) | 1))), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & _GLF_IDENTITY(-13842, (-13842) | (-13842)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, 0 | (_GLF_IDENTITY(0, (0) - 0) & -13842))) | (_GLF_IDENTITY(0, (0) - 0) & -13842)), 0 ^ (0 & -13842)))), 0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408)))))) >> 0)) & -13842))) | 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16771) : (_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0 & -13842, (0 & -13842) | (0 & -13842)), 0 ^ (0 & -13842)))), _GLF_IDENTITY(0 & -13842, (_GLF_IDENTITY(0 & -13842, (0 & -13842) ^ 0)) | (0 & -13842)), 0 & -13842))) | 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & _GLF_IDENTITY(-13842, (-13842) | (-13842)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, 0 | (_GLF_IDENTITY(0, (0) - 0) & -13842))) | (_GLF_IDENTITY(0, (0) - 0) & -13842)), 0 ^ (0 & -13842)))), 0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408)))))) >> 0)) & -13842))) | 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16771) : (_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0 & -13842, (0 & -13842) | (0 & -13842)), 0 ^ (0 & -13842)))), _GLF_IDENTITY(0 & -13842, (_GLF_IDENTITY(0 & -13842, (0 & -13842) ^ 0)) | (0 & -13842)), 0 & -13842))) | 1))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & _GLF_IDENTITY(-13842, (-13842) | (-13842)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) & -13842, 0 | (_GLF_IDENTITY(0, (0) - 0) & -13842))) | (_GLF_IDENTITY(0, (0) - 0) & -13842)), 0 ^ (0 & -13842)))), 0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (95686 & 0) | (0)), 0))))), 0, 1, 1) : _GLF_FUZZED(ivec4(90323, -99765, -31591, -22408)))))) >> 0)) & -13842))) | 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16771) : (_GLF_IDENTITY(0 & -13842, clamp(_GLF_IDENTITY(0 & -13842, min(0 & -13842, _GLF_IDENTITY(_GLF_IDENTITY(0 & -13842, (0 & -13842) | (0 & -13842)), 0 ^ (0 & -13842)))), _GLF_IDENTITY(0 & -13842, (_GLF_IDENTITY(0 & -13842, (0 & -13842) ^ 0)) | (0 & -13842)), 0 & -13842))) | 1)))) / 1))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))))), false))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true)))) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false)))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-750.922)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
                  break;
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 1.0))))), injectionSwitch)).y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))))) && true)), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))))) && true))))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (false)))))))))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) / 1), (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))) ^ 0)) | 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), false || (bool(bvec4(_GLF_DEAD(false), true, true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), false || (bool(bvec4(_GLF_DEAD(false), true, true, false)))), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), false || (bool(bvec4(_GLF_DEAD(false), true, true, false))))) && true))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           return;
          }
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (false ? _GLF_FUZZED(vec3(-236.040, 2.8, 9.3)) : vec3(injectionSwitch, 0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (false ? _GLF_FUZZED(vec3(-236.040, 2.8, 9.3)) : vec3(injectionSwitch, 0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (false ? _GLF_FUZZED(vec3(-236.040, 2.8, 9.3)) : vec3(injectionSwitch, 0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (false ? _GLF_FUZZED(vec3(-236.040, 2.8, 9.3)) : vec3(injectionSwitch, 0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y))))) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) | (0)) | (64)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) ^ 0), 0 | (4)))));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false)), _GLF_IDENTITY((bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false))), bool(bvec3(_GLF_IDENTITY((bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false))), ! (! ((bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false)))))), true, false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false))) || false)) && true, bool(bvec2((_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false)), (bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), true, false))) || false)) && true, false))))) && true)), false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), true, true)))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(0, (0) << 0))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(0, (0) << 0)), (ivec2(2, _GLF_IDENTITY(0, (0) << 0))) - _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-8157, 69967)) : ivec2(0, 0)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(2, 0)))), min(_GLF_IDENTITY(int(ivec2(2, 0)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), 1.0 * (float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))))))) ^ (int(ivec2(2, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), clamp(ivec2(2, 0), ivec2(2, 0), _GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) + 0))))), 0)))))))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(0, (0) << 0))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(0, (0) << 0)), (ivec2(2, _GLF_IDENTITY(0, (0) << 0))) - _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-8157, 69967)) : ivec2(0, 0)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(2, 0)))), min(_GLF_IDENTITY(int(ivec2(2, 0)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), 1.0 * (float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))))))) ^ (int(ivec2(2, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), clamp(ivec2(2, 0), ivec2(2, 0), _GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) + 0))))), 0)))))))), 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(0, (0) << 0))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(0, (0) << 0)), (ivec2(2, _GLF_IDENTITY(0, (0) << 0))) - _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-8157, 69967)) : ivec2(0, 0)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(2, 0)))), min(_GLF_IDENTITY(int(ivec2(2, 0)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), 1.0 * (float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))))))) ^ (int(ivec2(2, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), clamp(ivec2(2, 0), ivec2(2, 0), _GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) + 0))))), 0)))))))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(0, (0) << 0))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(0, (0) << 0)), (ivec2(2, _GLF_IDENTITY(0, (0) << 0))) - _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-8157, 69967)) : ivec2(0, 0)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(2, 0)))), min(_GLF_IDENTITY(int(ivec2(2, 0)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), 1.0 * (float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))))))) ^ (int(ivec2(2, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), clamp(ivec2(2, 0), ivec2(2, 0), _GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) + 0))))), 0)))))))), 1u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(0, (0) << 0))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(0, (0) << 0)), (ivec2(2, _GLF_IDENTITY(0, (0) << 0))) - _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-8157, 69967)) : ivec2(0, 0)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(2, 0)))), min(_GLF_IDENTITY(int(ivec2(2, 0)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), 1.0 * (float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))))))) ^ (int(ivec2(2, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), clamp(ivec2(2, 0), ivec2(2, 0), _GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) + 0))))), 0)))))))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(0, (0) << 0))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(0, (0) << 0)), (ivec2(2, _GLF_IDENTITY(0, (0) << 0))) - _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-8157, 69967)) : ivec2(0, 0)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(2, 0)))), min(_GLF_IDENTITY(int(ivec2(2, 0)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.4) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), 1.0 * (float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))))))) ^ (int(ivec2(2, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), clamp(ivec2(2, 0), ivec2(2, 0), _GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(ivec2(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) + 0))))), 0)))))))), 1u))))))) == _GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-49679), max(_GLF_IDENTITY(_GLF_FUZZED(-49679), min(_GLF_FUZZED(-49679), _GLF_FUZZED(-49679))), _GLF_FUZZED(-49679)))), int(ivec2((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-49679), max(_GLF_FUZZED(_GLF_IDENTITY(-49679, (true ? -49679 : _GLF_FUZZED(-60118)))), _GLF_FUZZED(-49679)))), 1)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, false)))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(0.0, 0.0)), clamp(abs(vec2(0.0, 0.0)), abs(vec2(0.0, 0.0)), abs(vec2(0.0, 0.0)))) + (injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3779.2310, _GLF_IDENTITY(-8.6, (false ? _GLF_FUZZED(-17.03) : -8.6)))) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-223.114)), bvec2(true, false))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) || false))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         break;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        barrier();
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ((false) && true) && true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))), ! (! (((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y)), true, true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))) && true), true)))))) && true), false), true)))))) || false)))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)) * 1))
        {
         do
          {
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((+ 97814) & 0)); _GLF_IDENTITY(_injected_loop_counter --, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter --), (false ? _GLF_FUZZED((true ? -98130 : 39111)) : ~ (_injected_loop_counter --)))), ~ (~ ((_GLF_IDENTITY(~ (_injected_loop_counter --), (false ? _GLF_FUZZED((true ? -98130 : 39111)) : ~ (_injected_loop_counter --)))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & -48378) & -76114)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((0 & -48378) & -76114), (_injected_loop_counter > ((0 & -48378) & -76114)) && true)), (_GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 & -48378) & -76114))) && true)) || false); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))) || false)))), false, false, _GLF_IDENTITY(false, ! (! (false)))))), true, false)))), ! (! ((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8378.5156)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))), false, false, false))), true, false))))))) || false)))) && true))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      return;
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
                    }
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) && true))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     for(int _injected_loop_counter = (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) | ((1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
