#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread;
 uvec4 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid;
 uvec4 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((_GLF_IDENTITY(int(7), int(7))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(int(7), int(7))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3((_GLF_IDENTITY(int(7), int(7))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | ivec3(0, 0, 0)))))) >> _GLF_IDENTITY(int(7), int(7))) + 0))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-52.79) : 1.0)), 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-300.024)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_DEAD(false), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz = GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz = GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz) << _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), max(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))));
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_id;
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz = GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-75.72)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))) || false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))) || false))), true, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))) || false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))) || false))), true, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y = subgroup_id;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz.z = GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.y;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -21816)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (true && (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = (-48523 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ((true)) && true)) && true), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true)))) && true), false, true)), false, false, true)))) || _GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 + (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(95136) : _GLF_IDENTITY(1, (1) ^ 0))) & 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false) && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), mat4(1.0) * (mat2x4(injectionSwitch, 1.0, 0.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))), min(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), mat4(1.0) * (mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)))), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), mat4(1.0) * (mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(396.612)), float(0.0), bool(true))), sin(0.0), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(length(vec4(0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(0.9)), bool(false))), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))))).y)), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec3(1, 0, 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x = subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), max(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz, uvec3(0u, 0u, 0u) ^ (GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)) ^ uvec3(0u, 0u, 0u)))))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))))) | (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))))))).x) - (0u & 54063u)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))) >> uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), _GLF_IDENTITY(clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))), (_GLF_IDENTITY(clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))), uvec3(_GLF_IDENTITY(uvec4(clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))), 0u), clamp(uvec4(clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))), 0u), uvec4(clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))), 0u), uvec4(clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))), 0u)))))) | (clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups)) : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.xyz))))))).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 do
  {
   GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.x = _GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(199709u)));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz.x = GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), true), true)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), true), true), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))), _GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u))))));
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z = _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) | (workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(true, ! (! (true))))))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z, max(workgroup_size * GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z, workgroup_size * GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.z));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (51858 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (injectionSwitch.x > injectionSwitch.y))))))) || false)))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))
                barrier();
               barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 + (int(7))), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec2((true), true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.37)), float(injectionSwitch.y), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.37)), float(injectionSwitch.y), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.37)), float(injectionSwitch.y), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))))
  barrier();
 uint subgroup_base = GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz.z * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz.y = _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), subgroup_base));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), false, false, false)))))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)), min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz))), ((_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz)))) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)), min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz))), ((_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz)))) + uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)), min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz))), ((_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz)))) + uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, (GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)), min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz))), ((_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, min(GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz, GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz)))) + uvec3(0u, 0u, 0u))))).y + GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > (0 | _GLF_IDENTITY(0, (0) >> 0))); _injected_loop_counter --)
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(true, ! (! (true))), true)), _GLF_IDENTITY(! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))), false || (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.9), _GLF_FUZZED(31.01)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(float(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true, true)))))) || false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch)).y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid) | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid))) << uvec4(0u, 0u, 0u, 0u), max((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid) | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid))) << uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid) | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid))) << uvec4(0u, 0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid) | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid))) << uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread) : (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid) | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid))) << uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid << workgroup_size))))))).xyz.y, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, uvec4(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, min(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid, GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid))[0], GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid[1], GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid[_GLF_IDENTITY(2, (2) >> 0)], GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid[3])).xyz.y, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz, _GLF_IDENTITY((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz) / uvec3(1u, 1u, 1u), ((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz) / uvec3(1u, 1u, 1u)) | ((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz) / uvec3(1u, 1u, 1u)))).y, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y) | (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.y)))) + GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.xyz.y + ((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(5704.5716, -6.7, -2143.3407, -91.42)[1]) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.w = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       for(int _injected_loop_counter = (1 ^ (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - (0 >> _GLF_IDENTITY(int(3), int(3)))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(float((-14141 - -51792)))), bool(false))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9140.1788)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(true)))))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), false, true)), true, false)))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0), log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0))))), clamp(_GLF_IDENTITY(vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0))))), min(vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0))))), vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0))))))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0))))), (true ? vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0))))), mat2(1.0) * (vec2(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0)))))))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))) || false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)))))), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), float(_GLF_FUZZED(-96.60)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y, injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))], float(mat2((injectionSwitch)[0], 1.0, 0.0, 1.0))), _GLF_FUZZED(float((true)))), vec2(_GLF_FUZZED(-5.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.7)), float(0.0), bool(true))), 0.0)), 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true)))))), 0.0, 1.0, cos(0.0), tan(0.0))), max(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.7)), float(0.0), bool(true))), 0.0)), 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true)))))), 0.0, 1.0, cos(0.0), tan(0.0))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.7)), float(0.0), bool(true))), 0.0)), 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true)))))), 0.0, 1.0, cos(0.0), tan(0.0))), (true ? vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.7)), float(0.0), bool(true))), 0.0)), 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true)))))), 0.0, 1.0, cos(0.0), tan(0.0))) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) && true), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), bool(true))) / 1.0)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), bool(true))) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), bool(true))) / 1.0)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.x))), bool(true)), (mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), bool(true))) / 1.0)) > injectionSwitch.y))))), true, true, true))), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0))), cos(0.0), tan(0.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)) || false)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-3.8, (true ? -3.8 : _GLF_FUZZED(-16.54)))) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), clamp((injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0), (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0), tan(0.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0, log(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)) || false))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6380.8247, -5359.1643)))), 0.0, 0.0))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y)) || false))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-885.563)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.8) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + length(0.0)), _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, (0.0) * 1.0)), (tan(_GLF_IDENTITY(0.0, (0.0) * 1.0))) - 0.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(22.17)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 0.0)), 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0)), log(1.0), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(roundEven(vec4(695.154, 50.54, 4.2, 3.1).y)) : cos(0.0))), tan(0.0)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / sqrt(vec2(1.0, 1.0))).y)) || false)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.w = read;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.w = GLF_merged2_0_3_75_3_1_4GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idread.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) | (int(5)))) | (int(5))))) >> _GLF_IDENTITY(int(5), int(5))), (false ? _GLF_FUZZED((_injected_loop_counter * _injected_loop_counter)) : ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5)))))); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.5) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0)))) * mat2(1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))) * 1.0)), vec2(_GLF_FUZZED((5.3 * -75.22)), _GLF_FUZZED(-6991.9790)), bvec2(false, false)))) + sqrt(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))) * 1.0)), vec2(_GLF_FUZZED((5.3 * -75.22)), _GLF_FUZZED(-6991.9790)), bvec2(false, false)))) + sqrt(vec2(0.0, 0.0))) : _GLF_FUZZED((ivec2(-34740, -5521) , injectionSwitch)))).y) + determinant(mat2(0.0, 0.0, 1.0, 0.0)))) + 0.0, max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(0.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y), float(_GLF_FUZZED(8558.2070)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y))))) + determinant(mat2(0.0, 0.0, 1.0, 0.0)))) + 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(38.31)), bool(false))), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + sqrt(vec2(0.0, 0.0))) * mat2(1.0), mix(vec2(_GLF_FUZZED(vec4(-0.0, -3.9, 6.2, 14.04).w), _GLF_FUZZED(28.95)), vec2(_GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + sqrt(vec2(0.0, 0.0))) * mat2(1.0))[0], 1.0 * (((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + sqrt(vec2(0.0, 0.0))) * mat2(1.0))[0])), ((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + sqrt(vec2(0.0, 0.0))) * mat2(1.0))[1]), bvec2(true, true))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)))).y))) + determinant(mat2(0.0, 0.0, 1.0, 0.0)))) + 0.0)))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.w], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) >> 0) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (6))), (_GLF_IDENTITY(int(6), (int(6)) + (0 << _GLF_IDENTITY(int(4), int(4))))) + 0))) & 1)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) >> 0) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (6))), (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, clamp(6, 6, 6)), 6))), ~ (~ (int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, clamp(6, 6, 6)), 6))))))) + (0 << _GLF_IDENTITY(int(4), int(4))))) + 0))) & 1)))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-76151) : _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if((GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnext_virtual_gid.xyz.x % 2) == _GLF_IDENTITY(0, min(0, 0)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.w = atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z], 4, 64, 2);
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.w = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, 0u | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, max(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))))], ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (buf[GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z]), (~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, max(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, _GLF_IDENTITY(uvec3(uvec4(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, 0u)), (true ? uvec3(uvec4(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, 0u)) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_id))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))).z])) | _GLF_IDENTITY((~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))), 0u)))])), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY((~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))), 0u)))])), min((~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))), 0u)))])), (~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))), 0u)))]))))))), clamp(_GLF_IDENTITY(~ (buf[GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z]), (~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, max(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid)).z])) | (~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))), 0u)), 0u | (uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))), 0u)))))]))), _GLF_IDENTITY(~ (buf[GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z]), (~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, max(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid)).z])) | (~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, 0u ^ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))))), 0u)))]))), _GLF_IDENTITY(~ (buf[GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z]), (~ (buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid) / uvec3(1u, 1u, 1u)), max(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid, GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid)).z])) | (~ (buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z, ~ (~ (GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z))), 0u)))]))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, 0)), (false ? _GLF_FUZZED((+ -58020)) : int(ivec2(4, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(4, 0)), (false ? _GLF_FUZZED((+ _GLF_IDENTITY(-58020, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(-58020, (-58020) * 1), (0 >> _GLF_IDENTITY(int(4), int(4))), 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(-58020, (-58020) * 1), (0 >> _GLF_IDENTITY(int(4), int(4))), 0)))))))) : int(ivec2(4, 0)))), (_GLF_IDENTITY(int(ivec2(4, 0)), (false ? _GLF_FUZZED((+ -58020)) : int(ivec2(4, 0))))) + 0), _GLF_IDENTITY(int(ivec2(4, 0)), (false ? _GLF_FUZZED((+ -58020)) : int(ivec2(4, 0))))))), 64, 2);
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false));
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec2(true, true))), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true))) && true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))), 0 + ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(-83545) : int(1))), int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   subgroupBarrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[GLF_merged3_0_1_13_1_1_11_2_1_11num_workgroupsubgroup_idvirtual_gid.z], GLF_merged2_0_3_69_3_1_4GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basesubgroup_idread.w, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(4, ~ (~ (4)))))), clamp(~ (_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (true ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(-65149)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(((_GLF_IDENTITY(4, ~ (~ (4))))) | ((_GLF_IDENTITY(4, ~ (~ (4))))), (((_GLF_IDENTITY(4, ~ (~ (4))))) | ((_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))))) / 1)), (_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68381) : _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(4, 4, 4))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), 0 | ((_GLF_IDENTITY(4, ~ (~ (4)))))))), _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), _GLF_IDENTITY(min(0 | _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), 0 ^ (~ ((0)))))), 0 | (0)), int(_GLF_IDENTITY(ivec2(min(0 | (0), 0 | (0)), 0), (ivec2(min(0 | (0), 0 | (0)), 0)) | ivec2(0, 0)))))) | (0 | (0)))) | (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), max((_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY(4, ~ (~ (4)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), max((4), (4)))) * (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), int(2))))), ((~ _GLF_IDENTITY((4), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), max((4), (4)))) * (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), int(2)))))) | ((~ _GLF_IDENTITY((4), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), max((4), (4)))) * (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-58910) : 0))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))))) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), int(2))))))))), ((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) << 0)))))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | (4))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ (4)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-22498))))))), (((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) / 1))))) ^ ((0 & -80821) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(63347)))))) << 0))))), ~ (_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) | _GLF_IDENTITY(((~ (4))), (((~ (4)))) >> 0))), (~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), min((4), (4)))))), ((~ (4))) | ((~ (4)))))) | 0)))))))), (false ? _GLF_FUZZED(-67057) : (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ (4)))))), clamp(~ (_GLF_IDENTITY(4, ~ (~ (4)))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(4, ~ (~ (4))))), (((_GLF_IDENTITY(4, ~ (~ (4)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY(4, ~ (~ (4))))))) | ((_GLF_IDENTITY(4, ~ (~ (4)))))), _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (_GLF_IDENTITY(0 | (0), _GLF_IDENTITY(min(0 | (0), 0 | (0)), int(_GLF_IDENTITY(ivec2(min(0 | (0), 0 | (0)), 0), (ivec2(min(0 | (0), 0 | (0)), 0)) | ivec2(0, 0)))))) | (_GLF_IDENTITY(0, int(ivec2(0, 1))) | (0)))) | (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), max((_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY(4, ~ (~ (4)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), max((4), (4)))) * ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(int(2), int(2)))) >> 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | 0), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))), min(clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | 0), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) | 0), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(52492) : int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2))))))), ((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) << 0)))))) + 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, int(ivec3(4, 1, 0))))), _GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ (4)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(4, ~ (~ (4))))), (((_GLF_IDENTITY(4, ~ (~ (4)))))) ^ _GLF_IDENTITY(((0 & -80821) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(63347))))), 0 | (((0 & -80821) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(63347)))))))) << 0))))), ~ (_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (4)), ((~ (4))) | ((_GLF_IDENTITY(~ (4), 0 ^ (_GLF_IDENTITY(~ (4), ~ (~ (~ (4))))))))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (4)), ((~ (4))) | ((~ _GLF_IDENTITY((4), 1 * ((4))))))), (~ (~ _GLF_IDENTITY((~ (4)), ((~ (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(-64221)))))))) | ((~ (4)))))) | 0))))))))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
