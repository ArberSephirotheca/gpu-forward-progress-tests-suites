#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-196.151)), bool(false))) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_id;
        }
      }
    }
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size));
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))), clamp(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))))))))))) | (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), (uvec3(6u)) >> uvec3(0u, 0u, 0u))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)) & 1, clamp(_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-8926))) : _GLF_FUZZED(-40792))))), 1 & 1, 1 & 1))) << _GLF_IDENTITY(int(5), int(5))), 0 | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)), 1 & 1, 1 & 1)), (false ? _GLF_FUZZED(-99980) : _GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)), 1 & 1, 1 & 1))))) << _GLF_IDENTITY(int(5), int(5))), int(ivec4(((_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)), 1 & 1, 1 & 1))) << _GLF_IDENTITY(int(5), int(5))), 0, 1, 0))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter > 0)))))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ((0 >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec4(7, 1, (0 ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec4(7, 1, (0 ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) | 0) ^ (_injected_loop_counter)) > (0 >> _GLF_IDENTITY(int(0), int(0)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))))); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 & 1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 & 1), ((1 & 1)) + (0 ^ 0)), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY((int(0)), ((int(0))) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(0)), ((_GLF_IDENTITY(int(0), (int(0)) ^ 0)) | (int(0))) + 0)))), 0)), ~ (~ (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((1 & 1), ((1 & 1)) + (0 ^ 0)), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))), 0)), (true ? int(ivec3(_GLF_IDENTITY((1 & 1), ((1 & 1)) + (0 ^ 0)), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) - 0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))), 0)) : _GLF_FUZZED(_injected_loop_counter)))))))); _GLF_IDENTITY(_injected_loop_counter ++, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_injected_loop_counter))), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_injected_loop_counter ++)))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) / uvec4(1u, 1u, 1u, 1u)).w;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(4.2)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(max(_injected_loop_counter, _injected_loop_counter), (max(_injected_loop_counter, _injected_loop_counter)) << (0 << _GLF_IDENTITY(int(7), int(7))))), _injected_loop_counter), (clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) != _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, true, true))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))) || false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
      }
    }
  }
 else
  {
  }
 uint subgroup_base = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.x * _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id))))))), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) : ~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id))))))))))) | uvec4(0u, _GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))), (uint(uint(0u))) * 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), (_GLF_IDENTITY(uint(0u), 0u + _GLF_IDENTITY((uint(0u)), max((uint(0u)), _GLF_IDENTITY((uint(0u)), min((uint(0u)), (uint(0u)))))))) / 1u))), uint(0u))))) * 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(15769u)))) ^ 0u))))) * 1u))))) * 1u)) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), (_GLF_IDENTITY(uint(0u), 0u + _GLF_IDENTITY((uint(0u)), max((uint(0u)), _GLF_IDENTITY((uint(0u)), min((uint(0u)), (uint(0u)))))))) / 1u))), uint(0u))))) * 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(15769u)))) ^ 0u))))) * 1u))))) * 1u)) + 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), (_GLF_IDENTITY(uint(0u), 0u + _GLF_IDENTITY((uint(0u)), max((uint(0u)), _GLF_IDENTITY((uint(0u)), min((uint(0u)), (uint(0u)))))))) / 1u))), uint(0u))))) * 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(15769u)))) ^ 0u))))) * 1u))))) * 1u)) + 0u, min((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), (_GLF_IDENTITY(uint(0u), 0u + _GLF_IDENTITY((uint(0u)), max((uint(0u)), _GLF_IDENTITY((uint(0u)), min((uint(0u)), (uint(0u)))))))) / 1u))), uint(0u))))) * 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(15769u)))) ^ 0u))))) * 1u))))) * 1u)) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), (_GLF_IDENTITY(uint(0u), 0u + _GLF_IDENTITY((uint(0u)), max((uint(0u)), _GLF_IDENTITY((uint(0u)), min((uint(0u)), (uint(0u)))))))) / 1u))), uint(0u))))) * 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(15769u)))) ^ 0u))))) * 1u))))) * 1u)) + 0u)) : _GLF_FUZZED(80108u))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(0u)))), (uint(uint(0u))) * 1u))), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)) / 1u)), uint(uint(0u)))), (uint(uint(0u))) * 1u)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY(min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u))))), _GLF_IDENTITY((min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))))), (_GLF_IDENTITY((min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))))), ((min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u))))))) ^ 0u)) ^ 0u))), (false ? _GLF_FUZZED(125901u) : uint(uint(_GLF_IDENTITY((min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))))), (_GLF_IDENTITY((min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))))), ((min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u))))))) ^ 0u)) ^ 0u)))))) - 0u)))))), 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u)) + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))), min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) | (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), clamp(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))) << uvec4(0u, 0u, 0u, 0u))), (~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), clamp(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))))) << uvec4(0u, 0u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u)))), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), clamp(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))) << uvec4(0u, 0u, 0u, 0u))))), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))), (~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id[2], GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id[3]))), clamp(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id)))) << uvec4(0u, 0u, 0u, 0u))))), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id))))) << uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u))))), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) : ~ ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), max(~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id), ~ (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id))))))))))) | uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u), uint(0u), uint(0u)))), 0u ^ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))), _GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) - 0u) * 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), uint(0u))))) * 1u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(uint(0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(uint(0u))))), (0u ^ 0u), 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((uint(uint(0u))), min(_GLF_IDENTITY((uint(uint(0u))), max((uint(uint(0u))), (uint(uint(0u))))), (uint(uint(0u))))), (0u ^ 0u), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(uint(0u))))), (0u ^ 0u), 0u)))))) | 0u)) * 1u))))) * 1u)) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))), (uint(uint(0u))) * 1u))), (_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY((uint(uint(0u))), max(_GLF_IDENTITY((uint(uint(0u))), min((uint(uint(0u))), (uint(uint(0u))))), (uint(uint(0u))))) * 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))), (uint(uint(0u))) * 1u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))), (uint(uint(0u))) * 1u))), (_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))), (uint(uint(0u))) * 1u)))) | (_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))), (uint(uint(0u))) * 1u))))), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) | (_GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) + 0u)))), (uint(uint(0u))) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) | (_GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) + 0u)))), (uint(uint(0u))) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) | (_GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) + 0u)))), (uint(uint(0u))) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) | (_GLF_IDENTITY(clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u)))), (clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))) + 0u)))), (uint(uint(0u))) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id)))))))), (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u)), 0u | (uint(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u))), _GLF_IDENTITY(0u, (0u) / 1u))))))), (uint(_GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (uint(0u)), (~ (uint(0u))) | 0u))))) * 1u)))) | (_GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(uint(0u)), uint(uint(_GLF_IDENTITY(0u, (0u) / 1u))))), (uint(uint(_GLF_IDENTITY(0u, 0u | (0u))))) * 1u))))), 0u, 0u, 0u))) | 0u)))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))) - 0u)), uint(uint(0u)))), (uint(uint(0u))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), uint(uint(0u)))), (uint(uint(0u))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), uint(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)), _GLF_IDENTITY(uint(uint(0u)), clamp(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), 0u | (uint(uint(0u)))), uint(uint(0u)))))), (uint(uint(0u))) * 1u)))))))), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), min(_GLF_IDENTITY((uint(uint(0u))), (_GLF_IDENTITY((uint(uint(0u))), 0u ^ ((uint(uint(0u)))))) / 1u), (uint(uint(0u))))) * 1u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, 1u * (0u)))), 0u ^ (_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) * _GLF_IDENTITY(1u, (1u) >> 0u))))))))), 0u)))).y;
 uint virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.z + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y), max(((subgroup_local_id + 1) % GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id.y), ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id, (GLF_merged4_0_1_11_1_1_13_2_1_14_3_1_12subgroup_idsubgroup_sizeworkgroup_baseworkgroup_id) << uvec4(0u, 0u, 0u, 0u)).y)));
 uint read = 0;
 do
  {
   do
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ (~ (_GLF_IDENTITY((64), min((64), (_GLF_IDENTITY(64, min(64, 64)))))))))), 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - 0u)), (max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - 0u))) ^ 0u), (max(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) + 0u) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) + 0u) - 0u), min(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))) + 0u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) + 0u) - 0u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u))), ((subgroup_local_id % 2)) + 0u) - 0u), 1u, 1u))))), _GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) + 0u) - 0u))))) | (max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, uint(uvec4(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), 1u, 1u, (uvec4(31542u, 117278u, 119344u, 148847u).y & 0u))))) - 0u))))), (subgroup_local_id % 2) / 1u)) == 0)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true))))))))), ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true))))))))), ! (! (true)))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4(! (_GLF_WRAPPED_IF_TRUE(true)), false, false, false)))))) || false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         do
                          {
                           do
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))))
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp(_GLF_IDENTITY((virtual_gid) - 0u, (_GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))) << 0u), (virtual_gid) - 0u, (virtual_gid) - 0u)))], 0u))), 4, 64, 2), _GLF_IDENTITY(uint(uint(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp(_GLF_IDENTITY((virtual_gid) - 0u, (_GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))) << 0u), (virtual_gid) - 0u, (virtual_gid) - 0u)))], 0u))), 4, 64, 2))), (true ? uint(uint(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, clamp(_GLF_IDENTITY((virtual_gid) - 0u, (_GLF_IDENTITY((virtual_gid) - 0u, clamp((virtual_gid) - 0u, (virtual_gid) - 0u, (virtual_gid) - 0u))) << 0u), (virtual_gid) - 0u, (virtual_gid) - 0u)))], 0u))), 4, 64, 2))) : _GLF_FUZZED((subgroup_id & subgroup_base))))), 0u | (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec2(buf[virtual_gid], 0u))), 4, 64, 2)));
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), 0 + (_GLF_IDENTITY(int(0), min(int(0), int(0)))))) - 0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(int(0), 1, 1)), 0 ^ (int(ivec3(int(0), 1, 1)))))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, ~ (~ (0)))), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), min((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), ((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) << 0)))) >> 0, int(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) >> 0, min(((_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), int(0))), int(ivec3(int(0), 1, 1))))) >> 0, ((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))), 1, 1))))) >> 0)), 1, 1)))) - 0)))))), int(0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(int(0), 1, 1)), 0 ^ (int(ivec3(int(0), 1, 1)))))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, ~ (~ (0)))), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), min((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), ((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) << 0)))) >> 0, int(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) >> 0, min(((_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), int(0))), int(ivec3(int(0), 1, 1))))) >> 0, ((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))), 1, 1))))) >> 0)), 1, 1)))) - 0)))))), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(int(0), 1, 1)), 0 ^ (int(ivec3(int(0), 1, 1)))))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, ~ (~ (0)))), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), min((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), ((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) << 0)))) >> 0, int(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) >> 0, min(((_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), int(0))), int(ivec3(int(0), 1, 1))))) >> 0, ((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))), 1, 1))))) >> 0)), 1, 1)))) - 0)))))), int(0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec3(int(0), 1, 1)), 0 ^ (int(ivec3(int(0), 1, 1)))))) - 0, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, ~ (~ (0)))), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), min((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1)))), ((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) << 0)))) >> 0, int(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 1))))) >> 0, min(((_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))), int(0))), int(ivec3(int(0), 1, 1))))) >> 0, ((_GLF_IDENTITY(int(0), int(ivec3(int(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))), 1, 1))))) >> 0)), 1, 1)))) - 0)))))), int(0)) : _GLF_FUZZED(_injected_loop_counter))))))); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0))); _injected_loop_counter --)
                                  {
                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) - length(vec2(0.0, 0.0)), min((0.0) - length(vec2(0.0, 0.0)), (0.0) - length(vec2(0.0, 0.0)))), (_GLF_IDENTITY((0.0) - length(vec2(0.0, 0.0)), min((0.0) - length(vec2(0.0, 0.0)), (0.0) - length(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))))) / 1.0)), injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) - length(vec2(0.0, 0.0)), clamp((0.0) - length(vec2(0.0, 0.0)), (0.0) - length(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-153.829, -90.03))))), (0.0) - length(vec2(0.0, 0.0)))), min((0.0) - length(vec2(0.0, 0.0)), (0.0) - length(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-7.2), _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) / 1.0)), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(79.56)), bvec2(true, false)))) + vec2(0.0, 0.0)))))))), injectionSwitch.x)))) && true); _injected_loop_counter --)
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true))) && true))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true))) && true))))))))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             do
                                              {
                                               read = atomicLoad(buf[virtual_gid], 4, 64, 2);
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))));
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true))), true), true), true)))))))))));
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))) || false));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupBarrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-49863), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-49863), (_GLF_FUZZED(-49863)) << 0)))))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (4) / 1)), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (4) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (4) / 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (4) / 1))) * (1 ^ 0)))) - _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), (0))))), clamp((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / (1 | 1)), 0, 0)) | (0))))) << 0, clamp((_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, 0 | (0))) << 0))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)) - _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) / 1)))), (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-62875) : _GLF_IDENTITY(0, (0) ^ 0)))))), (_GLF_IDENTITY(0, 0 | (0))))) << 0, clamp((_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(4), int(4)))), 0 | (_GLF_IDENTITY(0, (0) << 0)))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1), ivec2(0, 0) + (ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1)))), clamp(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1), ivec2(0, 0) + (ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1), ivec2(0, 0) + (ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1), ivec2(0, 0) + (ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1))))))), 0 | (_GLF_IDENTITY(0, ~ (~ (0)))))) << 0, ((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0)))))) << 0) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) * 1))))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(_GLF_IDENTITY(0 | (0), (0 | (0)) / 1), 0 | (0), 0 | (0))))), (_GLF_IDENTITY(0, 0 | (0))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0))), min((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0)))))), _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(_GLF_IDENTITY(0 | (_GLF_IDENTITY(0, 0 + (0))), (0 | (0)) / 1), 0 | (_GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(0 | (0), max(0 | (0), 0 | (0))))))), (_GLF_IDENTITY(0, 0 | (0)))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (0 | (0)) >> 0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(_GLF_IDENTITY(0 | (0), (0 | (0)) / 1), 0 | (0), 0 | (0))))), (_GLF_IDENTITY(0, 0 | (0))))))) | _GLF_IDENTITY((int(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 | (0), (0 | (0)) / 1), (_GLF_IDENTITY(0 | (0), (0 | (0)) / 1)) >> 0), 0 | (0), 0 | (0))))), (_GLF_IDENTITY(0, 0 | (0))))))), clamp((int(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 | (0), (0 | (0)) / 1), (_GLF_IDENTITY(0 | (0), (0 | (0)) / 1)) >> 0), 0 | (0), 0 | (0))))), (_GLF_IDENTITY(0, 0 | (0))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 | (0), (0 | (0)) / 1), (_GLF_IDENTITY(0 | (0), (0 | (0)) / 1)) >> 0), 0 | (0), 0 | (0))))), (_GLF_IDENTITY(0, 0 | (0))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) | 0)) | (_GLF_IDENTITY(0, 0 | (0)))), _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 | (0), (0 | (0)) / 1), (_GLF_IDENTITY(0 | (0), (0 | (0)) / 1)) >> 0), 0 | (0), 0 | (0))))), (_GLF_IDENTITY(0, 0 | (0)))))))))))) << 0, clamp((_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), min((0), (0))))) << 0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))))) << 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, (1) - 0)))), 0 | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED((- -66114)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, (1) - 0)))), 0 | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, (1) - 0)))), 0 | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, (1) - 0)))), 0 | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1, (1) - 0)))), 0 | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) << 0, clamp((_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (_GLF_IDENTITY(0, ~ (~ (0)))), (0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))) >> 0))) << 0))), (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0)), (0) | (_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) / 1) : _GLF_FUZZED((+ 68156))))))))), (_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))), 0 | (0))))) << 0, clamp((_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, 0 | (0))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (_GLF_IDENTITY(0, ~ (~ (0)))), (0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) / 1)) >> 0))))) >> 0))), ~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) << 0)))))), (0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) << 0))), clamp((~ (_GLF_IDENTITY(0, (0) << 0))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) << 0))), ((~ (_GLF_IDENTITY(0, (0) << 0)))) | 0), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) << 0))), ((~ (_GLF_IDENTITY(0, (0) << 0)))) ^ 0))) / 1)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(662.702) : 0.0))) + 0.0), injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, ~ (~ (0))))))))))) / 1)) >> 0))))) >> 0)))))) << 0))) : _GLF_FUZZED(_GLF_IDENTITY(max(-43470, -65871), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(-43470, -65871) : _GLF_FUZZED(_injected_loop_counter)))))), 0 ^ ((_GLF_IDENTITY(4, (4) / 1)) - _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0))), int(ivec2((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0))), 0)))), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0))), int(ivec2((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0))), 0)))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0))), int(ivec2((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) | (0))), 0)))))))), (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, int(ivec4(0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))))))) << 0, clamp((_GLF_IDENTITY(0, 0 | (0))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))) << 0, int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), max(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, 0 | (0))))) << 0))), (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), 0 + ((~ (0)))))))) << 0))))), (_GLF_IDENTITY(4, (4) / 1)) - _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), max(0 | (0), 0 | (0))))), clamp((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))))) << 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) + 0)))) | (0))) << 0, 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) + 0)))) | (0))) << 0, min((_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) + 0)))) | (0))) << 0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) + 0)))) | (0))) << 0)))), (_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(_GLF_IDENTITY(~ (0), int(ivec4(~ (0), _GLF_IDENTITY(1, int(ivec2(1, 0))), 0, 1))), ~ (0))))) | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))) ^ 0)))))))) << 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) >> 0), 4)), (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) | (_GLF_IDENTITY(4, (4) / 1)))) - _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), 0 | (_GLF_IDENTITY(0, 0 | (0))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), 0 | ((_GLF_IDENTITY(0, 0 | (0)))))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))))) | 0))), (_GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), (0)))) | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), _GLF_IDENTITY(max((0), (0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(max((0), (0)), (max((0), (0))) * 1))), min(int(int(_GLF_IDENTITY(max((0), (0)), (_GLF_IDENTITY(max((0), (0)), 0 + (max((0), (0))))) * 1))), int(int(_GLF_IDENTITY(max(_GLF_IDENTITY((0), 1 * ((0))), (0)), (max((0), (0))) * 1))))))), (0), (0))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), min(0 | (0), _GLF_IDENTITY(0 | (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0))), max(_GLF_IDENTITY(0 | (0), (0 | (0)) << 0), 0 | (0))))))))) << 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), 0 | (_GLF_IDENTITY(0, 0 | (0))))) << 0, (_GLF_IDENTITY(0, 0 | (0))) << 0, (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)))))))) << 0))), ((_GLF_IDENTITY(4, (4) / 1)) - _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (false ? _GLF_FUZZED(11541) : _GLF_IDENTITY(0 | (0), (0 | (0)) / _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))))))))), clamp((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))))) << 0, clamp((_GLF_IDENTITY(0, 0 | (0))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)), 0 | (0))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)), 0 | (0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)), 0 | (0))))) << 0, (_GLF_IDENTITY(0, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), 0 ^ (~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ((_GLF_IDENTITY(0, ~ (~ (0))))) | ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), int(ivec3(_GLF_IDENTITY((0), ((0)) ^ 0), 1, 1))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), max((_GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ((_GLF_IDENTITY(0, ~ (~ (0))))) | _GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))))), 0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ (~ (0))))), (((_GLF_IDENTITY(0, ~ (~ (0)))))) >> 0))))) / 1), ((_GLF_IDENTITY(0, ~ (~ (0))))) - (0 << _GLF_IDENTITY(int(1), int(1)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), clamp((_GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(0, ~ (~ (0)))))), ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), int(int((0)))) : _GLF_FUZZED(25103))))))) | ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))) >> 0)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))) >> 0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))) >> 0))))))))), ((_GLF_IDENTITY(0, ~ (~ (0))))) - (0 << _GLF_IDENTITY(int(1), int(1)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ ((_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), 0 ^ ((0))))))) : _GLF_FUZZED(72313)))))) - (0 << _GLF_IDENTITY(int(1), int(1)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ((_GLF_IDENTITY(0, ~ (~ (0))))) - (0 << _GLF_IDENTITY(int(1), int(1)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3141.1243) : injectionSwitch.x)) < injectionSwitch.y)) ? (~ (0)) : _GLF_FUZZED(bitCount(70999)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ((_GLF_IDENTITY(0, ~ (~ (0))))) | ((_GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0)))), ((_GLF_IDENTITY(0, ~ (~ (0))))) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), min(0 << _GLF_IDENTITY(int(1), int(1)), 0 << _GLF_IDENTITY(int(1), int(1)))))))))))) << 0)))) * 1)))) * 1)));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
