#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(false)))), true, true)), ! (! (bool(bvec3(! (! (! (_GLF_DEAD(false)))), true, true))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.9) : injectionSwitch.y)))), true, false, false)))))) && true))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.33)))) - 0.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(false))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7886.1509, 783.934)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7886.1509, 783.934)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, tan(0.0), 0.0, 0.0, determinant(mat2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, sin(0.0), 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, abs(0.0), 0.0, sqrt(0.0), 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, length(vec2(0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, sin(0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * abs(1.0)), 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * abs(1.0)), 1.0)).y) * 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, log(1.0), 0.0, 0.0)))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(0.0, log(1.0), 0.0, 0.0)), min(determinant(mat2(0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, log(1.0), 0.0, 0.0)))))), (false ? _GLF_FUZZED(-1904.9512) : float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5485.9619) : 0.0)), log(1.0), 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 1.0, 0.0, 1.0, determinant(mat2(0.0, log(1.0), 0.0, 0.0)))), (false ? _GLF_FUZZED(-1904.9512) : float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) * determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, log(1.0), 0.0, 0.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0)) * mat2(1.0))))), mix(float(_GLF_FUZZED(9.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-37.25)), float(injectionSwitch.y), bool(true)))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-28.56 / -6799.0574)), _GLF_FUZZED(vec3(-406.569, 6.5, 1.7).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2x3((injectionSwitch)[1], sin(0.0), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(9.0, -5.4, -9.0, -966.301, 2.9, -1.1)) : mat2x3((injectionSwitch)[1], sin(0.0), 0.0, 0.0, 0.0, 0.0)))))), bvec2(true, true))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(88.99)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))))) && true))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))))) && true))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))))) && true))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-49.71), _GLF_FUZZED(385.589)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))]), _GLF_IDENTITY(vec2(mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))]), 0.0, 1.0, 0.0, 1.0)), (vec2(mat3x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))]), 0.0, 1.0, 0.0, 1.0))) + vec2(0.0, 0.0))), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(sqrt(vec2(1.0, 1.0))) + (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true, true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))) || false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-659.338, -1.9)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(1.5, -5510.9933).r)), vec2(_GLF_FUZZED(-16.88), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(3.7)), float((injectionSwitch)[1]), bool(true))) : _GLF_FUZZED(427.144)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y)), true)))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(1.5, -5510.9933).r)), vec2(_GLF_FUZZED(-16.88), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(1.5, -5510.9933).r)), vec2(_GLF_FUZZED(-16.88), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(1.5, -5510.9933).r)), vec2(_GLF_FUZZED(-16.88), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bool(false))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0) > injectionSwitch.y), false, true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), false || (! (bool(_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u))), clamp(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))))).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(110904u, 110933u, 8411u)))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(110904u, 110933u, 8411u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(110904u, (110904u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 110933u, 8411u), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(110904u, (110904u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 110933u, 8411u), (uvec3(_GLF_IDENTITY(110904u, (110904u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 110933u, 8411u)) | (uvec3(_GLF_IDENTITY(110904u, (_GLF_IDENTITY(110904u, (false ? _GLF_FUZZED(subgroup_size) : 110904u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 110933u, 8411u))))))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(110904u, 110933u, _GLF_IDENTITY(8411u, (8411u) + 0u))))).x) + _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 1u))))) ^ 0u))))), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, false)), true && (bool(bvec3(! (false), true, false)))))) || false))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, false)), true && (bool(bvec3(! (false), true, false)))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(984.646)), _GLF_IDENTITY(vec2(_GLF_FUZZED(578.140), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(578.140), (injectionSwitch)[1])) - vec2(0.0, 0.0)), bvec2(false, true))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(984.646)), vec2(_GLF_FUZZED(578.140), (injectionSwitch)[1]), bvec2(false, true))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.5)), float(0.0), bool(true))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))).x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(81.93)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], _GLF_FUZZED(_GLF_IDENTITY(984.646, max(984.646, 984.646)))), vec2(_GLF_FUZZED(578.140), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))).x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-1.1) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(-1.1) : injectionSwitch.y), _GLF_IDENTITY((false ? _GLF_FUZZED(-1.1) : injectionSwitch.y), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-1.1) : injectionSwitch.y), mix(float(_GLF_FUZZED(-767.147)), float((false ? _GLF_FUZZED(-1.1) : injectionSwitch.y)), bool(true))), (false ? _GLF_FUZZED(-1.1) : injectionSwitch.y))), (false ? _GLF_FUZZED(-1.1) : injectionSwitch.y))))))) + 0.0), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5471.6232))), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * 1.0), 1.0)), 0.0, 0.0, 0.0, 0.0, abs(1.0))), (true ? float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1101.4542), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(_GLF_IDENTITY(vec4((injectionSwitch), 1.0, 0.0), max(vec4((injectionSwitch), 1.0, 0.0), _GLF_IDENTITY(vec4((injectionSwitch), 1.0, 0.0), clamp(vec4((injectionSwitch), 1.0, 0.0), vec4((injectionSwitch), 1.0, 0.0), vec4((injectionSwitch), 1.0, 0.0)))))))[0])), _GLF_FUZZED(-78.55)), bvec2(true, false))).y, (true ? injectionSwitch.y : _GLF_FUZZED(-5471.6232))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-5035.0880)))), float(_GLF_FUZZED(9372.5132)), bool(false))), 0.0, abs(1.0))) : _GLF_FUZZED(-1.5))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)), true, true, false))))))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), false)))), false, false, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), false)))), false, false, false)))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.2)), bool(false))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(583.309)), bvec2(true, false))), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(583.309)), bvec2(true, false))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(583.309)), bvec2(true, false))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(583.309)), bvec2(true, false))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(583.309)), bvec2(true, false))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.94), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(583.309)), bvec2(true, false))), injectionSwitch)).y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint read = 0;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))), bool(bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (! (! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))))))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec3((_GLF_IDENTITY(! (false), ! (! (! (false))))), true, true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (0 ^ 0) + (64)), (_GLF_IDENTITY(64, (0 ^ 0) + (64))) | (_GLF_IDENTITY(64, (0 ^ 0) + (64))))) >> 0), 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (0 ^ 0) + (64)), (_GLF_IDENTITY(64, (0 ^ 0) + (64))) | (_GLF_IDENTITY(64, (0 ^ 0) + (64))))) >> 0))), 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((0 ^ 0), clamp((0 ^ 0), _GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-19789) : (0 ^ 0))), (0 ^ 0))) + (64))) >> 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.9) : injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4491.4193))), ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true)))))))) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(48.36)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true)))))))) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(vec2(704.195, 2.8))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u), (uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))) + uvec4(0u, 0u, 0u, 0u))))))), uint(uvec2(uint(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y)), 0u, 1u), (uvec4(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u)))))), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) | 0), (subgroup_local_id % 2) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - 0u))))) * 1u)) == _GLF_IDENTITY(0, min(0, 0)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), true), false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))))), true), false)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))) || false)) || (false)), true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true))), true, false))))))), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), true, false))))), true)), true), false))))))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4465.8396)), bool(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))) && (false)), true, true))), ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(mat2x4((injectionSwitch) - vec2(0.0, 0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, true, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0))))), (injectionSwitch) / abs(vec2(1.0, 1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(abs(vec2(1.0, 1.0)), mix(vec2((abs(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-444.608)), vec2(_GLF_FUZZED(-0.4), (abs(vec2(1.0, 1.0)))[1]), bvec2(false, true)))).y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-75167)))))), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-75167)))))), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2))), 1u, 1u), (uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-75167)))))), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2))), 1u, 1u)) >> uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-75167)))))), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2))), 1u, 1u), (uvec3(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-75167)))))), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2))), 1u, 1u)) >> uvec3(0u, 0u, 0u))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x) / abs(1.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(cos(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0), (0.0) / 1.0)) * 1.0), 0.0)), min(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-2.1), _GLF_IDENTITY((cos(vec2(0.0, 0.0))), vec2(0.0, 0.0) + ((cos(vec2(0.0, 0.0)))))[1]), vec2(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], mix(float(_GLF_FUZZED(-5653.9228)), float((cos(vec2(0.0, 0.0)))[0]), _GLF_IDENTITY(bool(true), true && (bool(true))))), _GLF_FUZZED(442.322)), bvec2(true, false))))) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), (injectionSwitch))), mix(vec2(_GLF_FUZZED(0.4), (cos(vec2(0.0, 0.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))))))[1]), vec2((cos(vec2(0.0, 0.0)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))[0], _GLF_FUZZED(-955.306)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, cos(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(float(5044u))), vec2(_GLF_FUZZED((-21.59 / -9.4)), _GLF_IDENTITY((vec2(0.0, 0.0))[1], (false ? _GLF_FUZZED(7.9) : (vec2(0.0, 0.0))[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, cos(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-4.7), _GLF_FUZZED(-6.9)), vec2(((vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(565.752)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], ((vec2(0.0, 0.0)))[1]), bvec2(true, true))) - vec2(0.0, 0.0))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, cos(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.0)), float(0.0), bool(true))), 0.0)), 0.0)) * (injectionSwitch)).y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(atan(-26.78)) : injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0), vec2(vec3((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0)))))), max(cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-234.030, min(-234.030, -234.030))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), (vec2(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9.8, 517.259)) : vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0), mat3(mat4x3(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0))))))))[1]), bvec2(false, true))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float(_GLF_FUZZED(-698.277)), float((mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-82.34 * -1.9))), float(1.0), bool(true)))) * (injectionSwitch))[0]), bool(true))), (mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6)))), 0 | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6)))))), _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6))))))])), _GLF_IDENTITY(_GLF_FUZZED(-9.3), (true ? _GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3))) : _GLF_FUZZED(2.8)))), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))))))[0], max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) ? _GLF_FUZZED(-7465.4829) : (mat2(1.0) * (injectionSwitch))[0])), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], min((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0])))), _GLF_FUZZED(-9.3)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), (true ? vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]) : _GLF_FUZZED(vec2(-5.7, -7399.7505)))), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[1]), bvec2(false, true))))))))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-234.030), (false ? _GLF_FUZZED(7.5) : _GLF_FUZZED(-234.030))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))), mix(vec2((min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-234.030), (false ? _GLF_FUZZED(7.5) : _GLF_FUZZED(-234.030))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))[0], _GLF_FUZZED(-84.21)), vec2(_GLF_FUZZED(-3.1), (min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-234.030), (false ? _GLF_FUZZED(7.5) : _GLF_FUZZED(-234.030))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0), vec2(vec3((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(asin(injectionSwitch)) : (injectionSwitch))), mix(vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch))))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(-9.2))), _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))) * mat2(1.0)))))), max(cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-234.030, min(-234.030, -234.030))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), (vec2(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9.8, 517.259)) : vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0), mat3(mat4x3(mat3(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0))))))))[1]), bvec2(false, true))), min(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float(_GLF_FUZZED(-698.277)), float((mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-82.34 * -1.9))), float(1.0), bool(true)))) * (injectionSwitch))[0]), bool(true))), (mat2(1.0) * (injectionSwitch))[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6)))), 0 | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6)))))), _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6))))))])), _GLF_IDENTITY(_GLF_FUZZED(-9.3), (true ? _GLF_IDENTITY(_GLF_FUZZED(-9.3), min(_GLF_FUZZED(-9.3), _GLF_FUZZED(-9.3))) : _GLF_FUZZED(2.8)))), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))))))[0], max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) ? _GLF_FUZZED(-7465.4829) : (mat2(1.0) * (injectionSwitch))[0])), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], min((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[0])))), _GLF_FUZZED(-9.3)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), (true ? vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]) : _GLF_FUZZED(vec2(-5.7, -7399.7505)))), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[1]), bvec2(false, true))))))))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-234.030), (false ? _GLF_FUZZED(7.5) : _GLF_FUZZED(-234.030))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))), mix(vec2((min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-234.030), (false ? _GLF_FUZZED(7.5) : _GLF_FUZZED(-234.030))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))[0], _GLF_FUZZED(-84.21)), vec2(_GLF_FUZZED(-3.1), (min(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_FUZZED(-234.030), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.3)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-234.030), (false ? _GLF_FUZZED(7.5) : _GLF_FUZZED(-234.030))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y : _GLF_FUZZED(-1754.8759))), clamp(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-0.9 / 9.0)), _GLF_FUZZED(44.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, _GLF_IDENTITY(injectionSwitch, cos(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, length(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-1.9)), bool(false)))), bool(true))))), float(mat2x3(float(mat2x3(0.0, length(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, tan(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))))), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], abs(1.0) * ((cos(vec2(0.0, 0.0)))[0])), _GLF_FUZZED(220.499)), vec2(_GLF_FUZZED(-8257.3346), (cos(vec2(0.0, 0.0)))[1]), bvec2(false, true))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-6.4)), bool(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(log(-2.4)) : injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0)) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.3) : injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(5.3, (_GLF_IDENTITY(5.3, (5.3) / _GLF_ONE(1.0, injectionSwitch.y))) / _GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch.y))) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.3) : injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(5.3, (_GLF_IDENTITY(5.3, (5.3) / _GLF_ONE(1.0, injectionSwitch.y))) / _GLF_ONE(1.0, injectionSwitch.y))) : injectionSwitch.y))) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5194.4278) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED((float(-74661) - float(177113u)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(865.433)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, round(length(normalize(1.0))), determinant(mat4(0.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0, sqrt(0.0), log(1.0), 0.0, sin(0.0), 1.0, abs(0.0), 0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(270.614) : injectionSwitch.x)), injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(_GLF_IDENTITY(float(float(injectionSwitch.x)), (float(float(injectionSwitch.x))) + 0.0), _GLF_IDENTITY(float(float(injectionSwitch.x)), (float(float(injectionSwitch.x))) - _GLF_IDENTITY(abs(0.0), 0.0 + (_GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(8.5)), bool(false))))))))), injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, log(1.0), sqrt(0.0), 1.0, 0.0, sin(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-18.16), _GLF_FUZZED(float(197320u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false, false), false)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (0 | 0) | (4)), 4))), clamp((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (0 | 0) | (4)), 4))), _GLF_IDENTITY((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (0 | 0) | (4)), 4))), (false ? _GLF_FUZZED(38956) : _GLF_IDENTITY((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (0 | 0) | (4)), 4))), (true ? (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (0 | 0) | (4)), 4))) : _GLF_FUZZED(-67826))))), (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (0 | 0) | (4)), 4))))) << 0, int(ivec2((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (0 | 0) | (4)), 4))) << 0, 1)))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
