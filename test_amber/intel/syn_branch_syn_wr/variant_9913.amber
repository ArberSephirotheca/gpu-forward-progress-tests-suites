#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x : _GLF_FUZZED(subgroup_id))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(154089u, 185815u, 145461u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x : _GLF_FUZZED(subgroup_id))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_size)))), min(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_size))))))), (1u & 1u), 1u)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))))), ((! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))))) && true)) || false)) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u, 0u, 0u)), ~ (~ (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u), (uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((workgroup_base + subgroup_base), min((workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(subgroup_id)));
 for(int _injected_loop_counter = _GLF_IDENTITY(0, 1 * (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1))), false, true, true))))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, tan(0.0), log(1.0)))) < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5860.0421), _GLF_FUZZED(-68.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(-2.8, -8.4)))).y)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5860.0421), _GLF_FUZZED(-68.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(-2.8, -8.4)))).y)) && true)), bool(bool((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5860.0421), _GLF_FUZZED(-68.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(-2.8, -8.4)))).y)) && true)))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || false))) && true)))))) || false) || false)))))) && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))).y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && true)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, false, true))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) ? _GLF_FUZZED(-6.5) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && true))) || false))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false))) || false)))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y) && true)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))).y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && true)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, false, true))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) ? _GLF_FUZZED(-6.5) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && true))) || false))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false))) || false)))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y) && true)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) && true)))))) || false) || false)))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) && true)))))) || false) || false))), ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) && true)))))) || false) || false)))) && true)))))) && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(2677.8146) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-447.265)), float(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)))))))).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && true)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)) && true)), false, false, true))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-6.5), float(mat4x2(_GLF_FUZZED(-6.5), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0))) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), true && (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y)), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false))) || false))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0))).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) * mat2(1.0))).x < injectionSwitch.y)) || false)) ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) && true)))))) || false) || false))), bool(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))) && true)))))) || false) || false))), true)))))) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false))))))))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), false, true))), false), false))))))))), true)))), false, false))))))), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && true))) && true)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, false, true))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-6.5), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-6.5), max(_GLF_FUZZED(-6.5), _GLF_FUZZED(-6.5))))) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true, true)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false))) || false))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), true)), true && (bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false)), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false)))) && true))) && true)))))) || false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false)), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false)))) && true))) && true)))))) || false) || false)))))))) && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(false, ! (! (false))))))), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(1.7)), bool(false))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), float(mat3x2(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))))))))).y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && true)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false, false, true))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && true)), true && ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && true)))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), true, true))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), true, true))), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), true, true))), false), true, true)), true, false)))))), false, false, true)))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false))), ((! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.5) : injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))) || false)))) && true) || false))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(vec4(-565.729, -149.408, -4.5, 6364.3646).t)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (mat2(injectionSwitch, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (mat2(injectionSwitch, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (mat2(injectionSwitch, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (mat2(injectionSwitch, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))))[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(-14.26)))) < injectionSwitch.y)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))))), true)))))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 0u, 0u), max(uvec3(workgroup_base + subgroup_base, 0u, 0u), uvec3(workgroup_base + subgroup_base, 0u, 0u)))) / uvec3(1u, 1u, 1u)))), workgroup_base + subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), 0u ^ (~ (subgroup_local_id + 1)))))) / 1u)), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))), (0u | 0u) | (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0))))), 0u | (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) ^ 0))))))) | ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)))), _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))) + 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 0u, 0u)))))))), min((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) ^ 0u), subgroup_size))), (workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size)) - 0u)) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)))))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(54205)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(140211u) : subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u)))))) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))) | (subgroup_size))), min(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))) % subgroup_size))) | 0u))))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(54205)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(140211u) : subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u)))))) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))) | (subgroup_size))), min(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))) % subgroup_size))) | 0u))))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(54205)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(140211u) : subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u)))))) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base)))) | (subgroup_size))), min(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 147156u))))) % subgroup_size))) | 0u))))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size)))))) / 1u) : _GLF_FUZZED((subgroup_size)))), (((subgroup_local_id + 1) % subgroup_size)) - 0u)) + 0u), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(max(727u, num_workgroup))))), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)))))))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)), 1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), clamp((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), 0u)), 0u | (uint(uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)), 1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), clamp((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), 0u))))), (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), 0u, 1u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)))), uint(uvec2(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)))), 1u)))) + (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) + 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_base) : (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_base + subgroup_size)) : subgroup_size, 0u | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_base + subgroup_size)) : subgroup_size)))), subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), min((_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))), (subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((~ _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))), (subgroup_size)))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u), subgroup_size))), _GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) - 0u)) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + 1) % subgroup_size)) - 0u)) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)), (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), 0u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + 1) % subgroup_size)) - 0u)) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)), (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), 0u, 1u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + 1) % subgroup_size)) - 0u)) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)), (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + 1) % subgroup_size)) - 0u)) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)), (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), 0u, 1u))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(3165u) : (workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) >> (0u | 0u))))) - 0u)) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uint((subgroup_local_id + 1))), clamp(uint(uint((subgroup_local_id + 1))), uint(uint((subgroup_local_id + 1))), uint(uint((subgroup_local_id + 1)))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : (((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : (((subgroup_local_id + 1) % subgroup_size))) / 1u))) - 0u)) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u + ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ 0u)) + 1) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(workgroup_id)))) / 1u), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, max(0u, 0u))), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), clamp(~ (~ (0u)), ~ (~ (0u)), ~ (~ (0u))))), (0u) / 1u), 0u, 0u)), (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(subgroup_local_id)))) | (0u))))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (0u) / 1u), 0u, 0u)), (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))))), 0u, 1u))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | 0u) + _GLF_IDENTITY(subgroup_base, 0u ^ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uvec3((subgroup_base), 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u))))))), (uint(uvec3((subgroup_base), 0u, 1u))) | (uint(uvec3((subgroup_base), 0u, 1u)))))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) + 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | ((_GLF_IDENTITY(1u & 1u, 0u ^ (_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u), subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size)) - 0u)) + _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(min(workgroup_base + subgroup_base, workgroup_base + subgroup_base), 0u + (min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (false)) ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1))) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1) | 0u), (1u | 1u), 0u, 0u)))) % subgroup_size), (true ? ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1) | 0u), (1u | 1u), 0u, 0u)))) % subgroup_size) : _GLF_FUZZED(uvec2(98525u, 63049u).y))) | 0u))))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + 1) % subgroup_size)) - 0u)) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (_GLF_IDENTITY(0u, (0u) ^ (0u & 32509u)) << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((0u) / 1u, ~ (~ ((0u) / 1u)))), 0u, 0u)), (0u) | (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), ((0u)) - 0u))))))), 0u, 1u))))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), _GLF_IDENTITY(uint(uvec4(max(workgroup_base, workgroup_base), 0u, _GLF_IDENTITY(1u, (1u) >> 0u), 1u)), (uint(uvec4(max(workgroup_base, workgroup_base), 0u, _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) >> 0u))) + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u))) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) ^ (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) + 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u), (false ? _GLF_FUZZED((subgroup_id / virtual_gid)) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) << 0u))), min((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), min(~ (~ (subgroup_size)), ~ (~ (subgroup_size))))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) ^ 0u))), subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))) - 0u)) + 0u), 0u | (workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))) - 0u)) + 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), (max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))) << 0u)))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) - 0u, uint(uvec3((((subgroup_local_id + 1) % subgroup_size)) - 0u, 0u, 1u))))) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)))))), (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (true ? (0u) | (0u) : _GLF_FUZZED((++ workgroup_base)))))))))), 0u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), (max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))) << 0u)))), 0u | ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) - 0u, uint(uvec3((((subgroup_local_id + 1) % subgroup_size)) - 0u, 0u, 1u))))) + 0u), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) ? subgroup_size : _GLF_FUZZED(workgroup_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size, _GLF_IDENTITY((0u | 0u), 0u | ((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) / 1u), 0u, 0u)))))), (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (true ? (0u) | (0u) : _GLF_FUZZED((++ workgroup_base)))))))))), 0u, 1u))))))) | 0u)))))) | 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) && true))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint read = 0;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 0 + (64)), 64)), 4);
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(25422) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), injectionSwitch.x))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0)), (! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), int(_GLF_IDENTITY(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), clamp(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0)))))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0))) || false)), false || ((_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0)), (! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), int(_GLF_IDENTITY(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), clamp(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0)))))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0))) || false))))))), ((! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) ^ 0), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0)), (! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), int(_GLF_IDENTITY(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), clamp(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0)))))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0))) || false)), false || ((_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0)), (! (_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), int(_GLF_IDENTITY(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), clamp(ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0), ivec4(1 << _GLF_IDENTITY(int(2), int(2)), 0, 0, 0)))))) >> _GLF_IDENTITY(int(2), int(2)))))) | 0))) || false)))))))) || false))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || _GLF_IDENTITY(false, false || (false))), (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(fma(vec2(238.801, 6.6), vec2(645.190, 6935.2281), vec2(-234.732, -4.1))))), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-820.379), min(_GLF_FUZZED(-820.379), _GLF_FUZZED(-820.379)))), vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1))))) ^ 0), 1))), min(1, 1)) : _GLF_FUZZED(31682))), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1))))) ^ 0), 1))), min(1, 1)) : _GLF_FUZZED(31682)))) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1))))) ^ 0), 1))), min(1, 1)) : _GLF_FUZZED(31682))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))))))); _injected_loop_counter --)
        {
         read = atomicLoad(buf[virtual_gid], 4, 64, 2);
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, false))), (! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, false)))) || false)))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))), clamp(_GLF_IDENTITY((1 & 1), max((1 & _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(_injected_loop_counter)))), (1 & 1))), _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, 1 * (1 & 1))), max((1 & 1), (1 & 1))), (_GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1)))) - 0))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (1 & 1) * 1)), max((1 & 1), _GLF_IDENTITY((1 & 1), int(ivec3((1 & 1), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0))))), 0)))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (1 & 1) * 1)), max((1 & 1), _GLF_IDENTITY((1 & 1), int(ivec3((1 & 1), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0))))), 0)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (1 & 1) * 1)), max((1 & 1), _GLF_IDENTITY((1 & 1), int(ivec3((1 & 1), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0))))), 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (1 & 1) * 1)), max((1 & 1), _GLF_IDENTITY((1 & 1), int(ivec3((1 & 1), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0))))), 0)))))), 0 + ((_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (1 & 1) * 1)), max((1 & 1), _GLF_IDENTITY((1 & 1), int(ivec3((1 & 1), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0))))), 0))))))))) / 1), (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (1 & 1) * 1)), max((1 & 1), _GLF_IDENTITY((1 & 1), int(ivec3((1 & 1), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 0, 0))))), 0)))))))) / 1)); _injected_loop_counter ++)
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (_GLF_IDENTITY(2, (2) / 1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), ~ (~ (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, _GLF_IDENTITY(2, (2) << 0)))));
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec3(! (_GLF_IDENTITY(true, false || (true))), false, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), true, true, false)))) || false), false || _GLF_IDENTITY((bool(bvec4(false, false, false, true))), true && ((bool(bvec4(false, false, false, true))))))))))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), bool(bvec3(! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true))), false, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) || false))), false || (bool(bvec4(false, false, false, true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), true, true, false)))) || false), false || _GLF_IDENTITY((bool(bvec4(false, false, false, true))), true && ((bool(bvec4(false, false, false, true)))))))))), ! (! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), true, true, false)))) || false), false || _GLF_IDENTITY((bool(bvec4(false, false, false, true))), true && ((bool(bvec4(false, false, false, true)))))))))), ! (! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))), true, true, false)))) || false), false || _GLF_IDENTITY((bool(bvec4(false, false, false, true))), true && (_GLF_IDENTITY((bool(bvec4(false, false, false, true))), ((bool(bvec4(false, false, false, true)))) && true))))))))))))))))))))))))))));
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(atomicAdd(_injected_loop_counter, _injected_loop_counter))))))); _injected_loop_counter ++)
  {
   subgroupBarrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    break;
  }
 do
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true), false))))))
      break;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
