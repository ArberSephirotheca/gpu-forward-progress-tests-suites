#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat2 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 ivec3 _f3;
 vec3 _f4;
 vec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 ivec2 _f1;
 vec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 bool _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 uvec2 _f1;
 bvec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 mat2 _f1;
 mat4x2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 uvec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 mat3x4 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_15 {
 uint workgroup_size;
 _GLF_struct_11 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 mat4x2 _f1;
 uint virtual_gid;
 bvec4 _f2;
 mat4x2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 ivec4 _f1;
 mat2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_5 {
 float _f0;
 mat4 _f1;
 vec4 _f2;
 _GLF_struct_3 _f3;
 mat2x4 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat3x2 _f1;
 bool _f2;
 mat2 _f3;
 mat2x4 _f4;
 mat2x3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_2 {
 uint _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_0 {
 uint subgroup_id;
 vec2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-712.584), _GLF_FUZZED(399.400)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(5423.0445)), vec2(_GLF_FUZZED(9775.8474), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(6485.5724)), vec2(_GLF_FUZZED(0.6), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x < injectionSwitch.y), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(6485.5724)), vec2(_GLF_FUZZED(0.6), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x < injectionSwitch.y), true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(6485.5724)), vec2(_GLF_FUZZED(0.6), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x < injectionSwitch.y), true)))), true)))) || false)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(939.666)), float(injectionSwitch.x), bool(true))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1410.9588)), bool(false))), abs(0.0))), (float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1410.9588)), bool(false))), abs(0.0)))) / 1.0)) < injectionSwitch.y))) || false)))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupID, vec2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.7)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), 0u | _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(gl_NumWorkGroups.x, 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(gl_NumWorkGroups.x, 0u))), ((uint(uvec2(gl_NumWorkGroups.x, 0u)))) | ((uint(uvec2(gl_NumWorkGroups.x, 0u))))), (_GLF_IDENTITY((uint(uvec2(gl_NumWorkGroups.x, 0u))), ((uint(uvec2(gl_NumWorkGroups.x, 0u)))) | ((uint(uvec2(gl_NumWorkGroups.x, 0u)))))) ^ 0u))), min((uint(uvec2(gl_NumWorkGroups.x, 0u))), (uint(uvec2(gl_NumWorkGroups.x, 0u)))))));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(gl_WorkGroupSize.x, _GLF_struct_11(_GLF_struct_7(bvec2(true)), _GLF_struct_8(uvec3(1u), uvec2(1u), ivec4(1)), mat3x4(1.0), _GLF_struct_9(bvec3(true), mat2(1.0), mat4x2(1.0), vec3(1.0)), _GLF_struct_10(mat3x4(1.0), uvec2(1u), bvec4(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true), uvec2(1u)), _GLF_struct_14(_GLF_struct_12(mat4x2(1.0), ivec2(1), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(9.2) : 1.0, (true ? false ? _GLF_FUZZED(9.2) : 1.0 : _GLF_FUZZED(-5.1)))))), mat2(1.0)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) || false))), (bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))) || false)))) || false)), _GLF_struct_13(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.9)), float(1.0), bool(true)))), mat2x4(1.0), mat4x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(35.67), min(_GLF_FUZZED(35.67), _GLF_IDENTITY(_GLF_FUZZED(35.67), mix(float(_GLF_FUZZED(98.32)), float(_GLF_IDENTITY(_GLF_FUZZED(35.67), mix(float(_GLF_FUZZED(6.5)), float(_GLF_FUZZED(35.67)), bool(true)))), bool(true)))))))))), ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1))), vec3(1.0), vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(56.27)), bool(false)))), uvec4(1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))))))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) || false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_size, 0u | (_GLF_struct_replacement_15.workgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), clamp(_GLF_struct_replacement_15.workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), _GLF_struct_replacement_15.workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), _GLF_struct_replacement_15.workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_0.subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) / 1), 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))), int(0))), max(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(min(int(0), int(0)), _GLF_IDENTITY(int(ivec4(min(int(0), int(0)), 0, 1, 1)), (int(ivec4(min(int(0), int(0)), 0, 1, 1))) | 0))))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(66011)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, abs(0.0), 0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(uvec2(1u), _GLF_struct_2(1u, _GLF_struct_1(mat3x4(1.0), mat3x2(1.0), true, mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x4(1.0), mat2x3(1.0), mat3(1.0)), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (true ? 1u << _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(workgroup_base)))), clamp((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (true ? 1u << _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (true ? 1u << _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (true ? 1u << _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(workgroup_base)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) >> uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | uvec3(0u, 0u, 0u)))), _GLF_struct_5(1.0, _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))), vec4(1.0), _GLF_struct_3(mat4(1.0), ivec4(1), mat2(1.0), bvec4(true)), mat2x4(1.0), _GLF_struct_4(mat4x2(1.0), mat4x2(1.0), workgroup_base + subgroup_base + subgroup_local_id, bvec4(true), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.1)), float(1.0), bool(true)))), bvec3(true))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, (1u | 1u)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))) % subgroup_size)) - 0u) | 0u));
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) << 0))); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), bool(bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), bool(bool(bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), (_GLF_FUZZED(-2467.9886)) - 0.0)), float(_GLF_FUZZED(-6.0)), bool(false))), _GLF_FUZZED(-4203.9057)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], 1.0, 1.0, 1.0, 1.0, 1.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), vec2(mat3x2(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), (_GLF_FUZZED(-2467.9886)) - 0.0)), float(_GLF_FUZZED(-6.0)), bool(false))), _GLF_FUZZED(-4203.9057)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], 1.0, 1.0, 1.0, 1.0, 1.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), vec2(mat4(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), (_GLF_FUZZED(-2467.9886)) - 0.0)), float(_GLF_FUZZED(-6.0)), bool(false))), _GLF_FUZZED(-4203.9057)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], 1.0, 1.0, 1.0, 1.0, 1.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, cos(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), (_GLF_FUZZED(-2467.9886)) - 0.0), max(_GLF_IDENTITY(_GLF_FUZZED(-2467.9886), (_GLF_FUZZED(-2467.9886)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(-2467.9886), (_GLF_FUZZED(-2467.9886)) - 0.0)))), float(_GLF_FUZZED(-6.0)), bool(false))), _GLF_FUZZED(-4203.9057)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[_GLF_IDENTITY(0, clamp(0, 0, 0))], 1.0, 1.0, 1.0, 1.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))).x) - 0.0) > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, false || (true))))).x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -52012)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 & -52012), (_injected_loop_counter > (0 & -52012)) && true))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if((subgroup_local_id % 2) == 0)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 read = atomicLoad(buf[_GLF_struct_replacement_6._f2._f5.virtual_gid], 4, 64, 2);
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(_GLF_IDENTITY(bool(! (! (_GLF_WRAPPED_IF_FALSE(false)))), false || (bool(! (! (_GLF_WRAPPED_IF_FALSE(false))))))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true))))) && true)) || false)))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))) > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && true)))), false)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false)))))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false)))))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false)))))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false)))))))), true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false))))))))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) && true))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), bool(bvec2((((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false))))))) && true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false))))))) && true)))), false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false))))))) && true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false)))))), (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true, false))))))) && true)))), false, false), false)))))))))), false || (! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))), bool(bool((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true))))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false)))))))), true))))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), (! ((_GLF_IDENTITY(false, (false) && true)))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ((((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true)))))) && true), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (! _GLF_IDENTITY((! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && (true)))) || false) && true))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(true, true && (true))) && true))), false)), (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), true, false, true))))))))), false))) && true))) || false)))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false))))))))) || false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.8) : injectionSwitch.x)) > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (true))) && true))))), ! (_GLF_IDENTITY(! (! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || _GLF_IDENTITY((! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true))))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), false)))), false || ((! _GLF_IDENTITY((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), bool(bvec3((! (((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true))))))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), false))))))))))) || false))))))))))) && true)))))
                barrier();
               for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(67357) : int(2)))), (1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(67357) : int(2))))) * 1)) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               read = _GLF_IDENTITY(atomicLoad(buf[_GLF_struct_replacement_6._f2._f5.virtual_gid], _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 64, _GLF_IDENTITY(2, (2) + (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(4), int(4))) - 0)))), (atomicLoad(buf[_GLF_struct_replacement_6._f2._f5.virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) + (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (0) - 0))), (~ ((0))) | 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (int(ivec3(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) | (int(ivec3(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))), int(4))) - 0))))) / 1u);
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))) && true))) && true))))));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))) + vec2(0.0, 0.0))), vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(_GLF_IDENTITY(34.19, max(34.19, 34.19))), (injectionSwitch)[1]), bvec2(false, true))), 1.0)), (_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0)), clamp(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0)), _GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))))))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-667.268)), bool(false))), 1.0, 1.0))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec4(0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8453.5850)), vec2(_GLF_FUZZED(34.19), (injectionSwitch)[1]), bvec2(false, true))), 1.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3122.7868)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0)), bool(true)))))), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(26.02)), bool(false))))), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(26.02)), bool(false))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(26.02)), bool(false))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(26.02)), bool(false))))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0)) : _GLF_FUZZED(-86.42))), injectionSwitch.y), _GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), 0.0))))))))), 0.0, 0.0))).y) * 1.0)), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(4.4) : _GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (_GLF_IDENTITY(1.0, (1.0) - 0.0)))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(465.438) : 1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), _GLF_IDENTITY(clamp(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))), (_GLF_IDENTITY(clamp(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))), mat2(1.0) * (clamp(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), _GLF_IDENTITY(clamp((1.0), (1.0), (1.0)), (clamp((1.0), (1.0), (1.0))) - 0.0))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)))))) - vec2(0.0, 0.0)))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0)))))], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y), true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, sin(0.0)))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), mat2(1.0) * (vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))))), injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), false))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), _GLF_IDENTITY(clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))), mix(float(_GLF_FUZZED(-6.3)), float(clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0))))), bool(true))))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(_GLF_IDENTITY(1.0, (1.0) - sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), 0.0), vec2(1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))))), float(_GLF_FUZZED(6.5)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(float(sqrt(0.0)), (float(sqrt(0.0))) + log(1.0))))))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), _GLF_IDENTITY(max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))), mix(float(max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0))))))), float(_GLF_FUZZED(-11.79)), bool(false))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * vec2(1.0, 1.0), vec2(1.0, 1.0) * ((vec2(1.0, 0.0)) * vec2(1.0, 1.0)))), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(float(sqrt(0.0)), (float(sqrt(0.0))) + log(1.0))))))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), _GLF_IDENTITY(max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))), mix(float(max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0))))))), float(_GLF_FUZZED(-11.79)), bool(false))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * vec2(1.0, 1.0), vec2(1.0, 1.0) * ((vec2(1.0, 0.0)) * vec2(1.0, 1.0)))), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))), false, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(41.38)), vec2(_GLF_FUZZED(3220.1456), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-204.019, -0.8)) : injectionSwitch)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.9)), vec2(_GLF_FUZZED(-5070.2475), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), min(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(666.577)), bool(false))))) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))) || false)), false, true))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0)))).x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0)))).x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))))), (float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0)))).x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0))))))))) - 0.0)) - 0.0), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(-995.273)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))), clamp(_GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))), _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))), _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-997.128))), 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : (vec2(1.0, 0.0)) * vec2(1.0, 1.0)))), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9313.0502) : 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) : _GLF_FUZZED(-3.7))), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), 1.0 * ((1.0)))))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(mat2(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), 1.0, 1.0))), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(2788.7431))) < injectionSwitch.y), true)))))))))), false, true))))))), true)), false))))), _GLF_IDENTITY(bool(bvec2(bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.7)), bool(false))) < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY((vec2(1.0, 0.0)) * vec2(1.0, 1.0), vec2(mat4x2((vec2(1.0, 0.0)) * vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) < injectionSwitch.y), true))))))), false, true)), true)), false || (bool(bvec2(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), true, true, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), true, true, true)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-2830.3908)), bool(false)))) - tan(0.0)), _GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-421.380)), float(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-2830.3908)), bool(false)))) - tan(0.0)), _GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-421.380)), float(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))) * mat2(1.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))), ! (! ((! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-2830.3908)), bool(false)))) - tan(0.0)), _GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-421.380)), float(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0)), (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-2830.3908)), bool(false)))) - tan(0.0)), _GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-421.380)), float(float(vec3(_GLF_IDENTITY(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), float(mat4(max((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(6.5)), bool(false))) * 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, sqrt(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sqrt(0.0)))), 0.0, 0.0))) * mat2(1.0))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))))))))), false, true)), true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-74406 & 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y, true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) && true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupBarrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_6._f2._f5.virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
