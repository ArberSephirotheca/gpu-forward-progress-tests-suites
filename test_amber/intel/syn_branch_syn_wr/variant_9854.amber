#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(195.527)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), mix(vec2(_GLF_FUZZED(3003.3650), _GLF_FUZZED(6.1)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), mix(vec2(_GLF_FUZZED(3003.3650), _GLF_FUZZED(6.1)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)), mix(vec2(_GLF_FUZZED(3003.3650), _GLF_FUZZED(6.1)), vec2((mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true)))[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))))))), bvec2(false, true))))).y))), float(_GLF_FUZZED(-237.980)), bool(false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))))))) ? 4668.8571 : -1209.0654))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-848.118, 70.55, _GLF_IDENTITY(-4216.7993, min(-4216.7993, _GLF_IDENTITY(-4216.7993, (-4216.7993) * 1.0)))).z, min(vec3(-848.118, 70.55, -4216.7993).z, vec3(-848.118, 70.55, -4216.7993).z))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0))), log(1.0) + (float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1829.4490)), float(0.0), bool(true))), 0.0, 1.0, exp(0.0))))))), bvec2(false, true))).y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true, false)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, determinant(mat3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))))) || false) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))) && true) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u, 0u), ~ (~ (uvec3(subgroup_size, 0u, 0u))))))), ~ (~ (uint(uvec3(subgroup_size, 0u, 0u)))))))), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (workgroup_size) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), ~ (~ (uvec3(subgroup_size, 0u, 0u))))))), ~ (~ (uint(uvec3(subgroup_size, 0u, 0u)))))))), (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) | (_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), ~ (~ _GLF_IDENTITY((uvec3(subgroup_size, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4((uvec3(subgroup_size, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4((uvec3(subgroup_size, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec4((uvec3(subgroup_size, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4((uvec3(subgroup_size, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << uvec4(0u, 0u, 0u, 0u))))))))), ~ (~ (uint(uvec3(subgroup_size, 0u, 0u))))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) ^ 0u), (true ? _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))) : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), false)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, false)), true))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), subgroup_size));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)) | (workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) - 0.0), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))).y)), (0u ^ 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))).y)), (0u ^ 0u)), (uvec3(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))))), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))).y)), (0u ^ 0u))) + uvec3(0u, 0u, 0u))) | (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))).y)), (0u ^ 0u))))), 0u | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) + (subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size) ^ (0u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u ^ 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)))) | (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)))))) | (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))))))))))), 0u + (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))) - 0.0), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))).y)), (0u ^ 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))).y)), (0u ^ 0u)), (uvec3(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_IDENTITY(_GLF_FUZZED(float(false)), (_GLF_FUZZED(float(false))) * _GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-8185.9853), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((-7.7 - 1.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) / vec2(1.0, 1.0)))).y)), (0u ^ 0u))) + uvec3(0u, 0u, 0u))) | (uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(678.904), _GLF_FUZZED(float(false))), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-2.8, 750.975)) : (injectionSwitch) / vec2(1.0, 1.0)))))).y)), (0u ^ 0u))))), 0u | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))) + (subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size) ^ (0u ^ 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u ^ 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - _GLF_IDENTITY(0u, (0u) / 1u)) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.0)), bool(false))))), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, (_GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) / 1u)) - 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u, min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u, 1u * (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u)), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u))) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)))) | (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) - 0u)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> 0u, (true ? (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))) + 0u)) >> 0u : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size) | 0u)) / 1u))) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)))))) | (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, (_GLF_IDENTITY((subgroup_local_id) - 0u, max(_GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) * 1u), (subgroup_local_id) - 0u))) - 0u)) + _GLF_IDENTITY(1, (1) * (1 & 1))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) >> _GLF_IDENTITY(0u, 0u ^ (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u), (_GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))))) - 0u) % subgroup_size), (max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)) << 0u)) >> 0u)) / 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, cos(abs(0.0)))), min(_GLF_IDENTITY(float(vec2(injectionSwitch.y, cos(abs(0.0)))), (false ? _GLF_FUZZED(7.1) : float(vec2(injectionSwitch.y, cos(abs(0.0)))))), _GLF_IDENTITY(float(vec2(injectionSwitch.y, cos(abs(0.0)))), float(mat3x4(float(vec2(injectionSwitch.y, cos(abs(0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(bvec2((bool(bool(false))), false)), ! (! (bool(bvec2((bool(bool(false))), false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-60.65, 8.0)))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(116.273)), mix(float(_GLF_FUZZED(2246.2333)), float(float(_GLF_FUZZED(116.273))), bool(true))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || ((! ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(116.273)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)) || false), (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.3) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), true, false, false)))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6188.7660), _GLF_FUZZED(6.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) | (atomicLoad(buf[virtual_gid], 4, 64, 2))), _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 1 * (2)))) | 0u, ~ (~ ((read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 1 * (2)))) | 0u))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) * 1), 64, 2);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))).x, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec4(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), false, false, true))))), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false || (false)), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))), ! (! (_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) && true))))))), true && ((! (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) && true))))))), true && ((! (false)))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) && true))))))), true && ((! (false)))))), ! (! (! ((_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) && true))))))), true && ((! (false)))))))))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
