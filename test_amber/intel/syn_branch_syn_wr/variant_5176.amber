#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), ! (! (bool(bool(bvec3(false, false, false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0)))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY((bool(bvec4(false, true, true, false))) || false, ((bool(bvec4(false, true, true, false))) || false) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         return;
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) || _GLF_IDENTITY(false, true && (false)))))))
          break;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + log(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(39.84)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.1, -8527.9305, vec2(4.4, 6.4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.1, -8527.9305, vec2(4.4, 6.4))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.1, -8527.9305, vec2(4.4, 6.4))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.1, -8527.9305, vec2(4.4, 6.4))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))))) && _GLF_IDENTITY(true, (true) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter))) | (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))))))); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))))
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6035.4496), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), bvec2(true, false)))) / vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6035.4496), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), bvec2(true, false)))) / vec2(1.0, 1.0)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter)))) ^ 0) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), (vec2(vec4(injectionSwitch, 0.0, 1.0))) * vec2(1.0, 1.0))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false))) || false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(true, (true) || false)) || false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(_GLF_IDENTITY(bool((true) || false), true && (bool((true) || false)))))), (_GLF_IDENTITY(true, (true) || false)) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), false)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), false)))), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) || false) || false)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && ((true) || false)))) || false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (_GLF_IDENTITY(true, (true) || false)) || false)), false)))), true)))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))) * mat2(1.0), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false)), (mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-0.9, -59.42)))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, cos(0.0)))))[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false))) * sqrt(vec2(1.0, 1.0)))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))) * mat2(1.0), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false)), (mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-0.9, -59.42)))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, cos(0.0)))))[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false))) * sqrt(vec2(1.0, 1.0)))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))) * mat2(1.0), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false)), (mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-0.9, -59.42)))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, cos(0.0)))))[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false))) * sqrt(vec2(1.0, 1.0)))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))) * mat2(1.0), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false)), (mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-0.9, -59.42)))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, cos(0.0)))))[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false))) * sqrt(vec2(1.0, 1.0)))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), false, true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), max((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(1.0), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5439.8616))))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), max((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(1.0), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5439.8616))))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), max((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(1.0), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5439.8616))))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), max((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(1.0), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5439.8616))))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false))))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1223.9762)), vec2(_GLF_FUZZED(0.6), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, tan(0.0))), vec2(1.0, 1.0) * (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1223.9762)), vec2(_GLF_FUZZED(0.6), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, tan(0.0)))))), injectionSwitch)) - vec2(0.0, 0.0), max((max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(202.448), _GLF_FUZZED(-1905.1888)), vec2((max(injectionSwitch, injectionSwitch))[0], (max(injectionSwitch, injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - vec2(0.0, 0.0))), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), ((max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7842.0058)), bvec2(true, false)))))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5439.8616))))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0], (false ? _GLF_FUZZED(6.4) : (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7842.0058)), bvec2(true, false)))))) * mat2(1.0), vec2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(5439.8616))))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(0.0), 0.0, 1.0, 0.0, cos(0.0)))))[0])), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(9.9), _GLF_FUZZED(925.397)), bvec2(false, false))))) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-828.960)), bool(false))), 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, true)))))
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true, false, _GLF_IDENTITY(false, ! (! (false)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, true && (true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_injected_loop_counter ++)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-92.16) : injectionSwitch.y)), injectionSwitch.y))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))))
    continue;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), min(_GLF_IDENTITY((1 & 1), ((1 & 1)) | 0), (1 & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), 0 + (int(4))))))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false)))), bvec2(bvec2(bvec2(bvec2(false, false))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false)))), bvec2(bvec2(bvec2(bvec2(false, false))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false)))), bvec2(bvec2(bvec2(bvec2(false, false))))))), false))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))))))))) || false, bool(bvec3((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, false))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, false))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, false))))))))))))))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))))))))) || false, false, false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), determinant(mat4(0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), min(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), clamp(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))[0], _GLF_FUZZED(-508.568)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), max(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0)), (vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), clamp(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))[0], _GLF_FUZZED(-508.568)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), max(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0))) - vec2(0.0, 0.0))))), vec2(_GLF_FUZZED(-99.28), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))) | 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), min(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), clamp(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))[0], _GLF_FUZZED(-508.568)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), max(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0)), (vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), clamp(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(log(1.0)), 1.0)))))[0], _GLF_FUZZED(-508.568)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), max(determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0))) - vec2(0.0, 0.0))))), vec2(_GLF_FUZZED(-99.28), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))) | 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.96)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0)), (float(mat4x3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.96)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0))) / 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))))), vec2(_GLF_FUZZED(-99.28), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))) | 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), min(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), length(0.0), 0.0)))[0], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-508.568, mix(float(_GLF_FUZZED(-1.1)), float(-508.568), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((false ? -9520.2179 : 911.849)), _GLF_FUZZED(-394.896)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], 0.0 + (((injectionSwitch))[0])), ((injectionSwitch))[1]), bvec2(true, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[0], _GLF_IDENTITY(_GLF_FUZZED(-508.568), (_GLF_IDENTITY(_GLF_FUZZED(-508.568), max(_GLF_IDENTITY(_GLF_FUZZED(-508.568), (_GLF_IDENTITY(_GLF_FUZZED(-508.568), min(_GLF_FUZZED(-508.568), _GLF_FUZZED(-508.568)))) + abs(0.0)), _GLF_IDENTITY(_GLF_FUZZED(-508.568), _GLF_IDENTITY(1.0 * (_GLF_FUZZED(-508.568)), mix(float(_GLF_FUZZED(11.50)), float(1.0 * (_GLF_FUZZED(-508.568))), bool(true))))))) / 1.0)), 1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))))), vec2(_GLF_FUZZED(-99.28), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(vec2(6.7, -9.0).r), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(_GLF_IDENTITY(6.7, min(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7)), 6.7))))), _GLF_FUZZED(-841.835)), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) * (1))) | 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y)))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), min(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), length(0.0), 0.0)))[0], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-508.568, mix(float(_GLF_FUZZED(-1.1)), float(-508.568), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((false ? -9520.2179 : 911.849)), _GLF_FUZZED(-394.896)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], 0.0 + (((injectionSwitch))[0])), ((injectionSwitch))[1]), bvec2(true, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[0], _GLF_IDENTITY(_GLF_FUZZED(-508.568), (_GLF_IDENTITY(_GLF_FUZZED(-508.568), max(_GLF_IDENTITY(_GLF_FUZZED(-508.568), (_GLF_IDENTITY(_GLF_FUZZED(-508.568), min(_GLF_FUZZED(-508.568), _GLF_FUZZED(-508.568)))) + abs(0.0)), _GLF_IDENTITY(_GLF_FUZZED(-508.568), _GLF_IDENTITY(1.0 * (_GLF_FUZZED(-508.568)), mix(float(_GLF_FUZZED(11.50)), float(1.0 * (_GLF_FUZZED(-508.568))), bool(true))))))) / 1.0)), 1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))))), vec2(_GLF_FUZZED(-99.28), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(vec2(6.7, -9.0).r), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(_GLF_IDENTITY(6.7, min(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7)), 6.7))))), _GLF_FUZZED(-841.835)), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) * (1))) | 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y)))), false)), true), bvec3(bvec3(bvec3(bvec2(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-508.568)), min(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), length(0.0), 0.0)))[0], _GLF_FUZZED(-508.568)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-508.568, mix(float(_GLF_FUZZED(-1.1)), float(-508.568), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(mat2x4(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((false ? -9520.2179 : 911.849)), _GLF_FUZZED(-394.896)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], 0.0 + (((injectionSwitch))[0])), ((injectionSwitch))[1]), bvec2(true, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[0], _GLF_IDENTITY(_GLF_FUZZED(-508.568), (_GLF_IDENTITY(_GLF_FUZZED(-508.568), max(_GLF_IDENTITY(_GLF_FUZZED(-508.568), (_GLF_IDENTITY(_GLF_FUZZED(-508.568), min(_GLF_FUZZED(-508.568), _GLF_FUZZED(-508.568)))) + abs(0.0)), _GLF_IDENTITY(_GLF_FUZZED(-508.568), _GLF_IDENTITY(1.0 * (_GLF_FUZZED(-508.568)), mix(float(_GLF_FUZZED(11.50)), float(1.0 * (_GLF_FUZZED(-508.568))), bool(true))))))) / 1.0)), 1.0, determinant(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0)), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0))))), vec2(_GLF_FUZZED(-99.28), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(vec2(6.7, -9.0).r), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (true ? ((injectionSwitch))[0] : _GLF_FUZZED(_GLF_IDENTITY(6.7, min(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7)), 6.7))))), _GLF_FUZZED(-841.835)), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) * (1))) | 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y)))), false)), true)))))))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, _GLF_IDENTITY(false, ! (! (false))), false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), true, false, false))))), bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-26.54)), _GLF_FUZZED(856.849)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), 1.0 * ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]))), bvec2(true, true))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-26.54)), _GLF_FUZZED(856.849)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), 1.0 * ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]))), bvec2(true, true))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))) || false), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-26.54)), _GLF_FUZZED(856.849)), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))[0], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(true, true))).y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true, false || ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true, false || ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))))))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))) && true) || false))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9316.7425)), vec2(_GLF_FUZZED(-7761.2844), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), bvec2(false, true))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false, false || ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x2(mat2(1.0) * (injectionSwitch), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0)))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(326.655)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false)))), false || ((bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9316.7425)), vec2(_GLF_FUZZED(-7761.2844), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false, false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) && true)) || false))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), ! (! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), ! (! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), ! (! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))))))), (bool(_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), ! (! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), ! (! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))))))), (bool(_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true), ! (_GLF_IDENTITY(! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)), ! (! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))))) && true)), false))))))))))) || false, false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-382.432) : injectionSwitch.y)))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))) && true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-382.432) : injectionSwitch.y)))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))) && true)) || false, bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-382.432) : injectionSwitch.y)))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))) && true)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-382.432) : injectionSwitch.y)))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))) && true)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-382.432) : injectionSwitch.y)))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))) && true)) || false, bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-382.432) : injectionSwitch.y)))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))) && true)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) && true)))) && true)) || false, false || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false)))))))) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(604.726) : injectionSwitch.y)))) && true))) && true)) || false)))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat4(0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0)))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false))), (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat4(0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, cos(0.0)))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.4, -0.3)) : injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)).x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))) && true))) && true)) || false)))) || false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), true && (bool(bool(injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)))) && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(112.112)) : injectionSwitch)))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false)))), false || ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))) && true))) && true)) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0)), 0.0), (mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0)), 0.0)) * mat2(1.0)))).y : _GLF_FUZZED(3.6))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))))) && true)) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, true))), abs(0.0), 0.0), (false ? _GLF_FUZZED(mat2(-4118.6012, -706.580, -2997.5640, -9276.0254)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, true))), abs(0.0), 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, true))), abs(0.0), 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))))) && true)) || false)) && true))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, false || (((injectionSwitch.x > injectionSwitch.y)) && true))))) && true)) || false)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), _GLF_IDENTITY(false || ((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false))))), ! (! (_GLF_IDENTITY(false || ((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || ((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), sin(0.0), 0.0))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, false || (true)), true), false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))))).y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) - sin(abs(0.0))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)) || false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.6))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) && true)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(float(injectionSwitch[1])), (false ? _GLF_FUZZED(-0.2) : float(float(injectionSwitch[1]))))))).y))))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_GLF_IDENTITY(49173, 0 ^ (_GLF_IDENTITY(49173, clamp(_GLF_IDENTITY(49173, (49173) << 0), 49173, 49173))))) : int(0)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY(true ? (subgroup_base) : _GLF_FUZZED(num_workgroup), 0u | (true ? (subgroup_base) : _GLF_FUZZED(num_workgroup))))) * 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY((0) | 0, ((0) | 0) / 1)), 0, 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))) || false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)), injectionSwitch.x)), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)), injectionSwitch.x))))) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), bool(bvec3(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, min(7, 7)))))))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(true, true && (true)), true, true)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)) > injectionSwitch.y))))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2)))))) == 0)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              return;
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), (bool(bvec4(true, true, true, false))) && true)))), _GLF_IDENTITY((true), ! (! ((true)))) || false), false || (_GLF_IDENTITY(true, (true) || false)))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) || false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], injectionSwitch[1]))) + 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                return;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), (true ? int(7) : _GLF_FUZZED(16986)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))])), 4, 64, 2), uint(uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2)))), 1u))), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) - _GLF_IDENTITY(0, 0 | (0))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) * (1 & 1)))), 64, 2))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u))))), (false ? _GLF_FUZZED(subgroup_id) : (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u))))))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u))))), (false ? _GLF_FUZZED(subgroup_id) : (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u)))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u))))), (false ? _GLF_FUZZED(subgroup_id) : (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u)))))))), (~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u))))), (false ? _GLF_FUZZED(subgroup_id) : (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, 0 ^ (64)), 2))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), 0 | (_GLF_IDENTITY(4, 1 * (4)))), 64, 2)))) >> _GLF_IDENTITY(0u, (0u) << 0u)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), 1u * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u)))), (((_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(64))), 2), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))), 1u * ((_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), ~ (~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 2)), (~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, max(4, 4)))), 64, 2))) | 0u))))))), ((~ (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), min((4), (4))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2)))) >> 0u))))) ^ 0u))))))))) | 0u)) * 1u))));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 subgroupBarrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, true))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = ((1 & 1) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(0, ~ (~ (0)))), 0 ^ (clamp(_GLF_IDENTITY(0, int(int(0))), 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), ~ (~ (0)))))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, log(1.0), 1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0)))) * (injectionSwitch)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)) && true)))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 & 25375)) != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), 0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), max((0), (0))), (0), (0))) - 0), 0))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          break;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             barrier();
            }
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(-14.10)) : injectionSwitch.x))))), float(_GLF_FUZZED(float(22772u))), bool(false))) > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(exp(vec2(-588.032, 685.074))) : (injectionSwitch))) + vec2(0.0, 0.0)))).y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            break;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-89.97), (false ? _GLF_FUZZED(-3.7) : true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-89.97))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6508.0156), _GLF_FUZZED((-617.051))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, false, false))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6508.0156), _GLF_FUZZED((-617.051))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), true, false, false)))))))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true))))))))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false))) && true))))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-809.792) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))))))
          {
           barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               return;
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))), true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))), true), false, false)), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))), true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))), true), false, false)), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), int(ivec3(1 << _GLF_IDENTITY(int(7), int(7)), 1, 1)))) | (1 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0), int(7))), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (0 | 0) | (_injected_loop_counter))) << 0) > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(0u | (read), (0u | (read)) | 0u)), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
