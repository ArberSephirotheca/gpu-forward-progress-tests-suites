#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) > 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (false || (_GLF_WRAPPED_IF_TRUE(true))), bool(bvec2(_GLF_IDENTITY(! (false || (_GLF_WRAPPED_IF_TRUE(true))), bool(bvec3(! (false || (_GLF_WRAPPED_IF_TRUE(true))), true, true))), true))))), true && (false || (_GLF_WRAPPED_IF_TRUE(true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(true)), ! (! (false || (_GLF_WRAPPED_IF_TRUE(true)))))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))))) || false))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))), true, true), true)))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))), bool(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(true)), false || (false || (_GLF_WRAPPED_IF_TRUE(true))))))))))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && (_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, true && (false)))) || false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, (_GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true))) || false))) && true))), (bool(false)) || false))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, (_GLF_IDENTITY((bool(false)) && true, false || ((bool(false)) && true))) || false))) && true))), (bool(false)) || false))), true, false)))), true && (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), true))))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 & 22924); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-32798)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))) : _GLF_FUZZED(-9756.4545))))), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))) : _GLF_FUZZED(-9756.4545))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))) : _GLF_FUZZED(-9756.4545))))), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))) : _GLF_FUZZED(-9756.4545))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-983.925, 7726.7765)))) : _GLF_FUZZED(-9756.4545))))))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))
  {
  }
 else
  {
   do
    {
     do
      {
       GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.x = num_workgroup;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(1.0))) * (injectionSwitch.x)), mix(float(_GLF_FUZZED(4896.5991)), float(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(1.0))) * (injectionSwitch.x))), bool(true))) > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2((0), 0)), 0 | (int(ivec2((0), 0))))) - _GLF_IDENTITY(0, min(0, 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false || (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0 >> _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0 >> _GLF_IDENTITY(int(6), int(6))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0 >> _GLF_IDENTITY(int(6), int(6)))), min(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0 >> _GLF_IDENTITY(int(6), int(6)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0 >> _GLF_IDENTITY(int(6), int(6))))))), ! (! (_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | 0)))) - 0)))))))))) || false)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true))))) && (false))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true))))) && (false)))))))))))))
            barrier();
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) && true))))))))))))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))));
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id)))))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * workgroup_id))))))) >> 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w * subgroup_size, 0u + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w * subgroup_size), max((GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w * subgroup_size), (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.w * subgroup_size))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) && true)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((0 | 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))) & 1)); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-484) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-92018 & _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) + 0))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), _GLF_FUZZED(549.458)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + log(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-58.37)), vec2(_GLF_FUZZED(1715.8049), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))))), mix(float(_GLF_FUZZED(-4836.3771)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-58.37)), vec2(_GLF_FUZZED(1715.8049), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh((81.58 + -60.61)))))))), bool(true)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) * 1.0))) : _GLF_FUZZED(-743.453))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) * 1.0))) : _GLF_FUZZED(-743.453))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) * 1.0))) : _GLF_FUZZED(-743.453))) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) * 1.0))) : _GLF_FUZZED(-743.453))) > injectionSwitch.y)))))))))) || false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z = subgroup_base;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true)), bool(bool(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true)))))));
    }
   else
    {
    }
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED(50333) : 1)))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
              {
              }
             else
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) / 1)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(251.315), _GLF_FUZZED((1.3 / 772.965))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
        }
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, unpackUnorm2x16(num_workgroup), bvec2(true, true))))).x, 0.0 + (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(55.34, (55.34) / 1.0))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) / 1.0), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true)))))), max(_GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true)))))), 1.0 * (min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true)))))))), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-979.186)), float(injectionSwitch.x), bool(true))))))))) > injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) && true))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              barrier();
            }
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u))), max(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z) | 0u) + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + (_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_FUZZED(subgroup_local_id))))), min(_GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u))), max(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1))))) * 1), min(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : _GLF_IDENTITY(1, (1) << 0))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 0 + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)))), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))))))) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u)))))) >> 0u))))), (uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | (_GLF_IDENTITY(~ (4u), (~ (4u)) * 1u))))))), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u)))))))))) | (uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) / (1u ^ 0u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u)))))))))))), max(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) | uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).z + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false))) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), clamp(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false))))))))) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_FUZZED(subgroup_local_id))))), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, ~ (_GLF_IDENTITY(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), max(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), ~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z))))) + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), max(uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))) + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_FUZZED(subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 1u, 0u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec4((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 0u))))), max(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-60850) : 1))) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_FUZZED(subgroup_local_id)))))))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[0], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[1], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[2], GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id[3])).z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) + uvec2(0u, 0u))), max(uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z) | 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + (_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_FUZZED(subgroup_local_id))))), min(_GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u, min(((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u, ((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u))))), max(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1))))) * 1), min(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : _GLF_IDENTITY(1, (1) << 0))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 0 + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)))), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1))))) * 1), min(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : _GLF_IDENTITY(1, (1) << 0))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 0 + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)))), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1))))) * 1), min(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : _GLF_IDENTITY(1, (1) << 0))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 0 + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)))), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1))))) * 1), min(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : _GLF_IDENTITY(1, (1) << 0))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 0 + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)))), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1))))) * 1), min(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : _GLF_IDENTITY(1, (1) << 0))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) ^ (1)))), 0, 1), (false ? _GLF_FUZZED(ivec3(-37082, -20311, 11802)) : ivec3(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)), 0 + (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71888) : 1)))), 1, _GLF_IDENTITY(1, 0 ^ (1)))), 0, 1)))))))))))) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), _GLF_IDENTITY(uint(4u), uint(uvec2(uint(4u), 0u))))), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), 0u + (uint(uint(4u)))), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), max(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (_GLF_IDENTITY(uint(uint(4u)), max(uint(uint(4u)), uint(uint(4u))))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (_GLF_IDENTITY(uint(uint(4u)), max(uint(uint(4u)), uint(uint(4u))))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (_GLF_IDENTITY(uint(uint(4u)), max(uint(uint(4u)), uint(uint(4u))))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u))), uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u)))), max(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u)))), _GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))))) - 0u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), _GLF_IDENTITY((uint(uint(4u))), ~ (~ ((uint(uint(4u)))))) | (uint(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_size))))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) | 0u), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, min(3u, 3u))))), 1u, 1u)))))) >> 0u))))), (uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | (_GLF_IDENTITY(~ (4u), (~ (4u)) * 1u))))))), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u))), max(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | (_GLF_IDENTITY(~ (4u), (~ (4u)) * 1u))))))), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), (~ (4u)) | (_GLF_IDENTITY(~ (4u), (~ (4u)) * 1u))))))), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u)))))))))))) | (uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), min(uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) / (1u ^ 0u))) | (uint(uint(4u))), ((_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) / (1u ^ 0u))) | (uint(uint(4u)))) >> (1u ^ 1u)))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u), uvec4(uint(_GLF_IDENTITY(uint(uint(4u)), (uint(uint(4u))) | (uint(uint(4u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u ^ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u)) >> 0u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u)))))))))))), max(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) | uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).z + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false))) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), clamp(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), _GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), max(true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false)), true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u) : _GLF_FUZZED(uint(false))))))))))) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_FUZZED(subgroup_local_id))))), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, ~ (_GLF_IDENTITY(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), max(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), ~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, ~ (_GLF_IDENTITY(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), max(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), ~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z))))) + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, ~ (_GLF_IDENTITY(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), max(~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z), ~ (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z))))) + ((subgroup_local_id + 1) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), max(uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), max(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY(0u, (0u) >> 0u) >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (4u) ^ 0u))), 4u))), uint(4u))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, uint(uvec4(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))) + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_FUZZED(subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 1u, 0u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec4(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + (0u ^ 0u)), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 0u))))), max(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(uvec2(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))) + 1) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))))), (true ? uint(uvec2(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-60850) : 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-60850) : 1))) % subgroup_size, clamp((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-60850) : 1))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-60850) : 1))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-60850) : 1))) % subgroup_size))) | 0u)), workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.z + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9063.1439, 557.588)))).x))) % subgroup_size))), (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, 4u))))))) : _GLF_FUZZED(subgroup_local_id))))))))))));
 uint read = _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(3), int(3))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), mix(vec2((mat2(1.0) * (mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-3037.0743)), vec2(_GLF_FUZZED(78.09), (mat2(1.0) * (mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true))) : _GLF_FUZZED((mat4x2(49.42, 6.2, 5289.3595, -45.99, 5.4, -322.383, -1.8, 625.015) * vec4(-73.87, 833.148, 530.843, 8343.7116))))))).y))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(mix(vec2(411.422, 6740.4402), vec2(-71.41, -321.555), 3.3)) : (injectionSwitch) * mat2(1.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(mix(vec2(411.422, 6740.4402), vec2(-71.41, -321.555), 3.3)) : (injectionSwitch) * mat2(1.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(mix(vec2(411.422, 6740.4402), vec2(-71.41, -321.555), 3.3)) : (injectionSwitch) * mat2(1.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(mix(_GLF_IDENTITY(vec2(411.422, 6740.4402), min(vec2(411.422, 6740.4402), vec2(411.422, 6740.4402))), vec2(-71.41, -321.555), 3.3)) : (injectionSwitch) * mat2(1.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0)))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(mix(vec2(411.422, 6740.4402), vec2(-71.41, -321.555), 3.3)) : (injectionSwitch) * mat2(1.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(mix(vec2(411.422, 6740.4402), vec2(-71.41, -321.555), 3.3)) : (injectionSwitch) * mat2(1.0)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), max(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5162.6863) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(5162.6863) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (1.0 * (injectionSwitch.x)) - length(0.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), (float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))) + 0.0))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-7876))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3((true), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4((! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, ! (! (true))))))), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.y = _GLF_IDENTITY(read, max(read, read));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) >> 0)))) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), (int(2)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) >> 0))))), (_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) >> 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) >> 0))))), max(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) >> 0))))), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) >> 0)))))))))), bool(bvec3(_injected_loop_counter != ((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(1, max(1, 1)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false)))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), bool(bool(bool((true)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0) ^ 1))) && true); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), 0 ^ (0 << _GLF_IDENTITY(int(6), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, false))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false, false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false, false, false))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), false, false, false))) || false), true), false, true))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! ((bool(bvec4(_GLF_DEAD(false), false, false, false))))))), ((! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, false))))) || false))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, false, false)))), ((! (bool(bvec4(_GLF_DEAD(false), false, false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), (! (false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false))))), bool(bvec4(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true), false))))), true, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) || false)))), false || (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ((! (false)) || false) || false)))))))))))), false, false, false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! ((bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bool(false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))))))), ((! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false))))) || false))))))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0), (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)) | (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0), (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)) | (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)))), (int(_GLF_IDENTITY(ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0), (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)) | (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0))))) ^ 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0), (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)) | (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)))), (int(_GLF_IDENTITY(ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0), (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0)) | (ivec4(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(69476) : int(7))))), (0 & 62833), (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1), 0))))) ^ 0))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.y = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true)))), true && (! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true))))))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true)))), true && (! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true))))))))), false, false, true))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               for(int _injected_loop_counter = ((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                }
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), false || (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id.y = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 + _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ (0 | 0))), ((2)) / 1)));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 subgroupBarrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(28381)), ~ (_GLF_IDENTITY(~ ((true ? 1 : _GLF_FUZZED(28381))), (true ? ~ ((true ? 1 : _GLF_FUZZED(28381))) : _GLF_FUZZED(-39890))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (_GLF_FUZZED(-26873)) / 1) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-1709), (_GLF_IDENTITY(_GLF_FUZZED(-1709), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-1709), 1, 0, 1), (ivec4(_GLF_FUZZED(-1709), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873)))), max(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-1709), (_GLF_IDENTITY(_GLF_FUZZED(-1709), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-1709), 1, 0, 1), (ivec4(_GLF_FUZZED(-1709), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873)))), ~ (_GLF_IDENTITY(~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-1709), (_GLF_IDENTITY(_GLF_FUZZED(-1709), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-1709), 1, 0, 1), (ivec4(_GLF_FUZZED(-1709), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))), clamp(~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-1709), (_GLF_IDENTITY(_GLF_FUZZED(-1709), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-1709), 1, 0, 1), (ivec4(_GLF_FUZZED(-1709), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))), ~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-1709), (_GLF_IDENTITY(_GLF_FUZZED(-1709), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-1709), 1, 0, 1), (ivec4(_GLF_FUZZED(-1709), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))), ~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-1709), (_GLF_IDENTITY(_GLF_FUZZED(-1709), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-1709), 1, 0, 1), (ivec4(_GLF_FUZZED(-1709), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-1709), (_GLF_IDENTITY(_GLF_FUZZED(-1709), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(-1709), 1, 0, 1), (ivec4(_GLF_FUZZED(-1709), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))))) : int(1)))))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (_GLF_FUZZED(-26873)) / 1) : int(1), min(false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, _GLF_IDENTITY(int(ivec4(-26873, 1, 1, 1)), int(ivec2(int(ivec4(-26873, 1, 1, 1)), 0))))) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1))))))) | 0)), 1 * (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), 0 ^ (int(1)))), int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(int(1), 0 ^ (int(1)))), (0 | 0), 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(~ _GLF_IDENTITY((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))) ^ (int(1)))), int(ivec3((_GLF_IDENTITY(int(1), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))))) ^ (int(1)))), 0, 1))), (0 | 0), 1, 1))))))))), false ? _GLF_FUZZED(-26873) : int(1))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), 0 | (_GLF_FUZZED(-26873))) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) | (-26873))) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-26873, ~ (~ (-26873)))), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)))))), (true ? _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))) | 0)), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), 0 | (_GLF_FUZZED(-26873))) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) | (-26873))) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-26873, ~ (~ (-26873)))), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)))))) : _GLF_FUZZED(-15889)))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), (false ? _GLF_FUZZED(-26873) : int(1)) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(-26873), _GLF_IDENTITY(0, _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0))) + (0)) | (_GLF_FUZZED(-26873))) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) | (-26873))) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)))))))) | (((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), ~ (~ (int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1)))))))) / 1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_FUZZED(-26873), (_GLF_FUZZED(-26873)) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))) : int(1), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), 0 | (_GLF_FUZZED(_GLF_IDENTITY(-26873, (_GLF_IDENTITY(-26873, (-26873) ^ 0)) * 1)))) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) | (-26873))) : int(1))), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))), (_GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873)))))) - 0) : _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))))))), 1 * ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ~ (~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec3(_GLF_IDENTITY(int(1), int(1)), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (_GLF_FUZZED(-26873)) / 1) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, 0 ^ (-26873))) : int(1), _GLF_IDENTITY(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)), min(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))))), false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) * 1)) : int(1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), 0 ^ (int(1)))) + 0), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), _GLF_IDENTITY(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)), min(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (true ? _GLF_IDENTITY(-26873, min(-26873, -26873)) : _GLF_FUZZED(_injected_loop_counter)))) : int(1)), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))))), false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) / 1)), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 1))), int(1)))))), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (1 ^ 1) + (_GLF_IDENTITY(_GLF_FUZZED(-26873), 0 | (_GLF_FUZZED(-26873))))) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)) | (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)) | (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)) | (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1))), 0 + (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)) | (false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(-1709) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)))))) >> 0))))))))) ^ (0 | 0))), 1 * (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), (false ? _GLF_FUZZED(-26873) : int(1)) + 0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (true ? -26873 : _GLF_FUZZED(-19281)))) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, max(-26873, -26873))) : int(1), min(false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) + 0)) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1709, clamp(-1709, -1709, _GLF_IDENTITY(-1709, 1 * (-1709))))) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1))))))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, max(-26873, -26873))) : int(1), min(false ? _GLF_FUZZED(_GLF_IDENTITY(-26873, (-26873) + 0)) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1709, clamp(-1709, -1709, _GLF_IDENTITY(-1709, 1 * (-1709))))) : _GLF_IDENTITY(_GLF_FUZZED(-26873), clamp(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873), _GLF_FUZZED(-26873))))) : int(1)))))))) << 0), 1 * (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5047)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)), min(max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))))))), int(ivec3((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))) - 0))))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1)))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5047)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_IDENTITY(_GLF_FUZZED(-26873), min(_GLF_FUZZED(-26873), _GLF_FUZZED(-26873))) : int(1)))))), int(ivec3((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | 0)))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))) - 0))))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5047)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))))), _GLF_IDENTITY(int(int((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5047)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))))))), (_GLF_IDENTITY(int(int((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5047)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))))))), (int(int((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5047)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))))))) | (int(int((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5047)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), clamp(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))))))))) * 1)), int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), min((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1))), false ? _GLF_FUZZED(-26873) : int(1)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(1), max(_GLF_IDENTITY(false ? _GLF_FUZZED(-26873) : int(_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)), min(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)), _GLF_IDENTITY(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)), ~ (~ (_GLF_IDENTITY(min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)), 0 | (min(false ? _GLF_FUZZED(-26873) : int(1), false ? _GLF_FUZZED(-26873) : int(1)))))))))), false ? _GLF_FUZZED(-26873) : int(1))))) - 0))))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1))))))))) / 1)))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id) / uvec4(1u, 1u, 1u, 1u)), max(GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id, GLF_merged4_0_1_13_1_1_4_2_1_13_3_1_11num_workgroupreadsubgroup_basesubgroup_id)).y, 4, 64, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(max(ivec2(86162, 29065).x, 61238)) : 4)), _GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), int(ivec4(4, 1, 1, 1)))), (_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED((atomicAdd(_injected_loop_counter, 2431) >> _injected_loop_counter)) : 1)), 1)))), ~ (~ (min(4, _GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1), 1, 1)))))))) ^ 0)), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) >> 0), 4, 4))) / 1, min((4) / 1, _GLF_IDENTITY((4) / 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)), 0 | (~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)), 0 | (~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)))))), (false ? _GLF_FUZZED(27512) : _GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)), 0 | (~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)), 0 | (~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)))))), min(_GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)), 0 | (~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)))))), _GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)), 0 | (~ (_GLF_IDENTITY((4) / 1, ((4) / 1) >> 0)))))))))))))))))));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, length(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)))))))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
