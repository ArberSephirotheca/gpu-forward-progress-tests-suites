#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uvec3 _f0;
 vec2 _f1;
 mat2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 mat3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 uvec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 vec2 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 uvec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 mat3 _f1;
 ivec3 _f2;
 float _f3;
 mat4x2 _f4;
 int _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 uvec3 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 mat3x4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 vec3 _f1;
 uvec4 _f2;
 vec2 _f3;
 uvec4 _f4;
 bvec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 uint next_virtual_gid;
 bool _f1;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 _GLF_struct_0 _f1;
 uvec3 _f2;
 _GLF_struct_1 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 mat3x2 _f1;
 _GLF_struct_2 _f2;
 bvec3 _f3;
 bvec3 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id) ^ 0u)) << 0u);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9)))), clamp(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((3.0 * 1.1))), float(injectionSwitch.y), bool(true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-0.9), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-0.9), (_GLF_FUZZED(-0.9)) * 1.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-0.9), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-0.9), (_GLF_FUZZED(-0.9)) * 1.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-0.9), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-0.9), (_GLF_FUZZED(-0.9)) * 1.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))))))), (! (_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), true, false, true))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY((true && _GLF_IDENTITY((false), false || ((false)))), ! (! ((true && _GLF_IDENTITY((false), false || ((false))))))) || false)), (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), false || ((false))), (true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)))))) || false))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(329.293)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), 0.0), vec2(mat2x4(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), injectionSwitch.x))) + 0.0)) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(vec2(2.3, -967.806)[0]) : injectionSwitch[1])))).x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))), (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec2(_GLF_DEAD(false), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z = subgroup_local_id, ~ (~ (_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z = subgroup_local_id))), 0u + (_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z = subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z = subgroup_local_id, (_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z = subgroup_local_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(182620u) : _GLF_IDENTITY(1u, max(1u, 1u))))) - 0u))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))), injectionSwitch)).x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (vec2(vec4(injectionSwitch, 0.0, 0.0))) - abs(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) && true)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(8.0, 214.385, 1322.5923, 1867.8992).s) : injectionSwitch.x))) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y) && true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(false, (false) || false), false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 586.909))), vec2(_GLF_FUZZED((72.00 + -6.7)), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-3.7 / -925.698))), float(injectionSwitch.x), bool(true)))) + 0.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))) && true)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true)))))), false || ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true)))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y) && true))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y) && true)))))))))) || false)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))))))))) && true), false, false)))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))) && true))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y) && true)))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(397.292) : (injectionSwitch.x))) + 0.0) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, true, true)))) && true)))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3812.8707)), bool(false)))) + 0.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(float(true)) : _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(533.587))))) + 0.0) > injectionSwitch.y) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (injectionSwitch.x) + 0.0) > injectionSwitch.y))))) && true))))))) || false)))))), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(-6.3)), bvec2(false, false))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))))))))), false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) ? workgroup_size : _GLF_FUZZED(subgroup_id))) * _GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y, ~ (~ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y))) * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).z, 1u * (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.y * _GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z, (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z), (~ (GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z)) ^ 0u)))) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) ^ 0u)) / 1u)), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) | uvec2(0u, 0u))))))))))));
 _GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.y = subgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id, (_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id) - uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (true ? (~ (0u)) : _GLF_FUZZED(workgroup_id)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (true ? (~ (0u)) : _GLF_FUZZED(workgroup_id)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (true ? (~ (0u)) : _GLF_FUZZED(workgroup_id)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (true ? (~ (0u)) : _GLF_FUZZED(workgroup_id)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))))))))))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), _GLF_IDENTITY((~ (uvec3(0u, 1u, 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((~ (uvec3(0u, 1u, 0u))), (true ? (~ (uvec3(0u, 1u, 0u))) : _GLF_FUZZED(uvec3(157574u, 100029u, 179798u)))) : _GLF_FUZZED(uvec3(81875u, 192054u, 30208u)))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_base)))) << 0u), 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ _GLF_IDENTITY((~ ((~ (0u)))), (_GLF_IDENTITY((~ ((~ (0u)))), ((~ ((~ (0u))))) | ((~ ((~ (0u))))))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u))))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), _GLF_IDENTITY((uint(uvec2(0u, 1u))) - 0u, ((uint(uvec2(0u, 1u))) - 0u) / 1u))), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * 1u)), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))) ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id))), 1u, 0u, 0u))) : _GLF_FUZZED(subgroup_id))), (_GLF_FUZZED(workgroup_id)) ^ 0u)))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY((false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id)), clamp((false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY((false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id)), clamp((false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id)), (false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id)), (false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id)))), (false ? _GLF_FUZZED(126781u) : _GLF_FUZZED(workgroup_id))))), 1u, 0u, 0u))) : _GLF_FUZZED(subgroup_id))), (_GLF_FUZZED(workgroup_id)) ^ 0u)))))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(0u, 1u)), min(uint(uvec2(0u, 1u)), _GLF_IDENTITY(uint(uvec2(0u, 1u)), min(uint(uvec2(0u, 1u)), uint(uvec2(0u, 1u)))))), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), _GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), _GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))))) - 0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ _GLF_IDENTITY((uvec3(0u, 1u, 0u)), max((uvec3(0u, 1u, 0u)), _GLF_IDENTITY((uvec3(0u, 1u, 0u)), max(_GLF_IDENTITY((uvec3(0u, 1u, 0u)), ((uvec3(0u, 1u, 0u))) ^ uvec3(0u, 0u, 0u)), (uvec3(0u, 1u, 0u))))))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), _GLF_IDENTITY((uint(uvec2(0u, 1u))) - 0u, ((uint(uvec2(0u, 1u))) - 0u) | ((uint(uvec2(0u, 1u))) - 0u)))), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) || false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u)))) : _GLF_FUZZED(uvec3(7068u, 127487u, 113280u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) | 0u), _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_id)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u)) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u)), clamp(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))))))))))), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u), (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), 0u ^ (_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))))))))))), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)) / uvec3(1u, 1u, 1u))), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 1u, 0u), (uvec3(0u, 1u, 0u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u), ((~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)) | ((~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))))), _GLF_IDENTITY(min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u)))) * 1u))))), min(min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u)))) * 1u))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u, 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) >> 0u)), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u)))) * 1u)))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))), 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))))), (~ (uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(floatBitsToUint(-348.884)))), 1u, 0u))) / uvec3(1u, 1u, 1u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, 1u, 0u)), max((uvec3(0u, 1u, 0u)), (uvec3(0u, 1u, 0u)))), (~ _GLF_IDENTITY((uvec3(0u, 1u, 0u)), ((uvec3(0u, 1u, 0u))) | ((uvec3(0u, 1u, 0u))))) / uvec3(1u, 1u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), uvec3(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), 1u), max(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), 1u), ~ (~ (uvec4(~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), 1u)))), uvec4(~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), 1u))))), (~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), ((_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))) | ((_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(0u, 1u, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((87999u * (uvec3(63638u, 112670u, 162998u) * uvec3(77417u, 18562u, 166689u)))) : _GLF_IDENTITY((uvec3(0u, 1u, 0u)), ((uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec4(uvec3(1u, 1u, 1u), 1u))) : _GLF_FUZZED(uvec3(63473u, 22065u, 3627u))))))))), clamp(~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))))), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u))), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u, 1u)))))))))), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), 1u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u), (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (_GLF_IDENTITY(~ ((~ (0u))), (_GLF_IDENTITY(~ ((~ (0u))), (~ ((~ (0u)))) << 0u)) | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (false ? _GLF_FUZZED((++ workgroup_id)) : _GLF_IDENTITY(~ (~ (0u)), 0u ^ (~ (~ (0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), uint(uvec3(0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec3(0u, 1u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 1u)), clamp(uint(uvec3(0u, 0u, 1u)), uint(uvec3(0u, 0u, 1u)), uint(uvec3(0u, 0u, 1u))))), 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, 1u)))))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) ^ 0u)))) - 0u)))) / 1u), 1u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)) - 0u)), uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)) - 0u))), (uint(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)) - 0u)))) / 1u)))), 1u)), (uint(uvec2(0u, 1u))) - 0u)), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 1u * (uint(uvec3(0u, 1u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (0u)), 1u, 0u)), (~ (_GLF_IDENTITY(uvec3(0u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 1u), uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 1u), 1u)))))), (uvec3(0u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 1u), uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 1u), 1u))))))) | (uvec3(0u, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 1u), uvec2(uvec3(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 1u), 1u)))))))))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(uvec3(0u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 1u, 0u)), (~ (uvec3(0u, 1u, 0u))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u)))))) + uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))), min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ~ (~ ((_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0u)), (false ? _GLF_FUZZED(workgroup_id) : ~ (~ (0u)))), (true ? ~ (~ (0u)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), 0u ^ ((_GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), 0u ^ ((_GLF_FUZZED(workgroup_id))))) >> 0u) ^ 0u)))) - 0u))), 1u, 0u))))))), 0u, 0u)).y + _GLF_IDENTITY(_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (0u & 161776u)) ^ _GLF_IDENTITY((_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z), (true ? _GLF_IDENTITY((_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z), min((_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z), _GLF_IDENTITY((_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z), max((_GLF_IDENTITY(_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z, (_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z) ^ 0u)), (_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z))))) : _GLF_FUZZED((subgroup_size + bitfieldInsert(workgroup_base, workgroup_id, 94441, 79149))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  barrier();
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec2(_GLF_IDENTITY(1, (1) | 0)), mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-78.19) : 1.0))), _GLF_struct_2(ivec2(_GLF_IDENTITY(1, 0 | (1))), _GLF_struct_0(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), workgroup_base + _GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.y + ((_GLF_IDENTITY(_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z, (_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z) + 0u) + 1) % GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.z), true), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u))), uvec3(1u, 1u, 1u) * (uvec3(1u))), _GLF_struct_1(ivec2(1), vec3(1.0), uvec4(1u), vec2(1.0), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) ^ 0u)) | ((1u)))) << 0u) | _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), ~ (_GLF_IDENTITY(~ (min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))), uint(uvec4(_GLF_IDENTITY(~ (min((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(max((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), (max((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))) | 0u)))), (~ (min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))))) - 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (true ? _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : _GLF_FUZZED(subgroup_size)))), 1u, 1u))))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)) ^ 0u, (((1u)) ^ 0u) | (((1u)) ^ 0u)))) | ((1u)))) << 0u) | _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))))))) ^ 0u)), bvec4(true), mat4x2(1.0)), _GLF_IDENTITY(vec2(1.0), vec2(mat4x2(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) - 0.0)) + 0.0), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), mix(float(dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), float(_GLF_FUZZED(9.4)), bool(false))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), cos(0.0), 0.0, 0.0, 1.0, 1.0)))), bvec3(true), bvec3(true), mat4x2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x = read;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_3._f2._f1.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(-7.8)) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(9695.6921), _GLF_FUZZED(0.1)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-67.76)), vec2(_GLF_FUZZED(-7.6), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec3(772.770, -51.59, -27.45) * mat2x3(-4492.2746, 7530.4292, 51.85, -7.7, 803.888, -46.33))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z % 2) == 0, ((_GLF_struct_replacement_12._f3._f1.GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_12num_workgroupsubgroup_basesubgroup_local_idworkgroup_id.z % 2) == 0) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), clamp(_GLF_IDENTITY(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), max(float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))), float(mat3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(_GLF_IDENTITY(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), mat3(mat3(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y)))))))
    barrier();
   GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x = atomicLoad(buf[GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (min(64, 64)) - 0)), _GLF_IDENTITY(2, (2) | (2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6441.0560)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x = atomicLoad(buf[GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w], 4, 64, _GLF_IDENTITY(2, max(2, 2)));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) ^ 0)], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, max(GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w, GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.w)))))], GLF_merged4_0_1_4_1_1_11_2_1_13_3_1_11readsubgroup_idsubgroup_sizevirtual_gid.x, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
