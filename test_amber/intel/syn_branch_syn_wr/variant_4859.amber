#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)), (bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-7.6), clamp(_GLF_FUZZED(-7.6), _GLF_FUZZED(-7.6), _GLF_FUZZED(-7.6)))), bool(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8356.0924) : injectionSwitch.y))), float(_GLF_FUZZED((-334.721 + -2.7))), bool(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), max((mat2(1.0) * (injectionSwitch)), (mat2(1.0) * (injectionSwitch))))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED((3936.2315 + _GLF_IDENTITY(-89.32, clamp(_GLF_IDENTITY(-89.32, (_GLF_IDENTITY(-89.32, min(-89.32, -89.32))) / 1.0), -89.32, -89.32)))), _GLF_FUZZED(-5.5)), bvec2(false, false)))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(450.323), _GLF_FUZZED(vec3(-0.0, -5.3, -8.2).s)), bvec2(false, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(max(vec2(-2027.5299, 46.20), vec2(-5.4, 0.1))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), false)))), true)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), false)))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), false)))), true)))))), true))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec3(bool(bool(! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(bool(! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(733.591) : injectionSwitch.y, (true ? false ? _GLF_FUZZED(733.591) : injectionSwitch.y : _GLF_FUZZED(-7.3))))), max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(733.591) : injectionSwitch.y, (true ? false ? _GLF_FUZZED(733.591) : injectionSwitch.y : _GLF_FUZZED(-7.3))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(733.591) : injectionSwitch.y, (true ? false ? _GLF_FUZZED(733.591) : injectionSwitch.y : _GLF_FUZZED(-7.3)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(30.58, -785.335)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(uvec4(163169u, 1996u, 182433u, 119347u)))))), _GLF_IDENTITY((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID)), (_GLF_IDENTITY((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID)), min((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID)), _GLF_IDENTITY((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID)), max((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID)), _GLF_IDENTITY((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID)), ~ (~ _GLF_IDENTITY(((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u) + (gl_WorkGroupID)), gl_WorkGroupID))), uvec3(1u, 1u, 1u) * (((min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u) + (gl_WorkGroupID)), gl_WorkGroupID)))))))))))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (1u & 1u), 0u))), 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u))), 0u) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (1u & 1u), 0u))), 0u))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)))) * vec2(1.0, 1.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), true && ((false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), false, false, false))))))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), true && (true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))))) || false)) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-359.707) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))), false, false))))), true && (_GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0))).y : _GLF_FUZZED(ceil(36.27)))), false, true))), false, false))))), (_GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y, false, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))) && true)), false))))), bool(bool((false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(-4.4, 44.63, -5.9).r)), bool(false)))) - 0.0), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))))))))), false, false))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0)))), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (bool(bvec4(true, false, true, true)))))), false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true)))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (0u & (145089u % 33201u)) + (workgroup_id));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) - 0u), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) - 0u, ((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) - 0u) >> 0u)), 0u, 1u))) >> 0u)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) * 1u))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))))), (subgroup_local_id) | 0u) + 1, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_size, 32439, -65918)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) * 1u))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))))), (subgroup_local_id) | 0u) + 1, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) * 1u))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))))), (subgroup_local_id) | 0u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) * 1u))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))))), (subgroup_local_id) | 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) * 1u))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))))), (subgroup_local_id) | 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) * 1u))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_base)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))))), (subgroup_local_id) | 0u) + 1)))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), _GLF_IDENTITY(uint(subgroup_size), (_GLF_IDENTITY(uint(subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(subgroup_size)))) ^ 0u)))))), ((subgroup_size)) >> 0u), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(num_workgroup))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, (_GLF_IDENTITY((0) + 0, max(_GLF_IDENTITY((0) + 0, _GLF_IDENTITY(((0) + _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 0 : _GLF_FUZZED(38114)))))), (_GLF_IDENTITY(((0) + _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 0 : _GLF_FUZZED(38114)))))), int(ivec2(((0) + _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 0 : _GLF_FUZZED(38114)))))), 0)))) | (_GLF_IDENTITY(((0) + _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 0 : _GLF_FUZZED(38114)))))), (((0) + _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec4((true), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 0 : _GLF_FUZZED(38114))))))) | 0))) << 0), (0) + _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))))))) / 1));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), max(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id)))) % 2) == _GLF_IDENTITY(0, (0) >> 0))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, exp(0.0), 1.0, cos(0.0), 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, sin(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.7)), bool(false)))))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, exp(0.0), 1.0, cos(0.0), 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, sin(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.7)), bool(false))))))))))))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), false || (! ((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(bool(bvec3(! (! ((false))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (! ((false))), true, false))), true && (! (bool(bvec3(! (! ((false))), true, false)))))))), bool(bvec4(! (! ((false))), _GLF_IDENTITY(true, ! (! (true))), true, false))))), false || (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), true && (! (_GLF_IDENTITY(! ((false)), false || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, false)), (bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, false))) && true)))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, true, true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((62.32 * 3.3))), float(injectionSwitch.x), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED((62.32 * 3.3))), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED((62.32 * 3.3))), float(injectionSwitch.x), bool(true))) / 1.0), mix(float(_GLF_FUZZED((62.32 * 3.3))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.4)), vec2(_GLF_FUZZED(-36.77), _GLF_IDENTITY(((injectionSwitch))[1], 1.0 * (((injectionSwitch))[1]))), bvec2(false, true))) - log(vec2(1.0, 1.0))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u))))]))) | 0u), _GLF_IDENTITY(4, (4) >> 0), 64, 2);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) && true, false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) && true))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) && true, false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((false), bool(bvec3((false), true, false)))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), (injectionSwitch.x < injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((2573.6501 + -6295.2039))), vec2(_GLF_FUZZED((6.8 / -651.310)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))))) || (false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))))) || (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))))) || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))))) || (false)))))), false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))))), false, false))), _GLF_IDENTITY(true, false || (true)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(injectionSwitch[1], 1.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, exp(0.0)))))), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), mix(float(_GLF_FUZZED(-3354.1275)), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), max(float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), bool(true)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true, false, true)), false, false, false))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, false))), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), false, false))), _GLF_IDENTITY(true, false || (true)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), mix(float(_GLF_FUZZED(-3354.1275)), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), max(float(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), clamp(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) * 1.0), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), float(_GLF_FUZZED(-7.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), bool(true)))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, true)), false, false, false)))))) || false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0)))), max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.7), (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97076) : 1)), int(ivec4(1, 1, 1, (1 ^ 1))))]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(871.426) : (injectionSwitch)[0])), _GLF_FUZZED(5.7)), (true ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)), min(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((injectionSwitch), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(1.0, 1.0) * (vec2(mat4x3((injectionSwitch), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))[0], _GLF_FUZZED(5.7)), vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)))), vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(53.79, -97.76)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(-15.00, -8.2))))) - vec2(0.0, 0.0)))))), bvec2(true, false))).y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec2(true && (false), true)), ! (! (bool(bvec2(true && (false), true)))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))))) && true))) && true))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log(vec2(-2486.0377, 3175.5439))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true) || false), false, false)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || false), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || false), false, false))) && true)), ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || false), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || false), false, false))) && true))) && true))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (48698) + 0)).b, min(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, _GLF_IDENTITY(int(ivec4(48698, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (0 << _GLF_IDENTITY(int(4), int(4))))), (int(ivec4(_GLF_IDENTITY(48698, (48698) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (0 << _GLF_IDENTITY(int(4), int(4)))))) >> 0))).b, ivec4(-82183, -70595, 11172, 48698).b))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, (-82183) << 0), -70595, _GLF_IDENTITY(11172, min(_GLF_IDENTITY(11172, ~ (~ (11172))), 11172)), 48698).b))), max(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, (-82183) << 0), _GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(-70595, 0 | (-70595)), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-62474))))) >> _GLF_IDENTITY(int(7), int(7))), 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(-70595, 0 | (-70595)), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-62474))))) >> _GLF_IDENTITY(int(7), int(7))), 0))))), _GLF_IDENTITY(11172, min(_GLF_IDENTITY(_GLF_IDENTITY(11172, (11172) | 0), ~ (~ (11172))), 11172)), 48698).b))), int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, (-82183) << 0), -70595, _GLF_IDENTITY(11172, min(_GLF_IDENTITY(11172, ~ (~ (11172))), 11172)), 48698).b))))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (true ? _GLF_IDENTITY(-82183, (_GLF_IDENTITY(-82183, ~ (~ (-82183)))) / 1) : _GLF_FUZZED(-63540))), -70595, 11172, 48698).b, (ivec4(_GLF_IDENTITY(-82183, (true ? _GLF_IDENTITY(-82183, (_GLF_IDENTITY(-82183, ~ (~ (-82183)))) / 1) : _GLF_FUZZED(-63540))), -70595, 11172, 48698).b) >> (0 << _GLF_IDENTITY(int(8), int(8)))), min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (ivec4(-82183, -70595, 11172, 48698)) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(_GLF_IDENTITY(ivec4(7), (_GLF_IDENTITY(ivec4(7), (ivec4(7)) - ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), ivec4(7)))).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), ivec4(-82183, -70595, 11172, 48698).b))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))) ^ 0)) | 0))))), (false ? _GLF_FUZZED(-51366) : (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))) ^ 0)) | 0))))))), (_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))) ^ 0)) | 0))))), (false ? _GLF_FUZZED(-51366) : (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))) ^ 0)) | 0)))))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))) ^ 0)) | 0))))), (false ? _GLF_FUZZED(-51366) : (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))))) ^ 0)) | 0))))))))) + _GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, ~ (~ (-82183))), -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))) / 1), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)), 0 + (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, min(-82183, -82183)), -70595, _GLF_IDENTITY(11172, min(_GLF_IDENTITY(11172, min(11172, 11172)), _GLF_IDENTITY(11172, (11172) << 0))), 48698).b))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(_GLF_IDENTITY(-82183, (_GLF_IDENTITY(-82183, min(-82183, -82183))) | (-82183)), -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))) / 1), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))) / 1)) - (-53796 & 0))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))) / 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, min(48698, 48698))) | 0)).b, min(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) | 0), ivec4(-82183, -70595, _GLF_IDENTITY(11172, _GLF_IDENTITY(int(ivec2(11172, ((0 | 0) & 97544))), (_GLF_IDENTITY(int(ivec2(11172, ((0 | 0) & 97544))), (_GLF_IDENTITY(int(ivec2(11172, ((0 | 0) & 97544))), ~ (~ (int(ivec2(11172, ((0 | 0) & 97544))))))) ^ (0 >> _GLF_IDENTITY(int(8), int(8))))) | (_GLF_IDENTITY(int(ivec2(11172, ((0 | 0) & 97544))), 0 ^ (int(ivec2(11172, ((0 | 0) & 97544)))))))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b))), ~ (~ (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) | (48698))) / 1)) >> 0)).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(_GLF_IDENTITY(-82183, (-82183) - 0), _GLF_IDENTITY(-70595, (true ? -70595 : _GLF_FUZZED(-29470))), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | 0), _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (ivec4(-82183, -70595, 11172, 48698)) | ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)).b)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, max(48698, 48698))).b, min(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, int(int(ivec4(-82183, -70595, 11172, 48698).b)))) * 1)) - 0)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) | 0), -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183), 0 ^ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183), int(ivec3((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183), 1, 1)))))) ^ 0)), -70595, 11172, 48698).b)))) + _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, ~ (~ (0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, -70595, 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698))))) << ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))), ~ (~ (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))))))))))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((ivec4(-82183, -70595, 11172, 48698)), ((ivec4(-82183, -70595, 11172, 48698))) << (ivec4(0, 0, 0, 0) & ivec4(40495, 92083, 68593, 96011))), (_GLF_IDENTITY((ivec4(-82183, -70595, 11172, 48698)), ((ivec4(-82183, -70595, 11172, 48698))) << (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec4(0, 0, 0, 0) : _GLF_FUZZED(ivec4(-55466, -27412, 22143, -41638)))) & ivec4(40495, 92083, 68593, 96011)))) * ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, clamp(48698, 48698, 48698))).b)))) / 1)))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, clamp(_GLF_IDENTITY(-70595, clamp(-70595, -70595, _GLF_IDENTITY(-70595, min(-70595, -70595)))), -70595, -70595)), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec2(11172, ((0 | 0) & 97544)))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b), max(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec2(11172, ((0 | 0) & 97544)))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b), min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec2(11172, ((0 | 0) & 97544)))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b))))), ~ (~ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, ~ (_GLF_IDENTITY(~ (-82183), ~ (~ (~ (-82183)))))), -70595, _GLF_IDENTITY(11172, (11172) >> 0), 48698).b, min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) + 0)) / 1)) | (48698))) / 1)) >> 0)).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(_GLF_IDENTITY(-82183, (-82183) - 0), _GLF_IDENTITY(-70595, (true ? -70595 : _GLF_FUZZED(-29470))), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, int(ivec2(_GLF_IDENTITY(-82183, (-82183) | (-82183)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), -70595, 11172, 48698).b))) | 0), ivec4(-82183, -70595, 11172, 48698).b)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, max(48698, 48698))).b, min(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0)))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183)), -70595, 11172, 48698).b, (ivec4(_GLF_IDENTITY(-82183, (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183)), -70595, 11172, 48698).b) ^ 0))))) + _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), ~ (~ (_GLF_IDENTITY(0, (0) << 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, -70595, 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ _GLF_IDENTITY((ivec4(-82183, -70595, 11172, 48698)), ((ivec4(-82183, -70595, 11172, 48698))) << (ivec4(0, 0, 0, 0) & ivec4(40495, 92083, 68593, 96011))))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, clamp(48698, 48698, 48698))).b)))) / 1)))), 1, 1, 1)), (int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec2(11172, ((0 | 0) & 97544)))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b))), ~ (~ (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) | (48698))) / 1)) >> 0)).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(_GLF_IDENTITY(-82183, (-82183) - 0), _GLF_IDENTITY(-70595, (true ? -70595 : _GLF_FUZZED(-29470))), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | 0), ivec4(-82183, -70595, 11172, 48698).b)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, max(48698, 48698))).b, min(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0)))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183)), -70595, 11172, 48698).b)))) + _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, -70595, 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ _GLF_IDENTITY((ivec4(-82183, -70595, 11172, 48698)), ((ivec4(-82183, -70595, 11172, 48698))) << (ivec4(0, 0, 0, 0) & ivec4(40495, 92083, 68593, 96011))))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, clamp(48698, 48698, 48698))).b)))) / 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec2(11172, ((0 | 0) & 97544)))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b))), ~ (~ (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) | (48698))) / 1)) >> 0)).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(_GLF_IDENTITY(-82183, (-82183) - 0), _GLF_IDENTITY(-70595, (true ? -70595 : _GLF_FUZZED(-29470))), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | 0), ivec4(-82183, -70595, 11172, 48698).b)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, max(48698, 48698))).b, min(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0)))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183)), -70595, 11172, 48698).b)))) + _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, -70595, 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ _GLF_IDENTITY((ivec4(-82183, -70595, 11172, 48698)), ((ivec4(-82183, -70595, 11172, 48698))) << (ivec4(0, 0, 0, 0) & ivec4(40495, 92083, 68593, 96011))))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, clamp(48698, 48698, 48698))).b)))) / 1)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec2(11172, ((0 | 0) & 97544)))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b))), ~ (~ (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) | (48698))) / 1)) >> 0)).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(_GLF_IDENTITY(-82183, (-82183) - 0), _GLF_IDENTITY(-70595, (true ? -70595 : _GLF_FUZZED(-29470))), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | 0), ivec4(-82183, -70595, 11172, 48698).b)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, max(48698, 48698))).b, min(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0)))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183)), -70595, 11172, 48698).b)))) + _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, -70595, 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, min(-70595, -70595)), 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ _GLF_IDENTITY((ivec4(-82183, -70595, 11172, 48698)), ((ivec4(-82183, -70595, 11172, 48698))) << (ivec4(0, 0, 0, 0) & ivec4(40495, 92083, 68593, 96011))))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, clamp(48698, 48698, 48698))).b)))) / 1)))))), 1, 1, 1))) | (int(ivec4(int(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, clamp(-82183, _GLF_IDENTITY(-82183, clamp(-82183, -82183, -82183)), _GLF_IDENTITY(-82183, max(-82183, -82183)))), -70595, 11172, 48698).b))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, clamp(48698, 48698, _GLF_IDENTITY(48698, 0 + (48698))))).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec2(11172, ((0 | 0) & 97544)))), _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) ^ 0)) / 1)).b))), ~ (~ (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) | (48698))) / 1)) >> 0)).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(_GLF_IDENTITY(-82183, (-82183) - 0), _GLF_IDENTITY(-70595, (true ? -70595 : _GLF_FUZZED(-29470))), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | 0), ivec4(-82183, -70595, 11172, 48698).b), 0 | (min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, (48698) | (48698))) / 1)) >> 0)).b)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, clamp(ivec4(_GLF_IDENTITY(-82183, (-82183) - 0), _GLF_IDENTITY(-70595, (true ? -70595 : _GLF_FUZZED(-29470))), 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | 0), ivec4(-82183, -70595, 11172, 48698).b)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, max(48698, 48698))), ivec4(0, 0, 0, 0) | (ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, max(48698, 48698))))).b, min(ivec4(-82183, -70595, 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, min(48698, 48698))).b, _GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0, 0 | (_GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0, max(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0, ((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0) | ((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0)), (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) * 1)) - 0)))))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) + (-82183)), -70595, 11172, 48698).b)))) + _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, ((0) << 0) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, -70595, 11172, 48698)))).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ (ivec4(-82183, _GLF_IDENTITY(-70595, _GLF_IDENTITY(min(-70595, -70595), clamp(min(-70595, -70595), min(-70595, -70595), min(-70595, -70595)))), 11172, 48698)))).b, min(ivec4(-82183, -70595, _GLF_IDENTITY(11172, min(11172, 11172)), 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ~ (~ _GLF_IDENTITY((ivec4(-82183, -70595, 11172, 48698)), _GLF_IDENTITY(((ivec4(-82183, -70595, 11172, 48698))), ivec4(0, 0, 0, 0) | (((ivec4(-82183, -70595, 11172, 48698))))) << (ivec4(0, 0, 0, 0) & ivec4(40495, 92083, 68593, 96011))))).b, min(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, (ivec4(-82183, -70595, 11172, 48698).b) + 0), ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, 0 | (48698))).b))))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, clamp(48698, 48698, 48698))).b)))) / 1)))), 1, 1, 1))))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698)))))) - ivec4(0, 0, 0, 0)).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, int(ivec2(48698, 1)))) / (0 ^ 1))).b)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, _GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), min(_GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), ~ (~ (min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), 0 | (_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, clamp(_GLF_IDENTITY(11172, (11172) - 0), 11172, 11172)), 48698).b)), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), ~ (~ ((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (false ? _GLF_FUZZED(ivec4(-63329, -69866, -78717, -62674)) : ivec4(-82183, -70595, 11172, 48698))).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))))))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698)))))) - ivec4(0, 0, 0, 0)).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, int(ivec2(48698, 1)))) / (0 ^ 1))).b)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, _GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), min(_GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), ~ (~ (min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), 0 | (_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, clamp(_GLF_IDENTITY(11172, (11172) - 0), 11172, 11172)), 48698).b)), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), ~ (~ ((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (false ? _GLF_FUZZED(ivec4(-63329, -69866, -78717, -62674)) : ivec4(-82183, -70595, 11172, 48698))).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698)))))) - ivec4(0, 0, 0, 0)).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, int(ivec2(48698, 1)))) / (0 ^ 1))).b)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, _GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), min(_GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), ~ (~ (min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), 0 | (_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, clamp(_GLF_IDENTITY(11172, (11172) - 0), 11172, 11172)), 48698).b)), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), ~ (~ ((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (false ? _GLF_FUZZED(ivec4(-63329, -69866, -78717, -62674)) : ivec4(-82183, -70595, 11172, 48698))).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))))))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698)))))) - ivec4(0, 0, 0, 0)).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, int(ivec2(48698, 1)))) / (0 ^ 1))).b)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, _GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), min(_GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), ~ (~ (min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), 0 | (_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, clamp(_GLF_IDENTITY(11172, (11172) - 0), 11172, 11172)), 48698).b)), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), ~ (~ ((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (false ? _GLF_FUZZED(ivec4(-63329, -69866, -78717, -62674)) : ivec4(-82183, -70595, 11172, 48698))).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(-82183, (-82183) ^ 0), -70595, 11172, 48698)))))) - ivec4(0, 0, 0, 0)).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, (_GLF_IDENTITY(48698, int(ivec2(48698, 1)))) / (0 ^ 1))).b)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, _GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), min(_GLF_IDENTITY(min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b), ~ (~ (min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))), 0 | (_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (_GLF_IDENTITY(-70595, int(_GLF_IDENTITY(ivec2(-70595, 0), (true ? ivec2(-70595, 0) : _GLF_FUZZED(ivec2(9235, 70264))))))) ^ 0), 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, clamp(_GLF_IDENTITY(11172, (11172) - 0), 11172, 11172)), 48698).b)), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), ~ (~ ((_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), (false ? _GLF_FUZZED(ivec4(-63329, -69866, -78717, -62674)) : ivec4(-82183, -70595, 11172, 48698))).b))) | (_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, 11172, 48698).b, ivec4(_GLF_IDENTITY(-82183, max(-82183, -82183)), -70595, 11172, 48698).b))), ~ (~ (int(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) * ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(1, _GLF_IDENTITY(1, (1) ^ 0), 1, 1) * (ivec4(_GLF_IDENTITY(-82183, (-82183) | (-82183)), -70595, 11172, 48698))).b)))))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))) >> _GLF_IDENTITY(int(0), int(0))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, _GLF_IDENTITY(48698, min(_GLF_IDENTITY(48698, (48698) | 0), 48698))).b, min(ivec4(-82183, -70595, _GLF_IDENTITY(11172, max(_GLF_IDENTITY(11172, (11172) / 1), 11172)), 48698).b, ivec4(-82183, -70595, 11172, 48698).b))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)), ~ (~ (_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)))))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(-1, 76891, 87631)) : ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)), ~ (~ (_GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, (-70595) ^ 0), 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)))))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595), max(int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-70595)))), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698), ivec4(1, 1, 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b)))), (false ? _GLF_FUZZED(54775) : ~ (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, _GLF_IDENTITY(-70595, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1076.4244)), vec2(_GLF_FUZZED(3.8), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))), false)), false)))))).x)) | (-70595)), 11172, 48698).b, _GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, int(ivec2(-70595, 0))), 11172, 48698), ivec4(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-13376))))), 1, 1) * (ivec4(-82183, -70595, 11172, 48698))).b))))))) >> 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, 0 | (ivec4(-82183, -70595, 11172, 48698).b)), _GLF_IDENTITY(ivec4(-82183, _GLF_IDENTITY(-70595, _GLF_IDENTITY(1 * (_GLF_IDENTITY(-70595, (-70595) | (-70595))), (1 * (_GLF_IDENTITY(-70595, (-70595) | (-70595)))) | (1 * (_GLF_IDENTITY(-70595, (-70595) | (-70595)))))), 11172, 48698), (ivec4(-82183, _GLF_IDENTITY(-70595, 1 * (_GLF_IDENTITY(-70595, _GLF_IDENTITY((-70595) | (-70595), (true ? _GLF_IDENTITY((-70595) | (-70595), ((-70595) | (-70595)) << (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(30085)))))), 11172, 48698)) - ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) - (0 >> _GLF_IDENTITY(int(7), int(7)))), 0)).b))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, ~ (~ (-82183))), -70595, 11172, 48698).b, min(ivec4(-82183, -70595, _GLF_IDENTITY(11172, int(ivec3(_GLF_IDENTITY(11172, int(int(_GLF_IDENTITY(11172, (11172) | 0)))), 1, 1))), 48698).b, ivec4(-82183, -70595, _GLF_IDENTITY(11172, (false ? _GLF_FUZZED(min(66254, -18520)) : _GLF_IDENTITY(11172, (false ? _GLF_FUZZED(-60867) : 11172)))), 48698).b)))) + 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-82183, min(_GLF_IDENTITY(-82183, _GLF_IDENTITY(int(ivec4(-82183, _GLF_IDENTITY(1, min(1, 1)), 1, 0)), clamp(int(ivec4(-82183, _GLF_IDENTITY(1, min(1, 1)), 1, 0)), int(ivec4(-82183, _GLF_IDENTITY(1, min(1, 1)), 1, 0)), int(ivec4(-82183, _GLF_IDENTITY(1, min(1, 1)), 1, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(-82183, clamp(-82183, -82183, -82183)), max(_GLF_IDENTITY(-82183, clamp(-82183, -82183, -82183)), _GLF_IDENTITY(_GLF_IDENTITY(-82183, clamp(-82183, -82183, -82183)), int(ivec2(_GLF_IDENTITY(-82183, clamp(-82183, -82183, -82183)), 1))))))), -70595, 11172, _GLF_IDENTITY(48698, 0 + (48698))), (false ? _GLF_FUZZED(ivec4(-61147, 45342, _GLF_IDENTITY(63934, min(63934, 63934)), 38461)) : ivec4(_GLF_IDENTITY(-82183, min(_GLF_IDENTITY(-82183, int(ivec4(-82183, 1, 1, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(-82183, clamp(-82183, -82183, -82183)))), -70595, 11172, _GLF_IDENTITY(_GLF_IDENTITY(48698, clamp(_GLF_IDENTITY(48698, (true ? 48698 : _GLF_FUZZED(-59965))), 48698, 48698)), 0 + (48698))))).b, ivec4(-82183, -70595, 11172, 48698).b))), (int(_GLF_IDENTITY(ivec4(-82183, -70595, 11172, 48698).b, min(ivec4(-82183, -70595, _GLF_IDENTITY(11172, (11172) / (1 & 1)), 48698).b, ivec4(-82183, -70595, 11172, 48698).b)))) / 1)))))))) << 0))) : 4)), 64, _GLF_IDENTITY(2, (2) * 1));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true)))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
