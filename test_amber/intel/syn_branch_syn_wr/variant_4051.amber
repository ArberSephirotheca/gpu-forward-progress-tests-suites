#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-72.05)), bool(false))), injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(fract(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[0], _GLF_FUZZED(-45.73)), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
        barrier();
       return;
      }
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8519.3308), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), sqrt(1.0), round(length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (_GLF_IDENTITY(true, false || (true)) ? mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(mat4(2220.0844, -54.00, -413.449, -0.8, 5718.7343, -520.413, -3.9, 534.621, -4.0, 5.9, -92.77, 51.25, _GLF_IDENTITY(-3.3, clamp(-3.3, -3.3, -3.3)), -5.3, 37.38, 91.79))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-5.5, max(-5.5, _GLF_IDENTITY(-5.5, min(-5.5, -5.5)))))), bvec2(true, false))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(977.389)), vec2(_GLF_FUZZED(22.29), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8519.3308), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), sqrt(1.0), round(length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (_GLF_IDENTITY(true, false || (true)) ? mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(mat4(2220.0844, -54.00, -413.449, -0.8, 5718.7343, -520.413, -3.9, 534.621, -4.0, 5.9, -92.77, 51.25, _GLF_IDENTITY(-3.3, clamp(-3.3, -3.3, -3.3)), -5.3, 37.38, 91.79))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-5.5, max(-5.5, _GLF_IDENTITY(-5.5, min(-5.5, -5.5)))))), bvec2(true, false))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(977.389)), vec2(_GLF_FUZZED(22.29), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8519.3308), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), sqrt(1.0), round(length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (_GLF_IDENTITY(true, false || (true)) ? mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(mat4(2220.0844, -54.00, -413.449, -0.8, 5718.7343, -520.413, -3.9, 534.621, -4.0, 5.9, -92.77, 51.25, _GLF_IDENTITY(-3.3, clamp(-3.3, -3.3, -3.3)), -5.3, 37.38, 91.79)))))), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), sqrt(1.0), round(length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (_GLF_IDENTITY(true, false || (true)) ? mat4((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) : _GLF_FUZZED(mat4(2220.0844, -54.00, -413.449, -0.8, 5718.7343, -520.413, -3.9, 534.621, -4.0, 5.9, -92.77, 51.25, _GLF_IDENTITY(-3.3, clamp(-3.3, -3.3, -3.3)), -5.3, 37.38, 91.79))))))), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-5.5, max(-5.5, _GLF_IDENTITY(-5.5, min(-5.5, -5.5)))))), bvec2(true, false))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(977.389)), vec2(_GLF_FUZZED(22.29), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, true))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(18.55), _GLF_FUZZED(-91.51)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(37.99), _GLF_FUZZED(-3942.5912)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(856.972, 921.419)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), false))), false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), false, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(false, true && (false)), true))))) || false), false, false, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (gl_WorkGroupSize), max(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.0)))), float(_GLF_FUZZED(6.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-977.935), _GLF_FUZZED(4144.2454)), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(823.724)), vec2(_GLF_FUZZED(-39.81), ((injectionSwitch))[1]), bvec2(false, true)))) / vec2(1.0, 1.0))[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(float(55165))), bool(false))), 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(346.440)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9401.7227), (false ? _GLF_FUZZED(-19.74) : _GLF_FUZZED(-9401.7227))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(min(workgroup_base + subgroup_base, workgroup_base + subgroup_base), uint(uvec4(min(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_base))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - determinant(mat2(0.0, 1.0, 0.0, 0.0)))) << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)) & 1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)) & 1u), min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)) & 1u), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)) & 1u)))) | 0u)))) % subgroup_size), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)))) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)))) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))), true, false))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))) || false) ? _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_size))))), (subgroup_local_id) << (8321u & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(840.795)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), uint(uvec2((subgroup_local_id), 1u))))))), (subgroup_local_id) << (8321u & 0u)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id))))))), (subgroup_local_id) << (8321u & 0u)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((false ? subgroup_base : atomicAdd(num_workgroup, 102913u))) : subgroup_local_id)), ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), _GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))))), (1u & 1u)), _GLF_IDENTITY((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u), min((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u), ((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 0u), (subgroup_local_id) << (_GLF_IDENTITY(8321u, (8321u) | (_GLF_IDENTITY(8321u, (8321u) | (8321u)))) & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-845.836)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(362.373)))), float(_GLF_FUZZED(90.45)), bool(_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u), (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)) | (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u))))))), max((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u), (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)) | (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u), (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)) | (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u))))))))), (1u & 1u))))))) + 0u) % subgroup_size)), 0u ^ (min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)))) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)))) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))), true, false))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))) || false) ? _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_size))))), (subgroup_local_id) << (8321u & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(840.795)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), uint(uvec2((subgroup_local_id), 1u))))))), (subgroup_local_id) << (8321u & 0u)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), uint(2u))), (1u & 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id))))))), (subgroup_local_id) << (8321u & 0u)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((false ? subgroup_base : atomicAdd(num_workgroup, 102913u))) : subgroup_local_id)), ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), _GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))))), (1u & 1u)), _GLF_IDENTITY((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u), min((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u), ((uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), uint(2u))), (1u & 1u))) | uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (subgroup_local_id) << (8321u & 0u)) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base)) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) + 0u), (subgroup_local_id) << (_GLF_IDENTITY(8321u, (8321u) | (_GLF_IDENTITY(8321u, (8321u) | (8321u)))) & 0u)) + 1) : _GLF_FUZZED(subgroup_base))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (8321u & 0u)) + 1), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-845.836)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(362.373)))), float(_GLF_FUZZED(90.45)), bool(_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u), (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)) | (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u))))))), max((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u), (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)) | (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u), (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u)) | (max(_GLF_IDENTITY(2u, ~ (~ (2u))), 2u))))))))), (1u & 1u))))))) + 0u) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8761.5351))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0)), max(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0))))) : _GLF_FUZZED(vec2(6.5, -6.4)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = _GLF_IDENTITY(0, (0) * 1);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || _GLF_IDENTITY(_GLF_IDENTITY(((false)), true && (((false)))), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), true && (((false)))), false || (_GLF_IDENTITY(((false)), true && _GLF_IDENTITY((((false))), true && (_GLF_IDENTITY((((false))), (_GLF_IDENTITY((((false))), bool(bool((((false))))))) || false))))))) || false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), 0 ^ ((1) | (1))))), clamp(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY((1), clamp((1), (1), (1))) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))), min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))))), _GLF_IDENTITY(min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), clamp(_GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (false ? _GLF_FUZZED(8934) : (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), ((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))) ^ 0), (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))) | (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))))) | 0))), clamp(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), 0 ^ ((1) | (1))))), clamp(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY((1), clamp((1), (1), (1))) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))), min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))))), _GLF_IDENTITY(min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), clamp(_GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (false ? _GLF_FUZZED(8934) : (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), ((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))) ^ 0), (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))) | (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))))) | 0))), uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), 0 ^ ((1) | (1))))), clamp(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY((1), clamp((1), (1), (1))) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))), min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))))), _GLF_IDENTITY(min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), clamp(_GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (false ? _GLF_FUZZED(8934) : (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), ((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))) ^ 0), (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))) | (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))))) | 0))), uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), 0 ^ ((1) | (1))))), clamp(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY((1), clamp((1), (1), (1))) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))), min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), clamp(int(1), int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), int(1)))))), _GLF_IDENTITY(min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), clamp(_GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), (false ? _GLF_FUZZED(8934) : (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))), _GLF_IDENTITY((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))), ((min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))) ^ 0), (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | (0)))), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))))) | (min(int(_GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, (1) >> 0)), int(1)))), int(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))))))) | 0))))), 4, _GLF_IDENTITY(64, (64) ^ (0 & 62105)), 4);
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % _GLF_IDENTITY(2, (2) ^ 0)) << 0u)) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(int(64))), ~ (_GLF_IDENTITY(~ (64), (~ (64)) >> 0))), _GLF_IDENTITY(2, (2) - 0));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.6))) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false)))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false))), (true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_DEAD(false))) || false)))) && true)))))))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false))), (true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_DEAD(false))) || false)))) && true)))))))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false))), (true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_DEAD(false))) || false)))) && true)))))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false))), (true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (_GLF_DEAD(false))) || false)))) && true)))))))), false))), true, false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.0) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.6)), bool(false))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0)), (float(vec2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0))) - 0.0)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bool((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(986.123), _GLF_FUZZED(vec2(-6.3, -8.6).t)), bvec2(false, false))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), (bool(bvec3(_GLF_DEAD(false), true, false))) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
