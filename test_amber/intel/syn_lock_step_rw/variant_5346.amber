#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(true && (! (_GLF_DEAD(false))))), (bool(bool(true && (! (_GLF_DEAD(false)))))) && true)))))) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), ! (! (bool(bvec2(false, false)))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 1.0, abs(1.0)), vec3(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 1.0, abs(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 1.0, abs(1.0)), vec3(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 1.0, abs(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 1.0, abs(1.0)), vec3(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 1.0, abs(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, true))))), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, length(0.0), sqrt(1.0)), (true ? mat4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, length(0.0), sqrt(1.0)) : _GLF_FUZZED((mat4(17.31, 27.30, 9.4, 9555.2514, 0.3, 3.6, 4397.8029, -39.63, -872.564, -9.4, 12.86, 1.3, -440.577, 8.5, 789.206, 3.5) / mat4(4755.3030, 915.753, -4.6, -15.58, 7931.9691, 60.34, -124.867, 7.6, 1337.2758, -70.40, -2.0, 26.17, -3443.0239, 715.637, -7.8, 74.94))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(! (bool(false)), true, true)))))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.1)), bool(false))), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat3x2(normalize(vec4(1.0, 1.0, 1.0, 1.0)), 1.0, 1.0))), normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4(_GLF_FUZZED(4.7), _GLF_FUZZED(9.9), _GLF_FUZZED(-415.377), _GLF_FUZZED(float(true))), vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), bvec4(true, true, true, true))))))), 0.0, 0.0) : _GLF_FUZZED(mat2(-9.1, 71.35, -453.653, -4687.2663)))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4056.8527) : injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-4.4, -242.389))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(-4.4, -242.389)))) + vec2(0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.4, -242.389)))).x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_DEAD(false))))) || false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-6.3, 8.7)), vec2(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(vec2(-6.3, 8.7)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-4.8, 96.35)) : _GLF_FUZZED(vec2(-6.3, 8.7)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), abs(1.0), exp(abs(0.0))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sign(floor(-8826.7938))) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), false, true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.4, 9361.0735)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.8)), vec2(_GLF_FUZZED(_GLF_IDENTITY(7.2, float(mat4x2(_GLF_IDENTITY(7.2, (7.2) / 1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), cos(0.0), abs(0.0))))), (injectionSwitch)[1]), bvec2(false, true))))))).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-817.278) : injectionSwitch.x)))) > injectionSwitch.y)), false), true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0))) > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0))) > injectionSwitch.y) && true))))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), false || (bool(bool(_GLF_IDENTITY(false, (false) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7.8) : injectionSwitch.y))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))) | (subgroup_base)), subgroup_base)))), (subgroup_base) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (0u)))), (uint(uvec2(subgroup_base, 0u))) / 1u)))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (true ? _GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 1u, 0u))) : _GLF_FUZZED(packSnorm4x8(vec4(4.7, 2.4, -6.4, 157.245))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), uint(uvec2(subgroup_base, 0u)))))))), min((_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 0u)))))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec2(subgroup_base, 0u), (uvec2(subgroup_base, 0u)) << uvec2(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))))))))), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), clamp(~ ((workgroup_base + subgroup_base)), ~ ((workgroup_base + subgroup_base)), _GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ ((workgroup_base + subgroup_base))) | (~ ((workgroup_base + subgroup_base)))))), (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), clamp(~ ((workgroup_base + subgroup_base)), ~ ((workgroup_base + subgroup_base)), _GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | (~ ((workgroup_base + subgroup_base))))))) + 0u)))) + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(uvec4((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, clamp(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ (~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)), GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), min(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), uvec2(0u, 0u) ^ ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))))))) >> uvec2(0u, 0u)).x + 1), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)) | ((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))))))) >> uvec2(0u, 0u)).x + 1), ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))), ((_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), clamp(~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size), ~ (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)))))))) >> uvec2(0u, 0u)).x + 1)) + 0u)) | 0u) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size, uvec2(0u, 0u) | (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size)).y, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y, _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y) ^ 0u, clamp((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y) ^ 0u, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y) ^ 0u, (GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y) ^ 0u)))) | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), 4)), 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), ((4)) | ((4)))))), 0 ^ (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), ((4)) | ((4))))))))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false)))), true))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, true && ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, true && ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)))), true, false))), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(false, ! (! (false)))), true))))))) || false), bool(bvec4(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), false, true, true))))) || false)))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), true))))))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(vec3(54.71, -10.97, 6155.2464).z)), bool(false)))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))) && true)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), _GLF_IDENTITY((mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))), ((mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(vec3(54.71, -10.97, 6155.2464).z)), bool(false)))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(atan(vec3(5776.4217, 4933.2556, -843.856), vec3(-6.1, -4356.7661, -6.2))[0])))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(vec3(54.71, -10.97, 6155.2464).z)), bool(false)))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec2(_GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))) && true))) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false)))), true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false)))), true))))))) || false)) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false))))), true))))))) || false), bool(bvec4(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true))))))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))))), false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * 1.0))))), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(vec3(54.71, -10.97, 6155.2464).z)), bool(false)))), log(1.0)), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.5)), float(0.0), bool(true))))))))))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - 0.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - 0.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), ! _GLF_IDENTITY((! ((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 0.0))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2671.4317))), 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ((! ((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 0.0))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2671.4317))), 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), true))) && true)))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), true))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false)))), true)), true)))))))) || false), bool(bvec4(! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true))))))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((5.5)), _GLF_FUZZED(-33.34)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(851.861)), bool(false))))), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(length(normalize(1.0)), (true ? length(normalize(1.0)) : _GLF_FUZZED(401.129))) : _GLF_FUZZED(-0.8)))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) + tan(vec2(0.0, 0.0))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(vec3(54.71, -10.97, 6155.2464).z)), bool(false)))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec3(3.1, 190.444, -93.58), vec3(-7.2, -5.0, 7222.5175))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(tanh(-5.1)), clamp(_GLF_IDENTITY(_GLF_FUZZED(tanh(-5.1)), max(_GLF_IDENTITY(_GLF_FUZZED(tanh(-5.1)), float(float(_GLF_FUZZED(tanh(-5.1))))), _GLF_FUZZED(tanh(-5.1)))), _GLF_FUZZED(tanh(-5.1)), _GLF_IDENTITY(_GLF_FUZZED(tanh(-5.1)), max(_GLF_FUZZED(tanh(-5.1)), _GLF_FUZZED(tanh(-5.1)))))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), max(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), min(round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), (round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0))) / 1.0))), round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.7)), float(0.0), bool(true)))))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fma(65.39, determinant(mat3(41.69, 2.4, -859.694, -6711.6963, 9348.3194, -63.41, 2.3, 42.12, -7029.0797)), 9.2)) : 0.0)), 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))) && true)))))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false)))), true))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))) || false)), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true)))))))))), true))))))) || false), bool(bvec4(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))))))) || false)), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true))))))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(3.0))), 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))).y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(vec3(54.71, -10.97, 6155.2464).z)), bool(false)))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(970.427)))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(_GLF_IDENTITY((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)), max(true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)), true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))))), ! (! ((false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.8)), bool(false))) : _GLF_FUZZED(tanh(-5.1)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(126.707), _GLF_FUZZED(1.5)), vec2((vec2(mat2(injectionSwitch, 1.0, 0.0)))[0], (vec2(mat2(injectionSwitch, 1.0, 0.0)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), 0.0, 1.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0, min((_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0, (_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))) - 0.0)))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))) && true)))))), false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.5)), bool(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(190.693) : mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(4.5, min(4.5, 4.5)))), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(84.08)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bool(false))))), false, false, false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (bool(bool((false))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat3(vec2(mat4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))).x > injectionSwitch.y)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.3))), 1.0)), vec2(mat3(_GLF_IDENTITY(vec2(mat4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), max(vec2(mat4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))).x > injectionSwitch.y)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, bool(bool(false))))), true && (bool(! (_GLF_IDENTITY(false, bool(bool(false))))))))))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))) && true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), false || ((! (false))))), true, false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (true && (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(41623), ~ (~ (_GLF_FUZZED(41623)))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
