#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, clamp((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, false)))))
  return;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9158.5785)), bool(false))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), mix(float(_GLF_FUZZED((+ -1.8))), float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9158.5785)), bool(false))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(3119.2216))), injectionSwitch[1])).y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(3119.2216))), injectionSwitch[1])).y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])) : _GLF_FUZZED(3119.2216))), injectionSwitch[1])).y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, false, true)))) && true) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))), false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_NumWorkGroups.x), min(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), clamp(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), ~ (gl_NumWorkGroups.x), ~ (gl_NumWorkGroups.x))), ~ (gl_NumWorkGroups.x)))), ((~ (gl_NumWorkGroups.x))) / _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), max(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 0u | (6u)), _GLF_IDENTITY(6u, clamp(6u, 6u, 6u)), 6u))), uint(6u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 0u ^ (6u)), 6u, 6u))), uint(6u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | 0u)))), ~ (~ (_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))), uint(6u), uint(6u))), 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(162867u, 64531u)) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u), (uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u)) | (uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u))))), uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u))), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(clamp(uint(6u), uint(6u), uint(6u)), (clamp(uint(6u), _GLF_IDENTITY(uint(6u), 0u | (uint(6u))), uint(6u))) / 1u)), 0u))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) << 0u)) | 0u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((_GLF_IDENTITY(6u, (6u) ^ 0u)), ((_GLF_IDENTITY(6u, (6u) ^ 0u))) >> 0u))), (uint(_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((_GLF_IDENTITY(6u, (6u) ^ 0u)), ((_GLF_IDENTITY(6u, (6u) ^ 0u))) >> 0u)))) ^ 0u), uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u))), uint(6u))))), clamp((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), max(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(clamp(uint(6u), uint(6u), uint(6u)), (clamp(uint(6u), uint(6u), uint(6u))) >> 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u))), uint(6u))), clamp(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))), uint(6u))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u)) * 1u), uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uint(6u), uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(6u))), clamp(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_local_id)))), max(uint(6u), uint(6u))), uint(6u))), uint(6u), uint(6u))))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u))))) / 1u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, (6u) ^ 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)), (_GLF_IDENTITY(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)), max(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)), _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u))))) | (_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)))), _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), clamp((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, max(6u, 6u))) | (6u))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), max(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(subgroup_id) : uint(6u))), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u))), uint(6u))), clamp(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))), uint(6u))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, _GLF_IDENTITY(6u, uint(uvec3(_GLF_IDENTITY(6u, (6u) | 0u), 0u, 1u))), 6u))) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u)) * 1u), uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) / 1u)))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uint(6u), uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(6u))), clamp(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_local_id)))), max(uint(6u), uint(6u))), uint(6u))), uint(6u), uint(6u))))), (false ? _GLF_FUZZED(11317u) : _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(uint(6u), uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(_GLF_IDENTITY(6u, (6u) | 0u)))), clamp(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_local_id)))), max(uint(6u), uint(6u))), uint(6u))), uint(6u), uint(6u))))))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(_GLF_IDENTITY(6u, (6u) * 1u)))), 0u))))) / _GLF_IDENTITY(1u, ~ (~ (1u))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, (6u) ^ 0u)))), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(false ? _GLF_FUZZED(116909u) : 6u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), clamp(uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))), 0u | (uint(_GLF_IDENTITY(uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), clamp(uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u), uvec3(false ? _GLF_FUZZED(116909u) : 6u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u)))))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), clamp((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), max(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u))), uint(6u))), clamp(uint(_GLF_IDENTITY(6u, (6u) / 1u)), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))), uint(6u))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u)) * 1u), uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uint(6u), uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(6u))), clamp(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(max(uint(6u), uint(6u)), max(max(uint(6u), uint(6u)), max(uint(6u), uint(6u))))), uint(6u))), uint(6u), uint(6u))))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uint(_GLF_IDENTITY(6u, ~ (~ (6u))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uint(_GLF_IDENTITY(6u, ~ (~ (6u))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u), (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uint(_GLF_IDENTITY(6u, ~ (~ (6u))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u)) | (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uint(_GLF_IDENTITY(6u, ~ (~ (6u))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u)))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, (6u) ^ 0u)))), uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), clamp((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), max(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(74125u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u))), uint(6u))), clamp(uint(6u), _GLF_IDENTITY(uint(6u), 1u * _GLF_IDENTITY((uint(6u)), clamp((uint(6u)), (uint(6u)), (uint(6u))))), uint(6u))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u), 0u | ((6u))) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u)) * 1u), uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uint(6u), uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(6u))), clamp(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_local_id)))), max(uint(6u), uint(6u))), uint(6u))), uint(6u), uint(6u))))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u))))) / 1u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, (6u) ^ 0u)))), uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)))))))), uint(uvec3((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) >> (0u | 0u))), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), clamp((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), max(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 0u))), uint(6u))), clamp(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))), _GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), 0u))))), 0u))))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u)) * 1u), uint(_GLF_IDENTITY(6u, (6u) << ((37872u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), clamp(uint(6u), uint(6u), uint(6u))), 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uint(6u), uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(6u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) << 0u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(true, (true) || false) ? 6u : _GLF_FUZZED(subgroup_local_id)))), max(uint(6u), uint(6u))), uint(6u))), uint(6u), uint(6u))))), 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size) : uvec2(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u))))) / 1u)))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, (6u) ^ 0u)))), uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(116909u) : 6u)))))))), 0u, 1u)))) >> 0u))) - 0u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true)))))) || false)))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = subgroup_id * GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.y), bool(true)))) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), (((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)) >> 0u), (_GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y), (((GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x + 1) % GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y)) >> 0u)) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true, false, false))), false, true))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true)))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec4(64, 0, 0, 0)))) | 0), 2);
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 0 + (max(64, 64)))), 4);
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))))), injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))))), injectionSwitch.x)) / 1.0)), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), clamp(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(cos(14.40))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9438.7334)), bool(false))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)))).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((! (false))))))))))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
