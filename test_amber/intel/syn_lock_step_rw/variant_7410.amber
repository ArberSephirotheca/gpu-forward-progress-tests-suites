#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat2x3 _f0;
 vec4 _f1;
 uint subgroup_base;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 bvec2 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 uvec2 _f4;
 ivec4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 bvec2 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 ivec4 _f1;
 bvec3 _f2;
 uvec4 _f3;
 ivec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 bvec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 bool _f1;
 int _f2;
 mat2 _f3;
 vec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 ivec4 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_59_3_1_11GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_id;
 uvec4 GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz = GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (((injectionSwitch.x > injectionSwitch.y))), false, false))))), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED((38.55 - -3047.8850))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_4_1_1_11readvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uvec3 GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_59_3_1_11GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz = GLF_merged2_0_3_59_3_1_11GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_id.xyz;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_59_3_1_11GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_id.w = subgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true))), true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.z = GLF_merged2_0_3_59_3_1_11GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_id.w;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(reflect(-0.1, 2.1)))))), false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.y = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.z, (GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.y = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.z) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.x = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.w = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.x, ~ (~ (GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.z = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.w;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true))) && true) || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) && true)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size));
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.w;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.z = workgroup_id;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.z, _GLF_IDENTITY((false ? _GLF_FUZZED(packUnorm4x8(_GLF_IDENTITY((vec4(-79.51, -20.02, 9.5, 8.9) * _GLF_IDENTITY(mat4(_GLF_IDENTITY(-777.332, (true ? -777.332 : _GLF_FUZZED(-5010.1476))), 9851.7240, 59.71, 6.3, 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, 737.497, 67.04), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0) + (mat4(_GLF_IDENTITY(-777.332, _GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), (true ? (true ? -777.332 : _GLF_FUZZED(-5010.1476)) : _GLF_FUZZED(74.06))), (true ? -777.332 : _GLF_IDENTITY(_GLF_FUZZED(-5010.1476), (_GLF_FUZZED(-5010.1476)) + 0.0)))), (true ? -777.332 : _GLF_FUZZED(-5010.1476))))), 9851.7240, 59.71, _GLF_IDENTITY(6.3, (_GLF_IDENTITY(6.3, float(mat2x4(6.3, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))) / _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, _GLF_IDENTITY(737.497, float(vec3(737.497, 0.0, 0.0))), 67.04)))), ((vec4(-79.51, -20.02, 9.5, 8.9) * _GLF_IDENTITY(mat4(_GLF_IDENTITY(-777.332, (true ? -777.332 : _GLF_FUZZED(-5010.1476))), 9851.7240, 59.71, 6.3, 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, 737.497, 67.04), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0) + (mat4(_GLF_IDENTITY(-777.332, _GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), (true ? (true ? -777.332 : _GLF_FUZZED(-5010.1476)) : _GLF_FUZZED(74.06))), (true ? -777.332 : _GLF_IDENTITY(_GLF_FUZZED(-5010.1476), (_GLF_FUZZED(-5010.1476)) + 0.0)))), (true ? -777.332 : _GLF_FUZZED(-5010.1476))))), 9851.7240, 59.71, _GLF_IDENTITY(6.3, (_GLF_IDENTITY(6.3, float(mat2x4(6.3, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))) / _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, _GLF_IDENTITY(737.497, float(vec3(737.497, 0.0, 0.0))), 67.04))))) * mat4(1.0)))) : GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.z), ((false ? _GLF_FUZZED(packUnorm4x8(_GLF_IDENTITY((vec4(-79.51, -20.02, 9.5, 8.9) * _GLF_IDENTITY(mat4(_GLF_IDENTITY(-777.332, (true ? -777.332 : _GLF_FUZZED(-5010.1476))), 9851.7240, 59.71, 6.3, 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, 737.497, 67.04), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0) + (mat4(_GLF_IDENTITY(-777.332, _GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), (true ? (true ? -777.332 : _GLF_FUZZED(-5010.1476)) : _GLF_FUZZED(74.06))), (true ? -777.332 : _GLF_IDENTITY(_GLF_FUZZED(-5010.1476), (_GLF_FUZZED(-5010.1476)) + 0.0)))), (true ? -777.332 : _GLF_FUZZED(-5010.1476))))), 9851.7240, 59.71, _GLF_IDENTITY(6.3, (_GLF_IDENTITY(6.3, float(mat2x4(6.3, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))) / _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, _GLF_IDENTITY(737.497, float(vec3(737.497, 0.0, 0.0))), 67.04)))), ((vec4(-79.51, -20.02, 9.5, 8.9) * _GLF_IDENTITY(mat4(_GLF_IDENTITY(-777.332, (true ? -777.332 : _GLF_FUZZED(-5010.1476))), 9851.7240, 59.71, 6.3, 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, 737.497, 67.04), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0) + (mat4(_GLF_IDENTITY(-777.332, _GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), min(_GLF_IDENTITY((true ? -777.332 : _GLF_FUZZED(-5010.1476)), (true ? (true ? -777.332 : _GLF_FUZZED(-5010.1476)) : _GLF_FUZZED(74.06))), (true ? -777.332 : _GLF_IDENTITY(_GLF_FUZZED(-5010.1476), (_GLF_FUZZED(-5010.1476)) + 0.0)))), (true ? -777.332 : _GLF_FUZZED(-5010.1476))))), 9851.7240, 59.71, _GLF_IDENTITY(6.3, (_GLF_IDENTITY(6.3, float(mat2x4(6.3, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))) / _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), 573.128, 29.52, -7125.2698, 870.652, -37.12, -5313.3076, -8892.1389, 78.50, -27.67, -356.375, _GLF_IDENTITY(737.497, float(vec3(737.497, 0.0, 0.0))), 67.04))))) * mat4(1.0)))) : GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.z)) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(bool(false), false || (bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), bool(bvec2(false || (bool(false)), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(false)))) && true))))))), ! (_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), bool(bvec2(false || (bool(false)), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(false)))) && true)))))))), bool(bvec4(! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), bool(bvec2(false || (bool(false)), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(false)))) && true)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(bvec2((bool(false)), false), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((bool(false)), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2((bool(false)), false), false, false)))))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), false), true))))))), false, true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))), false, true)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY((bool(false)), ! (! ((bool(false))))), false, true))), (false || (bool(bvec3((bool(false)), false, true)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), _GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), (false || (bool(bvec3((bool(false)), false, true)))) && true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), _GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), (false || (bool(bvec3((bool(false)), false, true)))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))) || false)) || false), ! (! (bool(bvec3((bool(false)), false, true))))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), true))), false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), true))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), true))), false))), true, false))), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), true))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), true))), false))), true, false))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), true))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), true))), false))), true, false))), true, false)), true))), false)))))), false, true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), (_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), _GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), (_GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), false || (_GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), bool(bvec2(_GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), bool(bvec3(false || (bool(bvec3((bool(false)), false, true))), true, false))), true)))))) && true))) || false), ! (_GLF_IDENTITY(! (bool(bvec3((bool(false)), false, true))), ! (! (! (bool(bvec3((bool(false)), false, true))))))))))))))), (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2((bool(false)), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2((bool(false)), false)))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2((bool(false)), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2((bool(false)), false)))), false)))))))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true)))))), true, false)))))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), false))))), false, true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), (_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), _GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), _GLF_IDENTITY((false || (bool(bvec3((bool(false)), false, true)))) && true, ((false || _GLF_IDENTITY((bool(bvec3((bool(false)), false, true))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY((bool(bvec3((bool(false)), false, true))), bool(bvec3((bool(bvec3((bool(false)), false, true))), false, false)))))) && true) && true)))) || false), _GLF_IDENTITY(! (! (bool(bvec3((bool(false)), false, true)))), false || (! (! (bool(bvec3((bool(false)), false, true)))))))))))))), ! (! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))), bool(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), false))))), false, true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), (_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), _GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), (false || (bool(bvec3((bool(false)), false, true)))) && true))) || false), ! (! (bool(bvec3((bool(false)), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), (_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), _GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), (false || (bool(bvec3((bool(false)), false, true)))) && true))) || false), ! (! (bool(bvec3((bool(false)), false, true))))))))))))))), ! (! (false || (bool(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((bool(false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(false)), false))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(false)), false))), false)))), false, true))), bvec2(bvec4(bvec2((bool(false)), false), true, true))), false))))), false, true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((bool(false)), _GLF_IDENTITY(false, (false) || false), true)), (_GLF_IDENTITY(bool(bvec3((bool(false)), false, true)), _GLF_IDENTITY(false || (bool(bvec3((bool(false)), false, true))), (false || (bool(bvec3((bool(false)), false, true)))) && true))) || false), ! (! _GLF_IDENTITY((bool(bvec3((bool(false)), false, true))), ! (! ((bool(bvec3((bool(false)), false, true)))))))))))))))))))))) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), bool(bool((! (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))), (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), false || ((! (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) && true)))) && _GLF_IDENTITY(true, (true) || false)))))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x4(1.0), _GLF_struct_5(_GLF_struct_0(vec4(1.0), true, 1, mat2(1.0), vec2(1.0), true), _GLF_struct_1(mat2(1.0), mat2x3(1.0), mat3x4(1.0), bvec2(true), mat4x3(1.0)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (ivec4(1)))), clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), (true ? (ivec4(1)) : _GLF_FUZZED(ivec4(72239, -79496, 48829, -71582)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (ivec4(1)))), clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), (true ? (ivec4(1)) : _GLF_FUZZED(ivec4(72239, -79496, 48829, -71582)))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (ivec4(1)))), clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), (true ? (ivec4(1)) : _GLF_FUZZED(ivec4(72239, -79496, 48829, -71582)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1)))) >> ivec4(0, 0, 0, 0))))), clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)))), (true ? (ivec4(1)) : _GLF_FUZZED(ivec4(72239, -79496, 48829, -71582)))))) : _GLF_FUZZED((ivec4(-4695, 46425, 89587, -7479) ^ findMSB(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size))))), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (ivec4(1)))), clamp((ivec4(1)), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1))))) : _GLF_FUZZED(ivec4(72239, -79496, 48829, -71582)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(-59998, -74532, 215, -19582)) : true ? _GLF_IDENTITY((ivec4(1)), ~ (~ ((ivec4(1))))) : _GLF_FUZZED(ivec4(72239, -79496, 48829, -71582)))))))), (ivec4(0, 0, 0, 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0))) | (ivec4(1)))), clamp((_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)) ^ ivec4(0, 0, 0, 0), max((ivec4(1)) ^ ivec4(0, 0, 0, 0), (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0))) ^ ivec4(0, 0, 0, 0))))), (ivec4(1)), _GLF_IDENTITY((ivec4(1)), (true ? (ivec4(1)) : _GLF_FUZZED(ivec4(72239, -79496, 48829, -71582))))))) - ivec4(0, 0, 0, 0))) << ivec4(0, 0, 0, 0))), _GLF_struct_2(mat2x3(1.0), ivec4(1), bvec3(true), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), uvec4(1u)), (_GLF_IDENTITY(clamp(uvec4(1u), uvec4(1u), uvec4(1u)), (true ? clamp(uvec4(1u), uvec4(1u), uvec4(1u)) : _GLF_FUZZED(GLF_merged2_0_3_59_3_1_11GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_id)))) ^ uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), clamp(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), (_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))) | (_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))))))), min(min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u)))), 1u))), _GLF_IDENTITY(clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), uvec4(1u)), (clamp(uvec4(1u), uvec4(1u), uvec4(1u))) ^ uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(min(181499u, num_workgroup)) : 1u)))))), min(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(clamp(uvec4(1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) >> 0u)), ~ (~ (uvec4(1u)))), uvec4(1u)), (clamp(uvec4(1u), uvec4(1u), uvec4(1u))) ^ uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))))))), ivec3(1), mat4x3(1.0)), _GLF_struct_3(1, bvec2(true), mat3x2(1.0), mat4x2(1.0)), ivec4(1), _GLF_struct_4(mat3x2(1.0), bvec2(true), mat2x4(1.0), mat4x2(1.0), uvec2(1u), ivec4(1), mat3x2(1.0))), _GLF_struct_6(mat2x3(1.0), vec4(_GLF_IDENTITY(1.0, float(mat2(1.0, log(1.0), 0.0, 1.0)))), _GLF_IDENTITY(GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz, (GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz) | (GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz)).y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz, ~ (~ (GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz)))))), (GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz) << (uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).z));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base + GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x;
 GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz.y = virtual_gid;
 GLF_merged2_0_1_4_1_1_11readvirtual_gid.y = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz, uvec3(uvec3(GLF_merged2_0_3_68_3_1_17GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_idsubgroup_local_id.xyz))).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) - 0u))) + _GLF_struct_replacement_7._f2.subgroup_base + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.z);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), false || (bool(bvec4(true, false, false, true)))))))))))), bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true, true)), ! _GLF_IDENTITY((! (bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, false))))))), true && ((! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true, true)))))))), false, _GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec3((_GLF_IDENTITY(false, false || (false))), false, false))))), ! (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true)), false || (false))), bool(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, true && (false))))))))), false, false))))))))), false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_IDENTITY(true, false || (true)))), bool(bvec3(bool(bvec4(true, _GLF_IDENTITY(false, ! (! (false))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))))))))), bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))), false, false, _GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, ! (! (true))))))))))))), bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))), false, false, _GLF_IDENTITY(false, (false) || false)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), false || (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))))), bool(bvec4(! (false), false, false, true)))), false, false, _GLF_IDENTITY(false, (false) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[GLF_merged2_0_1_4_1_1_11readvirtual_gid.y], 4, 64, 2);
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y = read, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y = read) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(_GLF_IDENTITY(4u, (4u) + 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_4_1_1_11readvirtual_gid.x = GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.x = GLF_merged2_0_1_4_1_1_11readvirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.x = GLF_merged2_0_1_4_1_1_11readvirtual_gid.x, (GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.x = GLF_merged2_0_1_4_1_1_11readvirtual_gid.x) << 0u)) / (1u & 1u)), (GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.x = GLF_merged2_0_1_4_1_1_11readvirtual_gid.x) / _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, (1u) / 1u)))), 0u, 1u, 1u)), 1u * (uint(uvec4((_GLF_IDENTITY(1u, (1u) / 1u)), 0u, 1u, 1u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) - (0 | 0))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), true, false, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), true, false, false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true)))))))) && true)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(checker[GLF_merged2_0_1_4_1_1_11readvirtual_gid.y], GLF_merged2_0_3_59_3_1_13GLF_merged3_0_1_4_1_1_11_2_1_13readsubgroup_idsubgroup_sizesubgroup_size.xyz.x, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
