#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))))))))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true)))))))), false || ((_GLF_IDENTITY(false, (false) || false))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-20.88), _GLF_FUZZED(-9.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6181.7809)), float(injectionSwitch.y), bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_FUZZED(8.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(834.712)), bvec2(true, false))))).x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (true ? (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(clamp(packSnorm2x16(vec2(24.79, -1861.3822)), subgroup_base, subgroup_base))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec4(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), 1u), (uvec2(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), 1u)) / uvec2(1u, 1u))))) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) ^ 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) / 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u)), ~ (~ _GLF_IDENTITY(((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u))), min(_GLF_IDENTITY(((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (~ (subgroup_base))))) * 1u))), 0u ^ (_GLF_IDENTITY(((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u))), _GLF_IDENTITY(clamp(((~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) << 0u) + (subgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), ~ (_GLF_IDENTITY(~ (~ (subgroup_base)), (true ? ~ (~ (subgroup_base)) : _GLF_FUZZED(floatBitsToUint(-30.15)))))), (~ (subgroup_base)) * 1u))), ((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u))), ((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u)))), (true ? _GLF_IDENTITY(clamp(((~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) << 0u) + (subgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), ~ (_GLF_IDENTITY(~ (~ (subgroup_base)), (true ? ~ (~ (subgroup_base)) : _GLF_FUZZED(floatBitsToUint(-30.15)))))), (~ (subgroup_base)) * 1u))), ((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u))), ((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u)))), 0u | (clamp(((~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (0u) << 0u) + (subgroup_base)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), ~ (_GLF_IDENTITY(~ (~ (subgroup_base)), (true ? ~ (~ (subgroup_base)) : _GLF_FUZZED(floatBitsToUint(-30.15)))))), (~ (subgroup_base)) * 1u))), ((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u))), ((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) * 1u)))))) : _GLF_FUZZED(subgroup_id)))))), ((~ (subgroup_base)) | (_GLF_IDENTITY(~ (subgroup_base), (~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uvec3((subgroup_base), 0u, 0u)), clamp(uint(uvec3((subgroup_base), 0u, 0u)), uint(uvec3((subgroup_base), 0u, 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_base), 0u, 0u)), (uint(uvec3((subgroup_base), 0u, 0u))) ^ 0u))))) * 1u)))))))), (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) / (1u ^ 0u)))), max(uint(uint(subgroup_base)), uint(uint(subgroup_base))))))) | (~ (subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0)))))), (false ? _GLF_FUZZED(ivec2(77711, 51379)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & _GLF_IDENTITY(0, clamp(0, 0, 0)), 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-1159) : 0)))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(25247, 89563)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(25247, 89563)), (_GLF_FUZZED(ivec2(25247, 89563))) / ivec2(1, 1))) ^ ivec2(0, 0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-61900 & 0, 0), clamp(ivec2(-61900 & 0, 0), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), ivec2(-61900 & 0, 0)))), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0)))))), (_GLF_IDENTITY(ivec2(-61900 & 0, 0), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-61900 & 0, 0), clamp(ivec2(-61900 & 0, 0), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), ivec2(-61900 & 0, 0)))), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0))))), ivec2(0, 0) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-61900 & 0, 0), clamp(ivec2(-61900 & 0, 0), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), ivec2(-61900 & 0, 0)))), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0))))), (true ? ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-61900 & 0, 0), clamp(ivec2(-61900 & 0, 0), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), ivec2(-61900 & 0, 0)))), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0))))) : _GLF_FUZZED(ivec2(55440, -83564)))))))) - ivec2(0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0)))))), ivec2(ivec4(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0)))))), 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0)))))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0)))))), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) | ((ivec2(-61900 & 0, 0))))))))))) >> ivec2(0, 0)))))))), min(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-72097) : 0)))))))), (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-45420) : 0))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), clamp(_GLF_IDENTITY((ivec2(-61900 & 0, 0)), (_GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) / _GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)))) << ivec2(0, 0)), (_GLF_IDENTITY(ivec2(-61900 & 0, 0), (_GLF_IDENTITY(true, ! (! (true))) ? ivec2(-61900 & 0, 0) : _GLF_FUZZED(max(ivec2(-30339, -96472), ivec2(60204, -31705)))))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, (true ? -61900 & 0 : _GLF_FUZZED(-66119))), max(_GLF_IDENTITY(-61900 & 0, (true ? -61900 & 0 : _GLF_FUZZED(-66119))), _GLF_IDENTITY(-61900 & 0, (true ? -61900 & 0 : _GLF_FUZZED(-66119))))), 0))))), clamp((~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), clamp(_GLF_IDENTITY((ivec2(-61900 & 0, 0)), (_GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) / ivec2(1, 1))) << ivec2(0, 0)), (ivec2(-61900 & 0, 0)), (_GLF_IDENTITY(ivec2(-61900 & 0, 0), max(ivec2(-61900 & 0, 0), ivec2(-61900 & 0, 0))))))), (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), clamp(_GLF_IDENTITY((ivec2(-61900 & 0, 0)), (_GLF_IDENTITY((ivec2(-61900 & 0, 0)), ((ivec2(-61900 & 0, 0))) / ivec2(1, 1))) << ivec2(0, 0)), (ivec2(-61900 & 0, 0)), (ivec2(-61900 & 0, 0))))), (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), clamp(_GLF_IDENTITY((ivec2(-61900 & 0, 0)), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(-61900 & 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -61900 & 0 : _GLF_FUZZED(-88258))), 0)), ((ivec2(-61900 & 0, _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) / 1), 0, 1, 0)))))) / ivec2(1, 1))) << ivec2(0, 0)), (ivec2(-61900 & 0, 0)), (ivec2(-61900 & 0, 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ _GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), (false ? _GLF_FUZZED(ivec2(76758, -78044)) : (~ _GLF_IDENTITY((ivec2(-61900 & 0, 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(-29436, 14952)), ivec2(0, 0) ^ (_GLF_FUZZED(ivec2(-29436, 14952)))) : (ivec2(-61900 & 0, 0)))))))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(bitCount(-19514), (_GLF_IDENTITY(bitCount(-19514), (bitCount(-19514)) ^ 0)) - 0)))))))), _GLF_IDENTITY(ivec2(-61900 & _GLF_IDENTITY(0, min(0, 0)), 0), ~ (~ (ivec2(-61900 & 0, 0))))))) | ivec2(0, 0))))) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))))), min(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ _GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), max(_GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), ((~ (ivec2(-61900 & 0, 0)))) ^ ivec2(0, 0)), (~ (ivec2(-61900 & 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), _GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) | (_GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) << ivec2(0, 0))))))), (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0))))))) | ivec2(0, 0))))) / 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))))), min(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ _GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), max(_GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), ((~ (ivec2(-61900 & 0, 0)))) ^ ivec2(0, 0)), (~ (ivec2(-61900 & 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), _GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) | (_GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) << ivec2(0, 0))))))), (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0))))))) | ivec2(0, 0))))) / 1)))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-61900, (_GLF_IDENTITY(-61900, (-61900) >> 0)) | (-61900)) & 0, _GLF_IDENTITY(0, int(int(0)))), ~ (~ (ivec2(_GLF_IDENTITY(-61900 & 0, ~ (_GLF_IDENTITY(~ (-61900 & 0), (_GLF_IDENTITY(~ (-61900 & 0), ~ (~ (~ (-61900 & 0))))) | (~ (-61900 & 0))))), 0)))))), min(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & _GLF_IDENTITY(0, int(ivec4(0, ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, (0 | (0 << _GLF_IDENTITY(int(8), int(8))))))), 0), ~ (~ (ivec2(-61900 & 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (_GLF_IDENTITY(ivec2(-61900 & 0, 0), ivec2(0, 0) | (ivec2(-61900 & 0, 0)))))))), (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & _GLF_IDENTITY(0, ~ (~ (0))), 0), ~ (~ (ivec2(_GLF_IDENTITY(-61900 & 0, (-61900 & 0) ^ 0), 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, _GLF_IDENTITY(0, (0) >> 0))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(-61900 & 0, (-61900 & _GLF_IDENTITY(0, min(0, 0))) * 1), 0), ~ (~ (ivec2(-61900 & 0, 0))))))) | ivec2(0, 0))))) / _GLF_IDENTITY(1, (1) * 1)))))))) + 0, int(ivec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))))), min(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ _GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), max(_GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), ((~ (ivec2(-61900 & 0, 0)))) ^ ivec2(0, 0)), (~ (ivec2(-61900 & 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), _GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) | (_GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) << ivec2(0, 0))))))), (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0))))))) | ivec2(0, 0))))) / 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))))), min(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ _GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), max(_GLF_IDENTITY((~ (ivec2(-61900 & 0, 0))), ((~ (ivec2(-61900 & 0, 0)))) ^ ivec2(0, 0)), (~ (ivec2(-61900 & 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), _GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) | (_GLF_IDENTITY(~ (~ (ivec2(-61900 & 0, 0))), (~ (~ (ivec2(-61900 & 0, 0)))) << ivec2(0, 0))))))), (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), _GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0))))))) | ivec2(0, 0))))) / 1)))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-61900, (_GLF_IDENTITY(-61900, (-61900) >> 0)) | (-61900)) & 0, _GLF_IDENTITY(0, int(int(0)))), ~ (~ (ivec2(_GLF_IDENTITY(-61900 & 0, ~ (_GLF_IDENTITY(~ (-61900 & 0), (_GLF_IDENTITY(~ (-61900 & 0), ~ (~ (~ (-61900 & 0))))) | (~ (-61900 & 0))))), 0)))))), min(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & _GLF_IDENTITY(0, int(ivec4(0, ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, (0 | (0 << _GLF_IDENTITY(int(8), int(8))))))), 0), ~ (~ (ivec2(-61900 & 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (_GLF_IDENTITY(ivec2(-61900 & 0, 0), ivec2(0, 0) | (ivec2(-61900 & 0, 0)))))))), (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & _GLF_IDENTITY(0, ~ (~ (0))), 0), ~ (~ (ivec2(_GLF_IDENTITY(-61900 & 0, (-61900 & 0) ^ 0), 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, 0)))), min(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ~ (~ (ivec2(-61900 & 0, _GLF_IDENTITY(0, (0) >> 0))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(-61900 & 0, (-61900 & _GLF_IDENTITY(0, min(0, 0))) * 1), 0), ~ (~ (ivec2(-61900 & 0, 0))))))) | ivec2(0, 0))))) / _GLF_IDENTITY(1, (1) * 1)))))))) + 0, 0)))), ((_GLF_IDENTITY(-61900 & _GLF_IDENTITY(0, (0) ^ 0), int(ivec2(-61900 & 0, 0))))) << 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(-61900 & 0, int(ivec2(-61900 & 0, 0)))), _GLF_IDENTITY(((_GLF_IDENTITY(-61900 & 0, int(ivec2(-61900 & 0, 0))))), max(((_GLF_IDENTITY(-61900 & 0, int(ivec2(-61900 & 0, 0))))), ((_GLF_IDENTITY(-61900 & 0, int(ivec2(-61900 & 0, 0))))))) << 0), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(-61900 & 0, int(ivec2(_GLF_IDENTITY(-61900 & 0, (-61900 & 0) + 0), 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, (_GLF_IDENTITY(-61900 & 0, _GLF_IDENTITY((-61900 & 0) << 0, ((-61900 & 0) << 0) | (_GLF_IDENTITY((-61900 & 0) << 0, ((-61900 & 0) << 0) | 0))))) | 0), int(ivec2(_GLF_IDENTITY(-61900 & 0, (false ? _GLF_FUZZED(-79761) : -61900 & _GLF_IDENTITY(0, ~ (~ (0))))), 0))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(-61900 & 0, int(ivec2(-61900 & 0, 0))), 0 | (_GLF_IDENTITY(-61900 & 0, int(_GLF_IDENTITY(ivec2(-61900 & 0, 0), ivec2(1, 1) * (ivec2(-61900 & 0, 0)))))))))))) << 0))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), 0, 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0)))) ^ 0), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0)))), 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0)))))) ^ 0)))) & 1), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter != (1 & 1)), true && ((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))))), false || (_GLF_IDENTITY((_injected_loop_counter != (1 & 1)), true && ((_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1)), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))) || false))))))), ((! _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter != (1 & 1)), true && ((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))))), false || (_GLF_IDENTITY((_injected_loop_counter != (1 & 1)), true && ((_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1)), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))) || false)))))))) || false), bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter != (1 & 1)), true && ((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))))), false || (_GLF_IDENTITY((_injected_loop_counter != (1 & 1)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 0), ~ (~ (_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 0), (ivec3(_injected_loop_counter, 0, 0)) + ivec3(0, 0, 0))))))) != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1)), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))) || false))))))), false || ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != (1 & 1)), true && ((_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))))), false || (_GLF_IDENTITY((_injected_loop_counter != (1 & 1)), true && ((_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & _GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & _GLF_IDENTITY(1, (1) >> 0), 1, 0)))))))) - 0), (1 & 1) | 0)) / 1)), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & _GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & _GLF_IDENTITY(1, (1) >> 0), 1, 0)))))))) - 0), (1 & 1) | 0)) / 1)), 0, 1, 1)), (int(ivec4((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & _GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(1 & 1, 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & _GLF_IDENTITY(1, (1) >> 0), 1, 0)))))))) - 0), (1 & 1) | 0)) / 1)), 0, 1, 1))) + 0)), (_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(1 & 1, int(ivec3(1 & _GLF_IDENTITY(1, 0 | (1)), 1, 0))))))), (_GLF_IDENTITY(1 & 1, 0 ^ (_GLF_IDENTITY(1 & 1, min(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0) & 1, int(ivec3(1 & 1, 1, 0)))))))) - 0), (1 & 1) | 0)) / 1))) || false))))))))), false))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-59.66) : _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.0)), vec2(_GLF_FUZZED(98.13), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) / cos(vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.3)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-59.66) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.3)), bvec2(false, false)))) * mat2(1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-59.66) : _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.0)), vec2(_GLF_FUZZED(98.13), ((injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) / cos(vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.3)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-59.66) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.3)), bvec2(false, false)))) * mat2(1.0)).y) + 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-59.66), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-59.66), (false ? _GLF_FUZZED(7.6) : _GLF_FUZZED(-59.66))))), max(_GLF_IDENTITY(_GLF_FUZZED(-59.66), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-59.66), (false ? _GLF_FUZZED(7.6) : _GLF_FUZZED(-59.66))))), _GLF_IDENTITY(_GLF_FUZZED(-59.66), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-59.66), (false ? _GLF_FUZZED(_GLF_IDENTITY(7.6, min(7.6, 7.6))) : _GLF_FUZZED(-59.66))))))) : _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(float(67317u))), bool(false)))))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.3)), bvec2(false, false))).y) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(-59.66) : _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-54.69, max(-54.69, -54.69))) : _GLF_IDENTITY(false ? _GLF_FUZZED(-59.66) : (injectionSwitch)[1], (false ? _GLF_FUZZED(step(7875.1838, -6.4)) : false ? _GLF_FUZZED(-59.66) : (injectionSwitch)[1]))))))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.3)), bvec2(false, false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((4047.1132)), _GLF_IDENTITY(_GLF_FUZZED(-938.843), clamp(_GLF_IDENTITY(_GLF_FUZZED(-938.843), float(mat3x2(_GLF_FUZZED(-938.843), 1.0, 1.0, 0.0, length(0.0), 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-938.843), float(vec2(_GLF_FUZZED(-938.843), 0.0))), _GLF_FUZZED(-938.843)))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-59.66) : _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(float(67317u))), bool(false)))))), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-0.3)), bvec2(false, false))).y) || false))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          break;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       continue;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         break;
        }
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      break;
     continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, bool(bvec2(true, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), false))), false, false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, (true) && true)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), false))), false, false, false))), true, false, true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, bool(bvec2(false, true))), true)), ! (! (bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))), ((_GLF_DEAD(false))) && true), true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-759.189), _GLF_FUZZED(-2.8)), bvec2(false, false))) + (injectionSwitch)).y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true) || ((_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bool(bool(bool((! (_GLF_DEAD(false))))))), ! (! (bool(bool(bool(bool((! (_GLF_DEAD(false))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(vec4(-841.286, -3105.5679, -3.9, 77.82))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, abs(1.0) * (injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(vec4(-841.286, -3105.5679, -3.9, 77.82))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, abs(1.0) * (injectionSwitch.y))) || false)), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5156.1683))), injectionSwitch.y))), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && _GLF_IDENTITY(true, (true) && true)))) || false, ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) || false) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) ^ _GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) | (ivec2(0, 0)))))), 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, determinant(mat4(length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, log(1.0), 0.0, 0.0, 0.0, sin(0.0))), 0.0, 1.0, 1.0, 1.0, sqrt(sqrt(0.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.0) : 1.0))), (false ? _GLF_FUZZED(mat4x2(-22.12, -17.73, 5.6, -6180.6486, -871.439, -7.1, _GLF_IDENTITY(-1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -1.0 : _GLF_IDENTITY(_GLF_FUZZED(-0.9), _GLF_IDENTITY(float(vec3(_GLF_FUZZED(-0.9), 1.0, 1.0)), (float(vec3(_GLF_FUZZED(-0.9), 1.0, 1.0))) + 0.0)))), -3893.3115)) : mat4x2(injectionSwitch.y, determinant(mat4(length(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(uintBitsToFloat(subgroup_id)))))), log(1.0), 0.0, 0.0, 0.0, sin(0.0))), 0.0, 1.0, 1.0, 1.0, sqrt(sqrt(0.0)), 1.0)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, true, true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), bool(bvec3(bool(bvec4((false), true, false, true)), false, true)))), true && _GLF_IDENTITY(((false)), true && (((false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), bool(bvec3(bool(bvec4((false), true, false, true)), false, true)))), true && _GLF_IDENTITY(((false)), true && (((false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), bool(bvec3(bool(bvec4((false), true, false, true)), false, true)))), true && _GLF_IDENTITY(((false)), true && (((false))))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), bool(bvec3(bool(bvec4((false), true, false, true)), false, true)))), true && _GLF_IDENTITY(((false)), true && (((false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), bool(bvec3(bool(bvec4((false), true, false, true)), false, true)))), true && _GLF_IDENTITY(((false)), true && (((false))))))), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))), true && _GLF_IDENTITY(((false)), true && (((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), ! (! (bool(bvec4((false), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))), false, true))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), ! (! (bool(bvec4((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))), false, true))))))))), true && (((false))))), ! (! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), true && (((false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && _GLF_IDENTITY(((false)), true && (((false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (_GLF_DEAD(false))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY((true && (_GLF_DEAD(false))), ((true && (_GLF_DEAD(false)))) && true)))), ! (_GLF_IDENTITY(! (! (true && (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (! (true && (_GLF_DEAD(false))))), (_GLF_IDENTITY(true && (! (! (true && (_GLF_DEAD(false))))), bool(bvec4(true && (! (! (true && (_GLF_DEAD(false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (! (true && (_GLF_DEAD(false))))), (_GLF_IDENTITY(true && (! (! (true && (_GLF_DEAD(false))))), bool(bvec4(true && (! (! (true && (_GLF_DEAD(false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false), false || (_GLF_IDENTITY(true && (! (! (true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(true && (! (! (true && (_GLF_DEAD(false))))), bool(bvec4(true && (! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false)))))))))))), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((5.7 / vec2(-1.6, -0.6).s))), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))) || false), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y))))))))) && true)), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y))))))))) && true)), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-92.52) : injectionSwitch.y)), injectionSwitch.y)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(51.60), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(51.60), clamp(_GLF_FUZZED(51.60), _GLF_IDENTITY(_GLF_FUZZED(51.60), float(mat3(_GLF_FUZZED(51.60), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(51.60))))) : injectionSwitch.y))))))))) && true)), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true && (true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y))))))))) && true)), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y))))))))) && true)), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.60) : injectionSwitch.y))))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true))))))))))), true, true))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), true, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), true)), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(_GLF_IDENTITY(bvec2(false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), bvec2(bvec2(bvec2(false || (bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true))), false))))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false)))), false, true)), (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false)))), false, true))) || false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5297.8468) : injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5297.8468) : injectionSwitch.x)) > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
