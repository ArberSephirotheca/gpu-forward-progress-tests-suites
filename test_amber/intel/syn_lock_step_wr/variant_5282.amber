#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? injectionSwitch : _GLF_FUZZED(vec2(-817.359, -20.69)))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? injectionSwitch : _GLF_FUZZED(vec2(-817.359, -20.69)))).x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-972.094), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(5.3)), bvec2(true, false)))).y))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7475.7122)))) + determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0))), abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (mat2(1.0, 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.611) : 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.611) : 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), transpose(transpose(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.611) : 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat3(-0.2, -3.0, -5189.6624, 2317.9224, -5.9, -3.5, -1680.4140, -7400.1655, 9.9))))))) / 1.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? injectionSwitch : _GLF_FUZZED(vec2(-817.359, -20.69)))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? injectionSwitch : _GLF_FUZZED(vec2(-817.359, -20.69)))).x > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-972.094), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(5.3)), bvec2(true, false)))).y))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, cos(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7475.7122)))) + determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0))), abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (mat2(1.0, 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.611) : 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.611) : 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), transpose(transpose(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.611) : 1.0)), 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat3(-0.2, -3.0, -5189.6624, 2317.9224, -5.9, -3.5, -1680.4140, -7400.1655, 9.9))))))) / 1.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true, false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true, false))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true, false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(43.29)), vec2(_GLF_FUZZED(-2406.1504), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true, false))), true, false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), max((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(55.84, 40.73)))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false, false))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-521.387), _GLF_FUZZED(3.8)), bvec2(false, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (67601u & 0u) ^ (workgroup_size)) * workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, (67601u & 0u) ^ (workgroup_size)) * workgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (67601u & 0u) ^ (workgroup_size)) * workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_size, (67601u & 0u) ^ (workgroup_size)) * workgroup_id)) : _GLF_FUZZED((uvec2(187819u, 157196u) , workgroup_id))))));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! _GLF_IDENTITY((! (false)), ((! (false))) && true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || false))))) && true)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), false || (! (false))))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), false || (! (false))))))), true, false)), bool(bvec4(bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), false || (! (false))))))), true, false)), false, false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false, false, false)), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false, false, false)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-48.68)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && true)))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(_GLF_IDENTITY(mat4x3(max(injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0), 1.0)), dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))), (true ? mat4x3(max(injectionSwitch.y, injectionSwitch.y), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(mat4x3(-2485.9304, -1.7, -55.59, 8744.8006, -9.1, -4198.6635, 310.086, 3.5, 4.0, -1.7, 6.5, 5245.6845)))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-142.659)), vec2(_GLF_FUZZED(float(86908)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), 0.0, 0.0))).x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) * 1u), subgroup_base)), (subgroup_base) + 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 0, 1)))) | 0), clamp(4, 4, 4))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))) | (_GLF_IDENTITY(clamp(4, 4, 4), min(_GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4))), clamp(4, 4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((false ? _GLF_FUZZED(75756) : _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), 4, 4)), clamp(4, 4, 4))), clamp((false ? _GLF_FUZZED(75756) : _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), 4, 4)), clamp(4, 4, 4))), (false ? _GLF_FUZZED(75756) : _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), 4, 4)), clamp(4, 4, 4))), (false ? _GLF_FUZZED(75756) : _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), 4, 4)), clamp(4, 4, 4))))))) * 1), _GLF_IDENTITY(4, clamp(4, 4, 4)))))) + 0), _GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY(4, clamp(4, 4, 4))))), (0 | _GLF_IDENTITY(0, max(0, 0))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(ivec2(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) + 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0, 0), (ivec3((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0, 0)) ^ ivec3(0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0, 0), (ivec3((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0, 0)) ^ ivec3(0, 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-40294), _GLF_IDENTITY(int(ivec4(_GLF_FUZZED(-40294), 0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))), max(int(ivec4(_GLF_FUZZED(-40294), 0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))), int(ivec4(_GLF_FUZZED(-40294), 0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))))))))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), clamp(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), 0 + (_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), max(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), (_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), ~ (~ (_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), 0 + (int(ivec2(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))))))))) | 0), int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))))))), _GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, min(0, 0))), ((0 | _GLF_IDENTITY(0, min(0, 0)))) - (0 | 0)) / (1 & 1))))), (int(ivec2(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))) ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)))))) | _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), max(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0) & 1))))), int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), max(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)))) | 0) / (1 & 1)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), max(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), max(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), max(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), max(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))))), (_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), max(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), max(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)))))))) ^ 0) : _GLF_FUZZED(-37565)))), (_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (0 | 0) << 0)) << 0)) / (1 & 1))))), max(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | 0) / (1 & 1), min((0 | 0) / (1 & 1), (0 | 0) / (1 & 1))))))), int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), max(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (0 | _GLF_IDENTITY(0, clamp(0, 0, 0))) / _GLF_IDENTITY((1 & 1), ~ (~ ((1 & 1))))))))))), (_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), max(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))), ((_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)))) / 1))), int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), max(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 | (1))))))))))))))), _GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) >> 0)) + 0), clamp(4, 4, 4))), _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (0 | _GLF_IDENTITY(0, min(0, 0))) / (1 & 1))), ((_GLF_IDENTITY(0 | 0, (0 | _GLF_IDENTITY(0, min(0, 0))) / (1 & 1)))) - 0))), (int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))) ^ 0), (0 | 0) / (1 & 1)))))) | (_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1))))))))), ~ (~ (int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) >> 0), (0 | 0) / (1 & 1)))))))))))))))), 0, 0)), (_GLF_IDENTITY(int(ivec3(int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) ^ 0))), (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) / _GLF_IDENTITY(1, (1) << 0)))) | 0)) >> 0), (_GLF_IDENTITY(0 | 0, (0 | 0) / (1 & 1))))), 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY((int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) / 1), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, int(int(0 | 0))))), (0 | 0) / (1 & 1))))), 0, 0))), (false ? _GLF_FUZZED(-13675) : (int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) / 1), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, int(int(0 | 0))))), (0 | 0) / (1 & 1))))), 0, 0))))) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) / 1), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, int(int(0 | 0))))), (0 | 0) / (1 & 1))))), 0, 0))), (false ? _GLF_FUZZED(-13675) : (int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) / 1), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, int(int(0 | 0))))), (0 | 0) / (1 & 1))))), 0, 0))))) << 0, (_GLF_IDENTITY((int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) / 1), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, int(int(0 | 0))))), (0 | 0) / (1 & 1))))), 0, 0))), (false ? _GLF_FUZZED(-13675) : (int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (0 | 0) / 1), _GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, int(int(0 | 0))))), (0 | 0) / (1 & 1))))), 0, 0))))) << 0) | 0)) / 1))) << (0 << _GLF_IDENTITY(int(4), int(4)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-10961))), (true ? 4 : _GLF_FUZZED(21742))), 4, 4))), (0 | 0))), int(ivec3(int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4))))), 1 * (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 4, 4))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 4, 4))), int(int((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(17509)))))))), 4, 4))))))))))), (0 | 0))), 0, 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-10961))), (true ? 4 : _GLF_FUZZED(21742))), 4, 4))), (0 | 0))), int(ivec3(int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4))))), 1 * (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 4, 4))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 4, 4))), int(int((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(17509)))))))), 4, 4))))))))))), (0 | 0))), 0, 0))), 0, 0), (true ? ivec3(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-10961))), (true ? 4 : _GLF_FUZZED(21742))), 4, 4))), (0 | 0))), int(ivec3(int(ivec2(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4))))), 1 * (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 4, 4))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(4, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 4, 4))), int(int((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(17509)))))))), 4, 4))))))))))), (0 | 0))), 0, 0))), 0, 0) : _GLF_FUZZED(ivec3(-30619, 63405, 39633))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0), _GLF_IDENTITY((0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0)) ^ 0)) | (_GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)))) + 0), (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 + (4))))), 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + _GLF_IDENTITY(0, 0 | (0)))) << 0)), (_GLF_IDENTITY((0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0)) ^ 0)) | (_GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)))) + 0), (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 + (4))))), 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + _GLF_IDENTITY(0, 0 | (0)))) << 0)), 0 + ((0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + 0)) ^ 0)) | (_GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)))) + 0), (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 + (4))))), 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) + _GLF_IDENTITY(0, 0 | (0)))) << 0))))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (0 | 0))), (int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (0 | 0)))) | 0), int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (0 | 0))), 0, 0)))), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-66377) : 4)), 4))), ((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 ^ (4)))))) + 0), _GLF_IDENTITY(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (0 | 0))), int(ivec3(int(ivec2(0 ^ (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (true ? _GLF_IDENTITY(4, 0 ^ (4)) : _GLF_FUZZED(84152)))) | 0)))), (0 | 0))), 0, 0))))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, ~ (~ (4))), 0))), (4) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1)))), 0 | ((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1)))))))), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))))), 4))), ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))), ~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))), ~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))), ~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1))), ~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_IDENTITY(_GLF_FUZZED(42501), (_GLF_FUZZED(42501)) / 1)))))))))))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))))), 4)))) / 1), min(0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, 0 + (4)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (0 | 0))), clamp(int(ivec4(_GLF_IDENTITY(4, 0 + (4)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (0 | 0))), int(ivec4(_GLF_IDENTITY(4, 0 + (4)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (0 | 0))), int(ivec4(_GLF_IDENTITY(4, 0 + (4)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (0 | 0)))))) : _GLF_FUZZED(42501))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))))), 4))), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(_GLF_IDENTITY(42501, max(42501, 42501))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (7), (false ? _GLF_FUZZED(ivec2(-88989, -38688)[1]) : (7) | (7))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (7), (false ? _GLF_FUZZED(ivec2(-88989, -38688)[1]) : (7) | (7))))), (int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (7), (false ? _GLF_FUZZED(ivec2(-88989, -38688)[1]) : (7) | (7)))))) - 0)) - 0))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501)))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(_GLF_IDENTITY(42501, 0 + (42501)))))), 0 | ((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 + (~ (4))))))) : _GLF_FUZZED(_GLF_IDENTITY(42501, 0 + (42501)))))))), max(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))), (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501)))) | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501)))))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))))))) | (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(42501))))))), 4))))))))), 4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / cos(0.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5978.0137)), bool(false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), false)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), false)))))))), false, true))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), false)))))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(! (false), false), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec4(bvec2(bvec2(! (false), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec4(bvec2(bvec2(! (false), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec4(bvec2(bvec2(! (false), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), false)), bvec2(bvec4(bvec2(bvec2(! (false), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))), true))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), true))), false, true)))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), false)))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false)))))))), true))), false, true))))))))))))))), ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) && true, true && ((false) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.2))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) || false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true, false))), ! (! (injectionSwitch.x > injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true), true))))), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)) || false)), ((! (false))) || false), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true), bool(bvec4(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), ((! (false))) || false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))))), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ((_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
    return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) >> 0u))), virtual_gid))], (buf[virtual_gid]) | 0u), 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-36.86), _GLF_FUZZED(-5.6)), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) + 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) && true)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, tan(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, abs(1.0), 1.0), _GLF_IDENTITY(mat2(1.0) * (mat4x2(injectionSwitch, 0.0, tan(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, abs(1.0), 1.0)), (mat2(1.0) * (mat4x2(injectionSwitch, 0.0, tan(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, abs(1.0), 1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && ((! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), float(float((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))))))) * 1.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)), true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])), vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool((_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))), true && (! _GLF_IDENTITY((! (false)), ((! (false))) && true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
