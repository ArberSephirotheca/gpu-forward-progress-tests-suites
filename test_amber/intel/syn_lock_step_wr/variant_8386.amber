#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 uint _f0;
 mat2 _f1;
 vec3 _f2;
 mat3x4 _f3;
 mat4x3 _f4;
 uint _f5;
} ;

struct _GLF_struct_22 {
 bvec3 _f0;
 mat2 _f1;
 bvec3 _f2;
 mat3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 uvec3 _f1;
 _GLF_struct_23 _f2;
 ivec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
} ;

struct _GLF_struct_21 {
 float _f0;
 uint workgroup_size;
 mat2x4 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_18 {
 vec3 _f0;
 uint _f1;
 mat3 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 mat2x4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat4x2 _f1;
 int _f2;
 _GLF_struct_18 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 mat3x4 _f1;
 bool _f2;
 mat4 _f3;
 vec2 _f4;
 int _f5;
} ;

struct _GLF_struct_15 {
 int _f0;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 uint _f1;
 vec3 _f2;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 vec3 _f1;
 bool _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 bvec2 _f3;
 uvec3 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_25 {
 _GLF_struct_17 _f0;
 _GLF_struct_19 _f1;
 mat4x2 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_11 {
 float _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
 float _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 mat3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 ivec2 _f1;
 int _f2;
 vec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_4 {
 float _f0;
 uvec3 _f1;
 uvec3 _f2;
 uint _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 uint _f6;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 uint _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_1 {
 uint num_workgroup;
 vec3 _f0;
 mat2x4 _f1;
 int _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat4x2 _f1;
 mat3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 int _f2;
 ivec4 _f3;
 bvec4 _f4;
 _GLF_struct_2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_3 _f0;
 _GLF_struct_7 _f1;
 ivec4 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, true, false, true)), bool(bvec4(bool(bvec4((false) || false, true, false, true)), false, true, false)))), true && (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4((false) || false, true, false, true)), bool(bvec4(bool(bvec4((false) || false, true, false, true)), false, true, false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((bool(_GLF_DEAD(false))), false)), true && (bool(bvec2((bool(_GLF_DEAD(false))), false)))), bool(bvec3(bool(bvec2((bool(_GLF_DEAD(false))), false)), false, false)))) || false)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false, false)))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_3(_GLF_struct_0(uvec2(1u), mat4x2(1.0), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED((mat3(874.039, -6.7, 7160.6971, -2.5, -6.6, -6456.3116, 3173.6608, 7.3, _GLF_IDENTITY(8.5, clamp(8.5, 8.5, 8.5))))))), ivec4(1)), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x), ((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : gl_NumWorkGroups.x)) ^ 0u)), ((_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x), ((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : gl_NumWorkGroups.x)) ^ 0u))) - 0u) >> 0u))))) / 1u), vec3(1.0), mat2x4(1.0), 1, uvec4(1u)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1)), ivec4(1), bvec4(true), _GLF_struct_2(uvec3(1u), mat2x4(1.0), ivec4(1), 1u, bvec3(true)), bvec2(true)), _GLF_struct_7(mat3(1.0), mat4x2(1.0), mat3x2(1.0), _GLF_struct_4(1.0, uvec3(1u), uvec3(1u), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) + 0u) | 1u)))), ivec2(1)), _GLF_struct_5(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.7)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), ivec2(1), 1, vec4(1.0), 1u), _GLF_struct_6(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-6013.5757)), bool(false)), min(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-6013.5757)), (float(_GLF_FUZZED(-6013.5757))) - 0.0), bool(false)), mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-6013.5757)), bool(false)))), float(vec2(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-6013.5757)), bool(false)), min(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-6013.5757)), (float(_GLF_FUZZED(-6013.5757))) - 0.0), bool(false)), mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-6013.5757)), bool(false)))), cos(0.0)))))), mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), 0.0 + (_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0))), float(_GLF_FUZZED(4.7)), bool(false)))))))), mat4x3(1.0)), 1u), ivec4(1), _GLF_struct_10(ivec2(1), _GLF_struct_8(uvec4(1u)), _GLF_struct_9(vec2(1.0), mat3x4(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 0.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(vec2(-1208.9529, 96.36).t)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-713.318)), bool(false))))), min(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0))), 1.0)) : _GLF_FUZZED(-1.5)))), bool(true))), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.4)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), (false ? _GLF_FUZZED(-62.65) : 1.0)))), _GLF_struct_11(1.0, mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-1288.7885)) : 1.0)), 1.0, 1.0)), float(mat3(1.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0), mat3(mat4(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((true ? mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED((- mat3(2.5, 828.262, -79.99, -70.73, -51.56, _GLF_IDENTITY(36.84, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(36.84, 1.0, 1.0, 0.0), (mat2(36.84, 1.0, 1.0, 0.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), sqrt(1.0) * (float(_GLF_IDENTITY(mat2(36.84, 1.0, 1.0, 0.0), (mat2(36.84, 1.0, 1.0, 0.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), -1245.2431, -94.10, 281.372))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED((- mat3(_GLF_IDENTITY(_GLF_IDENTITY(2.5, clamp(2.5, _GLF_IDENTITY(2.5, (2.5) + 0.0), _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)))), mix(float(_GLF_IDENTITY(2.5, clamp(2.5, _GLF_IDENTITY(2.5, (2.5) + 0.0), _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5))))), float(_GLF_FUZZED(-7.9)), bool(false))), 828.262, -79.99, -70.73, -51.56, _GLF_IDENTITY(36.84, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(36.84, min(36.84, 36.84)))), -1245.2431, -94.10, _GLF_IDENTITY(281.372, min(281.372, 281.372)))))))), ((true ? mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED((- mat3(2.5, 828.262, -79.99, -70.73, -51.56, _GLF_IDENTITY(36.84, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(36.84, 1.0, 1.0, 0.0), (mat2(36.84, 1.0, 1.0, 0.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), sqrt(1.0) * (float(_GLF_IDENTITY(mat2(36.84, 1.0, 1.0, 0.0), (mat2(36.84, 1.0, 1.0, 0.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), -1245.2431, -94.10, 281.372))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED((- mat3(_GLF_IDENTITY(_GLF_IDENTITY(2.5, clamp(2.5, _GLF_IDENTITY(2.5, (2.5) + 0.0), _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)))), mix(float(_GLF_IDENTITY(2.5, clamp(2.5, _GLF_IDENTITY(2.5, (2.5) + 0.0), _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5))))), float(_GLF_FUZZED(-7.9)), bool(false))), 828.262, -79.99, -70.73, -51.56, _GLF_IDENTITY(36.84, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(36.84, min(36.84, 36.84)))), -1245.2431, -94.10, _GLF_IDENTITY(281.372, min(281.372, 281.372))))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6319.7500) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(4618.7007)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, true, false)))) && true))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_17(_GLF_struct_13(mat2x3(1.0), vec3(1.0), true, _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), _GLF_IDENTITY(uvec4(1u), ~ (~ (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u))), 0u, 0u), ((_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), _GLF_IDENTITY(uvec4(1u), ~ (~ (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))))))))) ^ uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u))), 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_struct_14(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))) : _GLF_FUZZED(-8.7))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0)), 0.0)), clamp(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))) : _GLF_FUZZED(-8.7))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))) : _GLF_FUZZED(-8.7))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0)), 0.0)), max(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))) : _GLF_FUZZED(-8.7))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0)), 0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))) : _GLF_FUZZED(-8.7))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0)), 0.0)))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(109.912)), bool(false))) : _GLF_FUZZED(-8.7))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, 0.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, 0.0)), 0.0)))))), 1u, _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), cos(log(1.0)), 1.0, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), cos(log(1.0)), 1.0, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 0.0 + (float(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), cos(log(1.0)), 1.0, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))) + 0.0))))[1], (vec3(1.0))[2]), vec3(_GLF_FUZZED(1376.1796), _GLF_FUZZED(5.8), _GLF_FUZZED(-39.12)), bvec3(false, false, false)))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.7) : 1.0)), 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0)))) / vec3(1.0, 1.0, 1.0))), _GLF_struct_15(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) ^ 0), _GLF_IDENTITY(1, 0 ^ (1))))), bvec2(true), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (1u))), _GLF_struct_16(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0))), mat3x4(1.0), true, _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), vec2(1.0), 1)), _GLF_struct_19(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) / 1u))), mat4x2(1.0), 1, _GLF_struct_18(vec3(1.0), 1u, mat3(1.0), bvec2(true), mat4x3(1.0), mat2x4(1.0), mat3x4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0))))))), uvec3(1u)), mat4x2(1.0), _GLF_struct_21(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-61.44))), gl_WorkGroupSize.x, mat2x4(1.0), _GLF_struct_20(bvec4(true))), _GLF_struct_24(_GLF_struct_22(bvec3(true), mat2(1.0), bvec3(true), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(48.34, 9.9, -2.5, -3.4, -2881.8999, -8273.9705, -0.4, -7.9, -58.46)) : mat3(mat4x3(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))))))), transpose(transpose(mat3(mat4x3(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))))))))), mat2x3(1.0)), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), _GLF_struct_23(1u, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), mat2(_GLF_IDENTITY(mat3x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.6))), 0.0)))), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(8245.6326)), float((1.0)), bool(true))) - 0.0))))), (mat3x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat2x4(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / determinant(mat2(1.0, 0.0, 0.0, cos(0.0))))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, float(_GLF_IDENTITY(mat4x3((1.0) - 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x3((1.0) - 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3054.8481) : 1.0)), 1.0, 1.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))) - mat3x4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(179.679) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(8.3, -5.9, -273.407, 2.1)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.4), max(_GLF_FUZZED(_GLF_IDENTITY(1.4, 1.0 * (1.4))), _GLF_IDENTITY(_GLF_FUZZED(1.4), 0.0 + (_GLF_FUZZED(1.4)))))), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(true))), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mat2(_GLF_IDENTITY(mat3x4(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))), bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, max(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-9589.2719) : (1.0) - 0.0)), mix(float(_GLF_FUZZED(-2624.4334)), float((1.0) - 0.0), bool(true))), (1.0) - 0.0)), float(vec3(_GLF_IDENTITY((1.0) - 0.0, max(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-9589.2719) : (1.0) - 0.0)), mix(float(_GLF_FUZZED(-2624.4334)), float((1.0) - 0.0), bool(true))), (1.0) - 0.0)), 0.0, 0.0)))))))), (mat3x4(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.4)), min(float(_GLF_FUZZED(1.4)), float(_GLF_FUZZED(1.4)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) - 0.0)))))) - mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(179.679, clamp(179.679, 179.679, _GLF_IDENTITY(179.679, mix(float(_GLF_FUZZED(4.4)), float(179.679), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(8.3, -5.9, -273.407, 2.1), _GLF_IDENTITY(mat2(mat3(mat2(8.3, -5.9, -273.407, 2.1))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(mat3(mat2(8.3, -5.9, -273.407, 2.1)), (_GLF_IDENTITY(mat3(mat2(8.3, -5.9, -273.407, 2.1)), transpose(transpose(mat3(mat2(8.3, -5.9, -273.407, 2.1)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.4), max(_GLF_IDENTITY(_GLF_FUZZED(1.4), clamp(_GLF_FUZZED(1.4), _GLF_FUZZED(1.4), _GLF_FUZZED(1.4))), _GLF_FUZZED(1.4)))), _GLF_IDENTITY(float(1.0), max(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)), 0.0 + (1.0))), float(1.0))), bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(0.0, 0.0)))))))), mat2(_GLF_IDENTITY(mat3x4(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.4)), 1.0 * (float(_GLF_FUZZED(1.4)))), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), float(mat3x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-8.4))), max(0.0, 0.0)))), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, max(_GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED(-2624.4334)), float(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4x3((1.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0 + (_GLF_IDENTITY(float(mat4x3((1.0), 0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-21295))), bool(false))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7.7))), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), mix(float(_GLF_FUZZED(-6242.8300)), float(_GLF_IDENTITY(float(mat4x3((1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-21295))), bool(false))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7.7))), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), max(float(mat4x3((1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-21295))), bool(false))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7.7))), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat4x3((1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat3(mat3x4(mat3(0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-21295))), bool(false))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7.7))), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), bool(true)))))) - 0.0), bool(true))), _GLF_IDENTITY((1.0) - 0.0, float(_GLF_IDENTITY(mat3x2((1.0) - 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.8))), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-31.27)), float((1.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))) - 0.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 1.0))))))))))))), (mat3x4(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true))), float(_GLF_FUZZED(-721.040)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3x2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 1.0)) * mat3(1.0)))), (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(atan(4419.2831)) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))), 0.0, 1.0, 1.0, 1.0), (mat3x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * mat3(1.0)))))), (1.0) - 0.0)))))) - mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))) ? 0.0 : _GLF_FUZZED(pow(311.051, -953.740)))), (false ? _GLF_FUZZED(179.679) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), vec3(1.0), mat3x4(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uint(false)))), min(_GLF_IDENTITY(1u, (1u) >> 0u), 1u))), ivec4(1), mat3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-70.45) : injectionSwitch.x))), float(_GLF_FUZZED(-772.870)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(77.61), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -951.696))), bvec2(true, false))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.9)), bool(false))), 1.0, 1.0)))), float(_GLF_FUZZED(6.2)), bool(false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.9)), bool(false))), 1.0, 1.0)))), float(_GLF_FUZZED(6.2)), bool(false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.9)), bool(false))), 1.0, 1.0)))), float(_GLF_FUZZED(6.2)), bool(false))))))))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y) + 0.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y) + 0.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(1.0)))))).y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(exp(0.0)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), 1u, 1u) * (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_25._f3.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), true && (bool(bool(! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)) + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)) + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)) + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)) + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) - 0u))) + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)) + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)) + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 0u, 1u, 0u)))), uint(uvec3(~ (_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 0u, 1u, 0u)))), 1u, 0u))))))) + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, 0 | (_GLF_IDENTITY((1) >> 0, min((1) >> 0, (1) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u)) + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) % subgroup_size))) >> 0u)), max(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) >> 0u))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), 0)))) | 0u)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(_GLF_IDENTITY(4u, (4u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) * 1u), uint(_GLF_IDENTITY(4u, (4u) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), uint(4u))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, (0) >> 0))) | (0)))) | 0u)) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) - (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))))), min(0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) - (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u)))))))), 0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) - (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (1) >> 0)) | 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | ((1)))) | (_GLF_IDENTITY((1), ((1)) / 1))))) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u), 1u, 1u)) | uvec3(0u, 0u, 0u))))) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) / 1u))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 + (1)))), (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) % subgroup_size)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) ^ 0) >> 0, 0 ^ (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) ^ 0) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) / 1)) | 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) - 0u), 0u ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u | (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, (_GLF_IDENTITY((1) >> 0, int(ivec2((1) >> 0, 1)))) - (0 >> _GLF_IDENTITY(int(8), int(8))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) - 0u, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) - 0u, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) - 0u, 0u + ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) - 0u)), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) - 0u, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) - 0u))) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u, uint(uvec3((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u) >> 0u)) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)))))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 1 * (_GLF_IDENTITY(1, (1) >> 0))))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, (1) >> 0)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, (1) >> 0)))) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0), (true ? false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(-43365))))), _GLF_IDENTITY(1, (1) >> 0)))) | 0u), 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, (1) >> 0)))) | 0u, uint(uint((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, (1) >> 0)))) | 0u)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) >> 0), (false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, (1) >> 0)))) | 0u)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED((~ -23759)) : _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) + 0))))) | 0u)))))) >> (0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, max(4u, 4u))))))) % subgroup_size)) ^ 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))))) | 0u, 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | 0)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | 0)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))), 0u | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | 0)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | 0)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))))) | 0u)))) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_base))))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, ~ (~ (0)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-69369))) : _GLF_FUZZED(47877)))) >> 0, int(ivec4((1) >> 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, _GLF_IDENTITY(1, ~ (~ (1))))))), (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u + (4u))), uint(4u))))) % subgroup_size)) ^ 0u)) ^ 0u)) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u), uint(4u))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u), uint(4u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u), uint(4u))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u), uint(4u)))))) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, ((38253u & 64713u) & 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) | 0u)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))))) % subgroup_size)) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (true ? _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u))) : _GLF_FUZZED(virtual_gid)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - (_GLF_IDENTITY(5391, max(5391, 5391)) & 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - (_GLF_IDENTITY(5391, max(5391, 5391)) & 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - (_GLF_IDENTITY(5391, max(5391, 5391)) & 0)), ~ (~ (_GLF_IDENTITY(64, (64) - (_GLF_IDENTITY(5391, max(5391, 5391)) & 0))))), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - (_GLF_IDENTITY(5391, max(5391, 5391)) & 0)), (_GLF_IDENTITY(64, (64) - (_GLF_IDENTITY(5391, max(5391, 5391)) & 0))) | 0))) : _GLF_FUZZED(-80733))))), 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, min(64, 64))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) + (0 | 0)), 64)))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) << 0)))) << 0)) / 1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) << (0 >> _GLF_IDENTITY(int(0), int(0)))) | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
