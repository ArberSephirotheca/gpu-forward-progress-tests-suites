#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uvec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_14 {
 float _f0;
} ;

struct _GLF_struct_13 {
 uint _f0;
 bvec4 _f1;
 bvec2 _f2;
 float _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 int _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 _GLF_struct_16 _f1;
 uint next_virtual_gid;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 bvec3 _f1;
 uvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 mat2 _f1;
 ivec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 bvec2 _f1;
 int _f2;
 uint subgroup_local_id;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 _GLF_struct_7 _f1;
 mat4x2 _f2;
 _GLF_struct_11 _f3;
 uint _f4;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 bvec3 _f1;
 ivec4 _f2;
 mat3x4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 vec4 _f1;
 float _f2;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 uint virtual_gid;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x2(vec2(0.0, 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))) + (injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9748.8441)))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(vec3(1.0), _GLF_struct_7(mat4(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), false))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), 1, gl_SubgroupInvocationID, _GLF_struct_5(mat3x2(1.0)), _GLF_struct_6(mat3(1.0), mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8765.5301)), float(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6560.2875) : 1.0))), bool(true)))))), mat4x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), _GLF_struct_11(_GLF_struct_8(uvec3(1u), mat2(1.0), ivec3(1), mat3x2(1.0)), _GLF_struct_9(bvec4(true), bvec3(true), uvec4(1u), mat3x4(1.0)), _GLF_struct_10(uvec4(1u))), 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0))))), (_GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 0.0))), min(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))))) / vec3(1.0, 1.0, 1.0))))), max(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(44.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.0)), float(0.0), bool(true))), 1.0))))), exp(0.0), 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(136428u))), float(0.0), bool(true))), log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat2(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0)))))))))), 1.0, exp(0.0), 1.0, 1.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)), clamp(vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), exp(0.0), 1.0, 1.0, 0.0)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)), clamp(vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(vec3(-871.470, 2849.0213, 22.81)) : vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))))))), max(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-1760.3862) : exp(0.0))), 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) ? 1.0 : _GLF_FUZZED(-549.274))), _GLF_IDENTITY(0.0, (0.0) / 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0)), float(float(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(9.9)), bool(false))), float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0))))))))) + 0.0)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))), vec2(mat4x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))), mat2(1.0) * (vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0)))))), tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(636.571)), bool(false))), 0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat4(44.74, -0.9, 3.1, 8.5, -968.682, -95.37, -19.66, -2503.0198, -935.113, -34.15, 6.8, -3.2, 2.7, -3.5, -2299.6175, -848.822)) : mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), ((false ? _GLF_FUZZED(mat4(44.74, -0.9, 3.1, 8.5, -968.682, -95.37, -19.66, -2503.0198, -935.113, -34.15, 6.8, -3.2, 2.7, -3.5, -2299.6175, -848.822)) : mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat4(1.0)), (mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(abs(round(length(normalize(1.0)))), (abs(round(length(normalize(1.0))))) - sin(0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.9)), bool(false))), 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, exp(0.0), 0.0, 1.0, abs(_GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(9265.5090)), bool(false))), _GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED(-9.8)), bool(false)))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(_GLF_IDENTITY(length(normalize(1.0)), max(_GLF_IDENTITY(length(normalize(1.0)), (true ? length(normalize(1.0)) : _GLF_FUZZED(2.9))), length(normalize(1.0)))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)), (_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), (mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(_GLF_IDENTITY(length(normalize(1.0)), max(_GLF_IDENTITY(length(normalize(1.0)), (true ? length(normalize(1.0)) : _GLF_FUZZED(2.9))), length(normalize(1.0)))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-29.19)), bool(false))), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.3) : 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(21.03))), 0.0), vec4(1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(mat3x2(abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(float(mat3x2(abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), clamp(float(mat3x2(abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), float(mat3x2(abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), float(mat3x2(abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))), 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0))))), mix(float(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(length(normalize(1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, abs(round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(length(normalize(1.0))), float(_GLF_FUZZED(5245.5985)), bool(false))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), float(_GLF_FUZZED(-6.5)), bool(false)))))), vec3(mat4x3(vec3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)), (mat4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(abs(0.0), 1.0, 0.0)))))), 0.0, 0.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0, 1.0, 0.0))))))).x > injectionSwitch.y))), false, _GLF_IDENTITY(false, true && (false)), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) && true), bool(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))) || false), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(88.83)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 1.0, 0.0)))), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8514.2987))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), 0.0, 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(-1.6)), float(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), bool(true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) >> 0u), 0u | ((workgroup_id) << 0u))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), _GLF_struct_3(mat2(1.0), _GLF_struct_0(mat4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), 1.0), _GLF_struct_1(vec2(1.0), bvec3(true), ivec4(1), mat3x4(1.0), uvec2(1u)), _GLF_struct_2(mat2(1.0), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0) * (vec2(1.0))))), max(vec2(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.4)), bool(false)))))), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), min(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))), mix(vec2(_GLF_FUZZED(-43.93), (min(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0)))))[1]), vec2((min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), vec2(1.0)))))[0], _GLF_FUZZED(-5.5)), bvec2(true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), max(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))))), 1u, 0u), (uvec3(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), max(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_base)), workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(workgroup_base + subgroup_base, 1u))) + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))))), 1u, 0u)) * uvec3(1u, 1u, 1u))))))))) - 0u), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_12._f1.subgroup_local_id)), (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u))), _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), subgroup_base))) / 1u))))) + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), subgroup_base))) / 1u))))) + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), subgroup_base))) / 1u))))) + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u)))) + 0u)), 0u | ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), subgroup_base))) / 1u))))) + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))), (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), subgroup_base))) / 1u))))) + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u)))) + 0u)))) | _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u) : _GLF_FUZZED(packUnorm4x8((vec4(-8.7, -6.4, 85.53, 22.32) / -5.4)))), _GLF_IDENTITY(uint(uvec2((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-515.133)), vec2(_GLF_FUZZED(-0.2), (injectionSwitch)[1]), bvec2(false, true))).x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_12._f1.subgroup_local_id)), (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))) + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))))) - 0u) : _GLF_FUZZED(packUnorm4x8((vec4(-8.7, -6.4, 85.53, 22.32) / -5.4)))), ((((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (true ? uint(uvec2((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_local_id, 0u | (_GLF_struct_replacement_12._f1.subgroup_local_id)), (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base, subgroup_base)))) + _GLF_struct_replacement_12._f1.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_12._f1.subgroup_local_id) | 0u))))) - 0u) : _GLF_FUZZED(packUnorm4x8((vec4(-8.7, -6.4, 85.53, 22.32) / -5.4)))), ((((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) : _GLF_FUZZED(workgroup_base)))))) / 1u), ivec3(1)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(vec3(1.0), _GLF_struct_16(_GLF_struct_13(1u, bvec4(true), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) && true)))))), 1.0), 1, _GLF_struct_14(1.0), _GLF_struct_15(uvec2(1u), _GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << (_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))), ivec2(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))), ivec2(0, 0) | (ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))))), (_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))), ivec2(0, 0) | (ivec2(0, _GLF_IDENTITY(0, 0 ^ (0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))), ivec2(0, 0) | (ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))), ivec2(0, 0) | (ivec2(0, _GLF_IDENTITY(0, 0 ^ (0))))))))), 0, 1))) ^ ivec2(0, 0))), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1)))) | (ivec2(1))), ivec2(1))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)) + ((_GLF_struct_replacement_12._f1.subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + subgroup_base + ((_GLF_struct_replacement_12._f1.subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_struct_replacement_12._f1.subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_struct_replacement_12._f1.subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_4._f1.virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)))), false, true)))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)))), false, true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_17.next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
