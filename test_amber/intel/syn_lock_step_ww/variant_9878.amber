#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
    {
     GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy = GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_id;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), 0 + (int(4))), int(4))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), 0 + (int(4))), int(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))), (true ? _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), 0 + _GLF_IDENTITY((int(4)), min((int(4)), (int(4))))), int(4))) : _GLF_FUZZED(27855)))) ^ ((0 >> _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(8), int(8)))))), max(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1)))))))))))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1)))))))))))), int(ivec4(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1)))))))))))), min(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1)))))))))))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1)))))))))))))), 0, 1, 0))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1)))))))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1)))))))))))), (((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(4), (int(4)) << 0) : _GLF_FUZZED(_GLF_IDENTITY(-79615, ~ (_GLF_IDENTITY(~ (-79615), clamp(~ (-79615), _GLF_IDENTITY(~ (-79615), (~ (-79615)) / 1), ~ (-79615)))))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26942) : 0)) + (1 & 1))))), int(int(int(ivec2(4, (1 & 1))))))))))))) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
            barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.y, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.y), (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.y)) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), ((0u)) | ((0u))), max(~ (0u), ~ (0u)))))), (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[2], min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[2], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[2])), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3])))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size)).y)) << 0u)));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.w = subgroup_size;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (66849 & (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (0 >> _GLF_IDENTITY(int(8), int(8))))), int(3))))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
      {
       GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.w;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.w = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))).x < injectionSwitch.y))))
    {
     _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id, 1u * (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z, ~ (~ (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z))), 0u | (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z, ~ (~ (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z)))))), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.tsq, _GLF_IDENTITY((GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.tsq) | (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.tsq), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.tsq) | (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.tsq), ((GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.tsq) | (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.tsq)) * uvec3(1u, 1u, 1u)))))[0]) : GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z)), ~ (~ (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z))))) + 0u));
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(floatBitsToInt(-4.0)))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(int(int(0)), (int(int(0))) | 0)))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * sqrt(vec2(1.0, 1.0)), clamp((injectionSwitch) * sqrt(vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * sqrt(vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0)))) * sqrt(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-500.379)), vec2(_GLF_FUZZED(3753.3258), _GLF_IDENTITY(((injectionSwitch) * sqrt(vec2(1.0, 1.0)))[1], (((injectionSwitch) * sqrt(vec2(1.0, 1.0)))[1]) / 1.0)), bvec2(false, true))), (injectionSwitch) * sqrt(vec2(1.0, 1.0)))), min((injectionSwitch) * sqrt(vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * sqrt(vec2(1.0, 1.0)), min((injectionSwitch) * sqrt(vec2(1.0, 1.0)), (injectionSwitch) * sqrt(vec2(1.0, 1.0))))))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y)), injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.x = num_workgroup, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.b) : GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.x = num_workgroup));
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z = workgroup_size;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(85.77, clamp(85.77, _GLF_IDENTITY(85.77, (true ? 85.77 : _GLF_FUZZED(8006.7847))), _GLF_IDENTITY(85.77, max(85.77, 85.77)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), float(mat2x3(float(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)))), max(float(_GLF_IDENTITY(float(1.0), float(mat2x3(float(1.0), 1.0, 1.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(float(1.0), float(mat2x3(float(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))))))) * _GLF_IDENTITY((85.77), (_GLF_IDENTITY((85.77), float(vec2(_GLF_IDENTITY((85.77), mix(float(_GLF_FUZZED(38.56)), float((85.77)), bool(true))), 0.0)))) - 0.0)))), bool(false))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(86.78), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(86.78), mix(float(_GLF_FUZZED(86.78)), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_FUZZED(_GLF_IDENTITY(0.8, (0.8) / abs(1.0)))), bvec2(false, false)), min(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(86.78), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(86.78), mix(float(_GLF_FUZZED(86.78)), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_FUZZED(_GLF_IDENTITY(0.8, (0.8) / abs(1.0)))), bvec2(false, false)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(86.78), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(86.78), mix(float(_GLF_FUZZED(86.78)), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_FUZZED(_GLF_IDENTITY(0.8, (0.8) / abs(1.0)))), bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(14.35)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1], ((injectionSwitch)[1]) * 1.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(14.35)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1], ((injectionSwitch)[1]) * 1.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0)), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(14.35)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1], ((injectionSwitch)[1]) * 1.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0)))), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(mat3x4(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.1), _GLF_FUZZED(14.35)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1], ((injectionSwitch)[1]) * 1.0), 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0)))))))))), vec2(_GLF_FUZZED(86.78), _GLF_FUZZED(0.8)), bvec2(false, false)))) * mat2(1.0)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], float(vec3((injectionSwitch)[0], 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), float(mat3(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(86.78), clamp(_GLF_IDENTITY(_GLF_FUZZED(86.78), float(mat4x3(_GLF_FUZZED(86.78), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_FUZZED(86.78), _GLF_IDENTITY(_GLF_FUZZED(86.78), min(_GLF_FUZZED(86.78), _GLF_IDENTITY(_GLF_FUZZED(86.78), min(_GLF_FUZZED(86.78), _GLF_FUZZED(86.78))))))), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(86.78), mix(float(_GLF_FUZZED(86.78)), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_FUZZED(0.8)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1], float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-90.17)), bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED((distance(vec4(3.7, 78.15, 950.460, 6.6), vec4(-8552.5291, -7.5, 185.887, 98.40)) * fma(-92.73, -8.5, 93.78))) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(85.57)), vec2(_GLF_FUZZED(952.421), ((injectionSwitch))[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch)))[0], mix(float(_GLF_FUZZED(-0.4)), float((injectionSwitch)[0]), bool(true))))))), (injectionSwitch)[1]), bvec2(true, true))))[1], max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) * mat2(1.0)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1])), exp(0.0), 1.0), (vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.7, 3.2).g, float(vec3(vec2(0.7, 3.2).g, 0.0, 1.0))), (_GLF_IDENTITY(vec2(0.7, 3.2).g, float(vec3(vec2(0.7, 3.2).g, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0)))) - sin(0.0)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), false))))), true))))[1], max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[0]), max(max((injectionSwitch)[0], (injectionSwitch)[0]), _GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[0]), mix(float(_GLF_FUZZED(0.6)), float(max((injectionSwitch)[0], (injectionSwitch)[0])), bool(true)))))), (injectionSwitch)[1]), bvec2(true, true))))[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-12.83)), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1])), exp(0.0), 1.0)) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0, 1.0, 1.0)))))), ((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)))[1]) * 1.0)), vec2(_GLF_FUZZED(86.78), _GLF_IDENTITY(_GLF_FUZZED(0.8), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(0.8), min(_GLF_FUZZED(0.8), _GLF_FUZZED(0.8))), 0.0, tan(0.0), sin(0.0), 1.0, 0.0)), max(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(0.8), min(_GLF_FUZZED(0.8), _GLF_FUZZED(0.8))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0), tan(0.0), sin(0.0), 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(0.8), min(_GLF_FUZZED(0.8), _GLF_IDENTITY(_GLF_FUZZED(0.8), max(_GLF_IDENTITY(_GLF_FUZZED(0.8), max(_GLF_FUZZED(0.8), _GLF_FUZZED(0.8))), _GLF_FUZZED(0.8))))), 0.0, tan(0.0), sin(0.0), 1.0, 0.0)))))), bvec2(false, false)))) * mat2(1.0)).y, (false ? _GLF_FUZZED(-9.2) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)), clamp(vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), clamp(vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat4x3(injectionSwitch, abs(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0))))))))[_GLF_IDENTITY(1, (1) ^ 0)], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(86.78), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(86.78), mix(float(_GLF_FUZZED(86.78)), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_FUZZED(_GLF_IDENTITY(0.8, max(0.8, _GLF_IDENTITY(0.8, (0.8) - sqrt(0.0)))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-12.83, mix(float(_GLF_FUZZED(-101.827)), float(-12.83), bool(true))))), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), 1.0, exp(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_FUZZED(86.78), _GLF_FUZZED(_GLF_IDENTITY(0.8, (_GLF_IDENTITY(0.8, min(0.8, 0.8))) + 0.0))), bvec2(false, false)))) * mat2(1.0)).y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), 1.0 * (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(86.78), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(86.78), mix(float(_GLF_FUZZED(86.78)), float(_GLF_FUZZED(1.8)), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(55.46))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), _GLF_FUZZED(0.8)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-12.83, max(-12.83, -12.83)))), _GLF_FUZZED(vec2(0.7, 3.2).g)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(max((injectionSwitch)[0], (injectionSwitch)[0]), max(max((injectionSwitch)[0], (injectionSwitch)[0]), max((injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), bvec2(true, true))))[1], ((injectionSwitch)[1]) * 1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(86.78), _GLF_FUZZED(0.8)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(86.78), _GLF_FUZZED(0.8)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(86.78), _GLF_FUZZED(0.8)))), vec2(_GLF_FUZZED(86.78), _GLF_FUZZED(0.8)))), bvec2(false, false)))) * mat2(1.0)).y, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(_GLF_FUZZED(-7083.8395)), (float(_GLF_FUZZED(-7083.8395))) + 0.0), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5543.8372), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5543.8372), (false ? _GLF_FUZZED(1.9) : _GLF_FUZZED(-5543.8372))), _GLF_FUZZED(-5543.8372), _GLF_FUZZED(-5543.8372)))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (true)) && true)), false || (! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, false, false)), ! (! (bool(bvec4((true), false, false, false)))))), (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true)))) && true)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, _GLF_IDENTITY(bool(bvec3((! (true)) && true, false, true)), (_GLF_IDENTITY(bool(bvec3((! (true)) && true, false, true)), false || (bool(bvec3((! (true)) && true, false, true))))) && true))), bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) && true), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), false || (! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))))) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true)), true && (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false)))), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))), bool(bvec3(_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))), false, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), _GLF_IDENTITY((bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true))) && true, true && ((bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true))) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (! (true)) && true)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, false || ((! (true)) && true))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), (true) || false), _GLF_IDENTITY(true, (true) && true))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), ! (! (bool(bool(! ((true))))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! ((true)), true && (! ((true)))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), ! (! (bool(bool(! ((true))))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! ((true)), true && (! ((true)))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), ! (! (bool(bool(! ((true))))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! ((true)), true && (! ((true)))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), ! (! (bool(bool(! ((true))))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! ((true)), true && (! ((true)))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false))))), false)))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((true))), true && (_GLF_IDENTITY((! ((true))), true && ((! ((true))))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, false || ((! (true)) && true)))), bool(bool((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, false || ((! (true)) && true)))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))), (true) || false), true)), true && (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((true), ((true)) && true)))), bool(bvec3(bool(bool(! ((true)))), true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))))))) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), ! (_GLF_IDENTITY(! (bool(bool(! ((true))))), ! (! (_GLF_IDENTITY(! (bool(bool(! ((true))))), ! (! (! (bool(bool(! ((true))))))))))))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(_GLF_IDENTITY(bool(bool(! ((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(! ((true)))))), true, true))), false))))))) && true)), true, true), false)))))), true)))), true)))))))), false || (bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) && true)), ((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ((! (true)) && true) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).y))), true, true)))))))))), mix(float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5543.8372), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5543.8372), (false ? _GLF_FUZZED(1.9) : _GLF_FUZZED(-5543.8372))), _GLF_FUZZED(-5543.8372), _GLF_FUZZED(-5543.8372)))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), false || (! (_GLF_IDENTITY(! (true), (! (true)) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))) && true), bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) && true), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))))) && true))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), ((! (! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), bool(bvec4(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), bool(bvec4(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), true, false, false)))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true), true)), true)))))) && true))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, false || ((! (true)) && true))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true) || false), true)), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false)))))))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), (bool(bool(! ((true))))) || false), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, false || ((! (true)) && true))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, ! (! (true)))) || false), true)), true && (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false)))))), true && (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false))))))))), true)))), true)))))))), false || (bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5543.8372), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5543.8372), (false ? _GLF_FUZZED(1.9) : _GLF_FUZZED(-5543.8372))), _GLF_FUZZED(-5543.8372), _GLF_FUZZED(-5543.8372)))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), false || (! (_GLF_IDENTITY(! (true), (! (true)) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))) && true), bool(bvec2(_GLF_IDENTITY(! (true), (! (true)) && true), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))))) && true))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), ((! (! ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), bool(bvec4(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), bool(bvec4(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true)))))), false || ((_GLF_IDENTITY(! (((! (true)))), bool(_GLF_IDENTITY(bvec3(! (((! (true)))), true, false), bvec3(bvec4(bvec3(! (((! (true)))), true, false), true))))))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), true, false, false)))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)), _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), _GLF_IDENTITY(((! (true))), ! (_GLF_IDENTITY(! (((! (true)))), bool(bvec3(! (((! (true)))), true, false))))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), true, true), true)), true)))))) && true))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, false || ((! (true)) && true))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true) || false), true)), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false)))))))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), (bool(bool(! ((true))))) || false), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, false || ((! (true)) && true))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, ! (! (true)))) || false), true)), true && (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false)))))), true && (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), bool(bvec2(_GLF_IDENTITY(bool(bool(! ((true)))), bool(bvec3(bool(bool(! ((true)))), true, true))), false))))))) && true)), true, true), false))))))))), true)))), true)))))))), false || (bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(-31.28)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), mix(float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), float(_GLF_FUZZED(6.0)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), max(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0))), 0.0, 0.0)), mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), float(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), 0.0, 0.0))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), mix(float(_GLF_FUZZED(7757.3206)), float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))) - 0.0))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))))), bool(true)))), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))))))))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), clamp((_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), clamp((_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.4)), bool(false)))))))))))) / 1.0)) * 1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3394.2407)), (false ? _GLF_FUZZED(-98.32) : float(_GLF_FUZZED(3394.2407)))), float(0.0), bool(true))), 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3394.2407)), float(0.0), bool(true))))), 0.0)), 1.0, 0.0, 0.0, exp(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0) + (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0) + (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(2383.0803) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)) - 0.0))), 0.0 + (clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), length(abs(vec2(0.0, 0.0))))))), (false ? _GLF_FUZZED(740.983) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(85.93)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true) ? _GLF_FUZZED(448.313) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true ? (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(448.313) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(acosh(-89.04))))), injectionSwitch.y))))), float(vec2(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(740.983) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)), injectionSwitch.y))))), mix(float(_GLF_FUZZED(12.14)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(740.983) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)), injectionSwitch.y)))))), bool(true))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))))), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-654.624) : injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))))), (true ? _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))), max(min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), (false ? _GLF_FUZZED(740.983) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(85.93, min(_GLF_IDENTITY(85.93, clamp(85.93, _GLF_IDENTITY(85.93, mix(float(_GLF_FUZZED(-9001.2645)), float(85.93), bool(true))), _GLF_IDENTITY(85.93, clamp(85.93, _GLF_IDENTITY(85.93, mix(float(85.93), float(_GLF_FUZZED((-5.7))), bool(false))), 85.93)))), 85.93)))), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true)))), bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(448.313) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (true ? (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true) ? _GLF_FUZZED(448.313) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(acosh(-89.04))))), injectionSwitch.y))))), float(vec2(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(740.983) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), 0.0))))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(-654.624) : injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))))) : _GLF_FUZZED(1.7))))))))
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false)) || false); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0)), (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))) >> 0)) << 0))))
            {
             barrier();
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((92932 & 0), clamp((92932 & 0), (92932 & 0), _GLF_IDENTITY((92932 & 0), min((92932 & 0), _GLF_IDENTITY((92932 & 0), (true ? (92932 & 0) : _GLF_FUZZED(14647))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY((92932 & 0), clamp((92932 & 0), (92932 & 0), _GLF_IDENTITY((92932 & 0), min((92932 & 0), _GLF_IDENTITY((92932 & 0), (true ? (92932 & 0) : _GLF_FUZZED(14647))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((92932 & 0), clamp((92932 & 0), (92932 & 0), _GLF_IDENTITY((92932 & 0), min((92932 & 0), _GLF_IDENTITY((92932 & 0), (true ? (92932 & 0) : _GLF_FUZZED(14647))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((92932 & 0), clamp((92932 & 0), (92932 & 0), _GLF_IDENTITY((92932 & 0), min((92932 & 0), _GLF_IDENTITY((92932 & 0), (true ? (92932 & 0) : _GLF_FUZZED(14647))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((92932 & 0), clamp((92932 & 0), (92932 & 0), _GLF_IDENTITY((92932 & 0), min((92932 & 0), _GLF_IDENTITY((92932 & 0), (true ? (92932 & 0) : _GLF_FUZZED(14647))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((92932 & 0), clamp((92932 & 0), (92932 & 0), _GLF_IDENTITY((92932 & 0), min((92932 & 0), _GLF_IDENTITY((92932 & 0), (true ? (92932 & 0) : _GLF_FUZZED(14647))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (_GLF_IDENTITY((92932 & 0), clamp((92932 & 0), (92932 & 0), _GLF_IDENTITY((92932 & 0), min((92932 & 0), _GLF_IDENTITY((92932 & 0), (true ? (92932 & 0) : _GLF_FUZZED(14647))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true))))), true && (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), true)))))))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y = workgroup_id;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (false ? _GLF_FUZZED(subgroup_id) : GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), (false) && true)) && true)))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size)).z, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.z)) * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.w;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.z = subgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.z = subgroup_base, 0u | (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.z = subgroup_base)))));
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3554.2610) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-859.019)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, 5, 5))) ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), ~ (~ (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, 2)))))))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), injectionSwitch.x)) < injectionSwitch.y)) ? int(_GLF_IDENTITY(5, min(5, 5))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(5), min(int(5), int(5))))) << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.x = GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.z;
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))) && true), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))) && true))), (true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
          }
        }
       for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, clamp(8, 8, _GLF_IDENTITY(8, (8) / _GLF_IDENTITY(1, (1) + 0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_injected_loop_counter)) != 1); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))); _injected_loop_counter ++)
          {
           do
            {
             GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3], clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3], (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3]) | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3]), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3]), ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3])) << 0u)) | 0u)), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3])))).x, (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[0], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[1], GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3], clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) + (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))))[3], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3], (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3]) | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3])), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size[3])))).x : _GLF_FUZZED(workgroup_size)));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, max(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y)))))) ^ (0u & 30832u))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))).y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y))) ^ (0u & 30832u))) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y))) ^ (0u & 30832u))), ~ (~ (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y))) ^ (0u & 30832u))), clamp((workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y))) ^ (0u & 30832u))), (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y))) ^ (0u & 30832u))), (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y))) ^ (0u & 30832u)))))))) - (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), max(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec2(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u | 1u)))), clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> 0u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> 0u) << 0u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))), 0u + (workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y)))) + _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y, max(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y, GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y));
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x = virtual_gid;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2], _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2]) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2], (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_base) : subgroup_id)))))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2]))), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2]) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2], (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2])))) >> 0u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[3])).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2], _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2]) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2], (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_base) : subgroup_id)))))) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2]))), ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2]) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2], (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[2])))) >> 0u)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size[3])).y)))) - 0u), (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.y) - 0u)) | 0u) + ((_GLF_IDENTITY(GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y, (GLF_merged3_0_2_55_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_17num_workgroupsubgroup_local_idsubgroup_basesubgroup_size.xy.y) - 0u) + 1) % GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.w);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true))))))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_IDENTITY(_GLF_FUZZED((-72.09)), max(_GLF_FUZZED((-72.09)), _GLF_FUZZED((-72.09)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), length(0.0), 0.0, exp(0.0), 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0)), 0.0, 1.0, 0.0)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.x = next_virtual_gid;
  }
 else
  {
  }
 atomicStore(buf[GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> 0)) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) << 0), 4))), (_GLF_IDENTITY((4), min((4), (4)))) | ((4))) >> 0)) ^ 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), ~ (~ (_GLF_IDENTITY(4, (4) >> 0))))) ^ 0), 0), (ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, (false ? _GLF_FUZZED(-60817) : (4) >> 0)))) ^ 0), 0)) + _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) | (_GLF_IDENTITY(ivec2(0, 0), ivec2(_GLF_IDENTITY(ivec4(ivec2(0, 0), 0, 1), (ivec4(ivec2(0, 0), 0, 1)) | (ivec4(ivec2(0, 0), 0, 1))))))))))))) | (4), min((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, ~ (~ (0))))) ^ 0)) | (4), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (_GLF_IDENTITY(0 | (4), min(0 | (4), 0 | (4)))) | (_GLF_IDENTITY(0 | (4), (_GLF_IDENTITY(0 | (4), (0 | (4)) * 1)) >> 0))))) >> 0)) ^ 0)) | (4)))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), max(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidsubgroup_basesubgroup_idsubgroup_size.x], _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))) | (uint(2))))), 4, 64, 4);
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
