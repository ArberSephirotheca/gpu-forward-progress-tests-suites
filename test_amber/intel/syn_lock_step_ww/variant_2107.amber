#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_31 {
 int _f0;
} ;

struct _GLF_struct_30 {
 bvec2 _f0;
 bvec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_32 {
 mat4x3 _f0;
 _GLF_struct_30 _f1;
 _GLF_struct_31 _f2;
 bool _f3;
} ;

struct _GLF_struct_28 {
 vec4 _f0;
} ;

struct _GLF_struct_27 {
 bvec4 _f0;
 vec2 _f1;
 mat4x2 _f2;
 int _f3;
 ivec4 _f4;
 uvec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_26 {
 mat4 _f0;
 ivec2 _f1;
 mat3 _f2;
 bool _f3;
 mat2x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
} ;

struct _GLF_struct_29 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 mat3 _f3;
 _GLF_struct_28 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_33 {
 bvec2 _f0;
 vec2 _f1;
 uint subgroup_base;
 _GLF_struct_29 _f2;
 _GLF_struct_32 _f3;
} ;

struct _GLF_struct_22 {
 uvec2 _f0;
 bvec3 _f1;
 mat3x4 _f2;
 int _f3;
 ivec4 _f4;
 int _f5;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 ivec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_23 {
 mat2x4 _f0;
 ivec2 _f1;
 _GLF_struct_21 _f2;
 vec2 _f3;
 uint _f4;
 _GLF_struct_22 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_19 {
 bvec4 _f0;
 uvec2 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
 mat3 _f1;
 mat2 _f2;
 mat4x3 _f3;
 uvec3 _f4;
 bool _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 mat3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_24 {
 _GLF_struct_20 _f0;
 mat3x2 _f1;
 _GLF_struct_23 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_17 {
 uint subgroup_id;
 mat3x2 _f0;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
 uint _f1;
 _GLF_struct_13 _f2;
 uvec4 _f3;
 _GLF_struct_14 _f4;
 bvec3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_11 {
 uint _f0;
 bvec2 _f1;
 uvec4 _f2;
 ivec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 bvec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 uint _f1;
 uvec4 _f2;
 bool _f3;
 ivec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 mat3 _f1;
 uvec3 _f2;
 mat4x2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 bool _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat2 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_15 _f5;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 vec2 _f1;
 bool _f2;
 mat4 _f3;
 ivec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat2x4 _f1;
 uint _f2;
 mat4 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
 float _f2;
 _GLF_struct_2 _f3;
 uint subgroup_local_id;
 _GLF_struct_3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_16 _GLF_struct_replacement_16;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(gl_SubgroupID, mat3x2(1.0));
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.y = _GLF_struct_replacement_17.subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(_GLF_struct_0(mat2x4(1.0), mat2x4(1.0), 1u, mat4(1.0))), uvec3(1u), 1.0, _GLF_struct_2(ivec4(1), vec2(1.0), true, mat4(1.0), ivec4(1), mat4x3(1.0)), gl_SubgroupInvocationID, _GLF_struct_3(ivec4(1), bvec4(true)));
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.w = _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.w;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.z = workgroup_id;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_20(_GLF_struct_18(mat3x4(1.0), mat3(1.0), mat2(1.0), mat4x3(1.0), uvec3(1u), true, mat4x3(1.0)), _GLF_struct_19(bvec4(true), uvec2(1u), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.w * _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.z), mat3(1.0), mat2(1.0)), mat3x2(1.0), _GLF_struct_23(mat2x4(1.0), ivec2(1), _GLF_struct_21(mat2x3(1.0), ivec2(1), mat3(1.0)), vec2(1.0), 1u, _GLF_struct_22(uvec2(1u), bvec3(true), mat3x4(1.0), 1, ivec4(1), 1), uvec3(1u)), vec2(1.0));
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(bvec2(true), vec2(1.0), GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.y * _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_struct_29(_GLF_struct_25(vec2(1.0)), _GLF_struct_26(mat4(1.0), ivec2(1), mat3(1.0), true, mat2x3(1.0), bvec4(true)), _GLF_struct_27(bvec4(true), vec2(1.0), mat4x2(1.0), 1, ivec4(1), uvec4(1u), vec2(1.0)), mat3(1.0), _GLF_struct_28(vec4(1.0)), mat4(1.0)), _GLF_struct_32(mat4x3(1.0), _GLF_struct_30(bvec2(true), bvec2(true), bvec2(true)), _GLF_struct_31(1), true));
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.x = _GLF_struct_replacement_33.subgroup_base;
 uint virtual_gid = _GLF_struct_replacement_24._f0._f1.workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.x + _GLF_struct_replacement_4.subgroup_local_id;
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.z = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid));
 uint next_virtual_gid = _GLF_struct_replacement_24._f0._f1.workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.x + ((_GLF_struct_replacement_4.subgroup_local_id + 1) % _GLF_struct_replacement_16.GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y);
 atomicStore(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14subgroup_basesubgroup_idvirtual_gidworkgroup_size.z], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
