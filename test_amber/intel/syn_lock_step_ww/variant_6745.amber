#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x))) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-88.22))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-88.22))))), (_GLF_IDENTITY(1, (1) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-88.22)))))) / 1) : _GLF_FUZZED(93614))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), 1))))), (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1)), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / _GLF_IDENTITY(1, (1) - 0))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) / _GLF_IDENTITY(1, (1) - 0))))))))))], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(483.782)), bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)))), true, true, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))) && true, bool(bvec3(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true, true, false))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)))), true, true, true)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(-47.83))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), bool(bvec3(! (! (false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && true)))), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec3(false, false, false))) || false))) || false)))) && true))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3((! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec3(false, false, false))) || false))) || false)))) && true))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)), ! (! (bool(bvec3((! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec3(false, false, false))) || false))) || false)))) && true))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))), _GLF_IDENTITY(false || _GLF_IDENTITY(((! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (((! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (false || _GLF_IDENTITY(((! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec3(false, false, false))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))) && true))) && true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (((! (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, true && (false)))))))))))))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))))) && true))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, false, true))))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bool(! (bool(bvec3(false, false, false))))))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bool(! (bool(bvec3(false, false, false))))))) && true))), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), bool(bool(! (bool(bvec3(false, false, false))))))) && true))))))))))), bool(bvec3(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)), false || (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))))), true && (false)), false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), bool(bool(! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))))))))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! _GLF_IDENTITY((! (bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.3)), bool(false))))), false, false))))))), false || ((! (bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.3)), bool(false))))), false, false)))))))))))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(796.724) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), injectionSwitch.y)) * (injectionSwitch)).y))) || _GLF_IDENTITY(false, (false) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) / 1u, uint(uvec3(_GLF_IDENTITY((gl_NumWorkGroups.x) / 1u, ((gl_NumWorkGroups.x) / 1u) / 1u), 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x) / 1u)))), min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)), min(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) / 1u, ((gl_NumWorkGroups.x) / 1u) >> 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))) / 1u))) << 0u))))), _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ (0u & 21678u)), (gl_NumWorkGroups.x) / 1u)), max((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) / 1u, clamp((gl_NumWorkGroups.x) / 1u, (gl_NumWorkGroups.x) / 1u, (gl_NumWorkGroups.x) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))))))), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)))))))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (0u | 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))))))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) ^ 0u)))) << 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ~ (~ (((gl_NumWorkGroups.x)) | _GLF_IDENTITY(((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)), _GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u ^ (((gl_NumWorkGroups.x)))), _GLF_IDENTITY(((gl_NumWorkGroups.x)), min(((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x))))))))), uint(uvec2(_GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ~ (~ (((gl_NumWorkGroups.x)) | _GLF_IDENTITY(((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)), _GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u ^ (((gl_NumWorkGroups.x)))), _GLF_IDENTITY(((gl_NumWorkGroups.x)), min(((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x))))))))), 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), max(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))))), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))))))), 0u, 1u), (uvec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), max(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))))), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))))))), 0u, 1u)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))))), _GLF_IDENTITY((uint(uvec3(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), 0u, 1u))) << 0u, uint(uvec4(_GLF_IDENTITY((uint(uvec3(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), 0u, 1u))) << 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (uint(uvec3(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), 0u, 1u))) << 0u)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ~ _GLF_IDENTITY((~ (((gl_NumWorkGroups.x)) | _GLF_IDENTITY(((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)), _GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u ^ (_GLF_IDENTITY(((gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x))) | (((gl_NumWorkGroups.x)))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(uvec4(52474u, 105488u, 82239u, 27536u)[3]) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))))), min(((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x)))))))), ((~ (((gl_NumWorkGroups.x)) | _GLF_IDENTITY(((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)), _GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u ^ (_GLF_IDENTITY(((gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x))) | (((gl_NumWorkGroups.x)))))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(uvec4(52474u, 105488u, 82239u, 27536u)[3]) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))))), min(((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x))))))))) | (0u | 0u))))), max(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), (((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))) | 0u), ~ (~ (((gl_NumWorkGroups.x)) | _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)), _GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u ^ (((gl_NumWorkGroups.x)))), _GLF_IDENTITY(((gl_NumWorkGroups.x)), min(((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x)))))), 1u * (_GLF_IDENTITY(((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)), _GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u ^ (((gl_NumWorkGroups.x)))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), min(((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x))))))))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)))))), _GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), ~ (~ (((gl_NumWorkGroups.x)) | _GLF_IDENTITY(((gl_NumWorkGroups.x)), clamp(((gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u | (((gl_NumWorkGroups.x)))), 0u ^ (((gl_NumWorkGroups.x)))), _GLF_IDENTITY(((gl_NumWorkGroups.x)), min(((gl_NumWorkGroups.x)), ((gl_NumWorkGroups.x))))))))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), max(~ (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), ~ (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)), 0u + (((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))))), max(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))))))), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))))))), 0u, 1u)), (uint(uvec3(~ (~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(gl_NumWorkGroups, 1u))))).x)) | ((gl_NumWorkGroups.x)))), 0u, 1u))) << 0u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0)), sqrt(1.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-2.3) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))) - log(1.0))), (injectionSwitch.y) + 0.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(1.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0)), sqrt(1.0), sin(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-2.3) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, determinant(mat2(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))) - log(1.0))), (injectionSwitch.y) + 0.0)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), _GLF_IDENTITY(uint(uvec2(workgroup_id, 1u)), (uint(uvec2(workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | (_GLF_IDENTITY(1u, (1u) / 1u)))))) | (uint(uvec2(workgroup_id, 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_base + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_local_id)))), max(_GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), (_GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id), (true ? (workgroup_base + subgroup_base + subgroup_local_id) : _GLF_FUZZED(subgroup_size)))) | ((workgroup_base + subgroup_base + subgroup_local_id))), (workgroup_base + subgroup_base + subgroup_local_id))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), min(~ (subgroup_base), ~ (subgroup_base))))) + subgroup_local_id)), workgroup_base + subgroup_base + subgroup_local_id)), (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))) + subgroup_local_id) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) * (1u & 1u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)), 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, false), false))), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, false), false))), false))))), true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)).y), (false ? _GLF_FUZZED(-6117.8463) : max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-96034)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-559.343)), bvec2(true, false))).y, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(-4580.1101)), vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], ((vec2(1.0, 1.0))[0]) * 1.0), (vec2(1.0, 1.0))[1]), bvec2(true, true)))).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec2(_GLF_FUZZED(subgroup_size), 0u))) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0))), injectionSwitch.y))))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(mat4x3(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0 * (injectionSwitch.y))), 1.0, exp(0.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) >> 0u))))), _GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))))), max(min(_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0))), injectionSwitch.y))))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(mat4x3(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0 * (injectionSwitch.y))), 1.0, exp(0.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) >> 0u))))), _GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))))), min(_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0))), injectionSwitch.y))))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), float(mat4x3(max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0 * (injectionSwitch.y))), 1.0, exp(0.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) >> 0u))))), _GLF_IDENTITY(subgroup_base, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))))))))) * 1u) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(0 & _GLF_IDENTITY(52171, (52171) | (52171)), 0 ^ (_GLF_IDENTITY(0 & _GLF_IDENTITY(52171, (52171) | (52171)), (false ? _GLF_FUZZED(56136) : 0 & _GLF_IDENTITY(52171, (52171) | (52171)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - (0 & 52171), int(ivec3(_GLF_IDENTITY((1) - (0 & _GLF_IDENTITY(52171, int(ivec4(52171, 0, (0 << _GLF_IDENTITY(int(7), int(7))), 0)))), clamp((1) - (0 & 52171), (1) - (0 & 52171), (1) - (0 & 52171))), 1, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, _GLF_IDENTITY(max(52171, 52171), min(_GLF_IDENTITY(max(52171, 52171), max(max(52171, 52171), max(52171, 52171))), max(52171, 52171)))), 52171))))), min((_GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171))), min((0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171))), _GLF_IDENTITY((0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171))), ((0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171)))) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171))))), ((_GLF_IDENTITY(1, (1) - (0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171)))))) | 0)))) | ((_GLF_IDENTITY(1, (1) - (0 & _GLF_IDENTITY(52171, min(_GLF_IDENTITY(52171, max(52171, 52171)), 52171))))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), _GLF_IDENTITY(min(int(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(1, 1, 1, 1))), (_GLF_IDENTITY(min(int(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(1, 1, 1, 1))), min(min(int(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(min(int(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(1, 1, 1, 1))), (false ? _GLF_FUZZED(-21907) : min(int(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(1, 1, 1, 1)))))))) | (min(int(ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(1, 1, 1, 1)))))))) - (0 & 52171))), _GLF_IDENTITY((false ? _GLF_FUZZED(findLSB(-61910)) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, _GLF_IDENTITY(1, (1) | 0), 1))))))) >> 0) - (0 & 52171))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (0 & 52171))), max((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(1, (1) * 1), 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((-1334 >> 48193)))) & 52171))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (_GLF_IDENTITY(0 & 52171, (0 & 52171) - (0 | 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (0 & 52171))), int(ivec2((_GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 & 52171), clamp((0 & 52171), (0 & 52171), (0 & 52171))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, 1, 1)))))) - (0 & 52171))), 0))), (_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (0 & 52171)))))))) | 0)), ~ (~ ((false ? _GLF_FUZZED(findLSB(-61910)) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, _GLF_IDENTITY(1, (1) | 0), 1))))))) >> 0) - (0 & 52171))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1)))), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (0 & 52171))), max((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(1, (1) * 1), 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((-1334 >> 48193)))) & 52171))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (_GLF_IDENTITY(0 & 52171, (0 & 52171) - (0 | 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (0 & 52171))), int(ivec2((_GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 & 52171), clamp((0 & 52171), (0 & 52171), (0 & 52171))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(_GLF_IDENTITY(1, (1) * 1), 1, 1, 1)))))) - (0 & 52171))), 0))), (_GLF_IDENTITY(1, (1) - (0 & 52171))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 1)), min(int(ivec4(1, 1, 1, 1)), int(ivec4(1, 1, 1, 1)))))) - (0 & 52171)))))))) | 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 & 52171), (_GLF_IDENTITY((0 & 52171), ((0 & 52171)) | ((0 & 52171)))) | ((0 & 52171)))), max(_GLF_IDENTITY(1, (1) - (0 & 52171)), _GLF_IDENTITY(1, (1) - (0 & 52171)))))), _GLF_IDENTITY((1) / int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((1) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0 ^ (_GLF_IDENTITY(((1) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(((1) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(ivec3(((1) / int(_GLF_ONE(1.0, injectionSwitch.y))), 1, 0)))) - 0))) ^ 0))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), (! ((_GLF_IDENTITY(true, true && (true))))) || false)))) && true), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))))), bool(bvec3(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true))))), true, true)))) || false)) || false)))), false)), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))) && (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))), false)))), (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))) : _GLF_FUZZED(6.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))), false, true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))) : _GLF_FUZZED(6.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.5))) : _GLF_FUZZED(6.0))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))), false, true))))))))))) || false)), false))) && _GLF_IDENTITY(true, false || (true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), float(_GLF_IDENTITY(vec4(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0), mat4(1.0) * (vec4(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), 1.0, 0.0, 0.0))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), 0u ^ (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))), ~ (~ ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), clamp(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) - 0u), ~ (next_virtual_gid), ~ (next_virtual_gid)))))), clamp(0u ^ (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), 0u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec3(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), 0u, 1u)), 0u, 0u, 1u), (true ? uvec4(uint(uvec3(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), 0u, 1u)), 0u, 0u, 1u) : _GLF_FUZZED(uvec4(186033u, 106145u, 49991u, 149398u)))))))), 0u ^ (_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), 1u * ((next_virtual_gid))))))))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), clamp((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), (next_virtual_gid) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << _GLF_IDENTITY(0u, ~ (~ (0u))))), max((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))))) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (~ (_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (_GLF_IDENTITY(~ ((next_virtual_gid) << 0u), clamp(~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u)))))))), (true ? (next_virtual_gid) << 0u : _GLF_FUZZED(subgroup_base))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (~ (_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (_GLF_IDENTITY(~ ((next_virtual_gid) << 0u), clamp(~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u)))))))), (true ? (next_virtual_gid) << 0u : _GLF_FUZZED(subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (~ (_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (_GLF_IDENTITY(~ ((next_virtual_gid) << 0u), clamp(~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u)))))))), (true ? (next_virtual_gid) << 0u : _GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (~ (_GLF_IDENTITY((next_virtual_gid) << 0u, ~ (_GLF_IDENTITY(~ ((next_virtual_gid) << 0u), clamp(~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u), ~ ((next_virtual_gid) << 0u)))))))), (true ? (next_virtual_gid) << 0u : _GLF_FUZZED(subgroup_base))))), 1u, 0u))))), (_GLF_IDENTITY((next_virtual_gid) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) * 1u), next_virtual_gid))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) * 1u), next_virtual_gid))), ((_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | 0u)) * 1u), next_virtual_gid)))) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), min((next_virtual_gid), (next_virtual_gid))) << 0u) | (_GLF_IDENTITY((next_virtual_gid) << 0u, (true ? (next_virtual_gid) << 0u : _GLF_FUZZED(subgroup_base)))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u)))))))))], uint(2), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
