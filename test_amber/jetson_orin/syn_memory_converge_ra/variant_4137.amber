#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 uint workgroup_base;
 uint _f0;
} ;

struct _GLF_struct_5 {
 uint workgroup_id;
 mat2 _f0;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 uvec4 _f1;
 uint _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 uint _f1;
 mat3 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 int _f0;
 vec4 _f1;
 mat3x2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 uvec4 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 mat3x2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(false, true)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)) || false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.9)))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], clamp(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], max(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], mix(float(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[_GLF_IDENTITY(1, 0 | (1))]))))) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], clamp(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], max(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 + (_GLF_IDENTITY(1, 0 | (1))))], mix(float(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1))))]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[_GLF_IDENTITY(1, 0 | (1))]))))) * vec2(1.0, 1.0)))).y), _GLF_IDENTITY(false, (false) || false))), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0])), _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-630.388), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y), false))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)))), _GLF_IDENTITY((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) && true, ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true), true && (! ((bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))) && true)), true && ((injectionSwitch.x > injectionSwitch.y))))) && true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, false))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, true, false)), false)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))), true)))))))))), (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true)))), true))))))))))) && true, bool(bvec4((false) && true, true, false, true)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))) || false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))))))) || false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false), true)))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(16.17)))) / exp(0.0))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || false)))))) && (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) || false)))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) || false)))))), (injectionSwitch.x > injectionSwitch.y)))), true, true, true))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((false ? -1.3 : -96.75)) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_FUZZED(injectionSwitch)))))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_FUZZED(injectionSwitch)))))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_FUZZED(injectionSwitch)))))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(0.7)), bool(false))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0))).x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, false)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, exp(vec2(609.961, -606.887)))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, exp(vec2(609.961, -606.887)))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, exp(vec2(609.961, -606.887)))))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, exp(vec2(609.961, -606.887)))))).y)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, exp(vec2(609.961, -606.887)))))).y))), float(_GLF_FUZZED(800.003)), bool(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.0)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), true && (! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true, false))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x > injectionSwitch.y)))))))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(470.397)), float(0.0), bool(true)))), vec2(0.0, 0.0)))).x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ((_GLF_IDENTITY(false, ! (! (false)))) || false) && true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0)))) + abs(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec4(bool(bvec2(! (false), false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, (true) || false), false))))), false || (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), false, true))))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, false))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(_GLF_struct_0(1, vec4(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(130604u), max(_GLF_IDENTITY(float(130604u), (false ? _GLF_FUZZED(uintBitsToFloat(write_val)) : _GLF_IDENTITY(float(130604u), clamp(float(130604u), _GLF_IDENTITY(float(130604u), clamp(float(130604u), float(130604u), _GLF_IDENTITY(_GLF_IDENTITY(float(130604u), (float(130604u)) + sqrt(0.0)), clamp(float(130604u), float(130604u), _GLF_IDENTITY(float(130604u), (float(130604u)) / 1.0))))), float(130604u))))), _GLF_IDENTITY(float(130604u), clamp(float(130604u), _GLF_IDENTITY(float(130604u), _GLF_IDENTITY(float(float(float(130604u))), 0.0 + (_GLF_IDENTITY(float(float(float(_GLF_IDENTITY(130604u, clamp(130604u, 130604u, 130604u))))), (float(float(float(130604u)))) + 0.0)))), _GLF_IDENTITY(float(130604u), max(_GLF_IDENTITY(float(130604u), float(mat2x4(_GLF_IDENTITY(float(130604u), min(_GLF_IDENTITY(float(130604u), _GLF_IDENTITY(float(mat3(float(130604u), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat3(float(130604u), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3(float(130604u), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0)), float(mat3(float(130604u), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(669.868))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), float(130604u))), 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0))), float(130604u))))))))), (false ? _GLF_FUZZED(-5.5) : float(_GLF_FUZZED(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(130604u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(min(32342, -89485)), (uint(min(32342, -89485))) >> 0u)) : 130604u)), 0u ^ (_GLF_IDENTITY(130604u, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(min(32342, -89485)), (uint(min(32342, -89485))) >> 0u)) : 130604u))))), max(_GLF_IDENTITY(float(130604u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(write_val)), mix(float(_GLF_FUZZED(uintBitsToFloat(write_val))), float(_GLF_FUZZED(-9.0)), bool(false))) : _GLF_IDENTITY(float(130604u), clamp(float(130604u), _GLF_IDENTITY(float(130604u), max(_GLF_IDENTITY(float(130604u), (true ? float(130604u) : _GLF_FUZZED(383.481))), float(130604u))), float(_GLF_IDENTITY(130604u, ~ (~ (130604u)))))))), _GLF_IDENTITY(float(130604u), clamp(float(130604u), _GLF_IDENTITY(_GLF_IDENTITY(float(130604u), float(_GLF_IDENTITY(float(float(130604u)), mix(float(float(float(130604u))), float(_GLF_FUZZED((-2.7 / -56.24))), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(130604u), float(float(float(130604u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(130604u), float(float(float(130604u)))), clamp(_GLF_IDENTITY(float(130604u), float(float(float(130604u)))), _GLF_IDENTITY(float(130604u), float(float(float(130604u)))), _GLF_IDENTITY(float(130604u), _GLF_IDENTITY(float(float(float(130604u))), mix(float(float(float(float(130604u)))), float(_GLF_FUZZED(16.91)), bool(false)))))), _GLF_IDENTITY(float(130604u), float(float(float(130604u)))), _GLF_IDENTITY(float(130604u), float(float(float(130604u)))))), _GLF_IDENTITY(float(130604u), float(float(_GLF_IDENTITY(float(130604u), max(_GLF_IDENTITY(float(130604u), clamp(float(130604u), float(130604u), _GLF_IDENTITY(_GLF_IDENTITY(float(130604u), 1.0 * (float(130604u))), (true ? _GLF_IDENTITY(float(130604u), 1.0 * (float(130604u))) : _GLF_FUZZED(-4207.0070))))), float(130604u)))))))), float(130604u))))))))), float(1.0), bool(true)))), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(871.437)), min((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(871.437), float(mat3(true ? 1.0 : _GLF_FUZZED(871.437), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-9632.5377)), bool(false))))))), (true ? 1.0 : _GLF_FUZZED(871.437)))))) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true))) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-9242.1972, max(-9242.1972, -9242.1972))))))), mat4x3(1.0))), uvec4(1u), _GLF_struct_4(mat3x4(1.0), _GLF_struct_2(mat4(1.0), 1u, mat3(1.0), 1u, mat4x3(1.0)), _GLF_struct_3(mat4x3(1.0), uvec4(1u), 1u, _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true))))))), false))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true))))))), false))))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true))))))), false))))), true)), false))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), true))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true))))))))), true))), true))), false))))))))), _GLF_struct_5(gl_WorkGroupID.x, mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.8, (_GLF_IDENTITY(9.8, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(9.8, (9.8) / 1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0), mat3x2(mat3(mat3x2(_GLF_IDENTITY(9.8, (9.8) / _GLF_IDENTITY(1.0, 1.0 * (1.0))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))))) / 1.0))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), _GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec4(float(1.0), 1.0, sin(0.0), 0.0)), min(float(vec4(float(1.0), 1.0, sin(0.0), 0.0)), float(vec4(float(1.0), 1.0, sin(0.0), 0.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-1.4, (_GLF_IDENTITY(-1.4, mix(float(_GLF_FUZZED(8481.3440)), float(-1.4), bool(true)))) + 0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-215.627)), float(mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))), bool(true)))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-33.39, 1931.9975, -5.3, 94.87, -5.9, -700.279, 16.57, -5.2))))))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((-44.60), (true ? _GLF_IDENTITY((-44.60), (_GLF_IDENTITY((-44.60), max((-44.60), _GLF_IDENTITY((-44.60), float(mat4((-44.60), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0)))))) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(0.9), mix(float(_GLF_FUZZED(0.9)), float(_GLF_FUZZED(6374.5062)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY((-44.60), (true ? _GLF_IDENTITY((-44.60), (_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))) - 0.0) : _GLF_FUZZED(0.9))), min(_GLF_IDENTITY((-44.60), (true ? _GLF_IDENTITY((-44.60), _GLF_IDENTITY((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))), 0.0, 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat3x2((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))), 0.0, 0.0, 1.0, sin(0.0), 1.0))))), (float(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))), 0.0, 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat3x2((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))), 0.0, 0.0, 1.0, sin(0.0), 1.0)))))) / 1.0)) - 0.0) : _GLF_FUZZED(0.9))), _GLF_IDENTITY((-44.60), (true ? _GLF_IDENTITY((-44.60), _GLF_IDENTITY((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))) - 0.0, min(_GLF_IDENTITY((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))) - 0.0, mix(float(_GLF_FUZZED(0.2)), float((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))) - 0.0), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))) - 0.0, ((_GLF_IDENTITY((-44.60), max((-44.60), (-44.60)))) - 0.0) / 1.0)))) : _GLF_FUZZED(0.9)))))) - 0.0))), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)), (_GLF_IDENTITY(false ? _GLF_FUZZED(8.1) : mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)), max(false ? _GLF_FUZZED(8.1) : mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)), false ? _GLF_FUZZED(8.1) : mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), _GLF_IDENTITY(true, (true) && true))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), cos(0.0) * ((1.0))) - 0.0), 1.0))), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.8)), float(1.0), bool(true)))) - 0.0))))), mat3x2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(7.0)), bool(false))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), (vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)) * mat4(1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) - abs(0.0))), 0.0))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), _GLF_IDENTITY(((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))), false || (((! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(sqrt(-58.02)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(false), true)))))) || false)))))), ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_DEAD(false)))) || false))), true && (! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_DEAD(false)))) || false))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(false), true)))))) || false)))))), ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_DEAD(false)))) || false))), true && (! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_DEAD(false)))) || false))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false), (false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(false), true)))))) || false)))))), ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_DEAD(false)))) || false))), true && (! (! (_GLF_IDENTITY(false || ((_GLF_DEAD(false))), (false || ((_GLF_DEAD(false)))) || false))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(_GLF_IDENTITY(5261.7108, (false ? _GLF_FUZZED(1812.1344) : 5261.7108)), 898.924))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5261.7108, 898.924)), (true ? _GLF_FUZZED(vec2(5261.7108, 898.924)) : _GLF_FUZZED(_GLF_IDENTITY(unpackHalf2x16(workgroup_size), mix(vec2((unpackHalf2x16(workgroup_size))[0], _GLF_FUZZED(-3.9)), vec2(_GLF_FUZZED(vec3(72.62, -3.5, 7.2).x), (unpackHalf2x16(workgroup_size))[1]), bvec2(false, true))))))), vec2(vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))))))), min((_GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5261.7108, 898.924)), (true ? _GLF_FUZZED(vec2(5261.7108, 898.924)) : _GLF_FUZZED(unpackHalf2x16(workgroup_size))))), vec2(vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5261.7108, 898.924), clamp(vec2(5261.7108, 898.924), vec2(5261.7108, 898.924), _GLF_IDENTITY(vec2(5261.7108, 898.924), max(vec2(5261.7108, 898.924), vec2(5261.7108, 898.924))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5261.7108, 898.924)), (true ? _GLF_FUZZED(vec2(5261.7108, 898.924)) : _GLF_FUZZED(unpackHalf2x16(workgroup_size)))), vec2(_GLF_IDENTITY(mat3x2(true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5261.7108, 898.924)), (true ? _GLF_FUZZED(vec2(5261.7108, 898.924)) : _GLF_FUZZED(unpackHalf2x16(workgroup_size)))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), (mat3x2(true ? mat2(1.0) * (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(5261.7108, 898.924)), (true ? _GLF_FUZZED(vec2(5261.7108, 898.924)) : _GLF_FUZZED(unpackHalf2x16(workgroup_size)))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)) * mat3(1.0))))), vec2(vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))))))))), _GLF_IDENTITY(vec2(vec2((_GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))), vec2(vec2((true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))))))))), (vec2(vec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), vec2(mat4(_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), (_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), vec2(mat3x2(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), 1.0, 0.0, 1.0, 0.0)))) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, sin(0.0), tan(0.0), 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), mix(vec2(((_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), vec2(mat4(_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), (_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), vec2(mat3x2(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), 1.0, 0.0, 1.0, 0.0)))) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, sin(0.0), tan(0.0), 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))[0], ((_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), vec2(mat4(_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), (_GLF_IDENTITY(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), vec2(mat3x2(true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, log(1.0)), mat2(mat2x4(mat2(1.0, 1.0, 0.0, log(1.0)))))))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), 1.0, 0.0, 1.0, 0.0)))) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, sin(0.0), tan(0.0), 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))[1]), vec2(_GLF_FUZZED(2103.5217), _GLF_FUZZED(-3382.2517)), bvec2(false, false))), vec2(vec2((_GLF_IDENTITY(true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))) - vec2(0.0, 0.0)))))))))) * mat2(1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)), vec2(0.0, 0.0)))))))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((true ? mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))), vec2(mat4x2((true ? mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.3)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), 1.0, 1.0))) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))), 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-152.255)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, determinant(mat2(abs(1.0), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), min(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))))), (_GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))), vec2(_GLF_IDENTITY(vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)))), _GLF_IDENTITY(vec2(vec2(vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924)))))), (vec2(vec2(vec2((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5261.7108, 898.924))))))) - vec2(0.0, 0.0)))))) - vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5208.2355)), float(0.0), bool(true))))))))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))))) * exp(vec2(0.0, 0.0))).y))))
    barrier();
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(workgroup_size * _GLF_struct_replacement_6._f3.workgroup_id, _GLF_IDENTITY(1u, (1u) - 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(3.4, -7.1).g)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(70.00)), float(0.0), bool(true))))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)))) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, max(_GLF_struct_replacement_7.workgroup_base, _GLF_struct_replacement_7.workgroup_base))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, max(_GLF_struct_replacement_7.workgroup_base, _GLF_struct_replacement_7.workgroup_base))), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, max(_GLF_struct_replacement_7.workgroup_base, _GLF_struct_replacement_7.workgroup_base)))))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))))) << 0u)))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))))) << 0u)))))) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_7.workgroup_base)), 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))))) << 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))))) << 0u)))))) ^ 0u))) + 0u)))) | (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))))) << 0u))), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))))) << 0u)))) - 0u)))) ^ 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u), (true ? uvec2(_GLF_struct_replacement_7.workgroup_base, 0u) : _GLF_FUZZED(min(uvec2(73320u, 14706u), num_workgroup)))), clamp(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u), uvec2(_GLF_struct_replacement_7.workgroup_base, 0u), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)) * uvec2(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (1u) / 1u)))))))), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), ((_GLF_IDENTITY(0u, uint(uint(0u))))) + 0u) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_IDENTITY(uvec3(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec3(0u, 0u, 0u)))))))), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u)))))) ^ 0u)), min(~ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u))))))), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u)))), max(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, (_GLF_struct_replacement_7.workgroup_base) / 1u), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u)))), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << _GLF_IDENTITY(0u, (0u ^ 1u) * (0u)))))))))) ^ 0u)), ~ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) << 0u))), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))), clamp(min(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))), min(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))), min(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)))))), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), min((0u), (0u)))))), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u))))))))), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u), clamp(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u), uvec2(0u, 0u) + (uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))), uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)))), (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u)))))), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), max(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u)), _GLF_IDENTITY((uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u, min((uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u, _GLF_IDENTITY((uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u, min((uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u, (uint(uvec2(_GLF_struct_replacement_7.workgroup_base, 0u))) << 0u)))))))))))) ^ 0u))))))), _GLF_struct_replacement_7.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, (_GLF_struct_replacement_7.workgroup_base) | (_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, (_GLF_struct_replacement_7.workgroup_base) | 0u))), (_GLF_struct_replacement_7.workgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, uint(uint(_GLF_struct_replacement_7.workgroup_base))), 0u | (_GLF_struct_replacement_7.workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, uint(uint(_GLF_struct_replacement_7.workgroup_base))), 0u | (_GLF_struct_replacement_7.workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, uint(uint(_GLF_struct_replacement_7.workgroup_base))), 0u | (_GLF_struct_replacement_7.workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, uint(uint(_GLF_struct_replacement_7.workgroup_base))), 0u | (_GLF_struct_replacement_7.workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, uint(uint(_GLF_struct_replacement_7.workgroup_base))), 0u | (_GLF_struct_replacement_7.workgroup_base))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, uint(uint(_GLF_struct_replacement_7.workgroup_base))), 0u | (_GLF_struct_replacement_7.workgroup_base)))))))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), uint(uvec3(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), clamp((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (true ? (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(36987u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u, 0u))) ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (1u & 1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(5767.3635), _GLF_FUZZED(3432.4705)), vec2((true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))[0], (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))).y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))) || false)))) && true))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1133.2224)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(_GLF_IDENTITY(write_val, uint(uvec3(write_val, 0u, 0u))), ~ (~ (_GLF_IDENTITY(write_val, uint(uvec3(write_val, 0u, 0u))))))) / 1u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (write_val)), _GLF_IDENTITY(write_val, _GLF_IDENTITY(clamp(write_val, _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, ~ (~ (_GLF_IDENTITY(write_val, min(write_val, _GLF_IDENTITY(write_val, (write_val) << 0u)))))), write_val)), write_val), (clamp(write_val, _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)), write_val)) << (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))))))), 4, _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (64) / 1), 0))), 2);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_IDENTITY(((false) && true), false || _GLF_IDENTITY((((false) && true)), ! (! (_GLF_IDENTITY((((false) && true)), bool(bool((((false) && true)))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true)), true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_IDENTITY(((false) && true), false || _GLF_IDENTITY((((false) && true)), ! (! (_GLF_IDENTITY((((false) && true)), bool(bool((((false) && true)))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_IDENTITY(((false) && true), false || _GLF_IDENTITY((((false) && true)), ! (! (_GLF_IDENTITY((((false) && true)), bool(bool((((false) && true)))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true)), true)))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), _GLF_IDENTITY(bool(bvec4(false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), false, false, true)), bool(bvec3(bool(bvec4(false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), false, false, true)), false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))), ((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))) || false)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(269.853)), vec2(_GLF_FUZZED(-8211.0508), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))))))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), true && (bool(bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), true && (bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))) || false), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))) || ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), (bool(true)) || false)), (! (_GLF_IDENTITY(bool(true), (bool(true)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), true, true)))))) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)))), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))))), false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(2.9, -51.17, 4.9, -296.514).s)), vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) + sin(vec2(0.0, 0.0))).y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true)), false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true))), _GLF_IDENTITY(((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true)))) || false, ! (! (((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true)))) || false)))))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), (_GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), true && ((! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), clamp(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), float(_GLF_FUZZED(79.93)), bool(false))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))))) && true)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true, true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true, true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true, true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false), false))))), false, false)))))) || ((_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)))), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (false)))))), true, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), true, true))))), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), true && (bool(false))), true, true))))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, (false) || false)))), true, true)), _GLF_IDENTITY(false, (false) && true) || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), true && (! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, true)), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), true)), true)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(24.30), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(79227))), bvec2(true, false))).y, (injectionSwitch.y) + 0.0)))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))), true, true))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), false, true)))))), false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false)))))) || (_GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-63.98), _GLF_FUZZED(-35.69)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).y)))), false, false)))))) || ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-63.98), _GLF_FUZZED(-35.69)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).y)))), false, false)))))) || ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))) && true), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, ! (! (true))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))))))))))), false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))))))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), false))), true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-63.98), _GLF_FUZZED(-35.69)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).y)))), false, false)))))) || ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), (injectionSwitch.x > injectionSwitch.y))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))) || false)) || false)), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))) || false)) || false))) || false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)), true && (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true))))))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))) || ((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), false || (bool(true))), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)), true)), (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)), true))) && true)))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), (injectionSwitch.x > injectionSwitch.y))))) || false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))) || false)) || false)), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))))), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))) || false)) || false))) || false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)), true && (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true))))))))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))), (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))) || ((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), false || (bool(true))), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)), true)), (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true)), (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) && true))) && true)), true))) && true)))), true)))), true, false))))))), true, false)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(44.38)), _GLF_IDENTITY(bool(false), (bool(false)) && true))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(clamp(-184.738, 50.09, -3.3)) : injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))), (_GLF_IDENTITY((false), ! (! ((false))))) || false) && true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), (((false) && true)) || false), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((false) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true)), _GLF_IDENTITY(true, false || (true)), true, false)), ! (! (bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true)), _GLF_IDENTITY(true, false || (true)), true, false))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((false) && true), bool(bool(((false) && true))))), true), false)))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), tan(0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-5.1, -1.3)) : vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), tan(0.0), 1.0, 1.0))))).y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), (bool(bvec3((false), false, false))) || false)), false, false)), (bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), (bool(bvec3((false), false, false))) || false)), false, false))) || false)))) || _GLF_IDENTITY(false, false || (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(0.0, 0.0) + (vec2(1.0, 1.0) * (injectionSwitch)))).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), (vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0))), 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
