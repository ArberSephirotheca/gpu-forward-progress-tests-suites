#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 ivec2 _f0;
 uvec2 _f1;
 bvec3 _f2;
 bvec3 _f3;
 ivec4 _f4;
 vec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_22 {
 vec2 _f0;
 uvec3 _f1;
 bvec4 _f2;
 uint _f3;
 mat3x4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 mat4x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_20 {
 uint _f0;
 uvec2 _f1;
 bvec3 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_19 {
 float _f0;
 uvec4 _f1;
 bvec2 _f2;
 vec4 _f3;
 mat2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
 vec2 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 int _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_24 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_25 {
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size;
 _GLF_struct_24 _f0;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 bvec3 _f1;
 ivec2 _f2;
 bvec2 _f3;
 mat3 _f4;
 bvec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 mat3x4 _f1;
 _GLF_struct_10 _f2;
 float _f3;
} ;

struct _GLF_struct_17 {
 uint virtual_gid;
 _GLF_struct_11 _f0;
 _GLF_struct_14 _f1;
 bvec2 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 ivec4 _f1;
 uint read_val;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 int _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 bvec3 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_1 {
 int _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_6 _f2;
 int _f3;
 vec2 _f4;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_25 _GLF_struct_replacement_25;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (1 & (1 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (96595 & 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-93.38, -1.1)))).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-93.38, -1.1)))).x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-93.38, -1.1)))).x) + determinant(mat2(0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      continue;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || ((! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), max((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), vec2(0.0, 0.0) + ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.7)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && _GLF_IDENTITY((_injected_loop_counter < 1), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || ((_injected_loop_counter < 1))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(71850), (_GLF_IDENTITY(_GLF_FUZZED(71850), (_GLF_FUZZED(71850)) | (_GLF_FUZZED(71850)))) * 1) : 1))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(71850) : 1))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0), min(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          continue;
        }
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(vec4(1.0), _GLF_struct_2(_GLF_struct_1(1, ivec4(1))), _GLF_struct_6(bvec4(_GLF_IDENTITY(true, (true) && true)), _GLF_struct_3(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-7762.2820, -6.6, 9750.3317, -5.9)))), mat2(mat2x4(_GLF_IDENTITY((mat2(1.0)) * mat2(1.0), transpose(transpose((_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), mat2(_GLF_IDENTITY(mat4x2(mat2(1.0)), (false ? _GLF_FUZZED(mat4x2(-3.3, 5.7, 9696.2534, 6.5, 656.224, -50.03, -54.90, 4.7)) : mat4x2(mat2(1.0))))))) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4(0.0, abs(0.0), 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, float(mat4(0.0, abs(0.0), 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-93.82)), bool(false))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, 0.0))))))))), 1.0))))))))))), _GLF_struct_4(1u, mat2(1.0), vec4(1.0)), bvec3(true), _GLF_struct_5(mat4(1.0), 1, gl_SubgroupSize)), 1, vec2(1.0));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      break;
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, int(ivec3(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, (true ? (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0 : _GLF_FUZZED(findMSB(subgroup_id)))), 1, 0)))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), 0))), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, int(ivec3(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, (true ? (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0 : _GLF_FUZZED(findMSB(subgroup_id)))), 1, 0)))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, int(ivec3(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, (true ? (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0 : _GLF_FUZZED(findMSB(subgroup_id)))), 1, 0)))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, int(ivec3(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0, (true ? (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0 : _GLF_FUZZED(findMSB(subgroup_id)))), 1, 0)))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), 0)))))))) / 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter))) | (_injected_loop_counter)))) != (0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(_GLF_IDENTITY((++ _injected_loop_counter), (_GLF_IDENTITY((++ _injected_loop_counter), ((++ _injected_loop_counter)) * ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) ^ 0)))), _GLF_IDENTITY(int(0), int(0))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED((++ _injected_loop_counter)))), _GLF_IDENTITY(int(0), int(0)))))) - 0) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(_GLF_IDENTITY(bool(! (_GLF_WRAPPED_IF_TRUE(true))), bool(bvec2(bool(! (_GLF_WRAPPED_IF_TRUE(true))), true))))))))
        {
         return;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.w = num_workgroup;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), true, true)))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       break;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(3) : _GLF_FUZZED(-90014))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(3) : _GLF_FUZZED(-90014))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(3) : _GLF_FUZZED(-90014))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(3) : _GLF_FUZZED(-90014))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED((-95737 % 45194)))), _injected_loop_counter)) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     do
      {
       _GLF_struct_replacement_25.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.z = workgroup_size;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.z = _GLF_struct_replacement_25.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.z, 1u * (GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.z = _GLF_struct_replacement_25.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.z));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / ((uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) | (gl_WorkGroupID))) + uvec3(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((6.4))), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-563.619))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)))), 0.0, sqrt(0.0), 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(60.00))) + 0.0), injectionSwitch.y, injectionSwitch.y))))))), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupID))) + uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(82203u, 124284u, 148634u), (_GLF_IDENTITY(uvec3(82203u, 124284u, 148634u), (uvec3(82203u, 124284u, 148634u)) >> uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))) : (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupID) + uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))), 1u)), _GLF_IDENTITY((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(129325u, 117059u, 44567u)) : _GLF_IDENTITY((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))), ((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))) | (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))), (false ? _GLF_FUZZED(write_val) : 0u)))) | _GLF_IDENTITY(((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(write_val) : 0u), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(write_val) : 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u), (uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u), (uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u), (uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))) : _GLF_FUZZED(workgroup_size)))))), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), _GLF_IDENTITY(uvec3(4u), (uvec3(4u)) >> uvec3(0u, 0u, 0u)))) | (((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(write_val) : 0u), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(write_val) : 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u), (uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u), (uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u), (uvec4((false ? _GLF_FUZZED(write_val) : 0u), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))) : _GLF_FUZZED(workgroup_size))))))))), _GLF_IDENTITY(uvec3(uvec3(false ? _GLF_FUZZED(uvec3(129325u, 117059u, 44567u)) : _GLF_IDENTITY((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))), ((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u)))) | ((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))))))), (true ? uvec3(uvec3(false ? _GLF_FUZZED(uvec3(129325u, 117059u, 44567u)) : _GLF_IDENTITY((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(write_val), min(_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) ^ 0u)) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_FUZZED(write_val))) : 0u))), ((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u)))) | ((uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))), 1u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(write_val) : 0u))))))) : _GLF_FUZZED(uvec3(175850u, 173164u, 191697u)))))))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 1u))), 0u ^ (0u))))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u), 0u, 0u))))))) - uvec3(0u, 0u, 0u)).x;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 | 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), int(ivec4((0 | _GLF_IDENTITY(0, (0) | (0))), 1, 1, 1)))); _injected_loop_counter --)
    {
     _GLF_struct_replacement_25.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (workgroup_id) * 1u);
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.y = _GLF_struct_replacement_25.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.y;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), max(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, ~ (~ (2))))) / 1), _GLF_IDENTITY(int(2), max(int(2), int(2)))))) - 0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), clamp(0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 | (2)))), 0 >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))), int(ivec3(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))), int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))))), int(2)), _GLF_IDENTITY((true ? 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(_injected_loop_counter)), (_GLF_IDENTITY((true ? 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(_injected_loop_counter)), ((true ? 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(_injected_loop_counter))) << (0 << _GLF_IDENTITY(int(6), int(6))))) ^ 0)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))), int(ivec3(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))), int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2)))))))))), int(2)), _GLF_IDENTITY((true ? 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(_injected_loop_counter)), (_GLF_IDENTITY((true ? 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(_injected_loop_counter)), ((true ? 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(_injected_loop_counter))) << (0 << _GLF_IDENTITY(int(6), int(6))))) ^ 0))) | 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)) || false)); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) * (injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) - tan(0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, tan(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 0.0))) * (injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0)), injectionSwitch.y))))) * (injectionSwitch.x), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(-4.7)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(true))))) * (injectionSwitch.x), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(393.497)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(true)))) - 0.0)) * (injectionSwitch.x))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) * (injectionSwitch.x), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) * (injectionSwitch.x))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) * (injectionSwitch.x), min(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))) * (injectionSwitch.x), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) * (injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))));
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(ivec2(1), ivec2(1, 1) * (ivec2(1))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(num_workgroup)))) | (0u))))) | uvec3(0u, 0u, 0u)).z, (GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.z) | (_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.z, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.z : _GLF_FUZZED(num_workgroup))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, ~ (~ (GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz))).y, 0u ^ (GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.y)));
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_7._f2._f4.subgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))))[0], _GLF_FUZZED(3611.0353)), vec2(_GLF_FUZZED((-2306.7628 + -8747.0834)), (vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))))[1]), bvec2(false, true))), vec2(_GLF_FUZZED(41.00), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(572.824), _GLF_FUZZED(8040.0780)), bvec2(false, false))), 1.0, 0.0))))[1]))), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1))) | (0 ^ 0))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), _GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1))))), ~ (~ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1))))))) | 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) << 0), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     _GLF_struct_replacement_25.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.x = subgroup_base;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))) && true)))
      continue;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(-94444) : _injected_loop_counter --)))
  {
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base, (_GLF_struct_replacement_0.workgroup_base) / 1u) + _GLF_struct_replacement_25.GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_baseworkgroup_idworkgroup_size.x + subgroup_local_id, _GLF_struct_11(_GLF_struct_9(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), _GLF_IDENTITY(mat2(mat3(mat2(1.0))), (false ? _GLF_FUZZED(mat2(9.0, 5.4, 3993.7598, -131.141)) : mat2(mat3(mat2(1.0)))))), mat2(1.0)), mat3x4(1.0), _GLF_struct_10(bvec4(true), bvec3(true), ivec2(_GLF_IDENTITY(1, (1) >> 0)), bvec2(true), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(((mat3(6.2, -0.6, -29.72, -1.7, 36.19, 5.6, 648.989, 82.52, -8.8) / -0.5))) : mat3(1.0))), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))), vec4(1.0)), 1.0), _GLF_struct_14(_GLF_struct_12(mat4(1.0)), _GLF_struct_13(mat4x3(1.0), _GLF_IDENTITY(vec3(1.0), mix(_GLF_IDENTITY(vec3((vec3(1.0))[0], _GLF_FUZZED(496.221), _GLF_FUZZED(-29.41)), mix(vec3((vec3((vec3(1.0))[0], _GLF_FUZZED(496.221), _GLF_FUZZED(-29.41)))[0], (vec3((vec3(1.0))[0], _GLF_FUZZED(496.221), _GLF_FUZZED(-29.41)))[1], (vec3((vec3(1.0))[0], _GLF_FUZZED(496.221), _GLF_FUZZED(-29.41)))[2]), vec3(_GLF_FUZZED((515.465)), _GLF_FUZZED(float(89525)), _GLF_FUZZED(-2.6)), bvec3(false, false, false))), vec3(_GLF_FUZZED(-7089.2654), (vec3(1.0))[1], _GLF_IDENTITY((vec3(1.0))[2], float(vec3((vec3(1.0))[2], 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.1)), float(1.0), bool(true))))))), bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(! (true), false || (! (true)))))))) || false)), true)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false)), true))))), bool(bvec3(true, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), false || (_GLF_IDENTITY(! (true), false || (! (true)))))))) || false)), true)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) || false)), true))))), bool(bvec3(true, true, true))))), true))))), bvec2(true), _GLF_struct_16(bvec3(true), _GLF_struct_15(bvec4(true), mat3x2(1.0), ivec2(1), mat4x2(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true, true)))))))))
  {
   for(int _injected_loop_counter = (0 ^ (1 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) << 0) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-976.752), _GLF_FUZZED(-8.7)), bvec2(false, false)), vec2(_GLF_IDENTITY(vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-976.752), _GLF_FUZZED(-8.7)), bvec2(false, false))), clamp(vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-976.752), _GLF_FUZZED(-8.7)), bvec2(false, false))), _GLF_IDENTITY(vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-976.752), _GLF_FUZZED(-8.7)), bvec2(false, false))), mat2(1.0) * (vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-976.752), _GLF_FUZZED(-8.7)), bvec2(false, false))))), vec2(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-976.752), _GLF_FUZZED(-8.7)), bvec2(false, false)))))))).x > injectionSwitch.y)))))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = (0 & 98409); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, exp(0.0), 0.0, length(log(vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0))).y)), true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   _GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x = _GLF_struct_replacement_17.virtual_gid, 0u | _GLF_IDENTITY((GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x = _GLF_struct_replacement_17.virtual_gid), (_GLF_IDENTITY(true ? _GLF_IDENTITY((GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x = _GLF_struct_replacement_17.virtual_gid), 0u ^ ((GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x = _GLF_struct_replacement_17.virtual_gid))) : _GLF_FUZZED(subgroup_base), (true ? _GLF_IDENTITY((GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x = _GLF_struct_replacement_17.virtual_gid), 0u ^ ((GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x = _GLF_struct_replacement_17.virtual_gid))) : _GLF_FUZZED(subgroup_base)) ^ 0u))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), tan(0.0), 1.0, 0.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), tan(0.0), 1.0, 0.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true))))))))) && true), true))), false)))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x))), clamp(_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size) : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))))).x), min(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size) : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))))).x), uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size) : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))))).x))), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x))), _GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x))), _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(182140u, (182140u) << 0u), ~ (_GLF_IDENTITY(~ (182140u), max(~ (182140u), ~ (182140u))))), 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec3(bool(bool(! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(27.67) : injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))).y))))))) ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (_GLF_FUZZED(uvec3(182140u, 92973u, 185607u))) | (_GLF_FUZZED(uvec3(182140u, 92973u, 185607u))))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (_GLF_FUZZED(uvec3(182140u, 92973u, 185607u))) | (_GLF_FUZZED(uvec3(182140u, 92973u, 185607u))))), ~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (_GLF_FUZZED(uvec3(182140u, 92973u, 185607u))) | (_GLF_FUZZED(uvec3(182140u, 92973u, 185607u))))))))))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)))), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (true ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (true ? _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)) : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))) : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)))), 0u, 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)))), 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(182140u, 92973u, 185607u)), (_GLF_FUZZED(uvec3(182140u, 92973u, 185607u))) << uvec3(0u, 0u, 0u))))))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)))), 0u, 1u)), 0u ^ (uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), (uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)) | (_GLF_IDENTITY(uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), (uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)) >> (0u | 0u)))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)), max(clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)), (clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x))) | (clamp(uint(_GLF_IDENTITY(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz, (true ? GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz : _GLF_FUZZED(uvec3(182140u, 92973u, 185607u)))).x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x), uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x)))))))), 0u, 1u))))) / 1u))))))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) + vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(dot(vec4(0.6, 0.5, 7390.0558, 3.6), vec4(5.6, -6.6, -27.20, 16.16))))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), mix(vec2(_GLF_FUZZED(3581.2720), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) + vec4(0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (vec4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) + vec4(0.0, 0.0, 0.0, 0.0))))[_GLF_IDENTITY(0, (0) + (0 << _GLF_IDENTITY(int(0), int(0))))], _GLF_FUZZED(-1.2)), bvec2(true, false)))).y) / 1.0)))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false))), true)))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), false)), false))))), false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), true))), false)), true), bvec3(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)), true)))), false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)), true), bvec3(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)), true)))), false)))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, false || (true))))), false)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), true), bvec3(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)), true)))), false)))), false)))))))), true)))), false)))), (bool(bool(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false))), true)))), false))))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, true)), false)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), false), bvec2(bvec4(bvec2(bool(bvec2(false, true)), false), true, false))))), false || (bool(bool(bvec2(bool(bvec2(false, true)), false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, true)), false)), ! (! (bool(bvec2(bool(bvec2(false, true)), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, true)), false)), ! (! (bool(bvec2(bool(bvec2(false, true)), false)))))))))))))))))))), true && (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) || false)), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), true))), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) || false))))), bvec2(bvec3(bvec2(false, true), true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), true))), false))), true), true))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), true))), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) || false))))), bvec2(bvec3(bvec2(false, true), true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), true))), false))), true), true))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), true))), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) || false))))), bvec2(bvec3(bvec2(false, true), true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(false, true), true))), false))), true), true))))), false)))))), true)))), false)))), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false))))))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false))))))))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(0, (0) - 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(int(int(5))), (int(int(int(5)))) << 0)))), (_GLF_IDENTITY(((_GLF_IDENTITY(0, (0) - 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(int(int(5))), (int(int(int(5)))) << 0)))), min(((_GLF_IDENTITY(0, (0) - 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(int(int(5))), (int(int(int(5)))) << 0)))), ((_GLF_IDENTITY(0, (0) - 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(int(int(5))), (int(int(int(5)))) << 0))))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               return;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-368.263, -4.0))) : injectionSwitch)).x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat2(1.0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) | 0), 0, 1), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) | 0), 0, 1), (true ? ivec3(_GLF_IDENTITY(1, (1) | 0), 0, 1) : _GLF_FUZZED(ivec3(47735, 24174, -67487)))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) | 0), 0, 1), ~ (~ (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))) | 0), 0, 1))))) | ivec3(0, 0, 0))))), _GLF_IDENTITY(~ (~ (ivec4(1))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec4(1)))), (~ (~ (~ (ivec4(1))))) >> ivec4(0, 0, 0, 0))))), atomicLoad(write_val, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(6), int(6)))) << 0), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 + (int(6))), int(6)))) << 0))) : _GLF_FUZZED(54943), clamp(true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943), true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943), _GLF_IDENTITY(true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) / 1)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(_GLF_IDENTITY(6, (6) | (6)))))) << 0) : _GLF_FUZZED(54943), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(6))) << 0)) | 0))) << 0) : _GLF_FUZZED(54943)) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41836) : _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) << 0)))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0)), _GLF_IDENTITY(int(int(0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0)))), (false ? _GLF_FUZZED(-14555) : int(int(0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0)))))))))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(_GLF_IDENTITY(6, ~ (~ (6))))) | (_GLF_IDENTITY(int(6), (int(6)) | _GLF_IDENTITY((_GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, (6) | (6)), 6, 6)))))), ((_GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))))) + 0), (_GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) + 0), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), ~ (~ ((_GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))))))))))))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))))) << 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0))) : _GLF_FUZZED(54943), clamp(true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(54943), (_GLF_FUZZED(54943)) / 1), true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, (false ? _GLF_FUZZED(-1079) : 6))))), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)))) << 0), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)))) << 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)))) << 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), int(6)))) << 0))) : _GLF_FUZZED(54943), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943)) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41836) : _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), 0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0))))))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943)), min((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943)) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41836) : _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), 0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0))))))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943)) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41836) : _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), 0 ^ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0))))))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) : _GLF_FUZZED(54943))))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(ivec4(int(6), 1, 0, 0), (true ? ivec4(int(6), 1, 0, 0) : _GLF_FUZZED(ivec4(-32999, -39240, 81248, 18145)))))))), (int(_GLF_IDENTITY(6, ~ (~ (6))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6)))) << (1 ^ 1)), (int(6)) | (_GLF_IDENTITY(int(6), max(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))))))))))))), 0 | (int(_GLF_IDENTITY(ivec3(64, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) >> 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(6), min(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, min(6, 6)), 6))), int(6)))))), _GLF_IDENTITY(ivec3(ivec4(ivec3(64, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(1, int(ivec2(1, 1))) << _GLF_IDENTITY(int(6), int(6))) | (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (false ? _GLF_FUZZED(4428) : _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))), int(6))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), ~ (~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), ~ (~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> ivec2(0, 0))), 0 | (int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> ivec2(0, 0)))))), (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, 1 * (6))))))), 6))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, _GLF_IDENTITY(min(_GLF_IDENTITY(6, max(6, 6)), 6), (min(_GLF_IDENTITY(6, max(6, 6)), 6)) << (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(-59778))))))))), _GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6))), 0 ^ ((_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))))), int(ivec2(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), 0))))), ~ (~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))))))))), int(6)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), ~ (~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> ivec2(0, 0))), 0 | (int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) * ivec2(1, 1))))))), (6) ^ 0)) | (_GLF_IDENTITY(6, _GLF_IDENTITY(min(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, 1 * (6))))))), 6), (min(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, 1 * (6))))))), 6)) | 0))))), ((_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> ivec2(0, 0))), 0 | (int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) * ivec2(1, 1))))))), (6) ^ 0)) | (_GLF_IDENTITY(6, _GLF_IDENTITY(min(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, 1 * (6))))))), 6), (min(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, 1 * (6))))))), 6)) | 0)))))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), int(ivec2(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), 0)))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), int(ivec2(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), 0)))), (clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), int(ivec2(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), 0))))) ^ 0), 0)), (true ? int(ivec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), int(ivec2(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), 0)))), (clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), int(ivec2(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), 0))))) ^ 0), 0)) : _GLF_FUZZED(52763))))), ~ (~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))))))))), int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), ~ (~ (_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, (6) ^ 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(6, (6) ^ 0)), min((_GLF_IDENTITY(6, (6) ^ 0)), (_GLF_IDENTITY(6, (6) ^ 0)))), (_GLF_IDENTITY(6, (6) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(6, (6) ^ 0)), ((_GLF_IDENTITY(6, (6) ^ 0))) * 1))) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), ~ (~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> ivec2(0, 0))), 0 | (int(_GLF_IDENTITY(ivec2(6, 1), (ivec2(6, 1)) >> ivec2(0, 0)))))), (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, 0 ^ (_GLF_IDENTITY(6, max(6, 6)))), _GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, 1 * (6))))))), 6))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(6, (6) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (6) ^ 0)), (~ (_GLF_IDENTITY(6, (6) ^ 0))) << 0)))) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), clamp(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), _GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), (_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))), 0 + (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6))))))) | 0), 0))))), ~ (~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) ^ 0)) | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, max(6, 6)), 6)))))))))), _GLF_IDENTITY(int(6), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (int(6)))))))), 0)), ivec3(0, 0, _GLF_IDENTITY(0, (0) | (0))) ^ (ivec3(ivec4(ivec3(64, 1, ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (0 >> _GLF_IDENTITY(int(8), int(8))) + (6))), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 + (6))), int(6))) ^ (0 << _GLF_IDENTITY(int(4), int(4)))), (1 << _GLF_IDENTITY(int(6), int(6))) | (1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), 0))))))))), 2));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))))))))))
    continue;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))
    {
     buf[GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_sizenum_workgroup.xyz.x] = uint(subgroupAllEqual(_GLF_struct_replacement_8.read_val));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
