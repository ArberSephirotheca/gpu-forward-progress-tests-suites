#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), ! (! (bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true)))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec3(false, true, true)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, true))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) || false)), false), true, _GLF_IDENTITY(true, (true) && true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))) || false)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true)))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false), true, _GLF_IDENTITY(true, (true) && true)))))))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))) || false)))), ! (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true))))))))))), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), (false) && true)), true, true)))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))))))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y)))))), false), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true))), false), true, _GLF_IDENTITY(true, (true) && true)))))))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false))))))) && true))) || false)))))))))))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), max(_GLF_FUZZED(float(111333u)), _GLF_FUZZED(float(111333u)))), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], 0.0, length(vec3(0.0, 0.0, 0.0))))), _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, 0 ^ (1))))]), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(9.4)), bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))).x) - 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x), float(_GLF_FUZZED(-1.4)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(9.4, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(9.4, (false ? _GLF_FUZZED(-5.1) : 9.4)), length(tan(vec2(0.0, 0.0))), 1.0, 1.0, abs(0.0), 0.0)), mix(float(float(mat3x2(_GLF_IDENTITY(9.4, (false ? _GLF_FUZZED(-5.1) : 9.4)), length(tan(vec2(0.0, 0.0))), 1.0, 1.0, abs(0.0), 0.0))), float(_GLF_FUZZED(760.789)), bool(false)))))), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat3x2((injectionSwitch)[1], sqrt(1.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0)), (true ? float(mat3x2((injectionSwitch)[1], sqrt(1.0), 1.0, 0.0, round(length(normalize(1.0))), 1.0)) : _GLF_FUZZED(9.1))))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)), (false ? _GLF_FUZZED((vec2(-1.9, 4091.8490) / injectionSwitch)) : _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-1.4), (mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)))[0], (true ? (mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)))[0] : _GLF_FUZZED(-971.644))), _GLF_FUZZED(-757.618)), bvec2(true, false)))))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(111333u)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)), mix(vec2((mix(vec2(_GLF_FUZZED(float(111333u)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)))[0], _GLF_FUZZED(-689.774)), vec2(_GLF_FUZZED(5.9), (mix(vec2(_GLF_FUZZED(float(111333u)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false)))[1]), bvec2(false, true)))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)), mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((30.89 + -18.72))), _GLF_IDENTITY(float((injectionSwitch)[0]), mix(float(_GLF_IDENTITY(float((injectionSwitch)[0]), mix(float(float((injectionSwitch)[0])), float(_GLF_FUZZED(4.0)), bool(false)))), float(_GLF_FUZZED(-51.52)), bool(false))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) / exp(sqrt(0.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(111333u), min(float(111333u), float(111333u)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(9.4, min(_GLF_IDENTITY(9.4, min(9.4, 9.4)), 9.4)))), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) * 1)], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(111333u)), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-313.427)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true)))[1]), mix(vec2((vec2(_GLF_FUZZED(float(111333u)), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-313.427)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true)))[1]))[0], _GLF_FUZZED(-7.0)), vec2(_GLF_FUZZED(16.37), (vec2(_GLF_FUZZED(float(111333u)), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-313.427)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true)))[1]))[1]), bvec2(false, true))), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0, mix(float(_GLF_FUZZED(-75.19)), float((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-3645.1323, float(vec4(-3645.1323, 1.0, 1.0, 0.0))))), bool(false))))) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.0))), 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0, mix(float(_GLF_FUZZED(-75.19)), float((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-3645.1323, float(vec4(-3645.1323, 1.0, 1.0, 0.0))))), bool(false))))) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.0))), 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0, mix(float(_GLF_FUZZED(-75.19)), float((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-3645.1323, float(vec4(-3645.1323, 1.0, 1.0, 0.0))))), bool(false))))) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.0))), 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(_GLF_IDENTITY(true, ! (! (true))), false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0, mix(float(_GLF_FUZZED(-75.19)), float((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-3645.1323, float(vec4(-3645.1323, 1.0, 1.0, 0.0))))), bool(false))))) > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.0))), 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))))) > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)), true), false))), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), bool(false))))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_FUZZED(float(111333u))) / determinant(mat4(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, log(1.0)), vec4(0.0, abs(0.0), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, log(1.0)), vec4(0.0, abs(0.0), 1.0, log(1.0)))), 1.0, 1.0, sqrt(cos(0.0)), 0.0, 1.0), transpose(transpose(mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, log(1.0)), vec4(0.0, abs(0.0), 1.0, log(1.0))), dot(vec4(0.0, 0.0, 1.0, log(1.0)), vec4(0.0, abs(0.0), 1.0, log(1.0)))), 1.0, 1.0, sqrt(cos(0.0)), 0.0, 1.0)))))), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), 1.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(1.6, 9.2, -455.795).s)), vec2(_GLF_FUZZED(-35.27), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(111333u, clamp(111333u, 111333u, 111333u)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), (_GLF_IDENTITY(_GLF_FUZZED(float(111333u)), clamp(_GLF_FUZZED(float(111333u)), _GLF_FUZZED(float(111333u)), _GLF_FUZZED(float(111333u))))) + 0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), bvec2(true, false))).x) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(111333u)), (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ 0)]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(9.4)), (vec2((injectionSwitch)[0], _GLF_FUZZED(9.4))) * mat2(1.0)), bvec2(true, false))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(float(_GLF_IDENTITY(111333u, min(_GLF_IDENTITY(111333u, (true ? 111333u : _GLF_FUZZED(bitfieldExtract(subgroup_id, 53448, 73649)))), 111333u)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))[0], _GLF_IDENTITY(_GLF_FUZZED(9.4), mix(float(_GLF_FUZZED(9.4)), float(_GLF_FUZZED(-4.8)), bool(false)))), bvec2(true, false))).x) - 0.0)), float(_GLF_FUZZED(-3645.1323)), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true))))))) > injectionSwitch.y)), true))))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) ^ 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))))))), (uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u, 0u | ((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))), (false ? _GLF_FUZZED(uvec3(60831u, 65630u, 41195u)) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))))) : _GLF_FUZZED(uvec3(82314u, 39352u, 195086u))))) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) ^ 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))))))), (uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u, 0u | ((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))), (false ? _GLF_FUZZED(uvec3(60831u, 65630u, 41195u)) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))))) : _GLF_FUZZED(uvec3(82314u, 39352u, 195086u))))) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) ^ 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))))))), (uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u, 0u | ((_GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup))))) : _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))), (false ? _GLF_FUZZED(uvec3(60831u, 65630u, 41195u)) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)))) | ((gl_WorkGroupSize))))))) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), clamp(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u))))))) : _GLF_FUZZED(uvec3(82314u, 39352u, 195086u))))) - uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))), 0u, 0u))))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - tan(length(vec2(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) / 1))), clamp(1 ^ _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) / 1))), 1 ^ _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) / 1))), 1 ^ _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) | (1))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y)))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))) || (true)) && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), 0 | (int(5))), int(5))), int(5))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false)))))), true, true)), true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))))) ^ (81871u & 0u)), uint(uvec2(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))))) ^ (81871u & 0u)), clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))))) ^ (81871u & 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))))) ^ (81871u & 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) | ((~ (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))))) ^ (81871u & 0u)))), 0u)))) : _GLF_FUZZED(subgroup_base))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | _GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))), _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))), (1u & 1u), 0u, 0u))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))), ~ (~ (0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u), max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))))))) / 1u)))) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) ^ 0u, (true ? _GLF_IDENTITY((workgroup_base) ^ 0u, min((workgroup_base) ^ 0u, (workgroup_base) ^ 0u)) : _GLF_FUZZED(num_workgroup)))) + subgroup_base, 0u | (workgroup_base + subgroup_base)) + subgroup_local_id), (0u ^ 0u) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base))), 0u | (workgroup_base + subgroup_base)) + subgroup_local_id))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)), ((subgroup_base)) - 0u)) | 0u)), 0u | (workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) + uvec2(0u, 0u))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) >> 0u)), uint(5u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))));
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), clamp(uint(virtual_gid), uint(virtual_gid), uint(virtual_gid))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) - 0));
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, 0 + (2)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0)), ~ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(0), int(0)), 0, 1), (_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(0), int(0)), 0, 1), ~ (~ (ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0))) >> 0) << _GLF_IDENTITY(int(0), int(0)), 0, 1))))) | (_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(0), int(0)), 0, 1), (ivec3(0 << _GLF_IDENTITY(int(0), int(0)), 0, 1)) | ivec3(0, 0, 0)))))), _GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 | (0)) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, max(0, 0))), 0, 0)))) << _GLF_IDENTITY(int(0), int(0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (true ? _GLF_IDENTITY(1, (1) | (1)) & 1 : _GLF_FUZZED(_injected_loop_counter)))) | _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY((1 & _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) ^ 0)))) | _GLF_IDENTITY(0, ~ (~ (0))), clamp((1 & 1) | 0, (1 & 1) | 0, (1 & 1) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY((1 & 1) | 0, clamp((1 & 1) | 0, (1 & 1) | 0, (1 & 1) | 0)))) / 1, (((_GLF_IDENTITY(_GLF_IDENTITY((1 & 1), (true ? _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))) : _GLF_FUZZED(_injected_loop_counter))) | 0, clamp((1 & 1) | 0, (1 & 1) | 0, (1 & 1) | 0)))) / 1) ^ 0)) - 0)), 0 + ((_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (true ? 1 & 1 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)))))) | 0, _GLF_IDENTITY((_GLF_IDENTITY((1 & 1) | 0, clamp((1 & 1) | 0, (1 & 1) | 0, (1 & 1) | _GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(1), int(1))))))), _GLF_IDENTITY(((_GLF_IDENTITY((1 & 1) | 0, clamp((1 & 1) | _GLF_IDENTITY(0, 0 + (0)), (1 & 1) | 0, (1 & 1) | 0)))) / 1, (((_GLF_IDENTITY((1 & 1) | 0, clamp((1 & 1) | 0, (1 & 1) | 0, (1 & 1) | 0)))) / 1) ^ 0)) - 0))))); _injected_loop_counter ++)
  {
   buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | (_GLF_IDENTITY(read_val, ~ (~ (read_val))))))), 1u * (uint(subgroupAllEqual(read_val))));
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))));
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
