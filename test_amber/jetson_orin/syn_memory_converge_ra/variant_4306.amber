#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(vec2(0.2, 1.0)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x, (false ? _GLF_FUZZED(tan(-7.6)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (false ? _GLF_FUZZED(sinh(-9934.9578)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x) - 0.0))), (false ? _GLF_FUZZED(tan(-7.6)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, sqrt(0.0), sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat3x4(injectionSwitch.y, 0.0, sqrt(0.0), sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(-10.85)))))))))))))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-179.193)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true) && true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), clamp(_GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))), _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), max(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))))) | (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))))))))) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, _GLF_IDENTITY(min(90007u, 90007u), (true ? _GLF_IDENTITY(min(90007u, 90007u), 0u + (min(90007u, 90007u))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, min(90007u, 90007u))), (false ? _GLF_FUZZED(uvec3(172307u, 100353u, 59302u)) : uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, min(90007u, 90007u))))), 1u), (uvec4(uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, min(90007u, 90007u))), 1u)) | uvec4(0u, 0u, 0u, 0u))), ~ (~ (uvec3(_GLF_IDENTITY(uvec4(uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, min(90007u, _GLF_IDENTITY(90007u, ~ (~ (90007u)))))), 1u), (uvec4(uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, min(90007u, 90007u))), 1u)) | uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uvec4(uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, min(90007u, 90007u))), 1u), (uvec4(uvec3(181723u, 96051u, _GLF_IDENTITY(90007u, min(90007u, 90007u))), 1u)) | uvec4(0u, 0u, 0u, 0u)))) | uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(165890u, 165200u, 119893u), min(uvec3(165890u, 165200u, 119893u), uvec3(165890u, 165200u, 119893u)))) : (uvec3(_GLF_IDENTITY(uvec4(uvec3(181723u, 96051u, _GLF_IDENTITY(_GLF_IDENTITY(90007u, min(90007u, 90007u)), (_GLF_IDENTITY(90007u, min(90007u, 90007u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY(clamp(1u, 1u, 1u), ~ (~ (clamp(1u, 1u, 1u))))))))) / 1u)), (uvec4(uvec3(_GLF_IDENTITY(181723u, _GLF_IDENTITY(uint(uvec3(181723u, 0u, 1u)), _GLF_IDENTITY(1u, 0u ^ (1u)) * (uint(uvec3(181723u, 0u, 1u))))), _GLF_IDENTITY(96051u, ~ (~ (96051u))), _GLF_IDENTITY(_GLF_IDENTITY(90007u, min(_GLF_IDENTITY(90007u, (_GLF_IDENTITY(true, (true) || false) ? 90007u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(90007u, max(90007u, 90007u)))), _GLF_IDENTITY(min(90007u, 90007u), min(_GLF_IDENTITY(min(90007u, 90007u), (min(90007u, 90007u)) ^ 0u), min(90007u, 90007u))))), 1u)) | uvec4(0u, 0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))))))), ((true ? gl_WorkGroupSize : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec3(181723u, _GLF_IDENTITY(96051u, min(_GLF_IDENTITY(96051u, min(96051u, 96051u)), _GLF_IDENTITY(96051u, (_GLF_IDENTITY(96051u, max(96051u, 96051u))) ^ 0u))), 90007u)), (_GLF_FUZZED(uvec3(181723u, 96051u, 90007u))) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), (_GLF_FUZZED(uvec3(_GLF_IDENTITY(181723u, (true ? _GLF_IDENTITY(181723u, (181723u) >> 0u) : _GLF_FUZZED(num_workgroup))), 96051u, 90007u))) ^ uvec3(0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14126u, 16787u, 99459u))), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14126u, 16787u, 99459u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14126u, 16787u, 99459u))), min(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14126u, 16787u, 99459u))), uvec3(0u, 0u, 0u) | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14126u, 16787u, 99459u))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14126u, 16787u, 99459u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(26433u, 176012u, 145270u)) : (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(_GLF_IDENTITY(14126u, clamp(_GLF_IDENTITY(14126u, (14126u) ^ 0u), 14126u, 14126u)), _GLF_IDENTITY(16787u, ~ (~ (_GLF_IDENTITY(16787u, _GLF_IDENTITY(uint(uvec4(16787u, 1u, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), min(uint(uvec4(16787u, 1u, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec4(16787u, 1u, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))), 99459u))), ~ (~ (false ? _GLF_FUZZED(uvec3(26433u, 176012u, 145270u)) : (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.2)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14126u, _GLF_IDENTITY(16787u, ~ (~ (16787u))), 99459u))))))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-453.274)), vec2(_GLF_FUZZED(-4.5), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3979.8261), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, false))).y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false)))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), max(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) * 1u)))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))) || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec3(-52.12, 98.95, 5305.0473) + vec3(-3.7, -127.216, 1.6)).t), _GLF_FUZZED(-3.7)), bvec2(false, false))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(826.351), ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(38348u))), bool(false)))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0))))[0], _GLF_FUZZED(-730.140)), bvec2(true, false)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), true, false)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(vec2(-4.3, -436.839))))).x) / 1.0))))) > injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(27.50), _GLF_FUZZED(-5.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3(false, true, false)))))) && true)), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))) | (virtual_gid))), (uint(virtual_gid)) / 1u)) | _GLF_IDENTITY((uint(virtual_gid)), 0u + ((uint(virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (uint(virtual_gid))), (_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (uint(virtual_gid)))) | 0u), (_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)))) ^ 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (uint(virtual_gid))), (_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / _GLF_IDENTITY(1u, 0u | (1u)))) | (uint(virtual_gid)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)))) ^ 0u, max((_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)))) ^ 0u, uint(uvec4((_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)))) ^ 0u, 0u, 0u, 1u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | (uint(virtual_gid))), _GLF_IDENTITY((_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | _GLF_IDENTITY((uint(virtual_gid)), ((uint(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))) ^ 0u))), 0u | ((_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u)) | _GLF_IDENTITY((uint(virtual_gid)), ((uint(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))) ^ 0u))))) / 1u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (_GLF_IDENTITY(write_val, 1u * (_GLF_IDENTITY(write_val, (write_val) | 0u))))) << 0u))), (_GLF_IDENTITY(write_val, ~ (~ (write_val)))) << 0u), 4, 64, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, _GLF_IDENTITY(2, (2) << (0 >> _GLF_IDENTITY(int(6), int(6)))), 2), ~ (~ (_GLF_IDENTITY(clamp(2, _GLF_IDENTITY(2, (2) << (0 >> _GLF_IDENTITY(int(6), int(6)))), 2), max(clamp(2, _GLF_IDENTITY(2, (2) << (0 >> _GLF_IDENTITY(int(6), int(6)))), 2), clamp(2, _GLF_IDENTITY(2, (2) << (0 >> _GLF_IDENTITY(int(6), int(6)))), 2))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || false)) && true), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), bool(bvec3(! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), false, false)))))) && true), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))), true && (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))), _GLF_IDENTITY(! (! (! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-87.08))), min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-87.08))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-87.08)))))))))), false, true, false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.5) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-87.08)))))))), false, true, false)))))), (! (! (! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0) : _GLF_FUZZED(-87.08))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0) : _GLF_FUZZED(-87.08))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0) : _GLF_FUZZED(-87.08)))))))))), false, true, false))))))) && true)), ((_GLF_IDENTITY(! (! (! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.5) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-87.08)))))))), false, true, false)))))), (! (! (! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0) : _GLF_FUZZED(-87.08))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0) : _GLF_FUZZED(-87.08))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0) : _GLF_FUZZED(-87.08)))))))))), false, true, false))))))) && true))) && true))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0))).y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-150.625)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0)))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.047)), bool(false))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))).y))))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)))))))), false, true, _GLF_IDENTITY(false, true && (false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), _GLF_IDENTITY(bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false)), (bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false))) && true)))), true))), true, true)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0))).y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-150.625)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0)))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.047)), bool(false))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))).y))))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)))))))), false, true, _GLF_IDENTITY(false, true && (false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), _GLF_IDENTITY(bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false)), (bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false))) && true)))), true))), true, true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0))).y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-150.625)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0)))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.047)), bool(false))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))).y))))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)))))))), false, true, _GLF_IDENTITY(false, true && (false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), _GLF_IDENTITY(bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false)), (bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false))) && true)))), true))), true, true)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0))).y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-150.625)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), tan(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0)))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-389.047)), bool(false))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))).y))))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2758.1852)), bool(false))), injectionSwitch.y))) - 0.0), sqrt(1.0), 0.0)))))))), false, true, _GLF_IDENTITY(false, true && (false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), _GLF_IDENTITY(bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false)), (bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))), false, true, false))), false, false, false))) && true)))), true))), true, true)))))), false, false)))), false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, 0u + (read_val))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)) && true))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)) && true))))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, true), bvec3(bvec3(bvec3((false) && true, false, true)))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ((! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, false)))) && true), ((false) && true) && true))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) && true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) && true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) && true))))), false || (! (! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) && true))))))))), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (_GLF_IDENTITY(! (! (! ((false) && true))), false || (! (! (! ((false) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))) && true), ! (! (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, ! (! ((false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (_GLF_IDENTITY(! (! (! ((false) && true))), false || (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bool((! ((false) && true))))))), bool(bool((_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bool((! ((false) && true))))))))))), (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))) && true), ! (! (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (bool(bvec2(true, true))), (! (bool(bvec2(true, true)))) || false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (_GLF_IDENTITY(! (! (! ((false) && true))), false || (! (! (! ((false) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))) && true), ! (! (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, ! (! ((false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (_GLF_IDENTITY(! (! (! ((false) && true))), false || (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bool((! ((false) && true))))))), bool(bool((_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bool((! ((false) && true))))))))))), (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))) && true), ! (! (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (bool(bvec2(true, true))), (! (bool(bvec2(true, true)))) || false))))))))), false || (bool(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (_GLF_IDENTITY(! (! (! ((false) && true))), false || (! (! (! ((false) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))) && true), ! (! (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, ! (! ((false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (_GLF_IDENTITY(! (! (! ((false) && true))), false || (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bool((! ((false) && true))))))), bool(bool((_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bool((! ((false) && true))))))))))), (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))) && true), ! (! (false || (! (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (bool(bvec2(true, true))), (! (bool(bvec2(true, true)))) || false)))))))))))) || false)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))))), (injectionSwitch.x < injectionSwitch.y)), false))), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, true))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), false), true, true))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
