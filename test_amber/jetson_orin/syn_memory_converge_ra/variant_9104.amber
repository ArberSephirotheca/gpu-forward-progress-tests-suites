#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y)))), true))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0))), (_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), float(mat4(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0)))), mix(float(_GLF_FUZZED(-4.1)), float(cos(_GLF_IDENTITY(0.0, (0.0) - tan(sin(0.0))))), bool(true))), 0.0, 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0)))) / 1.0), 1.0, 0.0)))) + 0.0) > injectionSwitch.y)))), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false)))))) && true))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), (_GLF_IDENTITY(false, false || (false))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || _GLF_IDENTITY((false), ((false)) && true)), (_GLF_IDENTITY(false, false || (false))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(false, false || (false))) && true))) || false, ((_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || (false)), (_GLF_IDENTITY(false, false || (false))) && true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(_GLF_IDENTITY(true, ! (! (true)))), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) - sqrt(vec2(0.0, 0.0)))))).x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true)), bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true)), bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true)), bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x)), _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), _GLF_IDENTITY((0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), _GLF_IDENTITY(float(mat2x4((0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (float(mat2x4((0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))) * 1.0)) - 0.0), mix(float(_GLF_IDENTITY(0.0 + (injectionSwitch.x), _GLF_IDENTITY((0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), _GLF_IDENTITY(float(mat2x4((0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (float(mat2x4((0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))) * 1.0)) - 0.0)), float(_GLF_FUZZED(-822.081)), bool(false))), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true, ! (! ((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))), true && ((! (! ((false)))))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true)))) && true)), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((false)), true && (((false))))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && true)))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), bool(bvec3(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), true, false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))) && true, ! (_GLF_IDENTITY(! ((! (! ((false)))) && true), _GLF_IDENTITY(bool(bvec3(! ((! (! ((false)))) && true), false, false)), (bool(bvec3(! ((! (! ((false)))) && true), false, false))) && true))))))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))))))), ((_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))) && true, ! (_GLF_IDENTITY(! ((! (! ((false)))) && true), _GLF_IDENTITY(bool(bvec3(! ((! (! ((false)))) && true), false, false)), (bool(bvec3(! ((! (! ((false)))) && true), false, false))) && true))))))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true, ! (! ((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))), true && ((! (! ((false)))))) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))), true && ((! (! ((false)))))) && true)), true && ((_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))), true && ((! (! ((false)))))) && true)))))))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))) && true, ! (! (_GLF_IDENTITY((! (! ((false)))) && true, ((! (! ((false)))) && true) || false))))))))))))))) && true)))) && true)), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((false)), true && (((false))))), (_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), bool(bvec3(_GLF_IDENTITY(! (! ((false))), false || (! (! ((false))))), false, true))))))) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), bool(bool(! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))))))))))) && true)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (((false))) && true)) && true)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))))), true && (! ((false)))))))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), bool(bvec2((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), false)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((false))), (! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, false, true)))) || false)))) && true)), ! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))))))))))))) && true), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), ! (! (! (! (! (_GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))) && true, ! (! ((! (! ((false)))) && true))))))))))))))) && true), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && true)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), bool(bvec4((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), true, true, false)))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))), (_GLF_IDENTITY(! (! ((false))), bool(bvec3(_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true), false, true)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && true)))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), false || (! ((false))))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))))))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))) && true))))), (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)))), true && (_GLF_IDENTITY(! (! ((false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true)), false), false)))))), ! (! ((! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))))))) && true))), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))), false, true)), (bool(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))), ! (! (! (! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true))))))), false, true))) || false)))) && true)))))) && true)))) || false), false, true))))), true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u, ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(bitfieldInsert(103023u, subgroup_id, (-62327), 60885)) : _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), _GLF_IDENTITY(0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))), (0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)))))))))) << 0u))))) >> 0u) + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)))))))))))))))))) >> 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2(_GLF_IDENTITY((workgroup_base), (0u & 9190u) ^ ((workgroup_base))) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), (uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))) | (_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), clamp(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), _GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), min(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)))), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)))))), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))))))) >> 0u) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << _GLF_IDENTITY(0u, min(0u, 0u)), 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))))))) >> 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))))))) >> 0u) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))))))) >> 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) << 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))))))) >> 0u) + subgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | 0u))) << 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), (uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))), 0u + (uint(_GLF_IDENTITY(uvec2((workgroup_base) << 0u, 1u), _GLF_IDENTITY((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u), uvec2(_GLF_IDENTITY(uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u)), max(uvec2((uvec2((workgroup_base) << 0u, _GLF_IDENTITY(1u, (1u) | 0u))) / uvec2(1u, 1u)), uvec2((uvec2((workgroup_base) << 0u, 1u)) / uvec2(1u, 1u))))))))))))) >> 0u) + subgroup_base) - 0u)) << 0u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), uint(uvec2(max(virtual_gid, virtual_gid), 0u)))))))) - 0u)))), 4, 64, 4);
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (! (false))), (bool(false || (! (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(false || (! (false))), (bool(false || (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(false || (! (false))), (bool(false || (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.9)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, true && (true)))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.13)), bool(false))) : _GLF_FUZZED(5.8))) < injectionSwitch.y)))), (! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, true && (true)))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(19.13)), bool(false))) : _GLF_FUZZED(5.8))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.y), bool(true)))))))) || false)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true, _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(840.353), float(_GLF_IDENTITY(vec3(_GLF_FUZZED(840.353), 0.0, 1.0), max(vec3(_GLF_FUZZED(840.353), 0.0, 1.0), vec3(_GLF_FUZZED(840.353), 0.0, 1.0)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0)))), injectionSwitch)).y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, sqrt(0.0)))))).x), float(mat3(float(injectionSwitch.x), cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) - 0.0)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(0.3))), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(840.353, (false ? _GLF_FUZZED(sinh(2.4)) : 840.353)))), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(840.353)), bool(false))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false), true)))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))) || false, ! (! ((false) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
