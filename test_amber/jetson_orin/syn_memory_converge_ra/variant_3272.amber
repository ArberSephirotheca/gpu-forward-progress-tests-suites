#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-493.877)), float(injectionSwitch.x), bool(true))), max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(5.8)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (_GLF_IDENTITY(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(mix(2.9, _GLF_IDENTITY(8.6, mix(float(_GLF_IDENTITY(8.6, clamp(8.6, 8.6, _GLF_IDENTITY(8.6, min(8.6, 8.6))))), float(_GLF_FUZZED(4657.8697)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(float(vec3(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(mix(_GLF_IDENTITY(2.9, max(2.9, 2.9)), 8.6, true)), exp(0.0), 0.0)), min(float(vec3(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(mix(2.9, 8.6, true)), exp(0.0), 0.0)), float(vec3(true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(mix(2.9, 8.6, true)), exp(0.0), 0.0))))))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), true && ((false))), true)), (bool(bvec2(_GLF_IDENTITY((false), true && ((false))), true))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0))), float(_GLF_FUZZED(-927.689)), bool(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)))))) && true))) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y)))), (bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))) || false)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)), injectionSwitch)).y))))))))) || false))))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)))))) && true))) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y)))), (bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))) || false)))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), injectionSwitch)), injectionSwitch)).y))))))))) || false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y = subgroup_local_id;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u))) | (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), ((~ _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u))) | (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) << 0u));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ~ (~ ((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) ^ (gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) + ((gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(32447u, 198419u, 180586u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2]))))) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[_GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (2))])))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))))) ^ uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ (5107u & (0u & 29667u)), min((0u) ^ (5107u & (0u & 29667u)), (0u) ^ (5107u & (0u & 29667u))))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, 0u))))))), (((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ (5107u & (0u & 29667u))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))))))))) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) ^ (gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) + ((gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(32447u, 198419u, 180586u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2]))))) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[_GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (2))])))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))))) ^ uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ (5107u & (0u & 29667u)), min((0u) ^ (5107u & (0u & 29667u)), (0u) ^ (5107u & (0u & 29667u))))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, 0u))))))), (((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ (5107u & (0u & 29667u))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))))))))) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) ^ (gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) + ((gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(32447u, 198419u, 180586u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2]))))) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[_GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (2))])))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))))) ^ uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ (5107u & (0u & 29667u)), min((0u) ^ (5107u & (0u & 29667u)), (0u) ^ (5107u & (0u & 29667u))))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, 0u))))))), (((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ (5107u & (0u & 29667u))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))))))))) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) ^ (gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) + ((gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(32447u, 198419u, 180586u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2]))))) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[_GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (2))])))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))))) ^ uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ (5107u & (0u & 29667u)), min((0u) ^ (5107u & (0u & 29667u)), (0u) ^ (5107u & (0u & 29667u))))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, 0u))))))), (((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ (5107u & (0u & 29667u))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))))))))) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))))).x, 1u * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(write_val))), clamp(0u, 0u, 0u)), 0u) ^ (gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))), (true ? (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), uvec3(0u, 0u, 0u) + (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))), gl_WorkGroupID)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)))))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupID[2])))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) << 0u))), gl_WorkGroupID))))))))) ^ uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ (5107u & (0u & 29667u))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, 0u))))))), (((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ (5107u & (0u & 29667u))), 0u)) >> _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY(max(0u, 0u), min(max(0u, 0u), max(0u, 0u)))) | (max(0u, 0u)))))))) - (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))).x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), (0u | (subgroup_size)) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u), ~ (~ (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))), GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.x * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) >> 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-79.87) : injectionSwitch.y)))) : _GLF_FUZZED(79.33)))))) && true), false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(asinh(step(injectionSwitch, vec2(-9507.7766, -60.65)))) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.y;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z = virtual_gid;
 atomicStore(write_val, _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z), (uint(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z), (uint(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z)) - 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z, max(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z, GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z))), (uint(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z)) - 0u)) - 0u)) | (_GLF_IDENTITY(uint(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z), (uint(GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z)) - 0u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (false ? _GLF_FUZZED(-44947) : _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(7152) : 64))) ^ 0))), _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, 0 ^ (4)), 64, 2);
 _GLF_IDENTITY(buf[GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z] = uint(subgroupAllEqual(read_val)), ~ (~ (buf[GLF_merged3_0_1_11_1_1_17_2_1_11subgroup_idsubgroup_local_idvirtual_gid.z] = uint(subgroupAllEqual(read_val)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
