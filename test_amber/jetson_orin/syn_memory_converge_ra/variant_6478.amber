#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (false))))))) && true)) && true)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x < injectionSwitch.y))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))).y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool(_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, true))))), true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), true && ((false) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) && true) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-48.19))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-48.19))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(-8767.2268))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false, false))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), true && ((bool(bvec3(_GLF_DEAD(false), false, false)))))), ! (! ((! (bool(bvec3(_GLF_DEAD(false), false, false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_DEAD(false), false, false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_DEAD(false), false, false)))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_DEAD(false), false, false)))))))), false)), false || (bool(bvec2(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_DEAD(false), false, false)))))))), false)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, false || (false)))))), ! (! ((! (bool(bvec3(_GLF_DEAD(false), false, false)))))))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_DEAD(false), false, false))))))))))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_DEAD(false), false, false)))), _GLF_IDENTITY(! (! ((! (bool(bvec3(_GLF_DEAD(false), false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! ((! (bool(bvec3(_GLF_DEAD(false), false, false)))))), (! (! ((! (bool(bvec3(_GLF_DEAD(false), false, false))))))) && true), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(! (! ((! (bool(bvec3(_GLF_DEAD(false), false, false)))))), (! (! ((! (bool(bvec3(_GLF_DEAD(false), false, false))))))) && true), true)))))))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(_GLF_DEAD(false), false, false))))))))))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) | uvec3(0u, 0u, 0u))), (gl_WorkGroupSize) / uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(2u, min(2u, 2u)))), (2u) >> 0u))))), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY((workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(workgroup_id))), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) >> _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), min(min(0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u, _GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u | 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u | 0u)))), ((~ (_GLF_IDENTITY(0u | 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u | 0u))))) / 1u), (_GLF_IDENTITY(~ (~ (0u | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u | 0u), 0u ^ (~ (0u | 0u)))), clamp(~ (~ (0u | 0u)), ~ (~ (0u | 0u)), _GLF_IDENTITY(~ (~ (0u | 0u)), min(~ (~ (0u | 0u)), ~ (~ (0u | 0u)))))), ~ (~ (0u | 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(104306u))), _GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), min(min(0u | _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), 0u ^ (~ (0u | 0u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u | 0u), 0u ^ (~ (0u | 0u))), (_GLF_IDENTITY(~ (0u | 0u), 0u ^ (~ (0u | 0u)))) | (_GLF_IDENTITY(~ (0u | 0u), 0u ^ (~ (0u | 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), min(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), 0u | (_GLF_IDENTITY(0u | 0u, ~ _GLF_IDENTITY((~ (0u | 0u)), ((~ (0u | 0u))) | 0u))))))) | (_GLF_IDENTITY(0u | 0u, ~ _GLF_IDENTITY((~ (0u | 0u)), min((~ (0u | 0u)), (~ (0u | 0u)))))))), min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ _GLF_IDENTITY((~ (0u | 0u)), 0u | _GLF_IDENTITY(((~ (0u | 0u))), (_GLF_IDENTITY(((~ (0u | 0u))), (((~ (0u | 0u)))) * 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) + 0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((false ? write_val : write_val)))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) + (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u ^ ((0u))) << 0u)) + 0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((false ? write_val : write_val)))))), _GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), max(_GLF_IDENTITY(~ (0u | 0u), (~ (0u | 0u)) | 0u), ~ (0u | 0u)))))), min(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), _GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | _GLF_IDENTITY(0u, (0u) ^ 0u))))), (min(_GLF_IDENTITY(0u, (0u) << 0u) | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u))))))))) + (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | 0u), min(uint(1u), uint(1u)))))))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (0u | 0u), min(_GLF_IDENTITY(~ (0u | 0u), (~ (0u | 0u)) | (~ (0u | 0u))), ~ (0u | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u))))), min(min(0u | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))))))), min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ _GLF_IDENTITY((~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u))), 0u ^ ((~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u)))))), uint(uvec2(~ (_GLF_IDENTITY((~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u))), 0u ^ ((~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u)))))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))), min(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))))))), min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))))), (_GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), max(~ ((0u)), ~ ((0u)))))) >> 0u))))), min(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))))))), _GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), clamp(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), _GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), min(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))))))))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u))))), min(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))))))), min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))))), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(0u | 0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(0u | 0u, ~ (~ (0u | _GLF_IDENTITY(0u, (0u) >> 0u))))), min(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))))))), min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))))))))))))))), (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))), 1u * (min(0u | 0u, _GLF_IDENTITY(0u | 0u, ~ (~ (0u | _GLF_IDENTITY(0u, min(0u, 0u)))))))), min(min(0u | 0u, _GLF_IDENTITY(0u | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), ~ (~ (0u | 0u)))), min(0u | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) | 0u, ~ (~ _GLF_IDENTITY((0u | 0u), (true ? (_GLF_IDENTITY(0u | 0u, (0u | 0u) - ((168202u & 0u) << _GLF_IDENTITY(uint(7u), uint(7u))))) : _GLF_FUZZED(mix((+ _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(write_val)))))), subgroup_id, bvec4(false, true, false, true).r)))))))))))))), ~ _GLF_IDENTITY((~ (workgroup_size * workgroup_id)), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, ~ (_GLF_IDENTITY(~ (num_workgroup), (~ (num_workgroup)) + 0u)))) | (num_workgroup))), (_GLF_FUZZED(num_workgroup)) | (_GLF_FUZZED(num_workgroup)))))), _GLF_FUZZED(num_workgroup))) : (~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), min((workgroup_size * workgroup_id), (workgroup_size * workgroup_id))), ((workgroup_size * workgroup_id)) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.7))))))) * (workgroup_base + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, length(log(vec2(1.0, 1.0))), 0.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, false), true))), true)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), ! (! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), (((false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), true && (! ((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))))))) && true)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), true && (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)))))))))) && true), (false) && true))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (write_val) * 1u), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), 64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, (0 | 0))), ~ (~ (int(ivec3(64, 1, (0 | 0))))))), clamp(64, 64, 64))) + 0)), (int(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-18388) : 64)))), 64)))) ^ 0)), 1 * _GLF_IDENTITY((int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)) << ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0)) >> ((0 ^ 0) ^ 0)), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0))), 64), (clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) - 0)) >> _GLF_IDENTITY(int(3), int(3))), 0))), 64)) - 0), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(_GLF_IDENTITY(64, (64) << 0), 64, 64)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), max(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) >> 0), _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) | (clamp(64, 64, 64))))), (_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) | (0 | 0)), 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), (_GLF_IDENTITY((~ (64)), ((~ (_GLF_IDENTITY(64, (64) | (64))))) >> 0)) | ((~ (64))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0)) | (_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (~ (64)))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(3), int(3)), 0)), clamp(int(ivec2(_GLF_IDENTITY(int(3), int(3)), 0)), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(3), int(3)), 0)), clamp(int(ivec2(_GLF_IDENTITY(int(3), int(3)), 0)), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 0)), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 0)))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3))))), 0))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)) << ivec4(0, 0, 0, 0)))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(53299) : _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) << 0)) >> 0)))), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)) << ivec4(0, 0, 0, 0)))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0))))))))), ((int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), clamp(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), int(ivec3(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))))), 0))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) - 0)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), max(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))))), _GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max((~ (64)), (~ (64))))), _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) | (~ (~ (64))))))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), min(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), int(ivec2((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), 1))), 1))))) + 0), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)) >> _GLF_IDENTITY(int(3), int(3))))), 0))), 64), _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(19381))))), 64), (_GLF_IDENTITY(false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64), max(false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64), _GLF_IDENTITY(false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64), (false ? _GLF_FUZZED(_GLF_IDENTITY(-66442, (-66442) >> ((0 << _GLF_IDENTITY(int(6), int(6))) | 0))) : clamp(64, 64, _GLF_IDENTITY(64, (64) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0)))))))) | 0), (_GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, 0 ^ (64)), 64), min(clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0)) | (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, max(64, 64))))), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64))))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(50078) : int(3))))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) / 1)))), 0)), clamp(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) / 1)))), 0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), ((~ (64))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) / 1)))), 0)), 0 ^ (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) / 1)))), 0)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), max(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) | (3))) | (3)), (3) / 1)))), 0))))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0))), _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, max(3, 3))))), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0))), 64), _GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-66442) : clamp(64, 64, 64)))))) | 0)))))))) / 1)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) - 0), clamp(64, 64, 64))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, 0 | (64))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, 0 | (64))), ~ (~ ((_GLF_IDENTITY(64, 0 | (64)))))), (_GLF_IDENTITY(64, 0 | (64))))) - 0), clamp(64, 64, 64))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(0 | (64), 0 + (0 | (64))))) - 0), clamp(64, 64, 64))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-77639)))), clamp(64, 64, 64))), 0)))) >> 0), int(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) - 0), clamp(64, 64, 64))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, ~ (~ (0)))) | (64))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) >> 0) | (64)))) - 0) - 0), clamp(64, 64, 64)))) - 0), (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), clamp(64, 64, 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), clamp(64, 64, _GLF_IDENTITY(64, 0 | (64))))))))) ^ 0)), _GLF_IDENTITY(1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64)))), ((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64))))) | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64)))), min((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64)))), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64)))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64))), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64)))) ^ (0 | 0))), ((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64))))) | (_GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, int(int(64)))))), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64)))), min((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64)))), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 64))))))))))) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(1 * (int(int(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(clamp(64, 64, 64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, int(ivec2(64, 0)))), min(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(64, 64, 64)))), 0 ^ ((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, int(ivec2(64, 0)))), min(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(64, 64, 64)))))) | 0, max((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, 64, 64)))) | 0, _GLF_IDENTITY((_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64), min(clamp(64, 64, 64), clamp(64, 64, 64)))) | 0, ((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, _GLF_IDENTITY(64, (64) | (64)), 64), clamp(64, 64, 64)))) | 0) | 0)))))))), min(_GLF_IDENTITY(1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, 64, 64)))) | 0))))), int(ivec2(_GLF_IDENTITY(1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), _GLF_IDENTITY(clamp(64, 64, 64), max(clamp(64, 64, 64), clamp(64, 64, 64)))))) | 0))))), (true ? 1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), _GLF_IDENTITY(clamp(64, 64, 64), max(clamp(64, 64, 64), clamp(64, 64, 64)))))) | 0))))) : _GLF_FUZZED(28023))), 0))), 1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), _GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, 64, 64)))))) | 0)))))))) - 0, (true ? (_GLF_IDENTITY(1 * (int(int(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(clamp(64, 64, 64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, int(ivec2(64, 0)))), min(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(64, 64, 64)))), 0 ^ ((_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, int(ivec2(64, 0)))), min(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(64, 64, 64)))))) | 0, max((_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), _GLF_IDENTITY(clamp(64, 64, 64), 1 * (clamp(64, _GLF_IDENTITY(64, (64) + 0), 64)))))) | 0, _GLF_IDENTITY((_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64), min(clamp(64, 64, _GLF_IDENTITY(64, (64) ^ 0)), clamp(64, 64, 64)))) | 0, ((_GLF_IDENTITY(clamp(64, 64, 64), min(_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) | (64)), 64), 0 + (_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) | (64)), 64), (true ? clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | (64)), 64) : _GLF_FUZZED(10719))))), clamp(64, 64, 64)))) | 0) | 0)))))))), min(_GLF_IDENTITY(1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, 64, 64)))) | 0))))), int(ivec2(_GLF_IDENTITY(1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), _GLF_IDENTITY(clamp(64, 64, 64), max(clamp(64, 64, 64), clamp(64, 64, 64)))))) | 0))))), (true ? _GLF_IDENTITY(1, (1) | 0) * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), _GLF_IDENTITY(clamp(64, 64, 64), max(clamp(64, 64, 64), clamp(64, 64, 64)))))) | 0))))) : _GLF_FUZZED(28023))), 0))), 1 * (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (_GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), _GLF_IDENTITY(clamp(64, 64, 64), min(clamp(64, 64, 64), clamp(64, 64, _GLF_IDENTITY(64, max(64, 64)))))))) | 0)))))))) - 0 : _GLF_FUZZED(-53745))))))))), 2);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
