#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u) | (workgroup_size)), 0u ^ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! _GLF_IDENTITY((_injected_loop_counter < 1), ! (! ((_injected_loop_counter < 1))))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)))) + log(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.6))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(525.821)), float(0.0), bool(true))))), 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(dot(3.6, -47.90)) : 0.0))) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(39.71)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(327.941)), bool(false)))), bool(true))), 1.0))), 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.4))), 0.0)), 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8579.2664) : 1.0)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.6))), sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) * 1.0), sqrt(1.0))), 0.0, 0.0, 1.0, 0.0)))))) / 1.0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(6.2, clamp(6.2, 6.2, 6.2))))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + tan(0.0))), 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), float(float(sqrt(1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-9.8)), bool(false))))), 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(49.02))), sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))) / 1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))) / 1.0))) + 0.0), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))) / 1.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.9, max(-6.9, -6.9)))), bool(false))), 1.0))).y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.0, 89.83)))) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(28410))), 2))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) ^ 0)))), int(_GLF_IDENTITY(2, ~ (~ (2))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ _GLF_IDENTITY((~ (_injected_loop_counter ++)), ((~ (_injected_loop_counter ++))) / 1))) << 0))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(min(int(8), int(8)), (min(int(8), int(8))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(54830) : _GLF_IDENTITY(0, clamp(0, 0, 0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(min(int(8), int(8)), (min(int(8), int(8))) | 0), ~ (~ (min(int(8), int(8)))))) - 0)), clamp(~ (_GLF_IDENTITY(min(int(8), int(8)), (_GLF_IDENTITY(min(int(8), int(_GLF_IDENTITY(8, (8) - 0))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((min(int(8), int(8))), ((min(int(8), int(8)))) * 1), 0 ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((min(int(8), int(8))), ((min(int(8), int(8)))) * 1), clamp(~ _GLF_IDENTITY((min(int(8), int(8))), ((min(int(8), int(8)))) * 1), ~ _GLF_IDENTITY((min(int(8), int(8))), ((min(int(8), int(8)))) * 1), ~ _GLF_IDENTITY((min(int(8), int(8))), ((min(int(8), int(8)))) * 1)))))))) - 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(min(int(8), int(8)), (_GLF_IDENTITY(min(int(8), int(8)), ~ (~ (min(int(8), int(8)))))) - 0)), (~ (_GLF_IDENTITY(min(int(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, ~ (~ (8))))))), int(8)), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << (0 ^ 0))))), int(8)), ~ (~ (min(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, 0 + (8))) >> 0)), int(8)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ (min(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) ^ _GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(ivec3(-60383, -22091, -80461)))), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8)), int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-331.724))))), injectionSwitch.x)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) ^ 0)) << ((0 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))))))), (int(8)) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1))))))))))) : _GLF_FUZZED(_injected_loop_counter))), int(8)), 0 ^ (min(_GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) ^ 0)) << ((0 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))))))), (int(8)) | _GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(_GLF_IDENTITY(8, (8) - (0 | 0)))), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))), clamp(((int(8))), ((int(8))), ((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1, (_GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1) | (_GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)))), 1, 1, 1), (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), clamp(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (false ? _GLF_FUZZED(ivec4(56547, 3964, -81538, -94084)) : _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (true ? ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1) : _GLF_FUZZED(ivec4(-90902, -29248, 68267, -10858)))))), ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)))) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), (_GLF_IDENTITY((int(8)), ((int(8))) | (_GLF_IDENTITY((int(8)), (false ? _GLF_FUZZED(_injected_loop_counter) : (int(8))))))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1))))))))) : _GLF_FUZZED(_injected_loop_counter))), int(8)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (min(int(8), int(8))), 0 + (~ (min(int(8), int(8)))))), ~ (~ ((_GLF_IDENTITY(~ (min(int(8), int(8))), 0 + (~ (min(int(8), int(8))))))))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ (min(int(8), int(8)))))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ _GLF_IDENTITY((min(int(8), int(8))), (_GLF_IDENTITY((min(int(8), int(8))), ((min(int(8), int(8)))) << 0)) / 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ (min(int(8), int(8))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), clamp(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)))), ~ (~ (min(int(8), int(8)))))))))) - 0)))), 0 | ((_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ (min(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) ^ _GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(ivec3(-60383, -22091, -80461)))), ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(8, clamp(8, _GLF_IDENTITY(8, (8) | (8)), 8)), int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(8, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (ivec3(8, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-331.724))))), injectionSwitch.x)), 0)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) ^ 0)) << ((0 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))))))), (int(8)) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1))))))))))) : _GLF_FUZZED(_injected_loop_counter))), int(8)), 0 ^ (min(_GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) ^ 0)) << ((0 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))))))), (int(8)) | _GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(_GLF_IDENTITY(8, (8) - (0 | 0)))), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), min(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(int(int(8))), (int(int(int(8)))) ^ 0)), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))), clamp(((int(8))), ((int(8))), ((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), clamp(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1, (_GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1) | (_GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)))), 1, 1, 1), (_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), clamp(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (false ? _GLF_FUZZED(ivec4(56547, 3964, -81538, -94084)) : _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (true ? ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1) : _GLF_FUZZED(ivec4(-90902, -29248, 68267, -10858)))))), ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1)))) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((_GLF_IDENTITY(int(8), min(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))), _GLF_IDENTITY(((int(8))), 0 | (((int(8))))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), (_GLF_IDENTITY((int(8)), ((int(8))) | (_GLF_IDENTITY((int(8)), (false ? _GLF_FUZZED(_injected_loop_counter) : (int(8))))))) << 0) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), ((int(8))) << 0) * 1)), 1, 1, 1), (ivec4((_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), _GLF_IDENTITY(((int(8))) << 0, (true ? ((int(8))) << 0 : _GLF_FUZZED(findMSB(mix(-13835, _injected_loop_counter, true)))))) * 1)), 1, 1, 1)) * ivec4(1, 1, 1, 1))))))))) : _GLF_FUZZED(_injected_loop_counter))), int(8)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (min(int(8), int(8))), 0 + (~ (min(int(8), int(8)))))), ~ (~ ((_GLF_IDENTITY(~ (min(int(8), int(8))), 0 + (~ (min(int(8), int(8))))))))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ (min(int(8), int(8)))))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ _GLF_IDENTITY((min(int(8), int(8))), (_GLF_IDENTITY((min(int(8), int(8))), ((min(int(8), int(8)))) << 0)) / 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), ~ (~ (min(int(8), int(8))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), clamp(min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79355) : _GLF_IDENTITY(0, 1 * (0)))))) - 0)) * 1)), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), int(8)))), ~ (~ (min(int(8), int(8)))))))))) - 0)))))) | _GLF_IDENTITY(0, (0) ^ 0)) - 0))) - 0), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), (int(8)) / 1), int(8)), (_GLF_IDENTITY(min(_GLF_IDENTITY(int(8), (int(8)) - 0), int(8)), ~ (_GLF_IDENTITY(~ (min(int(8), int(8))), (~ (min(int(8), int(8)))) | (~ (min(int(8), int(8)))))))) - 0)))), (true ? ~ (_GLF_IDENTITY(min(int(8), int(_GLF_IDENTITY(8, 1 * (_GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (8), (~ (8)) * 1))))))), (_GLF_IDENTITY(min(int(8), int(8)), ~ (~ (min(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-96354))), clamp(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-96354))), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-96354))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-96354))), max(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-96354))), _GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(-96354)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), _GLF_IDENTITY(int(ivec2(8, 0)), (int(ivec2(8, 0))) * 1))), (int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) - 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), min(int(int(8)), int(int(8))))), 0)), (int(ivec2(8, 0))) * 1)))) ^ 0)))))) - 0)) : _GLF_FUZZED(_GLF_IDENTITY(44957, 0 + (44957)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))), true, _GLF_IDENTITY(true, true && (true)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-7862.9182)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), injectionSwitch.y))), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), float(mat3x4(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), float(mat4x2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), abs(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, abs(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0))))), true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), float(mat3x4(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), float(mat4x2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), abs(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, abs(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0))))), true, true, false)), false || (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), float(mat3x4(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), float(mat4x2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), abs(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, abs(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0))))), true, true, false))))))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), _GLF_IDENTITY(int(_GLF_IDENTITY(int(min(0, 0)), (int(min(0, 0))) / _GLF_IDENTITY(1, (1) >> 0))), (true ? int(_GLF_IDENTITY(int(min(0, 0)), (int(min(_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), 0))) / 1)) : _GLF_FUZZED(_injected_loop_counter)))))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))))) - 0))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     do
                                                      {
                                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                        {
                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                          {
                                                           do
                                                            {
                                                             do
                                                              {
                                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                                {
                                                                 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(false));
                                                          }
                                                         else
                                                          {
                                                          }
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, max(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, uvec2(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size)))))) ^ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))).y) / 1u) * _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) | (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)).x;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / _GLF_IDENTITY(1u, ~ (~ (1u))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(79660)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(855.046) : injectionSwitch.y))))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7416.6225)), bool(false))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7416.6225)), bool(false))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), transpose(transpose(transpose(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7416.6225)), bool(false))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0))))))))) < injectionSwitch.y))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                          {
                                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), false || (bool((true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), false || (_GLF_IDENTITY((true), bool(bool((true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_IDENTITY(true && (_GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))))), false || (true && (_GLF_IDENTITY((true), bool(bool((true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
                                              {
                                               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u))), 4, 64, 4);
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
                                }
                               else
                                {
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(virtual_gid, 48116u)) : subgroup_local_id)) + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), bool(bvec3((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), false, true)))), false || (bool(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), bool(bvec3((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), false, true))))))))))), true, true, false))), false, false, false))), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))) < subgroup_size), bool(bvec4(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0))) < subgroup_size))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0))) < subgroup_size))), false || (! (! (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), 0 + (_GLF_IDENTITY(1, 0 + (1))))) >> 0), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) >> 0))) < subgroup_size)))))) && true)), true, true, false))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false, false))), false))))))
            {
             int i = 0;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), ~ (~ (_GLF_IDENTITY(~ (int(0)), (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) + 0)) - 0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
                    {
                     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)), 64, _GLF_IDENTITY(4, (4) / 1));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) | _GLF_IDENTITY(0, int(ivec2(0, 1)))));
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
