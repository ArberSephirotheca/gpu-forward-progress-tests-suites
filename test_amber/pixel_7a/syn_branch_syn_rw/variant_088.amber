#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 bvec3 _f0;
 ivec4 _f1;
 bvec2 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 int _f5;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
} ;

struct _GLF_struct_25 {
 mat4 _f0;
} ;

struct _GLF_struct_24 {
 uint _f0;
 vec2 _f1;
 ivec4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
} ;

struct _GLF_struct_22 {
 ivec4 _f0;
 uvec4 _f1;
 mat2x3 _f2;
 mat3 _f3;
 mat4x3 _f4;
 vec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_27 _f5;
} ;

struct _GLF_struct_20 {
 mat3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 bvec3 _f1;
 bvec4 _f2;
 mat4 _f3;
 ivec2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
} ;

struct _GLF_struct_17 {
 uint _f0;
 ivec3 _f1;
 vec2 _f2;
 mat3 _f3;
 uint _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 mat3x4 _GLF_SWITCH_1_108v;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_29 {
 _GLF_struct_16 _f0;
 vec4 _f1;
 _GLF_struct_21 _f2;
 vec2 _f3;
 _GLF_struct_28 _f4;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 uvec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 ivec3 _f1;
 vec3 _f2;
 ivec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 mat2x3 _f1;
 int _f2;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 uvec4 _f1;
 vec4 _f2;
 ivec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 uvec4 _f3;
 int _f4;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 uvec2 _f1;
 ivec4 _f2;
 mat4 _f3;
 ivec4 _f4;
 int _f5;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 bvec4 _f1;
 mat3x4 _f2;
 float _f3;
 vec2 _f4;
 bvec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 uint subgroup_size;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 mat3x4 _f1;
 vec2 _f2;
 bvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec3 _f1;
 vec2 _f2;
 bool _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat4x2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_2 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_10 _f2;
 int _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_2(vec3(1.0), mat4x2(1.0), _GLF_struct_0(bvec3(true), uvec3(1u), vec2(1.0), true, ivec3(_GLF_IDENTITY(1, (1) | (0 | 0)))), _GLF_struct_1(bvec2(true), mat3x4(1.0), vec2(1.0), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || _GLF_IDENTITY(false, (false) && true))), true)), _GLF_struct_6(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), _GLF_struct_3(1, ivec3(1)), _GLF_struct_4(ivec4(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), bvec4(true), mat3x4(1.0), 1.0, vec2(1.0), bvec2(true), ivec3(1)), gl_SubgroupSize, _GLF_struct_5(bvec4(true), uvec2(1u), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))), (ivec4(1)) | (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))))), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), ivec4(_GLF_IDENTITY(1, 0 | (1))), 1)), _GLF_struct_10(_GLF_struct_7(mat2(1.0), ivec2(1), mat4x2(1.0), vec2(1.0)), _GLF_struct_8(vec4(1.0), uvec4(1u), vec4(1.0), ivec4(1), uvec3(1u)), _GLF_struct_9(bvec4(true), mat2x3(1.0), 1), uvec4(1u), 1), 1, _GLF_struct_12(bvec4(true), _GLF_struct_11(bvec2(true), ivec3(1), vec3(1.0), ivec4(1), mat2(1.0))), _GLF_struct_13(ivec2(1), uvec2(1u), true));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) : _GLF_FUZZED(uvec3(69455u, 179168u, 111089u))))) | (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_struct_replacement_14._f1.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_14._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_14._f1.subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) ^ 0) ^ (4)));
 if(subgroup_local_id + 1 < _GLF_struct_replacement_14._f1.subgroup_size)
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 58:
     while(false)
      {
       if(all(bvec2(true, true)))
        {
         if(_GLF_DEAD(false))
          continue;
         uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
         mat4x3 _GLF_SWITCH_0_2v[13], _GLF_SWITCH_0_3v;
         uint _GLF_SWITCH_0_4v;
         uvec3(_GLF_SWITCH_0_0v);
         lessThanEqual(vec3(-0.4, -970.035, 106.118), vec3(3381.0055, -68.69, _GLF_IDENTITY(778.598, (778.598) * 1.0)));
         (_GLF_SWITCH_0_1v / subgroup_id);
         ;
        }
       else
        {
         uvec3(88872u, 66277u, _GLF_IDENTITY(109917u, max(109917u, 109917u)));
         (-655 - ivec2(-46860, -35085));
        }
       if(_GLF_DEAD(false))
        return;
       for(       cos(5.0);
 false; -71876)
        {
        }
       if((mat3x4(2680.4796, -5583.7998, -7.6, 233.407, 2336.1988, 2340.2428, 212.942, 95.02, -2.0, 8.5, _GLF_IDENTITY(-8.1, clamp(-8.1, -8.1, _GLF_IDENTITY(-8.1, max(-8.1, -8.1)))), 8397.9406) == mat3x4(9.4, -6351.4899, 3.3, 8255.7885, 609.618, -1.3, -4925.2143, -99.91, 45.61, 158.913, 8.0, -9992.4738)))
        {
        }
       vec4 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[62], _GLF_SWITCH_0_7v[5];
       uvec2 _GLF_SWITCH_0_8v;
      }
     case 97:
     for(     injectionSwitch;
 false; (mat4x2(-96.46, 7.4, -7677.8446, -9880.4709, -184.782, 823.582, 67.96, 9.7) * mat4(-3.9, 76.39, -20.56, -7.7, -5.2, 745.023, -1.9, -31.75, 409.225, 5.7, 5.6, -5.4, 327.349, -8619.9855, -7.3, -1.6)))
      {
       {
        do
         {
          ;
          dot(vec3(983.261, -1.3, 2476.9192), mod(vec3(3309.2707, 1.3, -68.25), -32.82));
          uint _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
          bvec2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
          mat2x3 _GLF_SWITCH_0_14v[99];
          vec3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
          if(_GLF_DEAD(false))
           return;
          mat3(mat4(-8891.2694, 656.042, -1.4, -2125.0876, _GLF_IDENTITY(-5.2, clamp(-5.2, _GLF_IDENTITY(-5.2, (false ? _GLF_FUZZED(26.36) : -5.2)), -5.2)), 94.26, 312.880, -6317.3413, -8.3, 461.867, -91.38, 9.8, -679.405, -4671.6150, 4711.1214, 72.00));
         }
        while((mat4(_GLF_IDENTITY(-0.0, max(_GLF_IDENTITY(-0.0, float(mat3(-0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), -0.0)), -69.73, -612.617, -38.74, -574.005, 2.8, -8422.1722, 1590.9252, -21.67, -60.44, 80.06, 9827.9964, -111.282, -68.06, 1.8, 6.4) != mat4(-933.585, _GLF_IDENTITY(7627.7169, (_GLF_IDENTITY(7627.7169, (true ? 7627.7169 : _GLF_FUZZED(8.9)))) / cos(0.0)), 2886.5083, _GLF_IDENTITY(676.013, min(676.013, 676.013)), 19.79, 5600.8440, -544.370, _GLF_IDENTITY(5.9, (5.9) / 1.0), -8543.6884, -6.7, -840.392, -2.4, -49.26, _GLF_IDENTITY(6290.1167, float(mat2(6290.1167, exp(0.0), 0.0, 1.0))), 8.5, -886.282)));
        for(mat4x3 _GLF_SWITCH_0_17v[81], _GLF_SWITCH_0_18v[97]; true; ivec2(-80627, 55491))
         {
          mat4x3 _GLF_SWITCH_0_19v[31];
          _GLF_IDENTITY(((vec4(-2539.8477, 210.638, 1193.3094, -648.720) * vec4(9.4, -7.5, -914.301, 9731.0409)) * vec4(-7297.3706, -9.8, -1875.1995, 40.93)), (((vec4(-2539.8477, 210.638, 1193.3094, -648.720) * vec4(9.4, -7.5, -914.301, 9731.0409)) * vec4(-7297.3706, -9.8, -1875.1995, 40.93))) - vec4(0.0, 0.0, 0.0, 0.0));
          float _GLF_SWITCH_0_20v[20], _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
          mat4x3(_GLF_IDENTITY(-731.509, (true ? -731.509 : _GLF_FUZZED(-3.2))), 93.09, 428.292, 0.9, 839.438, 0.5, -2.3, -73.86, -658.652, -3.6, 28.85, 982.083);
         }
        bitfieldInsert(-85337, bitfieldInsert(33907, (_GLF_IDENTITY(_GLF_IDENTITY(- -45882, (- -45882) * int(_GLF_ONE(1.0, injectionSwitch.y))), (- -45882) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)))), 95829, 83980), _GLF_IDENTITY(27691, (_GLF_IDENTITY(27691, (27691) / 1)) << 0), 79983);
        for(uvec2 _GLF_SWITCH_0_23v[89], _GLF_SWITCH_0_24v[92]; true; bvec4(false, true, false, false))
         {
          ;
          bool _GLF_SWITCH_0_25v[46];
          bvec2(true, true);
          uvec3 _GLF_SWITCH_0_26v[83];
          uvec3(uvec2(144084u, 136212u), _GLF_struct_replacement_14._f1.subgroup_size);
          uint _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
          (vec3(81.78, 5.6, -7094.6150) * mat4x3(-5.1, 51.90, 476.793, -4971.1980, -1953.1281, _GLF_IDENTITY(279.985, float(vec2(279.985, 1.0))), -3.3, 99.27, -23.60, -438.867, 6.7, -9117.4741));
          uvec2(109256u, 170592u);
          (mat2x4(-387.125, -314.683, -3.2, _GLF_IDENTITY(-5.9, float(mat4x3(-5.9, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0))), 9.7, -3.7, -276.123, -756.559) - mat2x4(_GLF_IDENTITY(9426.2149, (9426.2149) / 1.0), -8838.0690, -77.42, -7.0, -11.24, -1.2, 8.1, 4626.8220));
         }
        mat2(_GLF_IDENTITY(8363.8781, (8363.8781) / 1.0), 8.8, -9184.8522, -409.942);
        bvec2 _GLF_SWITCH_0_30v[56], _GLF_SWITCH_0_31v[29];
        if((ivec4(32952, -79138, -41091, 94573) != ivec4(18089, 65666, 50513, -23388)))
         {
          bvec3 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
          bvec4 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
         }
       }
       mat4(9.6, 116.808, _GLF_IDENTITY(9.2, float(vec2(_GLF_IDENTITY(9.2, (false ? _GLF_FUZZED(acos(_GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_IDENTITY(9.2, (false ? _GLF_FUZZED(250.610) : _GLF_IDENTITY(9.2, (9.2) * 1.0))))), 1.0))), -70.95, -130.551, 3.8, 4.5, -53.63, 8.3, -5252.0227, 234.341, 9.4, 7310.9832, 0.2, -8593.7130, 8042.7419);
      }
     case 0:
     case 35:
     case 47:
     case 4:
     int i = 0;
     case 59:
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u + (read)), 4, 64, 4);
     break;
     case 43:
     ivec3 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 23:
     if(false)
      {
       {
       }
       while(_GLF_IDENTITY(true, (true) || false))
        {
         uvec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
         mat4x2 _GLF_SWITCH_1_2v;
         ivec2 _GLF_SWITCH_1_3v[43];
         while((53314 >= -97555))
          {
           _GLF_IDENTITY(lessThan(uvec2(191291u, 55150u), uvec2(125597u, 50666u)), _GLF_IDENTITY(bvec2(bvec4(lessThan(uvec2(191291u, 55150u), uvec2(125597u, 50666u)), false, true)), bvec2(bvec2(bvec2(bvec4(lessThan(uvec2(191291u, 55150u), uvec2(125597u, 50666u)), false, true))))));
           ;
           bvec4 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[79];
          }
         ivec3(-77304, 40137, 37919);
        }
       {
        while((vec3(_GLF_IDENTITY(660.307, max(_GLF_IDENTITY(660.307, (660.307) * 1.0), 660.307)), 7.0, 58.78) != vec3(-8.4, 0.6, -300.857)))
         {
          vec4(-3.4).qqsq;
          uvec4 _GLF_SWITCH_1_7v;
          uvec3(159639u, 7828u, 35342u);
         }
        bvec3 _GLF_SWITCH_1_8v[61], _GLF_SWITCH_1_9v;
        float _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v[98], _GLF_SWITCH_1_12v[39];
        if(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))))))
         {
          min(uvec3(43396u, 71024u, 65788u), (uvec3(90201u, 44900u, 122212u) ^ uvec3(31642u, 43687u, 4871u)));
          mat2(8.4, 8.7, 3.7, -7398.8487);
          ;
          mat3x4 _GLF_SWITCH_1_13v[9], _GLF_SWITCH_1_14v;
          mat3x2(648.165, -4.3, -4722.3040, -43.76, -6.4, -95.35);
          vec4(3.1, -9.0, -2.3, -1.2);
          int _GLF_SWITCH_1_15v;
          bool _GLF_SWITCH_1_16v[11], _GLF_SWITCH_1_17v[87], _GLF_SWITCH_1_18v;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(0.0, 0.0, abs(0.0), 0.0)), tan(0.0)), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(injectionSwitch.x, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(0.0, 0.0, abs(0.0), 0.0)), tan(0.0)))))) > injectionSwitch.y))))
           return;
         }
        else
         {
          ivec2 _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v;
          mat3 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v;
          transpose(mat4(-3214.9788, -155.259, _GLF_IDENTITY(6.5, clamp(6.5, 6.5, 6.5)), -8574.1360, 7.3, 62.28, 2399.8271, 1437.5909, 673.357, 40.64, 125.414, 8.7, -7058.3461, 73.40, 3.3, -2.8));
          mat2 _GLF_SWITCH_1_24v;
          read;
          mat4 _GLF_SWITCH_1_25v;
         }
       }
       for(ivec3 _GLF_SWITCH_1_26v[33]; (uvec2(87237u, 187836u) != uvec2(8997u, 90697u)); (bitfieldInsert(uvec4(169218u, 43485u, 91921u, 10601u), uvec4(47792u, 96948u, 144052u, 99697u), 38755, 97792) * uvec4(68436u, 140795u, 157523u, 14921u)))
        {
         uvec2 _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v;
         if(false)
          {
           _GLF_IDENTITY((uvec2(164450u, 22348u) | _GLF_struct_replacement_14._f1.subgroup_size), uvec2(_GLF_IDENTITY(uvec3((uvec2(164450u, 22348u) | _GLF_struct_replacement_14._f1.subgroup_size), 0u), (uvec3((uvec2(164450u, 22348u) | _GLF_struct_replacement_14._f1.subgroup_size), 0u)) | uvec3(0u, 0u, 0u))));
           _GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))) / ivec3(-70318, 97628, -22918)), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))), (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))))))) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))))))))))))) / ivec3(-70318, 97628, -22918)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))))), ivec3(0, 0, 0) ^ (max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)), ((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))) / ivec3(-70318, 97628, -22918))) + ivec3(0, 0, 0)), 1)), (ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))))), ivec3(0, 0, 0) ^ (max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)), ((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))) / ivec3(-70318, 97628, -22918))) + ivec3(0, 0, 0)), 1))) ^ ivec3(0, 0, 0)), (ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))) / ivec3(-70318, 97628, -22918)), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(-6325, max(-6325, -6325)), 65391, -86147), (ivec3(-6325, _GLF_IDENTITY(65391, (65391) / 1), -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))) / ivec3(-70318, 97628, -22918))) + ivec3(0, _GLF_IDENTITY(0, min(0, 0)), 0)), 1))) - ivec3(0, 0, 0))), 0)), (ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(62121, 73541, 50879)), ivec3(1, 1, 1) * (_GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), clamp(ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147))), (_GLF_IDENTITY(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), clamp(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), clamp(ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147))), (_GLF_IDENTITY(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), clamp(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)), min((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), clamp(ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147))), (_GLF_IDENTITY(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), clamp(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)), (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), clamp(ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147))), (_GLF_IDENTITY(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), clamp(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), clamp(ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147))), (_GLF_IDENTITY(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), clamp(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)), ivec3(0, 0, 0) ^ ((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), clamp(ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147))), (_GLF_IDENTITY(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), clamp(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)))), (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), clamp(ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147), ivec3(-6325, 65391, -86147))), (_GLF_IDENTITY(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), clamp(true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)), true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918)))), ((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), _GLF_IDENTITY((ivec3(-6325, 65391, -86147)), min((ivec3(-6325, 65391, -86147)), _GLF_IDENTITY((ivec3(-6325, 65391, -86147)), ~ (~ ((ivec3(-6325, 65391, -86147))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))), clamp(_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918))) + ivec3(0, 0, 0)), 1)), (ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, _GLF_IDENTITY(-86147, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (-86147))), _GLF_IDENTITY((true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))), (_GLF_IDENTITY((true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))), ivec3(1, 1, 1) * ((true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))) + ivec3(0, 0, 0))))))) / ivec3(-70318, 97628, -22918)), ((_GLF_IDENTITY(ivec3(-6325, 65391, -86147), _GLF_IDENTITY((ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))))))), clamp((ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))))))), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879))))))), (ivec3(-6325, 65391, -86147)) | (_GLF_IDENTITY(ivec3(-6325, 65391, -86147), max(ivec3(-6325, 65391, -86147), _GLF_IDENTITY(ivec3(-6325, 65391, -86147), (true ? ivec3(-6325, 65391, -86147) : _GLF_FUZZED(ivec3(62121, 73541, 50879)))))))))) / ivec3(-70318, 97628, -22918))) + ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(findLSB(packSnorm2x16(vec2(2363.7549, 267.447)))) : 0)), 0)), 1))) - ivec3(0, 0, 0))), 0))) / ivec3(1, 1, 1)));
           mat2x4(9099.2144, 1601.8591, _GLF_IDENTITY(-6.3, clamp(-6.3, -6.3, -6.3)), -7056.4134, _GLF_IDENTITY(83.35, (83.35) - 0.0), 14.64, -52.16, 9.5);
           findLSB(_GLF_IDENTITY(uvec4(152298u, 164643u, 182283u, 164285u), (false ? _GLF_FUZZED(uvec4(136833u, 42626u, 122546u, 169541u)) : uvec4(152298u, 164643u, 182283u, 164285u))));
           (_GLF_IDENTITY(uvec4(185326u, 134507u, 130871u, 109019u) ^ uvec4(159692u, 11037u, 171229u, 41548u), ~ (~ (uvec4(185326u, 134507u, 130871u, 109019u) ^ uvec4(159692u, 11037u, 171229u, 41548u)))));
           _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]));
           mat4 _GLF_SWITCH_1_30v;
           ;
          }
         mat2x3(264.316, -119.794, -10.79, 63.47, 3.3, -8.0);
         for(         bvec3(false, true, true);
 false; mat3x2(65.96, 3.4, -2.1, -3139.8722, -5.0, _GLF_IDENTITY(-173.382, mix(float(-173.382), float(_GLF_FUZZED(-66.36)), bool(false)))))
          {
           vec4(_GLF_IDENTITY((mat4x2(3071.8509, 926.969, 1.2, -284.535, -6172.0535, -9.8, -0.8, 603.305) / 54.40)[2], ((mat4x2(3071.8509, 926.969, 1.2, -284.535, -6172.0535, -9.8, -0.8, 603.305) / 54.40)[2]) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0)))), transpose(transpose(mat3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0)))))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0)))), transpose(transpose(mat3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0)))))))), float(float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0)))), transpose(transpose(mat3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0)))))))))))) / 1.0)))), 3.4, -1844.0278);
           mat4x3(37.00, _GLF_IDENTITY(-8414.0599, (-8414.0599) - 0.0), _GLF_IDENTITY(3.1, mix(float(_GLF_FUZZED(vec3(-3.5, -2403.3561, -23.18).s)), float(3.1), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 9.4, 1.7, -51.88, 4.4, -9.5, 5.5, 0.1, -539.300, 6.1);
           (findMSB(uvec3(153428u, 81700u, 19396u)) << 67036);
           read;
           mat3x2(63.66, 5.9, -9862.8504, 49.04, 43.84, 5.5);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           mat3 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v[25];
          }
         ;
        }
       ;
      }
     case 66:
     if(false)
      {
       (packHalf2x16(vec2(0.7, -718.726)) ^ (uvec3(30241u, 76270u, 64417u) | (false ? _GLF_IDENTITY(uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u)))), clamp(_GLF_IDENTITY(uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u)))), clamp(uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u)))), uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u)))), _GLF_IDENTITY(uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u)))), (uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u))))) ^ uvec3(0u, 0u, 0u)))), uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u)))), uvec3(160636u, 42860u, _GLF_IDENTITY(104677u, uint(uvec4(104677u, 0u, 1u, 1u)))))) : uvec3(146844u, 41985u, 113970u))));
       if((-7270.3755 > exp2(-9600.9901)))
        {
         lessThan(injectionSwitch, injectionSwitch);
         if(true)
          {
           bvec4 _GLF_SWITCH_1_33v, _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v;
           uint _GLF_SWITCH_1_36v, _GLF_SWITCH_1_37v[99];
           greaterThanEqual(pow(vec4(-589.585, -0.3, -640.219, 2.4), vec4(-568.269, 70.72, 6813.5284, -9.8)), vec4(6.5, 0.9, -1.8, -2.2));
          }
         else
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), min(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))))))))
            {
             case 19:
             mat3x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
             case 0:
             case 71:
             case 51:
             case 79:
             bvec4(true, false, true, true);
             case 28:
             case 37:
             mat4x2 _GLF_SWITCH_1_38v;
             case 54:
             case 73:
             mat4x2 _GLF_SWITCH_1_39v[53], _GLF_SWITCH_1_40v, _GLF_SWITCH_1_41v;
             case 23:
             bvec3 _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v[28];
             mat2x3 _GLF_SWITCH_1_44v;
             case 90:
             mat2x4(-7530.9792, _GLF_IDENTITY(23.83, min(_GLF_IDENTITY(23.83, mix(float(_GLF_FUZZED(-256.631)), float(_GLF_IDENTITY(23.83, float(mat2x3(23.83, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true))), 23.83)), 70.89, -693.776, 8.3, 2.7, -638.361, -427.208);
             break;
             case 78:
             (mat3x4(vec4(-5.9, 5.2, 703.718, 8.7), vec4(0.1, 0.2, 931.374, 6895.9589), log(vec4(706.541, 923.360, -4323.8039, -297.986))) / (++ _GLF_SWITCH_2_1v));
             default:
             1;
            }
          }
         if((_GLF_struct_replacement_14._f1.subgroup_size < subgroup_id))
          {
           injectionSwitch;
           mat3(7901.9966, -9.5, 451.191, -913.346, -2420.4815, -6.3, 54.24, -0.6, -4715.5481);
           true;
           -98839;
           (8731 | (ivec3(36308, 20794, -22773) % -33552));
           bitCount((virtual_gid ++));
           vec3 _GLF_SWITCH_1_45v, _GLF_SWITCH_1_46v[60];
          }
         ;
         183856u;
        }
       {
        for(uvec2 _GLF_SWITCH_1_47v; ((mat2x4(-3275.9493, -6.0, 90.84, _GLF_IDENTITY(6.8, clamp(6.8, 6.8, 6.8)), -4183.3261, -9.1, -6480.9101, -2433.4746) == mat2x4(-88.00, -50.19, -277.414, 4.2, -4.1, -9.3, -647.921, 190.382))); mat3x4(1441.5086, _GLF_IDENTITY(-4968.2963, (-4968.2963) / 1.0), 969.358, -4509.4701, _GLF_IDENTITY(81.14, (81.14) / 1.0), -56.98, 353.431, _GLF_IDENTITY(-8.1, (-8.1) * 1.0), 2524.2249, 3.4, -1.9, 62.12))
         {
          switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), int(7)))))
           {
            case 18:
            mat4(-15.57, -5.2, -7.6, 175.288, 6077.8782, 7.0, -9.1, -6.6, 855.821, _GLF_IDENTITY(70.29, max(70.29, 70.29)), 7561.9720, -3134.7365, 811.387, -9.0, -2.2, 18.41);
            case 79:
            vec3(8.8, _GLF_IDENTITY(0.9, clamp(0.9, 0.9, 0.9)), -7.2);
            case 0:
            ivec4 _GLF_SWITCH_1_48v, _GLF_SWITCH_1_49v, _GLF_SWITCH_1_50v;
            false;
            mat3x2(_GLF_IDENTITY(-306.871, float(_GLF_IDENTITY(mat4x2(-306.871, tan(0.0), tan(0.0), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-1.7) : cos(0.0))), 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(-306.871, _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), _GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-8628.9314) : _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(0.5)), float(tan(0.0)), bool(true))))), cos(_GLF_IDENTITY(0.0, (0.0) / abs(1.0))), 0.0, 0.0, 1.0, 1.0)))))), -9.8, -0.6, 48.57, -4.4, 824.106);
            _GLF_IDENTITY((clamp(uvec3(39103u, 15250u, 161238u), uvec3(197106u, 74653u, _GLF_IDENTITY(97844u, 0u | (_GLF_IDENTITY(97844u, min(_GLF_IDENTITY(97844u, (97844u) * 1u), 97844u))))), uvec3(83846u, 59613u, _GLF_IDENTITY(63513u, (63513u) | _GLF_IDENTITY((63513u), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((63513u), ~ (~ ((63513u)))) : _GLF_FUZZED((workgroup_base * workgroup_base))))))) | subgroup_id), ((clamp(uvec3(39103u, 15250u, 161238u), uvec3(197106u, 74653u, _GLF_IDENTITY(97844u, 0u | (_GLF_IDENTITY(97844u, min(_GLF_IDENTITY(97844u, (97844u) * 1u), 97844u))))), uvec3(83846u, 59613u, _GLF_IDENTITY(63513u, (63513u) | _GLF_IDENTITY((63513u), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((63513u), ~ (~ ((63513u)))) : _GLF_FUZZED((workgroup_base * workgroup_base))))))) | subgroup_id)) | ((clamp(uvec3(39103u, 15250u, 161238u), uvec3(197106u, 74653u, _GLF_IDENTITY(97844u, 0u | (_GLF_IDENTITY(97844u, min(_GLF_IDENTITY(97844u, (97844u) * 1u), 97844u))))), uvec3(83846u, 59613u, _GLF_IDENTITY(63513u, (63513u) | _GLF_IDENTITY((63513u), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((63513u), ~ (~ ((63513u)))) : _GLF_FUZZED((workgroup_base * workgroup_base))))))) | subgroup_id)));
            ivec3 _GLF_SWITCH_1_51v, _GLF_SWITCH_1_52v;
            break;
            default:
            _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(2), int(2))), int(_GLF_ONE(1.0, injectionSwitch.y))), max(ivec3(1, (0 >> _GLF_IDENTITY(int(2), int(2))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec3(1, (0 >> _GLF_IDENTITY(int(2), int(2))), int(_GLF_ONE(1.0, injectionSwitch.y))))))))));
           }
         }
        bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true);
        while(true)
         {
          switch(_GLF_SWITCH(0))
           {
            case 58:
            _GLF_IDENTITY((mat2(6.2, 6.9, -3531.6214, -750.696) * injectionSwitch), min((mat2(6.2, 6.9, -3531.6214, -750.696) * injectionSwitch), (mat2(6.2, 6.9, -3531.6214, -750.696) * injectionSwitch)));
            case 0:
            case 10:
            case 24:
            case 31:
            case 88:
            case 50:
            case 57:
            case 3:
            case 80:
            mat2x3 _GLF_SWITCH_1_53v, _GLF_SWITCH_1_54v;
            break;
            case 7:
            mat3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
            default:
            1;
           }
         }
        while(true)
         {
          matrixCompMult(mat2x4(-131.308, 3813.3649, -39.33, -96.11, 4792.0216, 91.30, -8.0, -6.8), mat2x4(-245.167, 64.05, -8899.4742, 44.01, 9.7, 69.13, 6.1, 4.8));
          findLSB(uvec2(_GLF_IDENTITY(24335u, (24335u) << 0u), 126588u));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          mat3x4 _GLF_SWITCH_1_55v;
          mat3 _GLF_SWITCH_1_56v[63], _GLF_SWITCH_1_57v[20];
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           break;
          mat2x3 _GLF_SWITCH_1_58v[86];
         }
        {
         mat2 _GLF_SWITCH_1_59v, _GLF_SWITCH_1_60v, _GLF_SWITCH_1_61v[59];
         uvec3 _GLF_SWITCH_1_62v;
         uvec3 _GLF_SWITCH_1_63v[68], _GLF_SWITCH_1_64v;
         ((ivec3(-23304, 55161, 76207)) == ivec3(-24551));
         uvec2(64956u, 1510u).rgr;
        }
        mat4 _GLF_SWITCH_1_65v[59], _GLF_SWITCH_1_66v, _GLF_SWITCH_1_67v;
       }
       _GLF_IDENTITY(radians(vec4(6.8, -4111.9716, -90.20, -8.2)), min(radians(vec4(6.8, -4111.9716, _GLF_IDENTITY(-90.20, mix(float(_GLF_IDENTITY(-90.20, min(-90.20, _GLF_IDENTITY(-90.20, float(float(-90.20)))))), float(_GLF_FUZZED(96.02)), bool(false))), -8.2)), radians(vec4(6.8, -4111.9716, -90.20, -8.2))));
       mat3x2 _GLF_SWITCH_1_68v, _GLF_SWITCH_1_69v, _GLF_SWITCH_1_70v;
       do
        {
         do
          {
           log(-97.09);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           mat2(_GLF_IDENTITY(mat3(1.9, 168.571, 32.00, 2947.4638, -59.19, 4980.3311, -4.8, 6.0, -884.483), (mat3(1.9, 168.571, 32.00, 2947.4638, -59.19, 4980.3311, -4.8, 6.0, -884.483)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)));
           (mat2x4(-5.5, -3318.0209, 8538.7157, -731.135, -985.926, -2.3, 71.23, 8527.9502) + uintBitsToFloat(next_virtual_gid));
           mat3(-80.42, -812.971, -4.0, 17.81, -282.932, _GLF_IDENTITY(807.045, (807.045) * 1.0), -5.3, 3477.5345, -6372.5710);
           bool _GLF_SWITCH_1_71v, _GLF_SWITCH_1_72v[38];
           mat3 _GLF_SWITCH_1_73v, _GLF_SWITCH_1_74v, _GLF_SWITCH_1_75v;
           ;
          }
         while(((mat4(-2.6, -27.26, -0.0, 945.738, 8479.8520, 5.5, 99.36, -75.82, 523.721, 802.462, -9.5, 9.7, 921.942, -479.029, 70.11, 3.1) + 984.000) != mat4(5.0, 1266.5610, 8658.9000, -2.9, 6959.5204, -1890.4785, 3.5, 568.224, 2740.7381, -4.8, -242.276, 9.4, 5.0, -5528.1588, -5902.7134, -8.6)));
         mix(uvec3(110666u, 167607u, 78583u), (uvec3(16376u, 3357u, 171066u) % uvec3(67411u, 39919u, 14749u)), bvec3(false, false, true));
         outerProduct(vec4(9033.1522, -20.30, -84.15, -4650.2060), injectionSwitch);
         mat2x3(-34.41, -935.692, -9.1, -3.2, 6.1, 966.899);
         {
          mat3x4(2761.8203, 5991.0247, 7754.6498, -9414.7135, -4.9, 59.93, 5.2, 0.2, 24.04, 0.7, 2.1, -42.70);
          (-92.47 - (mat2x4(-4.6, 0.9, -63.11, -7324.6935, -1365.0605, 645.209, -539.850, 667.853) - mat2x4(-1.3, 36.46, 812.227, -530.164, -0.4, -954.748, 4944.0331, -874.925)));
          mat3 _GLF_SWITCH_1_76v[33];
          27667;
          mix(ivec3(-60724, 76994, -65574), ivec3(14684, 44408, 13315), bvec3(true, true, false));
          mat4x3(314.819, -19.66, -4.2, 280.660, _GLF_IDENTITY(-2.9, min(_GLF_IDENTITY(-2.9, max(-2.9, -2.9)), -2.9)), -9.4, -22.78, -1095.0548, -3.4, 5210.5898, -3.5, 0.9);
          step(vec4(-5806.4156, 27.52, -1.1, -75.02), atan(vec4(-2906.0743, -0.1, 8.0, 6.5), vec4(-387.381, 191.251, 79.57, -8276.0691)));
         }
         mat4(77.41, 6488.2677, 72.50, -192.411, 2134.7266, -4.3, 3347.0145, -6.1, -272.756, 450.457, -905.039, -9.0, -510.036, 120.595, -1167.7933, -8.2);
         uvec3 _GLF_SWITCH_1_77v, _GLF_SWITCH_1_78v;
        }
       while((uvec3(49300u, 112353u, 90017u) == _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup - uvec3(163681u, 140351u, 29435u), ~ (~ (num_workgroup - uvec3(_GLF_IDENTITY(163681u, _GLF_IDENTITY(uint(uvec4(163681u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), 0u, 1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u + (_GLF_IDENTITY(uint(uvec4(163681u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), 0u, 1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec4(163681u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), 0u, 1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) << 0u)))), 140351u, 29435u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(num_workgroup - uvec3(163681u, 140351u, 29435u), ~ (~ (num_workgroup - uvec3(_GLF_IDENTITY(163681u, _GLF_IDENTITY(uint(uvec4(163681u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), 0u, 1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u + (_GLF_IDENTITY(uint(uvec4(163681u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), 0u, 1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec4(163681u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec3(uint(7u), 0u, 1u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) << 0u)))), 140351u, 29435u)))))))));
       _GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), true)));
       if(false)
        {
         {
          mix(ivec4(83783, 53986, _GLF_IDENTITY(-44387, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (-44387)), _GLF_IDENTITY(-29107, clamp(-29107, -29107, -29107))), ivec4(-48007, 75160, 17088, 43874), bvec4(false, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), false));
         }
         uvec3 _GLF_SWITCH_1_79v, _GLF_SWITCH_1_80v[15], _GLF_SWITCH_1_81v;
         uvec2 _GLF_SWITCH_1_82v[22];
         float _GLF_SWITCH_1_83v, _GLF_SWITCH_1_84v[34], _GLF_SWITCH_1_85v;
         if(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))
          {
           _GLF_SWITCH_1_68v;
           greaterThan((mat4x2(2.7, -40.65, -26.65, -7.2, 8.5, 7801.7000, _GLF_IDENTITY(-48.78, (true ? -48.78 : _GLF_FUZZED(9258.9091))), -2.2) * _GLF_IDENTITY(vec4(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED(-35.81)), float(5.9), bool(true))), -7.0, _GLF_IDENTITY(460.639, clamp(460.639, _GLF_IDENTITY(460.639, float(vec2(460.639, 1.0))), 460.639)), 92.09), (vec4(_GLF_IDENTITY(5.9, (false ? _GLF_FUZZED(_GLF_SWITCH_1_83v) : 5.9)), -7.0, _GLF_IDENTITY(460.639, clamp(460.639, _GLF_IDENTITY(460.639, float(vec2(460.639, 1.0))), 460.639)), 92.09)) / vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)));
           mat2x3 _GLF_SWITCH_1_86v, _GLF_SWITCH_1_87v[69];
           mat2 _GLF_SWITCH_1_88v[84];
          }
         else
          {
           mat2(mat3(6.2, _GLF_IDENTITY(-49.67, mix(float(_GLF_FUZZED(784.741)), float(_GLF_IDENTITY(-49.67, min(-49.67, -49.67))), bool(true))), 3187.1085, -1.8, -99.02, 8309.7133, 477.134, 8.0, 4.4));
           bvec3(false).yyy;
           if(_GLF_DEAD(false))
            return;
           ivec3 _GLF_SWITCH_1_89v[56], _GLF_SWITCH_1_90v, _GLF_SWITCH_1_91v;
           -18.32;
           ;
           mat2(_GLF_SWITCH_1_68v);
           bvec3 _GLF_SWITCH_1_92v[1], _GLF_SWITCH_1_93v, _GLF_SWITCH_1_94v;
          }
         mat4x2 _GLF_SWITCH_1_95v;
        }
       if((uvec4(148777u, 7158u, _GLF_IDENTITY(112944u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (112944u)), 97710u) , (-21531 != -34858)))
        {
         ivec2(-43396, 27164);
        }
      }
     else
      {
       mat2 _GLF_SWITCH_1_96v, _GLF_SWITCH_1_97v[94], _GLF_SWITCH_1_98v;
       mat4x3(5.9, 455.243, -550.658, -998.641, _GLF_IDENTITY(-8225.3794, (_GLF_IDENTITY(-8225.3794, clamp(-8225.3794, -8225.3794, -8225.3794))) / abs(1.0)), 80.64, 4.5, 65.97, -7819.5855, -856.865, 99.65, -68.99);
       while((mat2x4(_GLF_IDENTITY(-9.4, min(-9.4, -9.4)), -526.564, 3.8, -8.0, 8233.8798, 177.595, 51.88, 5810.8759) != mat2x4(57.12, -56.13, 8671.9347, -115.548, 51.41, 3.6, 6.6, -0.5)))
        {
         uvec4(uvec2(129617u, 163075u), uvec2(23942u, 171507u));
        }
       {
        for(uvec4 _GLF_SWITCH_1_99v[82], _GLF_SWITCH_1_100v[65], _GLF_SWITCH_1_101v; true; mat3x4(8264.9204, 6.5, _GLF_IDENTITY(-34.65, (-34.65) + 0.0), 10.79, -64.21, 6034.8853, _GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)), 1.0, -4.7, -45.85, 0.8, 69.07))
         {
          uvec4 _GLF_SWITCH_1_102v, _GLF_SWITCH_1_103v;
         }
        if(_GLF_DEAD(false))
         return;
        uvec4(67523u, 170373u, 121084u, 79377u).ppq;
        vec2 _GLF_SWITCH_1_104v, _GLF_SWITCH_1_105v;
        for(        mat2x4(-9356.0175, 370.191, -5006.1136, 2727.1908, -48.86, 6.3, -38.51, 9.5);
 (vec3(-233.634, -60.79, 211.711) != (- vec3(-5.3, 5720.3633, -916.555))); _GLF_SWITCH_1_96v)
         {
          uvec3 _GLF_SWITCH_1_106v, _GLF_SWITCH_1_107v;
          _GLF_struct_29 _GLF_struct_replacement_29;
         }
        for(        bvec2(false, true);
 true; mat3x4(-94.14, 64.79, _GLF_IDENTITY(-4.9, (false ? _GLF_FUZZED(-63.64) : _GLF_IDENTITY(-4.9, min(-4.9, -4.9)))), -29.02, -187.716, -56.15, -221.867, -80.06, -2185.0598, 9720.1991, 1.0, 5491.4864))
         {
          float _GLF_SWITCH_1_109v;
          87105;
          ((_GLF_SWITCH_1_109v / mat4x2(-8.0, 88.00, 74.21, -81.88, 6370.3169, -2.2, -612.499, -1750.4576)) , bvec3(true, true, false));
          uint _GLF_SWITCH_1_110v[52];
          if(_GLF_DEAD(false))
           break;
          notEqual(bvec4(false, true, false, false), bvec4((6.7 != -43.59)));
          _GLF_SWITCH_1_98v;
          uint _GLF_SWITCH_1_111v, _GLF_SWITCH_1_112v, _GLF_SWITCH_1_113v[23];
          subgroup_id;
          mat4x3 _GLF_SWITCH_1_114v, _GLF_SWITCH_1_115v, _GLF_SWITCH_1_116v;
         }
        {
         ivec2 _GLF_SWITCH_1_117v, _GLF_SWITCH_1_118v;
         (((~ -78346) % mix(58756, -22890, false)) + ivec3(-84678, _GLF_IDENTITY(-35455, (-35455) | (-35455)), 46680));
         ivec3(62004, 45829, 22986);
         mat3x2 _GLF_SWITCH_1_119v;
         all(bvec4(false, true, true, true));
         if(_GLF_DEAD(false))
          return;
        }
        mat3x2 _GLF_SWITCH_1_120v;
       }
       ;
       while(((uvec2(91739u, _GLF_IDENTITY(134699u, (_GLF_IDENTITY(134699u, ~ (~ (134699u)))) >> 0u)) + uvec2(88886u, 39009u)) != _GLF_IDENTITY(uvec2(16369u, 192470u), uvec2(_GLF_IDENTITY(uvec4(uvec2(16369u, 192470u), (0u | 0u), 1u), max(uvec4(uvec2(16369u, 192470u), (0u | 0u), 1u), uvec4(uvec2(16369u, 192470u), (0u | 0u), 1u)))))))
        {
         if(false)
          {
           (~ uvec2(63524u, 26709u));
          }
         if(false)
          {
           (mat2x4(1245.0353, 734.334, 92.12, -8.0, -7.6, -708.300, 2.8, 8660.0164) * mat4x2(-0.0, -1.3, 6783.6119, -7.9, -77.08, -9.8, -531.736, 397.169));
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           _GLF_IDENTITY((+ vec3(3.1, -9782.0182, 5232.8422)), max((+ vec3(3.1, -9782.0182, 5232.8422)), (+ vec3(3.1, -9782.0182, 5232.8422))));
           uvec2 _GLF_SWITCH_1_121v, _GLF_SWITCH_1_122v;
           (+ _GLF_struct_replacement_14._f1.subgroup_size);
          }
         uvec2 _GLF_SWITCH_1_123v, _GLF_SWITCH_1_124v[72], _GLF_SWITCH_1_125v;
         for(mat2 _GLF_SWITCH_1_126v[74]; true; bvec3(false, true, true))
          {
           (uvec4(137580u, 149152u, 110726u, 153832u));
           vec4 _GLF_SWITCH_1_127v, _GLF_SWITCH_1_128v, _GLF_SWITCH_1_129v;
           mat3x4 _GLF_SWITCH_1_130v[33], _GLF_SWITCH_1_131v;
           bvec4 _GLF_SWITCH_1_132v, _GLF_SWITCH_1_133v[34], _GLF_SWITCH_1_134v;
           mat4x3(685.984, -5.3, -77.34, -72.11, 38.12, 717.501, _GLF_IDENTITY(_GLF_IDENTITY(4.1, clamp(_GLF_IDENTITY(4.1, mix(float(4.1), float(_GLF_FUZZED(90.18)), bool(false))), 4.1, _GLF_IDENTITY(4.1, min(4.1, 4.1)))), clamp(4.1, _GLF_IDENTITY(4.1, (false ? _GLF_FUZZED(1322.3132) : 4.1)), _GLF_IDENTITY(4.1, (4.1) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.3)), bool(false)))))), -46.11, 1.7, 9719.4016, 0.4, 8.9);
           _GLF_IDENTITY(uvec3(30421u, 112488u, _GLF_IDENTITY(13408u, (_GLF_IDENTITY(13408u, 0u + (_GLF_IDENTITY(13408u, (true ? 13408u : _GLF_FUZZED(subgroup_id)))))) / 1u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(30421u, 112488u, _GLF_IDENTITY(13408u, (_GLF_IDENTITY(13408u, 0u + (_GLF_IDENTITY(13408u, (true ? 13408u : _GLF_FUZZED(subgroup_id)))))) / 1u))));
           min(vec2(-86.02, -6188.0756), injectionSwitch);
           (_GLF_IDENTITY(ivec4(-47188, 4269, 88399, _GLF_IDENTITY(8650, (_GLF_IDENTITY(8650, min(_GLF_IDENTITY(8650, _GLF_IDENTITY(min(8650, 8650), _GLF_IDENTITY(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), clamp(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))))))), 8650))) | (8650))), (_GLF_IDENTITY(ivec4(-47188, 4269, 88399, _GLF_IDENTITY(8650, (_GLF_IDENTITY(8650, min(_GLF_IDENTITY(8650, _GLF_IDENTITY(min(8650, 8650), _GLF_IDENTITY(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), clamp(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))))))), 8650))) | (8650))), (ivec4(-47188, 4269, 88399, _GLF_IDENTITY(8650, (_GLF_IDENTITY(8650, min(_GLF_IDENTITY(8650, _GLF_IDENTITY(min(8650, 8650), _GLF_IDENTITY(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), clamp(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))))))), 8650))) | (8650)))) | ivec4(0, 0, 0, 0))) | (ivec4(-47188, 4269, 88399, _GLF_IDENTITY(8650, (_GLF_IDENTITY(8650, min(_GLF_IDENTITY(8650, _GLF_IDENTITY(min(8650, 8650), _GLF_IDENTITY(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), clamp(int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))), int(int(_GLF_IDENTITY(min(8650, 8650), 0 ^ (min(8650, 8650))))))))), 8650))) | (8650))))) | -80445);
           ;
           if(_GLF_DEAD(false))
            break;
          }
         bvec4(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))))), false, true);
         if((143187u > 153223u))
          {
           bvec4(true, true, false, false);
           ivec3 _GLF_SWITCH_1_135v, _GLF_SWITCH_1_136v;
           true;
           clamp(vec4(71.50, -3.4, _GLF_IDENTITY(-9.7, clamp(-9.7, -9.7, -9.7)), -895.910), _GLF_IDENTITY(vec4(49.44, -4.4, -3.1, -2.6), mix(vec4(_GLF_IDENTITY((vec4(49.44, -4.4, -3.1, -2.6))[0], _GLF_IDENTITY(min((vec4(49.44, -4.4, -3.1, -2.6))[0], (vec4(49.44, -4.4, -3.1, -2.6))[0]), clamp(min((vec4(49.44, -4.4, -3.1, -2.6))[0], (vec4(49.44, -4.4, -3.1, -2.6))[0]), min((vec4(49.44, -4.4, -3.1, -2.6))[0], (vec4(49.44, -4.4, -3.1, -2.6))[0]), _GLF_IDENTITY(min((vec4(49.44, -4.4, -3.1, -2.6))[0], (vec4(49.44, -4.4, -3.1, -2.6))[0]), min(min((vec4(49.44, -4.4, -3.1, -2.6))[0], (vec4(49.44, -4.4, -3.1, -2.6))[0]), min((vec4(49.44, -4.4, -3.1, -2.6))[0], (vec4(49.44, -4.4, -3.1, -2.6))[0])))))), (vec4(49.44, -4.4, -3.1, -2.6))[1], _GLF_FUZZED(6230.2778), (vec4(49.44, -4.4, -3.1, -2.6))[3]), vec4(_GLF_FUZZED(-3683.6681), _GLF_FUZZED(-889.356), (vec4(49.44, -4.4, -3.1, -2.6))[2], _GLF_FUZZED(748.076)), bvec4(false, false, true, false))), vec4(-4.9, -113.248, 4.9, _GLF_IDENTITY(8127.9080, clamp(_GLF_IDENTITY(8127.9080, (8127.9080) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5626.8128)), bool(false))), 0.0, 0.0, 1.0))), 8127.9080, 8127.9080))));
          }
         mat3x4 _GLF_SWITCH_1_137v, _GLF_SWITCH_1_138v[71];
        }
       mat2 _GLF_SWITCH_1_139v, _GLF_SWITCH_1_140v;
       for(bvec4 _GLF_SWITCH_1_141v, _GLF_SWITCH_1_142v; (7.2 == 5854.6600); vec4(-995.352, -46.19, -42.78, -63.21))
        {
         for(ivec3 _GLF_SWITCH_1_143v, _GLF_SWITCH_1_144v; _GLF_IDENTITY(true, ! (! (true))); (mat3x2(-34.23, -15.25, -3970.8208, -704.457, _GLF_IDENTITY(-5672.2779, float(_GLF_IDENTITY(vec4(-5672.2779, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0)), max(vec4(-5672.2779, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0)), vec4(-5672.2779, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(1.0)))))), 6.6) * mat3(_GLF_IDENTITY(86.20, max(86.20, 86.20)), 228.350, 4.0, -905.921, -5700.4497, _GLF_IDENTITY(5.1, min(5.1, 5.1)), 2400.3470, 73.96, 8.8)))
          {
           (mat4x2(1.0, -429.299, -2334.9369, -2.6, -9703.7581, -686.693, _GLF_IDENTITY(-0.0, min(-0.0, -0.0)), 7.2) + -1.9);
          }
         if((ivec4(-56993, 69955, 27506, -30464) == ivec4(98338, 25382, -63354, -59146)))
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 21:
             bvec2(true, false);
             case 67:
             _GLF_IDENTITY(vec3(-4567.1831, _GLF_IDENTITY(-8202.4946, float(mat2x3(_GLF_IDENTITY(-8202.4946, (-8202.4946) * 1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0), 0.0))), 47.58), _GLF_IDENTITY(mat3(1.0) * (vec3(-4567.1831, _GLF_IDENTITY(-8202.4946, float(mat2x3(_GLF_IDENTITY(-8202.4946, (-8202.4946) * 1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0), 0.0))), 47.58)), mix(vec3(_GLF_FUZZED((true ? 1.4 : -0.2)), (mat3(1.0) * (vec3(-4567.1831, _GLF_IDENTITY(-8202.4946, float(mat2x3(_GLF_IDENTITY(-8202.4946, (-8202.4946) * 1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0), 0.0))), 47.58)))[1], _GLF_FUZZED(2321.4604)), vec3((mat3(1.0) * (vec3(-4567.1831, _GLF_IDENTITY(-8202.4946, float(mat2x3(_GLF_IDENTITY(-8202.4946, (-8202.4946) * 1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0), 0.0))), 47.58)))[0], _GLF_FUZZED(0.6), (mat3(1.0) * (vec3(-4567.1831, _GLF_IDENTITY(-8202.4946, float(mat2x3(_GLF_IDENTITY(-8202.4946, (-8202.4946) * 1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0), 0.0))), 47.58)))[2]), bvec3(true, false, true))));
             case 0:
             case 62:
             case 27:
             injectionSwitch;
             case 59:
             _GLF_IDENTITY(vec4(-32.60, -8453.1518, 9.0, 7.8), min(vec4(-32.60, -8453.1518, 9.0, 7.8), vec4(-32.60, -8453.1518, 9.0, 7.8)));
             case 94:
             case 31:
             case 19:
             ;
             inversesqrt(vec3(-55.22, -76.70, -39.57));
             break;
             case 90:
             ;
             case 15:
             mat3x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[57];
             default:
             1;
            }
          }
         while((119709u < _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))
          {
           mat4x2(0.0, -284.528, -257.441, 485.741, 6.6, -6556.9303, 48.31, 2.2);
           (ivec4(28700, -64354, -7435, -84995) + -95705);
           ;
           mat4x2(-9.5, -210.009, 633.888, 4914.0722, 27.25, 5471.0567, -284.058, 6650.3074);
           ivec3(-30409, -98814, 26306);
           mat2(mat2x4(-7.4, 2.2, 8.3, -6.9, 802.334, -8.8, 0.3, _GLF_IDENTITY(-6665.6384, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)) ? -6665.6384 : _GLF_FUZZED(5.4)))));
           mat4 _GLF_SWITCH_1_145v, _GLF_SWITCH_1_146v, _GLF_SWITCH_1_147v;
          }
        }
       for(       (ivec4(25901, -77859, 49408, -61860) | 52426);
 isnan(_GLF_IDENTITY(7.5, max(7.5, 7.5))); false)
        {
         vec3 _GLF_SWITCH_1_148v, _GLF_SWITCH_1_149v[74];
         _GLF_SWITCH_1_148v;
         for(ivec4 _GLF_SWITCH_1_150v, _GLF_SWITCH_1_151v; all(bvec4(true, true, false, true)); _GLF_IDENTITY(-1157, clamp(-1157, -1157, -1157)))
          {
           (-7474.0289 / mat4x2(-21.09, 34.53, -5695.5536, 5064.5004, -3.8, 5227.2634, 95.01, 5.5));
           (mat4(-44.33, -1953.3437, 4.7, 5676.3741, -6.1, -97.43, 76.12, -2991.6618, 49.92, -6381.0207, -4202.1936, -1640.5007, -4136.3688, -165.744, -87.80, -4.0) + 7692.2600);
           mat4 _GLF_SWITCH_1_152v, _GLF_SWITCH_1_153v, _GLF_SWITCH_1_154v;
           vec4(4.9, -9427.3331, -19.93, _GLF_IDENTITY(7828.3019, float(mat2(7828.3019, 0.0, sqrt(0.0), 0.0))));
          }
         if(_GLF_DEAD(false))
          continue;
         for(         min(ivec4(-39457, _GLF_IDENTITY(-20513, int(ivec4(_GLF_IDENTITY(-20513, (-20513) * 1), (1 & 1), 0, (0 >> _GLF_IDENTITY(int(0), int(0)))))), 37420, -31196), max(21375, _GLF_IDENTITY(88392, (true ? 88392 : _GLF_FUZZED(-20670)))));
 true; _GLF_SWITCH_1_140v)
          {
           uint _GLF_SWITCH_1_155v, _GLF_SWITCH_1_156v[63], _GLF_SWITCH_1_157v[25];
           bvec4 _GLF_SWITCH_1_158v[22];
           uint _GLF_SWITCH_1_159v[71];
           _GLF_IDENTITY(uvec2((uvec4(79269u, 19688u, 36372u, 44742u) & uvec2(15471u, 137795u).s)), (uvec2((uvec4(79269u, 19688u, 36372u, 44742u) & uvec2(15471u, 137795u).s))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)));
           uvec2(85881u, 3722u);
           _GLF_SWITCH_1_139v;
           1.4;
          }
         if(true)
          {
           uint _GLF_SWITCH_1_160v[49];
           max(uvec2(111389u, 63699u), uvec2(75961u, 37881u));
           bvec2(false, true);
           mat4x3(8977.1827, -690.863, 73.51, _GLF_IDENTITY(919.193, float(mat2x4(919.193, 0.0, 0.0, 1.0, abs(0.0), 1.0, cos(0.0), length(vec2(0.0, 0.0))))), 6.5, -6.1, 9.0, 0.2, _GLF_IDENTITY(7.8, (true ? 7.8 : _GLF_FUZZED(-74.57))), 98.31, -50.32, -94.83);
           bool _GLF_SWITCH_1_161v[10], _GLF_SWITCH_1_162v, _GLF_SWITCH_1_163v;
           _GLF_IDENTITY(greaterThan(uvec3(105307u, 84865u, 91509u), _GLF_IDENTITY(uvec3(66034u, 7583u, 25337u), ~ (~ (_GLF_IDENTITY(uvec3(66034u, 7583u, 25337u), min(uvec3(66034u, 7583u, 25337u), uvec3(66034u, 7583u, 25337u))))))), bvec3(bvec4(greaterThan(uvec3(105307u, 84865u, 91509u), _GLF_IDENTITY(uvec3(66034u, 7583u, 25337u), ~ (~ (_GLF_IDENTITY(uvec3(66034u, 7583u, 25337u), min(uvec3(66034u, 7583u, 25337u), uvec3(66034u, 7583u, 25337u))))))), true)));
           ;
           mat2x4(5434.7444, -6.1, 6.9, -60.94, -8798.5322, 6.4, -60.01, -2.3);
           ((uvec2(20172u, 40005u) ^ workgroup_id) & uvec2(113588u, _GLF_IDENTITY(85131u, ~ (~ (85131u)))));
          }
         _GLF_IDENTITY((196597u << _GLF_struct_replacement_14._f1.subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((196597u << _GLF_struct_replacement_14._f1.subgroup_size), clamp((196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size))), clamp(_GLF_IDENTITY((196597u << _GLF_struct_replacement_14._f1.subgroup_size), clamp((196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((196597u << _GLF_struct_replacement_14._f1.subgroup_size), clamp((196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size))), (_GLF_IDENTITY((196597u << _GLF_struct_replacement_14._f1.subgroup_size), clamp((196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size)))) | 0u), _GLF_IDENTITY((196597u << _GLF_struct_replacement_14._f1.subgroup_size), clamp((196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size), (196597u << _GLF_struct_replacement_14._f1.subgroup_size)))))) | (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))));
         matrixCompMult(mat2x4(7928.6275, 9.8, -873.471, -5.6, -75.25, 154.793, 8.3, 7113.6909), mat2x4(-3454.1162, -485.242, _GLF_IDENTITY(-5056.6128, (-5056.6128) * 1.0), -63.11, 5.7, -66.92, _GLF_IDENTITY(-655.297, mix(float(_GLF_IDENTITY(-655.297, clamp(-655.297, _GLF_IDENTITY(-655.297, 1.0 * (-655.297)), -655.297))), float(_GLF_FUZZED(-4.4)), bool(false))), 99.17));
         while(_GLF_IDENTITY((mat2x4(7061.6586, -5.5, -148.480, 1.7, _GLF_IDENTITY(-73.02, min(-73.02, -73.02)), _GLF_IDENTITY(9053.5658, 0.0 + (9053.5658)), 24.12, 4689.6813) != mat2x4(-7.9, 1508.9681, -4.3, -0.6, -1.4, -2568.5532, 6903.9938, -9.7)), bool(bvec2((mat2x4(7061.6586, -5.5, -148.480, 1.7, _GLF_IDENTITY(-73.02, min(-73.02, -73.02)), _GLF_IDENTITY(9053.5658, 0.0 + (9053.5658)), 24.12, 4689.6813) != mat2x4(-7.9, 1508.9681, -4.3, -0.6, -1.4, -2568.5532, 6903.9938, -9.7)), true))))
          {
           mat4x3(80.63, -1.3, 9.9, -0.8, -2648.1096, -5.0, -9.9, 977.608, 73.20, 0.5, 2.6, 425.170);
           mat4x2 _GLF_SWITCH_1_164v;
           ;
          }
        }
      }
     case 0:
     if(_GLF_DEAD(false))
      return;
     case 74:
     case 91:
     case 22:
     case 42:
     case 19:
     case 55:
     case 17:
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     break;
     case 61:
     while((_GLF_IDENTITY(vec2(576.169, -7.2) == _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.94), _GLF_FUZZED(-4693.9105)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), ! (! (vec2(576.169, -7.2) == injectionSwitch)))))
      {
       mat2 _GLF_SWITCH_1_165v;
       bvec2 _GLF_SWITCH_1_166v, _GLF_SWITCH_1_167v;
       vec3 _GLF_SWITCH_1_168v;
       while((mat2x4(-767.624, -4.6, 416.099, -8.4, 7915.4779, -698.379, 550.180, 3.7) != mat2x4(61.02, 664.388, -112.957, -3.3, -4418.3813, -7.6, -973.780, 57.95)))
        {
         if(all(_GLF_SWITCH_1_167v))
          {
           ivec2(68342, 60095);
           mat2x4 _GLF_SWITCH_1_169v, _GLF_SWITCH_1_170v, _GLF_SWITCH_1_171v;
           _GLF_SWITCH_1_168v;
           true;
           ivec2 _GLF_SWITCH_1_172v[24], _GLF_SWITCH_1_173v[45], _GLF_SWITCH_1_174v[8];
           mat4x3 _GLF_SWITCH_1_175v[21], _GLF_SWITCH_1_176v;
          }
         else
          {
           ;
           ;
           uvec3 _GLF_SWITCH_1_177v, _GLF_SWITCH_1_178v[89], _GLF_SWITCH_1_179v;
           mat2 _GLF_SWITCH_1_180v[3];
          }
         for(         mat3(-8.0, 2817.1506, -336.726, -7.0, 799.471, _GLF_IDENTITY(19.73, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(19.73, mix(float(_GLF_FUZZED(37.39)), float(19.73), bool(true))) : _GLF_FUZZED(refract(-6651.2931, 40.87, -9308.7110)))), 6.9, 4.4, 70.21);
 true; mat3x4(1.9, -338.427, 6.8, 5.0, -74.96, 8109.3055, _GLF_IDENTITY(859.344, clamp(_GLF_IDENTITY(859.344, float(vec3(859.344, 1.0, 0.0))), 859.344, _GLF_IDENTITY(859.344, (859.344) - 0.0))), _GLF_IDENTITY(-6.6, min(-6.6, -6.6)), 2494.1610, -1.9, 6783.6359, -9.0))
          {
           mat4x2(-1890.1340, 4542.3815, _GLF_IDENTITY(-1.4, (-1.4) / 1.0), 6.1, 98.90, -604.163, 1942.3133, 597.609);
           mat3 _GLF_SWITCH_1_181v, _GLF_SWITCH_1_182v, _GLF_SWITCH_1_183v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           float _GLF_SWITCH_1_184v, _GLF_SWITCH_1_185v, _GLF_SWITCH_1_186v;
          }
         -4403.0614;
         uvec2 _GLF_SWITCH_1_187v, _GLF_SWITCH_1_188v;
        }
       mat3(-33.28, 3.5, 6.8, 22.08, -636.135, -2173.6890, 3.0, 7.4, -251.833);
       while(_GLF_IDENTITY(true, (true) && true))
        {
         if(true)
          {
           ;
           mat2 _GLF_SWITCH_1_189v, _GLF_SWITCH_1_190v[71], _GLF_SWITCH_1_191v[1];
          }
         else
          {
           mat4x3 _GLF_SWITCH_1_192v[9];
           ivec4 _GLF_SWITCH_1_193v[77];
           float _GLF_SWITCH_1_194v, _GLF_SWITCH_1_195v;
           equal(_GLF_SWITCH_1_168v, atanh(_GLF_SWITCH_1_168v));
           vec4(2.2, mix(_GLF_SWITCH_1_168v, _GLF_SWITCH_1_168v, _GLF_SWITCH_1_195v));
           workgroup_size;
          }
         {
          float _GLF_SWITCH_1_196v, _GLF_SWITCH_1_197v, _GLF_SWITCH_1_198v;
          lessThan((bvec3(false, true, true) , uvec2(86678u, 35089u)), _GLF_IDENTITY(uvec2(67275u, 5266u), min(uvec2(67275u, 5266u), uvec2(67275u, 5266u))));
          ivec4 _GLF_SWITCH_1_199v, _GLF_SWITCH_1_200v;
          workgroup_id;
          if(_GLF_DEAD(false))
           continue;
          vec3 _GLF_SWITCH_1_201v, _GLF_SWITCH_1_202v, _GLF_SWITCH_1_203v;
          mat3 _GLF_SWITCH_1_204v, _GLF_SWITCH_1_205v[8], _GLF_SWITCH_1_206v[63];
          int _GLF_SWITCH_1_207v[9];
          int _GLF_SWITCH_1_208v;
          mat3x4 _GLF_SWITCH_1_209v[88];
         }
         ivec3(-68096, 34582, -40674);
         {
          atomicMax(subgroup_local_id, (workgroup_base - num_workgroup));
          ivec2(-95265, -82267);
          _GLF_IDENTITY((_GLF_SWITCH_1_168v), clamp((_GLF_SWITCH_1_168v), (_GLF_SWITCH_1_168v), (_GLF_SWITCH_1_168v)));
          ivec4(27098, _GLF_IDENTITY(-27182, max(_GLF_IDENTITY(-27182, (-27182) | (-27182)), -27182)), -10002, -75767);
         }
         (-84.40 - vec4(-9194.8412, -54.10, 21.75, 8.1));
         {
          int _GLF_SWITCH_1_210v[1];
          if(_GLF_DEAD(false))
           continue;
          mat2x4(-90.24, -316.275, -4.9, 496.783, _GLF_IDENTITY(4.1, clamp(4.1, _GLF_IDENTITY(4.1, mix(float(4.1), float(_GLF_FUZZED(5428.4236)), bool(false))), _GLF_IDENTITY(4.1, clamp(4.1, 4.1, 4.1)))), 35.38, -8.2, _GLF_IDENTITY(-9650.7554, mix(float(_GLF_FUZZED(vec4(6613.9578, -8.9, 9.6, 6.4).t)), float(-9650.7554), bool(true))));
          uvec4(num_workgroup, workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_14._f1.subgroup_size, (_GLF_struct_replacement_14._f1.subgroup_size) | (_GLF_struct_replacement_14._f1.subgroup_size))) << 0u), (workgroup_id));
          mat3x2 _GLF_SWITCH_1_211v[52], _GLF_SWITCH_1_212v, _GLF_SWITCH_1_213v;
         }
         ivec4(-54524, -8467, -59681, 92794);
         if(false)
          {
           mat4x2(8750.2673, 1.5, 9216.3913, -179.564, -75.41, -3.8, 2031.5974, 4190.1231);
           vec2 _GLF_SWITCH_1_214v, _GLF_SWITCH_1_215v;
           bvec2(bvec4(true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true));
           mat3x4(-417.522, 822.094, -3.0, -177.354, 920.638, 6872.8111, -17.14, 64.92, 1.4, -9.3, 4.3, 739.341);
           if(_GLF_DEAD(false))
            continue;
           uvec3 _GLF_SWITCH_1_216v, _GLF_SWITCH_1_217v, _GLF_SWITCH_1_218v;
           _GLF_SWITCH_1_166v;
           if(_GLF_DEAD(false))
            return;
           mat3x2 _GLF_SWITCH_1_219v, _GLF_SWITCH_1_220v[15];
          }
         while(false)
          {
           ivec2 _GLF_SWITCH_1_221v, _GLF_SWITCH_1_222v, _GLF_SWITCH_1_223v;
           uint _GLF_SWITCH_1_224v, _GLF_SWITCH_1_225v[18], _GLF_SWITCH_1_226v;
           bvec3(false, false, false);
           (mat3x2(-7.0, 5200.7719, -9.2, -885.764, 3964.8103, -7.6) * mat2x3(7.8, -35.02, 14.50, -0.1, 536.370, 6.3));
          }
        }
       ivec3 _GLF_SWITCH_1_227v[89];
       uvec4 _GLF_SWITCH_1_228v;
       mat3x4 _GLF_SWITCH_1_229v, _GLF_SWITCH_1_230v[38];
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))
      return;
     default:
     _GLF_IDENTITY(1, 0 | (1));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
