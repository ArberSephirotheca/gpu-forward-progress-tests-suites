#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat3x4 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_4 {
 float _f0;
 uvec3 _f1;
 float _f2;
 bool _f3;
 uvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 bool _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 vec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_3 {
 uint subgroup_local_id;
 bvec3 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 bvec3 _f1;
 mat3 _f2;
 mat3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 int _f2;
 bool _f3;
 _GLF_struct_8 _f4;
 uvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y = subgroup_size;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(_GLF_struct_0(mat2x4(1.0), bvec3(true), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat2x4(6.5, 164.286, -273.155, _GLF_IDENTITY(279.582, (_GLF_IDENTITY(279.582, clamp(_GLF_IDENTITY(279.582, (279.582) * 1.0), 279.582, 279.582))) + 0.0), 1.1, 7.4, 7.6, 6.0))))), float(mat4x3(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(-6.5)), bvec2(false, false))).y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-583.827))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), 1.0), (false ? _GLF_FUZZED(mat3x2(-7.0, -58.60, 842.166, -59.73, 12.53, -658.796)) : mat3x2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-5382.8666)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))), 1.0, 1.0, 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-7.0, -58.60, 842.166, -59.73, 12.53, -658.796)) : mat3x2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-5382.8666)), (float(_GLF_FUZZED(-5382.8666))) + sin(0.0)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0))))) - 0.0)), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))) && true) ? mat2x4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))), sqrt(0.0) + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))))))), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(6.5, _GLF_IDENTITY(164.286, mix(float(_GLF_FUZZED((- -8.4))), float(164.286), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(-273.155, min(-273.155, -273.155)), min(_GLF_IDENTITY(-273.155, min(-273.155, -273.155)), _GLF_IDENTITY(-273.155, min(-273.155, -273.155)))), 279.582, 1.1, 7.4, 7.6, 6.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(573.503) : _GLF_IDENTITY(abs(0.0), (abs(_GLF_IDENTITY(0.0, (0.0) / 1.0))) - 0.0))), 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY((mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat2x3(float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sqrt(-752.465)))), 0.0), (true ? mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat2x4(6.5, 164.286, -273.155, 279.582, 1.1, 7.4, 7.6, 6.0))))), float(mat4x3(float(_GLF_IDENTITY(mat2x4(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.1), 1.0 * (_GLF_FUZZED(-1.1))) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-583.827))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4212.9388) : 0.0)), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-7.0, _GLF_IDENTITY(-58.60, (_GLF_IDENTITY(-58.60, max(-58.60, -58.60))) - 0.0), 842.166, -59.73, 12.53, -658.796)) : mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0)), max(1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (true), false || (! (true))), true))))), ! (! (! (true))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true))))) ? mat2x4(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(injectionSwitch)) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.4) : 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, exp(0.0), 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-76.03, -3760.6927, 99.97, -31.00, 929.478, -2.8, 82.38, 6424.4967)) : mat2x4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0)), 0.0, 1.0)), 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(6.5, 164.286, _GLF_IDENTITY(_GLF_IDENTITY(-273.155, mix(float(-273.155), float(_GLF_FUZZED(float(24589u))), bool(false))), min(-273.155, -273.155)), 279.582, 1.1, 7.4, 7.6, 6.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(573.503) : _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), clamp(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), min(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)) ? (mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat2x4(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat2x4(6.5, 164.286, -273.155, 279.582, 1.1, 7.4, 7.6, 6.0))))), float(mat4x3(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-583.827))), min(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-583.827))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.1) : injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-583.827))))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4212.9388) : 0.0)), min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(-7.0, -58.60, 842.166, -59.73, 12.53, -658.796)) : mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0)), max(1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0 * (_GLF_IDENTITY(0.0, (0.0) - 0.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true)))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && true))))))) && true)) ? mat2x4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(injectionSwitch)) : 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-65.65)), bool(false))), 1.0)), 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(6.5, 164.286, _GLF_IDENTITY(_GLF_IDENTITY(-273.155, mix(float(-273.155), float(_GLF_FUZZED(float(24589u))), bool(false))), min(-273.155, -273.155)), 279.582, 1.1, 7.4, 7.6, 6.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(573.503) : _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))), min(_GLF_IDENTITY(abs(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(573.503) : _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))), _GLF_IDENTITY(abs(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(573.503) : _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))))) : _GLF_FUZZED(mat4(-8.0, -7436.1948, 9.7, -7.2, 3.6, -69.60, 4.7, 3.2, 746.733, -3180.4584, -21.76, -71.82, -8364.3315, 79.26, 14.04, -8.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 0.0), (true ? mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat2x4(6.5, 164.286, -273.155, 279.582, 1.1, 7.4, _GLF_IDENTITY(7.6, min(_GLF_IDENTITY(7.6, (false ? _GLF_FUZZED(-9808.7163) : 7.6)), 7.6)), 6.0))))), float(mat4x3(float(_GLF_IDENTITY(mat2x4(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.58))) : _GLF_FUZZED(-1574.1954))), _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-583.827))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) ? _GLF_FUZZED(mat3x2(-7.0, -58.60, 842.166, -59.73, 12.53, _GLF_IDENTITY(_GLF_IDENTITY(-658.796, (-658.796) - 0.0), (_GLF_IDENTITY(-658.796, (-658.796) - 0.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) : mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED(-66.76))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), cos(0.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), sqrt(1.0)), mat3x4(mat4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-970.415)), float(1.0), bool(true)))) + 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.4))), 0.0, cos(0.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), sqrt(1.0)), (mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, abs(1.0), 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), sqrt(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0))))), _GLF_IDENTITY(0.0, 1.0 * (0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (true) && true) ? mat2x4(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), max(float(mat3(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))))) : _GLF_FUZZED(-4.4)))), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0))) * (1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)), float(mat3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.6)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.6)), bool(false)))) * 1.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(69.87)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-383.558)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0) : _GLF_FUZZED(mat2x4(6.5, 164.286, -273.155, 279.582, 1.1, _GLF_IDENTITY(7.4, max(7.4, 7.4)), 7.6, 6.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat4x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 0.0 + (min(1.0, 1.0))))))), mat2x4(1.0), bvec4(true)), _GLF_struct_3(gl_SubgroupInvocationID, bvec3(true), _GLF_struct_2(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4(1.0))), 1, true, _GLF_struct_8(_GLF_struct_4(1.0, uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u))), 1.0, true, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(1u, (1u) + 0u)))), (_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) * uvec2(_GLF_IDENTITY(1u, (1u) - 0u), 1u))) | (uvec2(1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(1u), 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(1u), _GLF_IDENTITY(0u, (0u) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u + (1u))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(roundEven(-61.16))))))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) << uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), uvec2(uvec4(uvec2(1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | uvec2(0u, 0u))) ^ uvec2(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) + int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) + int(_GLF_ZERO(0.0, injectionSwitch.x))) | ((1) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), true, _GLF_struct_5(mat3x2(1.0), mat2x3(1.0), uvec3(1u), ivec3(1)), _GLF_struct_6(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), mat2x3(1.0), ivec3(1)), _GLF_struct_7(mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true)))))), mat4x3(1.0), mat3x2(1.0), mat2x4(1.0)), vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(_GLF_IDENTITY(mat4x3(vec3(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat4x3(vec3(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), _GLF_IDENTITY(clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0)), (mat3(1.0) * (vec3(1.0))) + abs(vec3(0.0, 0.0, 0.0))))), min(clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0)), (mat3(1.0) * (vec3(1.0))) + abs(vec3(0.0, 0.0, 0.0))))), clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0)), (mat3(1.0) * (vec3(1.0))) + abs(vec3(0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(uvec4(1u), uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))))));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, true))), false)))))), bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, true))), _GLF_IDENTITY(false, (false) || false))))))), bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), ! (! (bool(bvec4((false), true, false, false))))))), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, true))), false)))))), bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true)), (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), ! (! (bool(bvec4((false), true, false, false))))))), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, true))), false)))))), bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), ! (! (bool(bvec4((false), true, false, false))))))), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, true))), false)))))), bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true)))))) && true), (bool(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, true))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true, true))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-1.8 - -21.41))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))), int(1)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) ^ 0, clamp((1 << _GLF_IDENTITY(int(1), int(1))) ^ 0, _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) ^ 0, int(ivec2((1 << _GLF_IDENTITY(int(1), int(1))) ^ 0, 0))), (1 << _GLF_IDENTITY(int(1), int(1))) ^ 0))), 1 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) >> 0), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (-94248 & 0)), max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (-94248 & 0)), max(1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (-94248 & 0)), max(1, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (-94248 & 0)), max(1, 1)))))))))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(1 * (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-43412)))) >> 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 * (_GLF_IDENTITY(2, (2) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(1 * (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-43412)))) >> 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 * (_GLF_IDENTITY(2, (2) >> 0))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(1 * (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-43412)))) >> 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 * (_GLF_IDENTITY(2, (2) >> 0)))))) ^ 0)) >> 0))) | (int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / int(_GLF_ONE(1.0, injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), false, false))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z = workgroup_size, _GLF_IDENTITY(0u + (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z = workgroup_size), (0u + (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z = workgroup_size)) ^ 0u));
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) | (~ (gl_WorkGroupID))))).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)) : _injected_loop_counter)) != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0))) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) ^ 0))) | 0, int(ivec2((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(~ (~ ((0))), (~ (~ ((0)))) * 1)) ^ 0))) | 0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0))) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) ^ 0))) | 0, int(ivec2((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(~ (~ ((0))), (~ (~ ((0)))) * 1)) ^ 0))) | 0, 1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0))) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) ^ 0))) | 0, int(ivec2((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(~ (~ ((0))), (~ (~ ((0)))) * 1)) ^ 0))) | 0, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0))) ^ 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) ^ 0))) | 0, int(ivec2((~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(~ (~ ((0))), (~ (~ ((0)))) * 1)) ^ 0))) | 0, 1))))))) | 0))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(7), int(7))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) / 1))), clamp(0 | (_GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY(0 | (_GLF_IDENTITY(0, (0) ^ 0)), min(0 | (_GLF_IDENTITY(0, (0) ^ 0)), 0 | (_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), 0)))))), _GLF_IDENTITY(0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), ((_GLF_IDENTITY(0, (0) ^ 0))) | ((_GLF_IDENTITY(0, (0) ^ 0))))) >> 0), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) ^ 0)), (_GLF_IDENTITY(0, (0) ^ 0))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (max((_GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(0, (0) ^ 0)))))), (0 | (_GLF_IDENTITY(0, (0) ^ 0))) - 0))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) * 1)))), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0)) << 0))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))))) && true)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
          }
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).z * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y + _GLF_struct_replacement_9._f1.subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((_GLF_IDENTITY(vec2(_GLF_IDENTITY(-8.5, 1.0 * (-8.5)), -40.08), _GLF_IDENTITY((vec2(_GLF_IDENTITY(-8.5, 1.0 * (-8.5)), -40.08)) * mat2(1.0), ((vec2(_GLF_IDENTITY(-8.5, 1.0 * (-8.5)), -40.08)) * mat2(1.0)) - vec2(0.0, 0.0))) / injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (injectionSwitch)))).y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y + ((_GLF_IDENTITY(_GLF_struct_replacement_9._f1.subgroup_local_id, (_GLF_struct_replacement_9._f1.subgroup_local_id) << (_GLF_IDENTITY(0u, (0u) | (0u)) | 0u)) + _GLF_IDENTITY(1, 0 ^ (1))) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0)))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x = _GLF_IDENTITY(read, (read) | (read)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x = _GLF_IDENTITY(read, (read) | (read)), ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x = _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | (read))) | (read)))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), max(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, ~ (~ (2))))) - 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0))))), 0 + (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), max(int(2), int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)))))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), false))), true, false, false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), (_GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1)))) | ((1 & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(_injected_loop_counter)))) / 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter))))) >> (_GLF_IDENTITY(-54343, (_GLF_IDENTITY(-54343, (-54343) - 0)) | (-54343)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1), ~ (~ (clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> (_GLF_IDENTITY(-54343, (_GLF_IDENTITY(-54343, (-54343) - 0)) | (-54343)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1), ~ (~ (clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> (-54343 & 0), (0 | (0 | 0)) | ((1) >> (-54343 & 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1) << 0, ~ (~ ((1) << 0))) : _GLF_FUZZED(_injected_loop_counter)))), 1)))))) * int(_GLF_ONE(1.0, injectionSwitch.y)), max((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> (_GLF_IDENTITY(-54343, (_GLF_IDENTITY(-54343, (-54343) - 0)) | (-54343)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1), ~ (~ (clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> (-54343 & 0), (0 | (0 | 0)) | ((1) >> (-54343 & 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1) << 0, ~ (~ ((1) << 0))) : _GLF_FUZZED(_injected_loop_counter)))), 1)))))) * int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> (_GLF_IDENTITY(-54343, (_GLF_IDENTITY(-54343, (-54343) - 0)) | (-54343)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1), ~ (~ (clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> (-54343 & 0), (0 | (0 | 0)) | ((1) >> (-54343 & 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1) << 0, ~ (~ ((1) << 0))) : _GLF_FUZZED(_injected_loop_counter)))), 1)))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << 0), 1))), int(1)), min(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(_injected_loop_counter))))), int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(0, 0, 0) ^ (ivec3(1, 1, 1)))), (int(_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(0, 0, 0) ^ (ivec3(1, 1, 1))))) | 0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), ~ (_GLF_IDENTITY(~ (int(ivec3(1, 1, 1))), clamp(~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1)))))))), (1) << 0), 1))), int(1))) / 1, clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(~ (~ ((1))), ~ (~ (~ (~ ((1))))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1) / 1, (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1) / 1) + 0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(int(1), 0 + (int(1))))) / 1, (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicXor(_injected_loop_counter, _injected_loop_counter), ~ (~ (atomicXor(_injected_loop_counter, _injected_loop_counter))))) : 1))) >> _GLF_IDENTITY((-54343 & 0), ((_GLF_IDENTITY(-54343, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-54343, (-54343) | (-54343))), (~ (_GLF_IDENTITY(-54343, (-54343) | (-54343)))) ^ 0))) & 0)) << 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), 0 + (int(1))))))))), 1, 1, 1)))), (((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1), (true ? clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1) : _GLF_FUZZED(atomicOr(_injected_loop_counter, _injected_loop_counter)))))), int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1))))), 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) | (_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 1))), int(1))))))), int(1)))) | (_GLF_IDENTITY(((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) >> 0)) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> 0)), (int(_GLF_IDENTITY(1, (1) >> 0))) | (int(_GLF_IDENTITY(1, (1) >> 0)))))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), 0, 0))), 1))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)))))))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << 0), 1))), _GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(2), int(2))) + (int(1)))), min(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (_GLF_IDENTITY(-54343, (-54343) ^ 0)) / 1) & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0), (1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)), 1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)) ? _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0))))) : _GLF_FUZZED(_injected_loop_counter))))), int(1)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), ~ (_GLF_IDENTITY(~ (int(ivec3(1, 1, 1))), clamp(~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1)))))))), (1) << 0), 1))), int(1))) / 1, clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))) >> (_GLF_IDENTITY(-54343, 0 | (-54343)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1) / 1), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(int(1), 0 + (int(1)))), 0 | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(int(1), 0 + (int(1))))))) / 1, (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))), (0 >> _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(_GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))), max(_GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))), _GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(atomicXor(_injected_loop_counter, _injected_loop_counter), (atomicXor(_injected_loop_counter, _injected_loop_counter)) | 0), ~ (~ (atomicXor(_injected_loop_counter, _injected_loop_counter))))) : 1))) >> _GLF_IDENTITY((-54343 & 0), ((-54343 & 0)) << 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), 0 + (int(1))))))))), 1, 1, 1)))), (((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, min(1, 1)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) << 0) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) << (1 ^ 1))), 1))), int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1))) | (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1))))))), _GLF_IDENTITY(1, ~ (~ (1)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) | (_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), int(1)))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) / 1), int(1))) >> 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((-54343 & 0), int(int((-54343 & 0))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & _GLF_IDENTITY(0, int(ivec3(0, 0, 1))))), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)))))))), 0 ^ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, 0 | (1))) << 0), 1))), int(1)), min(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(_injected_loop_counter))))), int(1)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(ivec3(1, 1, 1))), clamp(~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1))))), 0 | (_GLF_IDENTITY(~ (int(ivec3(1, 1, 1))), clamp(~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1)))))))))), (1) << 0), 1))), int(1))) / _GLF_IDENTITY(1, 0 + (1)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(_GLF_IDENTITY(1, min(1, 1))))) / 1) / 1), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(int(1), 0 + (int(1))))) / 1, (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))) >> (-54343 & _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1)) / 1))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicXor(_injected_loop_counter, _injected_loop_counter), ~ (~ (atomicXor(_injected_loop_counter, _injected_loop_counter))))) : 1))) >> _GLF_IDENTITY((-54343 & 0), ((-54343 & 0)) << 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), 0 + (int(1))))))))), 1, 1, _GLF_IDENTITY(1, (1) >> 0))))), (((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1)))))), min(int(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1)))))), int(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1)))))))))), 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) | (_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), int(1)))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY((1), 0 + ((1))))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) >> 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (_GLF_IDENTITY(0 | 0, (0 | 0) * 1))) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), int(1))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (_GLF_IDENTITY(0 | 0, (0 | 0) * 1))) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), int(1)))) << (0 ^ (0 | 0))), min(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)), (false ? _GLF_FUZZED(-754) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)))))))))), ~ (_GLF_IDENTITY(~ (0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) << 0), 1))), int(1)), min(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(_injected_loop_counter))))), int(1)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), ~ (_GLF_IDENTITY(~ (int(ivec3(1, 1, 1))), clamp(~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1)))))))), (1) << 0), 1))), int(1))) / 1, clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1) / 1), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(int(1), 0 + (int(1))))) / 1, (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicXor(_injected_loop_counter, _injected_loop_counter), ~ (~ (atomicXor(_injected_loop_counter, _injected_loop_counter))))) : 1))) >> _GLF_IDENTITY((-54343 & 0), ((-54343 & 0)) << 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), 0 + (int(1))))))))), 1, 1, 1)))), (((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1))))), 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) | (_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), int(1)))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) >> 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1))))))))), ~ (~ (~ (0 ^ (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) | (-54343)) & 0)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))) << 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))) << 0, ((_GLF_IDENTITY(1, 0 | (1))) << 0) << 0), (_GLF_IDENTITY(1, 0 | (1))) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))) << 0, ((_GLF_IDENTITY(1, 0 | (1))) << 0) / 1)))), 1))), int(1)), min(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(_injected_loop_counter))))), int(1)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), ~ (_GLF_IDENTITY(~ (int(ivec3(1, 1, 1))), clamp(~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1))), ~ (int(ivec3(1, 1, 1)))))))), (1) << 0), 1))), int(1))) / 1, clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1), (false ? _GLF_FUZZED(_injected_loop_counter) : ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1))) / 1), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(int(1), 0 + (int(1)))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(int(1), 0 + (int(1))))))) / 1, (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(76176)))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((1)), 0 + (((1))))), clamp(~ (~ _GLF_IDENTITY(((1)), 0 + (((1))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((1)), 0 + (((1))))), 1 * (~ (~ _GLF_IDENTITY(((1)), 0 + (((1))))))), ~ (~ _GLF_IDENTITY(((1)), 0 + (((1)))))))) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) / 1))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicXor(_injected_loop_counter, _injected_loop_counter), ~ (~ (atomicXor(_injected_loop_counter, _injected_loop_counter))))) : 1))) >> _GLF_IDENTITY((-54343 & 0), ((-54343 & 0)) << 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (_GLF_IDENTITY(int(1), 0 + (int(1))))))))), 1, 1, 1)))), (((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, min(1, 1))))), 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))) | (_GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), min(int(1), int(1))))))), int(1)))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1), int(1)))), (_GLF_IDENTITY(int(1), int(1))) >> 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(-54343, (-54343) >> (0 | 0)) & 0)), _GLF_IDENTITY(1, (1) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), min(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ~ (~ ((1)))))) << 0), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) ^ 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))) >> (-54343 & 0)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) << 0, clamp((_GLF_IDENTITY(1, (1) / 1)) << 0, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) << 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, (1) / 1)) << 0, 1, 0, 1)), (int(ivec4((_GLF_IDENTITY(1, (1) / 1)) << 0, 1, 0, 1))) | (int(ivec4((_GLF_IDENTITY(1, (1) / 1)) << 0, 1, 0, 1))))), (_GLF_IDENTITY(1, (1) / 1)) << 0))), 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1), (clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1)) | (clamp(_GLF_IDENTITY(1, (1) >> (-54343 & 0)), _GLF_IDENTITY(1, (1) << 0), 1))))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1))))))))))))))))) * 1))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_struct_replacement_9._f1.subgroup_local_id + 1 < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y, ! (! (_GLF_IDENTITY(_GLF_struct_replacement_9._f1.subgroup_local_id + 1, (_GLF_IDENTITY(0u ^ 0u, clamp(0u ^ 0u, 0u ^ 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, max(0u, 0u)))))) ^ 0u))) + (_GLF_struct_replacement_9._f1.subgroup_local_id + 1)) < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)), false, false, false)))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              {
               for(int _injected_loop_counter = (1 | (((0 ^ 1) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))), true, true, true))))));
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             int i = 0;
             do
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             atomicStore(checker[virtual_gid], GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (4)));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
                    {
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((_GLF_IDENTITY(false, (false) || false)) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                              barrier();
                             barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     for(int _injected_loop_counter = (0 | _GLF_IDENTITY((0 | 1), 0 ^ ((0 | 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1)))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(_GLF_IDENTITY(-7.5, float(mat3(_GLF_IDENTITY(-7.5, clamp(-7.5, -7.5, -7.5)), cos(tan(0.0)), 0.0, cos(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(0.0), 1.0)))) : injectionSwitch.x, max(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(_GLF_IDENTITY(-7.5, float(mat3(_GLF_IDENTITY(-7.5, clamp(-7.5, -7.5, -7.5)), cos(tan(0.0)), 0.0, cos(0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 1.0, 1.0, tan(0.0), 1.0)))) : injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(_GLF_IDENTITY(-7.5, float(mat3(_GLF_IDENTITY(-7.5, clamp(-7.5, -7.5, -7.5)), _GLF_IDENTITY(cos(tan(0.0)), (cos(tan(0.0))) * 1.0), 0.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-7.2)), float(cos(0.0)), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(0.0), 1.0)))) : injectionSwitch.x, clamp(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)) ? _GLF_FUZZED(_GLF_IDENTITY(-7.5, float(mat3(_GLF_IDENTITY(-7.5, clamp(-7.5, -7.5, -7.5)), cos(tan(0.0)), 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(0.0), 1.0)))) : injectionSwitch.x, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-7.5, float(mat3(_GLF_IDENTITY(-7.5, clamp(-7.5, -7.5, -7.5)), cos(tan(0.0)), 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(0.0), 1.0)))), (_GLF_FUZZED(_GLF_IDENTITY(-7.5, float(mat3(_GLF_IDENTITY(-7.5, clamp(-7.5, -7.5, -7.5)), cos(tan(0.0)), 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(0.0), 1.0))))) / 1.0) : injectionSwitch.x, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(_GLF_IDENTITY(-7.5, float(mat3(_GLF_IDENTITY(-7.5, clamp(-7.5, -7.5, -7.5)), cos(tan(0.0)), 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(0.0), 1.0)))) : injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6174.4683)) : injectionSwitch)).y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, min(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size)))).x, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))), 4)), 64, 4);
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false), true && (_injected_loop_counter < 1))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false))), false)))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))))), bool(bvec3((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))), false, true)))))) || false)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --)))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
                  {
                   for(int _injected_loop_counter = ((1 ^ 1) << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(vec2(6926.1495, 70.07), -8231.8798, 1.2)) : injectionSwitch))))).y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(vec4(-8619.7020, -1531.5453, -5271.4246, -9.4).p), _GLF_FUZZED(_GLF_IDENTITY(-8.2, (-8.2) - log(1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))));
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false, false)), true && (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false, false))))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
