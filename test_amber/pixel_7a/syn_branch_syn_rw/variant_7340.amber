#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(192980u, 5745u, 67905u)) : gl_WorkGroupSize, min(false ? _GLF_FUZZED(uvec3(192980u, 5745u, 67905u)) : gl_WorkGroupSize, _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(192980u, 5745u, 67905u)) : gl_WorkGroupSize, min(false ? _GLF_FUZZED(uvec3(192980u, 5745u, 67905u)) : gl_WorkGroupSize, false ? _GLF_FUZZED(uvec3(192980u, 5745u, 67905u)) : gl_WorkGroupSize)))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + (uvec3(95242u, 35630u, 70884u) & uvec3(0u, 0u, 0u))))).x, gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, 1u * _GLF_IDENTITY((1u), ((1u)) ^ 0u)), 1u) * (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY(0u, (0u) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (0u | 0u)), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(5u), uint(5u)), 0u), max(uvec2(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), max(0u << _GLF_IDENTITY(uint(5u), uint(5u)), 0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 0u), _GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(5u), uint(5u)), 0u), min(uvec2(0u << _GLF_IDENTITY(uint(5u), uint(5u)), 0u), uvec2(0u << _GLF_IDENTITY(uint(5u), uint(5u)), 0u))))))))), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))) << uvec3(0u, 0u, 0u)).x, 0u, 0u, 1u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))), (~ (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)))).x, 0u, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))))) ^ 0u)) ^ 0u))))) << 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) ^ 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, 0u | (0u)), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), 0u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))) >> 0u)), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x, 0u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x, 0u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))) >> 0u)) | (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x, 0u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))) >> 0u))))))))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u)))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) << 0u), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) ^ 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))))), 0u, 0u)))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) << 0u), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, (1u) / 1u)))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) ^ 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x)), 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u)))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) << 0u), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) ^ 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))))), 0u, 0u)))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) << 0u), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, (1u) / 1u)))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) ^ 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x)), 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u)))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) << 0u), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) ^ 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u, 1u))))), 0u, 0u)))) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) << 0u), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, (1u) / 1u)))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)), (uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))) ^ 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x)), 0u, 0u, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u))))))))))) | 0u))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u), _GLF_IDENTITY((uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, (1u) << 0u))) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)), max((uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, (1u) << 0u))) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)), (uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, (1u) << 0u))) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), clamp(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), (uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), (uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), clamp(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), (uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), (uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), clamp(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), (uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), (uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), clamp(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), (uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(gl_WorkGroupID.x, 0u, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), (uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)) - (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u), (uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)) - (uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u) ^ uvec4(0u, 0u, 0u, 0u))))), uint(uvec2((uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u), (uvec4(gl_WorkGroupID.x, 0u, 0u, 1u)) - (uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 0u) ^ uvec4(0u, 0u, 0u, 0u))))), 0u))) - 0u)) - 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))), (_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), (uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u)) | 0u)))) ^ 0u), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), ~ (~ (uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u))))))), _GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (false ? _GLF_FUZZED(uvec4(53398u, 190990u, 122263u, 81913u)) : uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), 0u, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), (_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) >> 0u))) / 1u), 0u, 1u), (uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), ~ (~ (uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u))))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u, 1u)), (uint(uvec4(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), (_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), (uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (95414u & 0u) + (0u))) ^ 0u)) / 1u), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u), ~ (~ (uvec4(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u), 0u, 1u))))))), 0u, 0u, 1u))) - 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(27655u, 198323u, 107034u)) : gl_WorkGroupID))))) + uvec3(0u, 0u, 0u)).x, 0u, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(148094u) : 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), 0u, 0u, 1u)))))) << 0u)))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(0u, 0u | (0u))) + (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) - 0u)) + (_GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))))))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))) | _GLF_IDENTITY(0u, ~ (~ (0u)))) + (subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(0u, 0u + (0u))) + (subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u)))) + (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> (int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, cos(0.0)))), injectionSwitch.x)) & -99435))) ^ 0))))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1)), (0u | 0u) + (subgroup_local_id + 1)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)) | 0u), ((0u | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(workgroup_base))))) | 0u))), (false ? _GLF_FUZZED(num_workgroup) : (0u | 0u))) + (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, 0u + (0u))) + (subgroup_local_id + 1), min((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) | _GLF_IDENTITY(0u, 0u + (0u))) + (subgroup_local_id + 1), (0u | _GLF_IDENTITY(0u, 0u + (0u))) + (subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) | 0u) + (subgroup_local_id + 1)), 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, (0u | 0u) - 0u)))) + (subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))) >> 0u), 1u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))), 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), 1u))))), _GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) << 0u) + 1))))))) >> 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) + 0u) + (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u), ~ (~ (_GLF_IDENTITY(0u | 0u, (_GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u))) / 1u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u) | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)))))))) + (subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u)))))) + _GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ((0u)) << 0u), (0u))))))) + (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_id) : uint(8u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) - 0u))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(usubBorrow(num_workgroup, subgroup_size, workgroup_base))))) : uint(8u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) - 0u))), _GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_id) : uint(8u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) - 0u))), _GLF_IDENTITY(1u, (1u) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_id) : uint(8u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(8u), uint(8u))))) - 0u)))))))), _GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((0u | 0u) + (subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) / uvec2(1u, 1u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) / uvec2(1u, 1u))), 0u | (uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) / uvec2(1u, 1u))))))))) | 0u) + (subgroup_local_id + 1), ((0u | _GLF_IDENTITY(0u, ~ (~ (0u)))) + (subgroup_local_id + 1)) / 1u)) | _GLF_IDENTITY(((0u | 0u) + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_size , workgroup_base)) : subgroup_local_id)))) + 1)), (((0u | 0u) + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_size , workgroup_base)) : subgroup_local_id)))) + 1))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), _GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(0u, min(0u, 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u), 1u))), 0u, 1u), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u), 1u))), 0u, 1u))))) + 1)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (_GLF_IDENTITY(1, (1) >> 0))))) : _GLF_FUZZED(subgroup_id))), 1u))), _GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) + (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))) + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u + (0u))))) + _GLF_IDENTITY(1, (1) - 0))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (subgroup_local_id + 1)), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(0u | 0u, (true ? _GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uint(_GLF_FUZZED(subgroup_local_id))))))) + (subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id))), 1u))), _GLF_IDENTITY(subgroup_local_id + 1, (0u | 0u) + (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1)))))) / 1u))) >> 0u))))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false)))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.1, 2748.4739)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))) : _GLF_FUZZED((vec2(-84.65, _GLF_IDENTITY(-7.1, max(-7.1, -7.1))) + injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) - 0u), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, min(0, 0)))), 0 + _GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), ((0)) - 0))));
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), max((4), (4)))), (~ (_GLF_IDENTITY((4), max((4), (4))))) << 0))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))))), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), false, true, false)))))), (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false, true))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) << 0), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))), bool(bvec3(bool(false), true, false)))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
