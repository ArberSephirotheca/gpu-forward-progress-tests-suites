#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, sin(0.0))), float(vec4(float(vec3(injectionSwitch.y, 1.0, sin(0.0))), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(dot(vec2(determinant(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), mix(vec2(_GLF_FUZZED((- -69.80)), _GLF_FUZZED(5807.6166)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), mix(vec2(_GLF_FUZZED((- -69.80)), _GLF_FUZZED(5807.6166)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), mix(vec2(_GLF_FUZZED((- -69.80)), _GLF_FUZZED(5807.6166)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).x > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat4(injectionSwitch, determinant(mat4(1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), mix(vec2(_GLF_FUZZED((- -69.80)), _GLF_FUZZED(5807.6166)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))).x > injectionSwitch.y)))), true, false, false))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bool((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bool((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(determinant(mat3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-194.926)), float(0.0), bool(true))))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))))))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.5)), bool(false))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))))))))), bool(bool((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-73.03)), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)))), 1.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.25) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(367.390)), bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.25) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(367.390)), bool(false)))))) - 0.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.25) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(367.390)), bool(false))))) > injectionSwitch.y))))))), bool(bvec4(bool(bvec3(false, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.25) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(367.390)), bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.25) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(367.390)), bool(false)))))) - 0.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.25) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(367.390)), bool(false))))) > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) && true))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), false, true)), true, false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch[1])).y))))))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), float(mat2(float(mat2(injectionSwitch.y, 1.0, sqrt(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(7.5), _GLF_FUZZED(430.743), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4(_GLF_FUZZED(645.178), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(vec4(32.17, -685.872, -12.23, 9687.0374).p)), bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), 1.0, 1.0, 0.0))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), ~ (~ (~ (~ (gl_WorkGroupSize))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), ~ (~ (~ (~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), ~ (~ (~ (~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), ~ (~ (~ (~ (gl_WorkGroupSize))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), ~ (~ (~ (~ (gl_WorkGroupSize)))))) << uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), ~ (~ (~ (~ (gl_WorkGroupSize)))))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u)) << (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, bool(bool((false) || false)))), bool(bvec3(! (_GLF_IDENTITY((false) || false, bool(bool((false) || false)))), false, true))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(injectionSwitch.x, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(18.70, 0.0, 6.0, -45.04, 7.1, -1409.9647, 62.84, 197.204, 9.7)))))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).y) / abs(1.0))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bool(! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), true), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), true), true))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), true, true, _GLF_IDENTITY(true, true && (true)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), true), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))) || false)), false || (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))) || false)))))), true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))) || false)), false || (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))) || false)))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))) || false)), false || (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))) || false)))))), true), true)), true, true))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) * 1u, uint(uvec3((workgroup_size) * 1u, 0u, 0u)))) * workgroup_id, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) * _GLF_IDENTITY(1u, (1u) ^ 0u)) * workgroup_id : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, (0.0) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, (0.0) - 0.0)))) > injectionSwitch.y)))) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, (0.0) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), mix(float(_GLF_FUZZED(441.762)), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) + 0.0)), bool(true)))), _GLF_IDENTITY(0.0, (0.0) - 0.0)))) > injectionSwitch.y)))) && true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true)))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))) || false), false, false, false))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, true))))))) && true)), ! (! (! (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base)))), ((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base))))) | 0u)), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base)))), ((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base))))) | 0u)), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base)))), ((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base))))) | 0u)), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base)))), ((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base))))) | 0u)), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id) / 1u)) >> 0u), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base)))), ((_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base))))) | 0u)), workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))))) / 1u))), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, max((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? virtual_gid : subgroup_size) << workgroup_id))))) | 0u), (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(_GLF_IDENTITY(((true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : subgroup_size) << workgroup_id), min(_GLF_IDENTITY(((true ? virtual_gid : subgroup_size) << workgroup_id), 0u ^ (((true ? virtual_gid : subgroup_size) << workgroup_id))), _GLF_IDENTITY(((true ? virtual_gid : subgroup_size) << workgroup_id), _GLF_IDENTITY(uint(uvec4(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id), 1u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))) | 0u)))))), clamp(uint(uvec4(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id), 1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u + (0u)) : _GLF_FUZZED(workgroup_base))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id, 1u * ((_GLF_IDENTITY(true, false || (true)) ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))) << workgroup_id))), (true ? (_GLF_IDENTITY((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id, 1u * ((_GLF_IDENTITY(true, false || (true)) ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))) << workgroup_id))) : _GLF_FUZZED(workgroup_base))), 1u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(0u, 0u)), 0u, 1u)), 0u + (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(0u, 0u)), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), min(0u, 0u)), 0u, 1u)))))), clamp(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(subgroup_local_id) : min(0u, 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), min(_GLF_IDENTITY(uint(uvec2(0u, 1u)), 0u ^ (uint(uvec2(0u, 1u)))), uint(uvec2(0u, 1u))))), 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))))))), _GLF_IDENTITY(min(uint(uvec4(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id), 1u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))))))), uint(uvec4(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id), 1u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))))))), (min(uint(uvec4(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id), 1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)))))))) | 0u), 1u))))), uint(uvec4(((true ? virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(subgroup_size, subgroup_size))) << workgroup_id), 1u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u))))))))))) - 0u)), uint(uvec4(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id), 1u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), 0u, 1u)))))))))))))))) | 0u)) | (true ? _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), ! (! (bool(bvec2(! (true), true)))))))) ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, ((true ? virtual_gid : subgroup_size) << workgroup_id) ^ 0u), max((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? virtual_gid : subgroup_size) << workgroup_id))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))) : subgroup_size) << workgroup_id, min(_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? (true ? virtual_gid : subgroup_size) << workgroup_id : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(true ? virtual_gid : subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (true ? virtual_gid : subgroup_size))) << workgroup_id))))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, (_GLF_IDENTITY((_GLF_IDENTITY(true ? virtual_gid : subgroup_size, 0u | (true ? virtual_gid : subgroup_size))) << workgroup_id, max((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? virtual_gid : subgroup_size) << workgroup_id))) | (_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, min(_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? (true ? virtual_gid : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << workgroup_id : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)), num_workgroup))))), (true ? virtual_gid : subgroup_size) << workgroup_id))))))) | 0u), max(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, (_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, max((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? virtual_gid : subgroup_size) << workgroup_id))) | (_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, min(_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, (_GLF_IDENTITY(true, ! (! (true))) ? (true ? virtual_gid : subgroup_size) << workgroup_id : _GLF_FUZZED(num_workgroup))), (true ? virtual_gid : _GLF_IDENTITY(subgroup_size, (0u | 0u) ^ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) << workgroup_id))))))) | 0u), _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY((true ? virtual_gid : subgroup_size), 0u ^ ((true ? virtual_gid : subgroup_size))) << workgroup_id, (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? virtual_gid : subgroup_size) << workgroup_id, max((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? virtual_gid : subgroup_size) << workgroup_id))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u) : subgroup_size) << workgroup_id, min(_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? (true ? virtual_gid : subgroup_size) << workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)) - 0u)) - 0u))), (true ? virtual_gid : subgroup_size) << workgroup_id))))))) | 0u)))) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))], _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true ? virtual_gid : subgroup_size, uint(uvec3(true ? virtual_gid : subgroup_size, 0u, 0u)))) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size))))) << workgroup_id))) | 0u), (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? virtual_gid : subgroup_size) << workgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (true ? (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(next_virtual_gid))))))) | 0u), clamp(true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? virtual_gid : subgroup_size) << workgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (true ? (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(next_virtual_gid))))))) | 0u), true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? virtual_gid : subgroup_size) << workgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (true ? (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(next_virtual_gid))))))) | 0u), true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? virtual_gid : subgroup_size) << workgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) + (_GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), (true ? (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(next_virtual_gid))))))) | 0u)))) | (true ? _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)) : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))), ((_GLF_FUZZED(((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, false))) ? virtual_gid : subgroup_size) << workgroup_id)))) + 0u) | 0u)))))], 0u | (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, ! (! (true))) ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u), (true ? virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)))))), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, ((true ? virtual_gid : subgroup_size) << workgroup_id) << 0u)))) | 0u)) | (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, ~ (_GLF_IDENTITY(~ ((true ? virtual_gid : subgroup_size) << workgroup_id), (false ? _GLF_FUZZED(usubBorrow(26765u, subgroup_id, workgroup_base)) : ~ ((true ? virtual_gid : subgroup_size) << workgroup_id))))))), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) | 0u)))))]))) >> 0u, min((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size), min((true ? virtual_gid : subgroup_size), (true ? virtual_gid : subgroup_size))) << workgroup_id))) | 0u), (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u)) | (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u)))))], 0u | (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))) ? virtual_gid : subgroup_size) << workgroup_id))) | _GLF_IDENTITY(0u, (0u) | (0u))), (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), false || (bool(bool(_GLF_IDENTITY(true, true && (true))))))) ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), false || (bool(bool(_GLF_IDENTITY(true, true && (true))))))) ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), (_GLF_FUZZED(((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), false || (bool(bool(_GLF_IDENTITY(true, true && (true))))))) ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) | (_GLF_FUZZED(((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), false || (bool(bool(_GLF_IDENTITY(true, true && (true))))))) ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))))), _GLF_FUZZED(((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), false || (bool(bool(_GLF_IDENTITY(true, true && (true))))))) ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))), _GLF_FUZZED(((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), false || (bool(bool(_GLF_IDENTITY(true, true && (true))))))) ? virtual_gid : subgroup_size) << _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))))) | 0u)) | (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(((true ? virtual_gid : subgroup_size) << workgroup_id), (((true ? virtual_gid : subgroup_size) << workgroup_id)) << 0u)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u)))))]))) >> 0u, (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size), max(_GLF_IDENTITY((true ? virtual_gid : subgroup_size), clamp((true ? virtual_gid : subgroup_size), (true ? virtual_gid : subgroup_size), (true ? virtual_gid : subgroup_size))), (true ? virtual_gid : subgroup_size))) << workgroup_id))) * 1u), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, ((_GLF_IDENTITY(true, ! (! (true))) ? virtual_gid : subgroup_size) << workgroup_id) / 1u)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, max((true ? virtual_gid : subgroup_size) << workgroup_id, (true ? virtual_gid : subgroup_size) << workgroup_id)))), (_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY((true ? virtual_gid : subgroup_size), max(_GLF_IDENTITY((true ? virtual_gid : subgroup_size), clamp((true ? virtual_gid : subgroup_size), (true ? virtual_gid : subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? virtual_gid : subgroup_size))), (true ? virtual_gid : subgroup_size))) << workgroup_id), max((_GLF_IDENTITY((true ? virtual_gid : subgroup_size), max(_GLF_IDENTITY((true ? virtual_gid : subgroup_size), clamp((true ? virtual_gid : subgroup_size), (true ? virtual_gid : subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? virtual_gid : subgroup_size))), (true ? virtual_gid : subgroup_size))) << workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((true ? virtual_gid : subgroup_size), max(_GLF_IDENTITY((true ? virtual_gid : subgroup_size), clamp((true ? virtual_gid : subgroup_size), (true ? virtual_gid : subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? virtual_gid : subgroup_size))), (true ? virtual_gid : subgroup_size))) << workgroup_id), (true ? (_GLF_IDENTITY((true ? virtual_gid : subgroup_size), max(_GLF_IDENTITY((true ? virtual_gid : subgroup_size), clamp((true ? virtual_gid : subgroup_size), (true ? virtual_gid : subgroup_size), (_GLF_IDENTITY(true, (true) || false) ? virtual_gid : subgroup_size))), (true ? virtual_gid : subgroup_size))) << workgroup_id) : _GLF_FUZZED(workgroup_id))))))) * 1u), (_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size) << workgroup_id, ((_GLF_IDENTITY(true, ! (! (true))) ? virtual_gid : subgroup_size) << workgroup_id) / 1u)))) | 0u)) + 0u), (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY((true ? virtual_gid : subgroup_size), ((true ? virtual_gid : subgroup_size)) | (_GLF_IDENTITY((true ? virtual_gid : subgroup_size), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? virtual_gid : subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (true ? virtual_gid : subgroup_size)))))))) << workgroup_id)), _GLF_IDENTITY((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u, uint(uvec2((_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u, 1u))))) | _GLF_IDENTITY((true ? virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((_GLF_IDENTITY(true ? virtual_gid : subgroup_size, (true ? virtual_gid : subgroup_size) | (true ? virtual_gid : subgroup_size))) << workgroup_id))) | 0u), (_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u)) >> 0u)), ((true ? virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u), (_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u)) >> 0u))) | ((true ? virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u), (_GLF_IDENTITY(_GLF_FUZZED(((_GLF_IDENTITY(true ? virtual_gid : subgroup_size, (false ? _GLF_FUZZED(uvec3(101424u, 143012u, 30330u)[0]) : _GLF_IDENTITY(true ? virtual_gid : subgroup_size, 0u | (true ? virtual_gid : subgroup_size))))) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u)) >> 0u)))))))], 0u | (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), ~ (~ (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))))), (_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(true ? virtual_gid : subgroup_size, (_GLF_IDENTITY(true ? virtual_gid : subgroup_size, (true ? virtual_gid : subgroup_size) * 1u)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), ~ (~ ((_GLF_IDENTITY(true ? virtual_gid : subgroup_size, (_GLF_IDENTITY(true ? virtual_gid : subgroup_size, (true ? virtual_gid : subgroup_size) * 1u)) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) << workgroup_id))) | 0u), (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id))) | 0u)) | (true ? virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(((true ? virtual_gid : subgroup_size) << workgroup_id)), (_GLF_FUZZED(((true ? virtual_gid : _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))) << workgroup_id))) | 0u)))))]))) >> 0u))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED(uint(461.597)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   int i = _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), _GLF_IDENTITY(0 | (_GLF_IDENTITY((0), 1 * ((0)))), (0 | (_GLF_IDENTITY((0), 1 * ((0))))) ^ 0)));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)))), bool(bvec2(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)))), false))), true, true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) && true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (_GLF_IDENTITY((bool(_GLF_DEAD(false))), ! (! ((bool(_GLF_DEAD(false))))))) && true)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
