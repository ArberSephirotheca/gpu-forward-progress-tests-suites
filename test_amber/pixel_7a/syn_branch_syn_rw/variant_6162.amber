#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, (false) && true)))), ! (! (bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.7)), float(0.0), bool(true))), exp(0.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat3x2(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true)), 0.0, 0.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), _GLF_IDENTITY(float(_GLF_FUZZED(6.5)), (float(_GLF_FUZZED(6.5))) - sin(log(1.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[_GLF_IDENTITY(0, 1 * (0))]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true))).y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FUZZED(-4052.2040)), mix(vec2((vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FUZZED(-4052.2040)))[0], _GLF_FUZZED(-67.77)), vec2(_GLF_FUZZED(4.0), (vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FUZZED(-4052.2040)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_IDENTITY(_GLF_FUZZED(6.5), mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.5), float(float(_GLF_FUZZED(6.5))))), float(_GLF_FUZZED(42.28)), bool(false)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FUZZED(-4052.2040)), vec2(_GLF_FUZZED(-1374.7302), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), mix(vec2(_GLF_FUZZED((112.804 + -9494.4879)), _GLF_FUZZED(-4305.7311)), vec2((vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))[0], (vec2(mat4x3((injectionSwitch), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))[1]), bvec2(true, true))))[1]), bvec2(false, true))).y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true, true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true), false, true)), ! (! (bool(bvec3(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true), false, true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(_GLF_ZERO(0.0, injectionSwitch.x))))) && (bool(false)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))), true, false, true))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), max(abs(1.0), _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-4.1)), bool(false))))), max(_GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0))), (abs(1.0)) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)) : _GLF_FUZZED(67.59))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), clamp(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), clamp(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1797.8862))), 0.0))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)) : _GLF_FUZZED(-6.8))), min(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)) : _GLF_FUZZED(-6.8))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)) : _GLF_FUZZED(-6.8))))))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 1.0, tan(0.0), 0.0)), (false ? _GLF_FUZZED(262.807) : dot(vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), vec4(0.0, 1.0, tan(0.0), 0.0)))))), 0.0, exp(0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0, exp(0.0), 1.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), ! (_GLF_IDENTITY(! (! (bool(false))), (! (! (bool(false)))) && true)))), bool(bvec2(! (_GLF_IDENTITY(! (bool(false)), ! (_GLF_IDENTITY(! (! (bool(false))), (! (! (bool(false)))) && true)))), true))))))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, false || (false)), false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), clamp((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-357.984, -12.60, -74.60, -712.649).w), _GLF_FUZZED(4.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((73.95)), _GLF_FUZZED(4125.7963)), vec2((_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0), (false ? _GLF_FUZZED(trunc(vec2(-878.117, 896.493))) : vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)))) : _GLF_FUZZED(clamp(injectionSwitch, vec2(_GLF_IDENTITY(-88.71, clamp(-88.71, -88.71, -88.71)), -10.05), vec2(-9.1, 20.38)))))[1]), bvec2(true, true)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && true)))))), false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false, true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (! (! (! (_GLF_IDENTITY(false, false || (false)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(6753.2410, -372.515, 82.31, -7.3).b) : injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-578.494, 94.90)) : injectionSwitch)), injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.9) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))) && true), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- vec2(1.9, 3.3).t))), bvec2(true, false))).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(8.5) : _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))), float(_GLF_FUZZED(vec4(78.64, 83.82, 5.9, -345.501).x)), bool(false))))) - log(1.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch), min(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, dot(vec2(197.665, -6.8), injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(44.54)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), ! (! (! (! ((! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-56.39), _GLF_IDENTITY(clamp(_GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39)), min(clamp(_GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39)), _GLF_IDENTITY(clamp(_GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39)), min(clamp(_GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39)), clamp(_GLF_FUZZED(-56.39), _GLF_FUZZED(-56.39), _GLF_IDENTITY(_GLF_FUZZED(-56.39), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(-56.39) : _GLF_FUZZED(1.6)))))))))), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), abs(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), log(1.0))))) / abs(1.0))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.32) : injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.5) : injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.5) : injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.5) : injectionSwitch.x)) > injectionSwitch.y), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.2) : injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED((-7.4 * -156.594)), (true ? _GLF_FUZZED((-7.4 * -156.594)) : _GLF_FUZZED(-7.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, log(1.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), tan(0.0), 0.0, 1.0), _GLF_IDENTITY((mat2x3(injectionSwitch.y, 0.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), tan(0.0), 0.0, 1.0)) * mat2(1.0), transpose(transpose((mat2x3(injectionSwitch.y, 0.0, tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), tan(0.0), 0.0, 1.0)) * mat2(1.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.w, (false ? _GLF_FUZZED(uvec3(172328u, 169882u, 42345u)[2]) : GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.w));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))), min(0u, 0u)))), (0u) ^ (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec2(uint(3u), 0u)))))) + (subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u)))), (0u) ^ (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, uint(uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))), uint(uvec2(uint(3u), 0u)))))) + (subgroup_id)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec2(uint(3u), 0u)))))) + (subgroup_id)))) * GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(mod(max(injectionSwitch, 8.3), -74.05)))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(616.664), _GLF_FUZZED(vec4(28.47, 5.1, 1.8, 4.0).y)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u))), min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) - 0u))) * GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y + ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x, ~ (~ _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x)) - 0u))) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id)) | uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)).y);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0))), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))))))))), (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z], max(_GLF_IDENTITY(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z], uint(uvec4(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z], 0u, 1u, 0u))), buf[_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z, 0u | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z))) >> 0u)])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false)) && true))) || false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.8) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (false ? _GLF_FUZZED(uvec4(136158u, 53177u, 178299u, 108839u)) : _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u)))), uvec4(0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (~ ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))))))) ^ (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (false ? _GLF_FUZZED(uvec4(136158u, 53177u, 178299u, 108839u)) : _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u)))), uvec4(0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (~ ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))))))) ^ (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (false ? _GLF_FUZZED(uvec4(136158u, 53177u, 178299u, 108839u)) : _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u)))), uvec4(0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (~ ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))))))) ^ (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (false ? _GLF_FUZZED(uvec4(136158u, 53177u, 178299u, 108839u)) : _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u)))), uvec4(0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (~ ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))))))) ^ (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))))))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (false ? _GLF_FUZZED(uvec4(136158u, 53177u, 178299u, 108839u)) : _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u)))), uvec4(0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (~ ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))))))) ^ (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), (false ? _GLF_FUZZED(uvec4(136158u, 53177u, 178299u, 108839u)) : _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) - uvec4(0u, 0u, 0u, 0u)))), uvec4(0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), max((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)))), (~ ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (~ ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))))))) ^ (uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | 0u))), 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))))).y)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true)) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-398.560)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (injectionSwitch.x) * cos(0.0))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) - 0.0) * 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))), (true ? transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))) : _GLF_FUZZED(mat3x2(-6.0, -5.2, -64.70, -5348.9337, 1869.0306, 2916.6268))))))), max(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))), (true ? transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))) : _GLF_FUZZED(mat3x2(-6.0, -5.2, -64.70, -5348.9337, 1869.0306, 2916.6268))))))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))), (true ? transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))) : _GLF_FUZZED(mat3x2(-6.0, -5.2, -64.70, -5348.9337, 1869.0306, 2916.6268)))))))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), sin(0.0) + ((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) - 0.0) * 1.0) - log(1.0))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4735.5563)), bool(false))))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), false, false)), true, false))))) || false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(mat2x4(vec2(vec4(injectionSwitch, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_FUZZED(130.309), _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0))))), min((_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0))))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), max(vec2(vec4(injectionSwitch, 1.0, 0.0)), vec2(vec4(injectionSwitch, 1.0, 0.0)))))))[1]), vec2((vec2(vec4(injectionSwitch, 1.0, 0.0)))[0], _GLF_FUZZED(-8094.1212)), bvec2(true, false)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, log(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))).y)), bool(bvec2((false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, log(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))).y)), true)))), true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), _GLF_IDENTITY(bool(bvec2(true && ((! (false))), false)), false || (bool(bvec2(true && ((! (false))), false))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)) && ((! _GLF_IDENTITY((false), ((false)) && true))), false)), _GLF_IDENTITY(false, true && (false)) || (bool(bvec2(true && ((! (false))), false))))))), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (false), (! (false)) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true, true)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(894.245)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, sqrt(sin(0.0)), 1.0))), 1.0, 0.0)) * mat3(1.0)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), true, true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))), ! (! (_GLF_IDENTITY(false, true && (false))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (false))))), false, true, false))) || false)) && true))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(vec2(-31.16, 787.863))) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) ^ (uvec4(0u, 0u, 0u, 0u) & uvec4(140830u, 26673u, 164797u, 20713u)))) | uvec4(0u, 0u, 0u, 0u)).z], read, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) ^ 0))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0)), (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) >> (1 ^ 1))) | 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))))) | 0), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))), (69483 & 0) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0)))) ^ 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))))) | 0)))), 0 + (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(4, 4))))) >> 0))) | 0))))), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0)), 0 + (~ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0))) << 0), 1), _GLF_IDENTITY(ivec2(ivec4(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0))) << 0), 1), 0, 0)), min(ivec2(ivec4(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0))) << 0), 1), 0, 0)), ivec2(ivec4(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0)), ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) | 0))) << 0), 1), 0, 0)))))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0)), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ ((_GLF_IDENTITY(4, min(4, 4))))) >> 0))) + 0)) | 0)), 0 + (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(4, min(4, 4))), (0 | 0)), (ivec2((_GLF_IDENTITY(4, min(4, 4))), (0 | 0))) | ivec2(0, 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(4, min(4, 4))), (0 | 0)), (ivec2((_GLF_IDENTITY(4, min(4, 4))), (0 | 0))) | ivec2(0, 0)))) / 1, ((int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(4, min(4, 4))), (0 | 0)), (ivec2((_GLF_IDENTITY(4, min(4, 4))), (0 | 0))) | ivec2(0, 0)))) / 1) | (-35140 & 0)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, min(4, 4)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec2(-49716, 84894)[0]) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), (true ? int(ivec3(4, 1, 1)) : _GLF_FUZZED(i)))))), 4))), ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec2(-49716, 84894)[0]) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 1)), (true ? int(ivec3(4, 1, 1)) : _GLF_FUZZED(i)))))), 4)))) << 0))) >> 0))) | 0)))))) | 0))))) >> 0), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> 0)))), int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) * 1), 0))))))) - 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - (0 << _GLF_IDENTITY(int(0), int(0))))) - 0))) << 0)))))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], mix(float(_GLF_FUZZED(-6700.9279)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), ! (! ((false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))), false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), true && (! (! (false || (_GLF_DEAD(false)))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), true && (! (! (false || (_GLF_DEAD(false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), true && (! (! (false || (_GLF_DEAD(false))))))))))))), true, true, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.3)), bool(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))))) / vec2(1.0, 1.0)).y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))), injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true))), false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(9.7, -295.803, -6.4, -1355.9791))) : injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat3(9.8, _GLF_IDENTITY(-42.75, mix(float(_GLF_FUZZED(-33.76)), float(-42.75), bool(true))), 4937.6186, 242.956, 4249.6881, 391.580, 31.81, -22.87, 1.6)) : mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat3(9.8, _GLF_IDENTITY(-42.75, mix(float(_GLF_FUZZED(-33.76)), float(-42.75), bool(true))), 4937.6186, 242.956, 4249.6881, 391.580, 31.81, -22.87, 1.6)) : mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat3(9.8, _GLF_IDENTITY(-42.75, mix(float(_GLF_FUZZED(-33.76)), float(-42.75), bool(true))), 4937.6186, 242.956, 4249.6881, 391.580, 31.81, -22.87, 1.6)) : mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat3(9.8, _GLF_IDENTITY(-42.75, mix(float(_GLF_FUZZED(-33.76)), float(-42.75), bool(true))), 4937.6186, 242.956, 4249.6881, 391.580, 31.81, -22.87, 1.6)) : mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat3(9.8, _GLF_IDENTITY(-42.75, mix(float(_GLF_FUZZED(-33.76)), float(-42.75), bool(true))), 4937.6186, 242.956, 4249.6881, 391.580, 31.81, -22.87, 1.6)) : mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))))))), true, true))))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])), 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 1.0, 0.0))))).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false) || false))), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, abs(1.0), abs(0.0)))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, abs(1.0), abs(0.0)))) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, abs(1.0), abs(0.0)))) > injectionSwitch.y))), true, false, true))), false, true, false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.8), max(_GLF_FUZZED(7.8), _GLF_IDENTITY(_GLF_FUZZED(7.8), clamp(_GLF_FUZZED(7.8), _GLF_FUZZED(7.8), _GLF_FUZZED(7.8))))), _GLF_FUZZED(-614.680)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], sqrt(0.0) + ((injectionSwitch)[1]))), bvec2(true, true))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED((-5.4 * 58.87)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-4418.3834)), bvec2(true, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   atomicStore(checker[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z], _GLF_IDENTITY(read, clamp(read, read, read)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
