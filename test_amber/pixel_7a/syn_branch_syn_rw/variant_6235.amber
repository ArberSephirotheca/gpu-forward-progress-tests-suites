#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 17:
     case 62:
     if(_GLF_DEAD(false))
      return;
     case 33:
     case 12:
     barrier();
     break;
     case 79:
     uvec2(51002u, 88703u);
     default:
     1;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), min(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), _GLF_IDENTITY(uvec3(0u), uvec3(0u))))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(13675u, 113381u, 37174u)))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(13675u, 113381u, 37174u)))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(13675u, 113381u, 37174u)))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(13675u, 113381u, 37174u)))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(13675u, 113381u, 37174u)))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(19535u, 125008u, 182231u))))))))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), (_GLF_IDENTITY(uvec3(0u), uvec3(0u))) ^ uvec3(0u, 0u, 0u))) * _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))).x)) : _GLF_FUZZED(36246u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 0u), (uvec4(gl_WorkGroupID, 0u)) / uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 1u, 1u, 1u)))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, true && (true)), false)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))) || false)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base))) / 1u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (uint(uint(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))) || false)))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(false, (false) || false), bool(bool((false) || false)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 ^ (0 << _GLF_IDENTITY(int(1), int(1))))))
        {
         case 0:
         case 32:
         case 86:
         case 75:
         case 52:
         case 34:
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         case 31:
         case 26:
         case 14:
         case 96:
         return;
         break;
         default:
         1;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 17:
     ;
     case 0:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     case 70:
     {
      if(_GLF_WRAPPED_IF_TRUE(true))
       {
        if(_GLF_DEAD(false))
         {
          switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
           {
            case 0:
            if(_GLF_DEAD(false))
             return;
            case 94:
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
            case 66:
            case 83:
            case 12:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            return;
            case 8:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            break;
            case 80:
            -5.0;
            case 60:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            uvec3(106991u, _GLF_IDENTITY(40248u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(40248u, (40248u) << 0u))), 35565u);
            default:
            1;
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
               {
                case 2:
                _GLF_IDENTITY((ivec3(89343, _GLF_IDENTITY(9628, ~ (~ (9628))), -72066) / findMSB(30804)), clamp((ivec3(89343, _GLF_IDENTITY(9628, ~ (~ (9628))), -72066) / findMSB(30804)), (ivec3(89343, _GLF_IDENTITY(9628, ~ (~ (9628))), -72066) / findMSB(30804)), _GLF_IDENTITY((ivec3(89343, _GLF_IDENTITY(9628, ~ (~ (9628))), -72066) / findMSB(30804)), (_GLF_IDENTITY((ivec3(89343, _GLF_IDENTITY(9628, ~ (~ (9628))), -72066) / findMSB(30804)), ((ivec3(89343, _GLF_IDENTITY(9628, ~ (~ (9628))), -72066) / findMSB(30804))) | ((ivec3(89343, _GLF_IDENTITY(9628, ~ (~ (9628))), -72066) / findMSB(30804))))) | ivec3(0, 0, 0))));
                case 0:
                case 32:
                case 58:
                case 18:
                case 55:
                case 21:
                case 9:
                case 91:
                case 76:
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
                break;
                case 42:
                ivec4 _GLF_SWITCH_7_0v[34], _GLF_SWITCH_7_1v;
                default:
                1;
               }
             }
           }
         }
       }
      else
       {
       }
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         return;
        barrier();
       }
      (+ mat3(-929.599, 127.401, 4357.6383, -4.3, -36.67, 1.7, _GLF_IDENTITY(9.8, mix(float(_GLF_FUZZED(-90.80)), float(9.8), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -8.4, -32.80));
      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y))))
       {
       }
      else
       {
        if((virtual_gid != workgroup_size))
         {
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            switch(_GLF_SWITCH(0))
             {
              case 47:
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              mat4x3 _GLF_SWITCH_1_0v[48], _GLF_SWITCH_1_1v;
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
               return;
              case 62:
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               return;
              for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) - 0))
               {
                mat2x3((mat3x4(477.893, 96.34, -0.4, -246.989, 63.50, -4.4, 622.026, 9879.7689, 8248.9301, -54.42, -2.6, -4.4) / mat3x4(26.49, 6.6, -75.12, -193.101, 1.2, 538.001, 5.2, 9075.5030, -1.8, -650.490, 92.91, 57.33)));
               }
              case 0:
              if(_GLF_IDENTITY(false, ! (! (false))))
               {
                switch(_GLF_SWITCH((1 ^ 1)))
                 {
                  case 13:
                  ;
                  case 0:
                  case 94:
                  case 67:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  case 75:
                  case 22:
                  vec4(-84.26, -9.1, 379.131, -21.24).ttqp;
                  case 37:
                  if(_GLF_DEAD(false))
                   return;
                  ;
                  _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + uvec2(75319u, _GLF_IDENTITY(_GLF_IDENTITY(39019u, uint(uint(39019u))), (39019u) - (173814u & 0u))), min(workgroup_base + uvec2(75319u, _GLF_IDENTITY(39019u, (39019u) - (173814u & 0u))), workgroup_base + uvec2(75319u, _GLF_IDENTITY(39019u, (39019u) - (173814u & 0u)))))), ((workgroup_base + uvec2(75319u, _GLF_IDENTITY(39019u, _GLF_IDENTITY((39019u), ~ (_GLF_IDENTITY(~ ((39019u)), (false ? _GLF_FUZZED(subgroup_size) : ~ ((39019u)))))) - (173814u & 0u))))) | ((workgroup_base + uvec2(75319u, _GLF_IDENTITY(39019u, (39019u) - (173814u & 0u))))))[0];
                  if(_GLF_DEAD(false))
                   return;
                  bvec4(((mat4(-0.9, -3.8, _GLF_IDENTITY(_GLF_IDENTITY(-4.0, min(-4.0, -4.0)), max(_GLF_IDENTITY(-4.0, min(-4.0, -4.0)), _GLF_IDENTITY(_GLF_IDENTITY(-4.0, min(-4.0, -4.0)), (_GLF_IDENTITY(-4.0, min(-4.0, -4.0))) / 1.0))), -787.644, -8.6, -63.10, 869.372, 1253.5290, 5.4, -80.17, -42.77, -3.8, 52.69, _GLF_IDENTITY(_GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1)), (_GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1))) - 0.0), _GLF_IDENTITY(978.074, max(978.074, _GLF_IDENTITY(978.074, 0.0 + (978.074)))), 6.5) / _GLF_IDENTITY(mat4(1.2, 0.5, 1200.1268, 2.9, -578.104, 4.3, 915.560, -9.4, _GLF_IDENTITY(0.7, min(0.7, 0.7)), 5882.1920, -619.698, -7.0, 9.6, 948.963, 4.3, 4210.4967), transpose(_GLF_IDENTITY(transpose(mat4(1.2, 0.5, 1200.1268, 2.9, -578.104, 4.3, _GLF_IDENTITY(915.560, 1.0 * (915.560)), -9.4, _GLF_IDENTITY(0.7, min(0.7, 0.7)), 5882.1920, -619.698, -7.0, 9.6, 948.963, 4.3, 4210.4967)), (transpose(mat4(1.2, 0.5, 1200.1268, 2.9, -578.104, 4.3, 915.560, -9.4, _GLF_IDENTITY(0.7, min(0.7, 0.7)), 5882.1920, -619.698, -7.0, 9.6, 948.963, 4.3, 4210.4967))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) == _GLF_IDENTITY(_GLF_IDENTITY(mat4(-6.4, 91.05, -4.6, _GLF_IDENTITY(-6.0, (true ? -6.0 : _GLF_FUZZED(asinh(-2255.2248)))), -717.733, -7.5, 5.0, -346.948, 2.4, 5.2, -479.198, -66.64, -8.9, -1829.9723, -9.0, 775.505), transpose(_GLF_IDENTITY(transpose(mat4(-6.4, 91.05, -4.6, _GLF_IDENTITY(-6.0, (true ? -6.0 : _GLF_FUZZED(asinh(-2255.2248)))), -717.733, -7.5, 5.0, -346.948, 2.4, 5.2, -479.198, -66.64, -8.9, -1829.9723, -9.0, 775.505)), (transpose(mat4(-6.4, 91.05, -4.6, _GLF_IDENTITY(-6.0, (true ? -6.0 : _GLF_FUZZED(asinh(-2255.2248)))), -717.733, -7.5, 5.0, -346.948, 2.4, 5.2, -479.198, -66.64, -8.9, -1829.9723, -9.0, 775.505))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (mat4(-6.4, 91.05, -4.6, -6.0, _GLF_IDENTITY(-717.733, min(-717.733, _GLF_IDENTITY(-717.733, (true ? -717.733 : _GLF_FUZZED(-6.3))))), -7.5, 5.0, -346.948, 2.4, 5.2, -479.198, -66.64, -8.9, -1829.9723, -9.0, 775.505)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-35.30) : 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), true, bvec2(false, true));
                  break;
                  case 41:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                     return;
                    barrier();
                   }
                  uvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[21], _GLF_SWITCH_4_2v;
                  case 38:
                  mat4x2(6.0, -4.9, -819.210, -1.5, 380.983, 7.4, 3.2, -1.4);
                  default:
                  1;
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                 return;
               }
              else
               {
                if(_GLF_DEAD(false))
                 return;
                switch(_GLF_SWITCH(0))
                 {
                  case 42:
                  (32133 / ivec2(25626, -61267));
                  if(_GLF_DEAD(false))
                   barrier();
                  case 31:
                  mat2x4 _GLF_SWITCH_5_0v[99], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[28];
                  if(_GLF_DEAD(false))
                   return;
                  case 0:
                  case 74:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
                   return;
                  case 65:
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   return;
                  case 96:
                  case 40:
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    switch(_GLF_SWITCH((_GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))), _GLF_IDENTITY(int(5), int(ivec4(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), 1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY((5) ^ 0, ((5) ^ 0) | (_GLF_IDENTITY((5) ^ 0, (true ? (5) ^ 0 : _GLF_FUZZED(-21204))))))), int(5))), 0)))))))
                     {
                      case 14:
                      bvec2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
                      case 56:
                      vec4(-0.2, 6.6, -8.7, 5.9);
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                        barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          barrier();
                         }
                       }
                      case 0:
                      if(_GLF_DEAD(false))
                       return;
                      case 93:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 1:
                      case 66:
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true)))))
                       return;
                      case 74:
                      case 38:
                      case 44:
                      if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                       return;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      mat4 _GLF_SWITCH_0_0v[40], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[65];
                      case 5:
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                       }
                      case 40:
                      case 81:
                      ivec4(-66742, -76693, -55688, 55442);
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                       return;
                      break;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                       barrier();
                      case 7:
                      do
                       {
                        _GLF_SWITCH_0_1v;
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      default:
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          if(_GLF_DEAD(false))
                           return;
                          case 8:
                          case 34:
                          case 40:
                          case 22:
                          if(_GLF_DEAD(false))
                           barrier();
                          case 41:
                          case 44:
                          case 43:
                          case 50:
                          1;
                          break;
                          case 93:
                          uvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[30], _GLF_SWITCH_3_2v;
                          default:
                          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
                           barrier();
                          1;
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                         return;
                        if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                         return;
                       }
                     }
                   }
                  break;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    return;
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  case 4:
                  mat2(1.4, 2.6, -900.700, _GLF_IDENTITY(18.57, (18.57) * 1.0));
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      barrier();
                     }
                   }
                  else
                   {
                   }
                  case 2:
                  if(_GLF_DEAD(false))
                   return;
                  mat2x4(mat2(-92.84, -9.3, 354.426, 3.4));
                  default:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    return;
                   }
                  1;
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              while(true)
               {
                do
                 {
                  mat3x2(-190.274, 7.8, -98.12, 8.2, _GLF_IDENTITY(-118.303, float(vec3(-118.303, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 8.6);
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
                       barrier();
                      break;
                     }
                    barrier();
                   }
                  if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                   return;
                  if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                   barrier();
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                mat2x3 _GLF_SWITCH_0_3v[78], _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  break;
                 }
                mat2(273.381, -5.7, 117.313, -7.1);
                ;
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(849.554, -6.0)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(849.554, -6.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec2(849.554, -6.0)))).y)))))) || false)))
                 return;
                vec3 _GLF_SWITCH_0_6v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(false))
                 break;
                uvec3(65791u, 36868u, 60128u);
               }
              bvec3 _GLF_SWITCH_0_7v[7], _GLF_SWITCH_0_8v;
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              break;
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 return;
               }
              case 56:
              (subgroup_size);
              case 37:
              bvec4(false, false, true, false);
              default:
              1;
             }
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            return;
           }
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          switch(_GLF_SWITCH(0))
           {
            case 0:
            mat2x3 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[13], _GLF_SWITCH_0_11v;
            mat3x4 _GLF_SWITCH_0_12v;
            vec3(243.948, 8.0, 4.5);
            if(false)
             {
              float _GLF_SWITCH_0_13v[46], _GLF_SWITCH_0_14v[56];
              min(_GLF_IDENTITY(uvec2(105276u, 79722u), (_GLF_IDENTITY(uvec2(105276u, 79722u), uvec2(0u, 0u) ^ (uvec2(105276u, 79722u)))) - (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u)))), workgroup_id);
              ivec4 _GLF_SWITCH_0_15v;
              uint _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[18];
              mat2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[50], _GLF_SWITCH_0_21v[33];
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 68:
                  bvec2(true, false);
                  case 0:
                  case 97:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 32:
                  return;
                  break;
                  case 43:
                  greaterThanEqual(vec3(-528.764, 23.98, 8.0), vec3(-2.5, 605.217, -5.3));
                  default:
                  1;
                 }
               }
              vec2 _GLF_SWITCH_0_22v;
              if(_GLF_DEAD(false))
               return;
             }
            else
             {
              mat4 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
              mat4x3 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[82], _GLF_SWITCH_0_27v;
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
               {
                if(_GLF_DEAD(false))
                 return;
                return;
               }
              ;
              do
               {
                switch(_GLF_SWITCH(((1 ^ 1) << _GLF_IDENTITY(int(7), int(7)))))
                 {
                  case 29:
                  ivec4(92371, -14510, 71647, -53269);
                  case 0:
                  case 77:
                  case 34:
                  case 55:
                  case 87:
                  switch(_GLF_SWITCH(0))
                   {
                    case 79:
                    bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))));
                    if(_GLF_DEAD(false))
                     return;
                    case 0:
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         return;
                        return;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      return;
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      return;
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    break;
                    case 33:
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      ;
                     }
                    case 59:
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     continue;
                    atan(vec3(-817.086, -5255.0243, -261.216));
                    if(_GLF_DEAD(false))
                     barrier();
                    default:
                    1;
                    if(_GLF_DEAD(false))
                     continue;
                   }
                  break;
                  case 97:
                  float _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                  case 81:
                  uvec3 _GLF_SWITCH_7_3v;
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            ;
            injectionSwitch;
            mat3(_GLF_IDENTITY(-8.0, min(-8.0, -8.0)), 62.24, 68.47, -97.96, 86.49, -3.9, _GLF_IDENTITY(-69.36, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-69.36, float(mat3x2(_GLF_IDENTITY(-69.36, float(vec2(-69.36, 0.0))), round(length(normalize(1.0))), abs(0.0), 0.0, 0.0, 1.0))), 0.0, 1.0, sin(0.0), 0.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY(-69.36, float(mat3x2(-69.36, round(length(normalize(1.0))), abs(0.0), 0.0, 0.0, 1.0))), 0.0, 1.0, sin(0.0), 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(-69.36, float(mat3x2(-69.36, round(length(normalize(1.0))), abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))), 0.0, 1.0, sin(0.0), 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(-69.36, float(mat3x2(-69.36, round(length(normalize(1.0))), abs(0.0), 0.0, 0.0, 1.0))), 0.0, 1.0, sin(0.0), 0.0, 1.0))))), -20.42, 406.280);
            break;
            case 38:
            mat3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[78], _GLF_SWITCH_2_2v;
            default:
            1;
           }
         }
       }
      uvec4(148641u, _GLF_IDENTITY(_GLF_IDENTITY(123072u, 0u ^ (_GLF_IDENTITY(123072u, min(123072u, 123072u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(123072u, 0u ^ (_GLF_IDENTITY(123072u, min(123072u, 123072u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(123072u, 0u ^ (_GLF_IDENTITY(123072u, min(123072u, 123072u)))), ~ (~ (_GLF_IDENTITY(123072u, 0u ^ (_GLF_IDENTITY(123072u, min(123072u, _GLF_IDENTITY(123072u, (123072u) ^ 0u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(123072u, 0u ^ (_GLF_IDENTITY(123072u, min(123072u, 123072u)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(123072u, 0u ^ (_GLF_IDENTITY(123072u, min(123072u, 123072u)))), ~ (~ (_GLF_IDENTITY(123072u, 0u ^ (_GLF_IDENTITY(123072u, min(123072u, 123072u))))))), 0u, 0u))))), 173430u, 20853u);
     }
     if(_GLF_DEAD(false))
      return;
     case 44:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
          {
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           case 41:
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(true, false || (true)) ? int(4) : _GLF_FUZZED(2180)))))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           default:
           if(_GLF_DEAD(false))
            barrier();
           1;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     while(false)
      {
       uvec3 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if((_GLF_IDENTITY(-36872, clamp(-36872, _GLF_IDENTITY(-36872, min(-36872, _GLF_IDENTITY(-36872, (-36872) | 0))), _GLF_IDENTITY(-36872, (-36872) | (-36872)))) != 66359))
        {
         if(_GLF_DEAD(false))
          barrier();
         bvec2 _GLF_SWITCH_0_30v[66], _GLF_SWITCH_0_31v;
         uvec2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false)))))))) || false)))))))
            return;
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             continue;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         while((bitfieldReverse(read) >= uaddCarry(subgroup_id, subgroup_size, workgroup_id)))
          {
          }
         (_GLF_IDENTITY(mat3(72.51, -3.5, -36.26, 743.413, -605.942, _GLF_IDENTITY(2403.4468, float(mat4(_GLF_IDENTITY(2403.4468, clamp(2403.4468, 2403.4468, 2403.4468)), sqrt(1.0), 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, abs(0.0), 0.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.8) : 1.0)), 0.0)), dot(vec4(1.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(13.09) : 1.0))), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (0.0) / 1.0)) / 1.0)), 1.0, determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0))), 3.9, -5118.2836, -937.642), (false ? _GLF_FUZZED((mat3(0.8, -4.5, 5309.7311, -8937.8657, -51.65, -8889.8402, 390.519, 545.404, -929.464) / (bvec4(false, false, true, true) , mat3(61.01, 8.7, -3.4, -36.02, -6.2, -9784.2973, -122.064, -1.2, -197.962)))) : mat3(72.51, -3.5, -36.26, 743.413, -605.942, _GLF_IDENTITY(2403.4468, float(mat4(_GLF_IDENTITY(2403.4468, clamp(2403.4468, 2403.4468, 2403.4468)), sqrt(1.0), 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, abs(0.0), 0.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.8) : 1.0)), 0.0)), dot(vec4(1.0, abs(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(13.09) : 1.0))), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (0.0) / 1.0)) / 1.0)), 1.0, determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0))), 3.9, -5118.2836, -937.642))) - fract(-3.2));
         vec4 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
         if(_GLF_DEAD(false))
          barrier();
         mat3 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v[22];
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           ivec3(58928, 87313, 42670);
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (! (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bool(! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) || false))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(false)
            {
             mat2 _GLF_SWITCH_0_38v[62], _GLF_SWITCH_0_39v;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat4x3 _GLF_SWITCH_0_40v[30], _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
             uvec2 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                continue;
               barrier();
              }
             next_virtual_gid;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 15:
                 (ivec3(33893, 55735, 67544) >> 40907);
                 case 80:
                 int _GLF_SWITCH_6_0v[45], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                 case 0:
                 case 30:
                 case 17:
                 case 22:
                 case 3:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 70:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 62:
                 if(_GLF_DEAD(false))
                  continue;
                 case 89:
                 case 36:
                 continue;
                 break;
                 case 73:
                 vec3 _GLF_SWITCH_6_3v;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  return;
                 case 63:
                 vec3(-452.156, 28.44, -572.832);
                 default:
                 1;
                }
              }
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(degrees(3110.5651)))) : _GLF_FUZZED(_GLF_IDENTITY(-75.05, (-75.05) - tan(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))))))), float(_GLF_FUZZED(6.4)), bool(false))) > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)))).y) && true)))))
                  return;
                 mat4x2(72.28, -6.4, 58.52, _GLF_IDENTITY(-538.544, max(-538.544, -538.544)), 3179.2445, 6042.7618, -4.6, -9197.1993);
                }
               else
                {
                }
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         bool _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v[18], _GLF_SWITCH_0_47v;
         if(_GLF_DEAD(false))
          barrier();
         bvec4(true, false, false, true);
         ivec2 _GLF_SWITCH_0_48v;
         {
          switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, max(8, _GLF_IDENTITY(8, (8) + 0))), 8))), int(8)))))
           {
            case 0:
            case 38:
            case 68:
            case 34:
            case 72:
            case 19:
            _GLF_IDENTITY(_GLF_SWITCH_0_28v, (_GLF_SWITCH_0_28v) * uvec3(1u, 1u, 1u));
            case 41:
            case 14:
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                case 72:
                case 71:
                case 6:
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 return;
                case 15:
                case 50:
                case 99:
                case 21:
                case 81:
                continue;
                break;
                case 33:
                mat2x3(-780.592, 1.7, 0.7, 3084.8750, -60.29, -39.54);
                default:
                1;
               }
             }
            case 57:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            bool _GLF_SWITCH_0_49v;
            if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            break;
            case 11:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
              switch(_GLF_SWITCH(((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), min(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), ~ (~ (0 << _GLF_IDENTITY(int(1), int(1)))))))) ^ 0)))
               {
                case 64:
                if(_GLF_DEAD(false))
                 return;
                bvec3 _GLF_SWITCH_3_0v;
                case 14:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                equal(uvec2(125474u, 176772u), uvec2(152695u, 145208u));
                if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                 break;
                case 0:
                case 72:
                case 7:
                case 9:
                case 57:
                _GLF_IDENTITY(uvec2(171515u, 146852u), min(uvec2(171515u, 146852u), uvec2(171515u, 146852u))).xx;
                break;
                case 38:
                mat3x2(2242.3909, 761.090, _GLF_IDENTITY(-8.4, max(-8.4, -8.4)), -9321.2512, 4.7, _GLF_IDENTITY(-5578.0914, clamp(-5578.0914, -5578.0914, -5578.0914)));
                default:
                1;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            case 92:
            outerProduct(vec3(-2204.4082, 927.722, 8.3), vec2(-78.49, 8.9));
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            default:
            1;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              break;
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
             barrier();
           }
         }
         uint _GLF_SWITCH_0_50v;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       bool _GLF_SWITCH_0_51v;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       {
        ((mat2x4(1.3, -794.135, 5.4, 47.11, -4.8, -3.3, -70.36, -20.39) * outerProduct(_GLF_IDENTITY(vec2(5.7, 206.758), (false ? _GLF_FUZZED((vec2(-3.2, 0.6) / 262.726)) : _GLF_IDENTITY(vec2(5.7, 206.758), clamp(vec2(5.7, 206.758), _GLF_IDENTITY(vec2(5.7, 206.758), clamp(vec2(5.7, 206.758), _GLF_IDENTITY(vec2(5.7, 206.758), max(vec2(5.7, 206.758), vec2(5.7, 206.758))), _GLF_IDENTITY(vec2(5.7, 206.758), min(vec2(5.7, 206.758), _GLF_IDENTITY(vec2(5.7, 206.758), _GLF_IDENTITY(clamp(vec2(_GLF_IDENTITY(5.7, 1.0 * (_GLF_IDENTITY(5.7, max(5.7, _GLF_IDENTITY(5.7, clamp(5.7, 5.7, 5.7)))))), 206.758), vec2(5.7, 206.758), _GLF_IDENTITY(vec2(5.7, 206.758), mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(-5324.8902)), vec2((vec2(5.7, 206.758))[0], (vec2(5.7, 206.758))[1]), bvec2(true, true)))), (clamp(vec2(5.7, 206.758), vec2(5.7, 206.758), _GLF_IDENTITY(vec2(5.7, 206.758), mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(-5324.8902)), vec2((vec2(5.7, 206.758))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(5.7, 206.758)), min(_GLF_IDENTITY((vec2(5.7, 206.758)), (_GLF_IDENTITY((vec2(5.7, 206.758)), ((vec2(5.7, 206.758))) - vec2(0.0, 0.0))) * sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY((vec2(5.7, 206.758)), ((vec2(5.7, 206.758))) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY((vec2(5.7, 206.758)), min(_GLF_IDENTITY((vec2(5.7, 206.758)), (_GLF_IDENTITY((vec2(5.7, 206.758)), ((vec2(5.7, 206.758))) - vec2(0.0, 0.0))) * sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY((vec2(5.7, 206.758)), ((vec2(5.7, 206.758))) / vec2(1.0, 1.0)))), _GLF_IDENTITY((vec2(5.7, 206.758)), min(_GLF_IDENTITY((vec2(5.7, 206.758)), (_GLF_IDENTITY((vec2(5.7, 206.758)), ((vec2(5.7, 206.758))) - vec2(0.0, 0.0))) * sqrt(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), tan(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(sin(0.0)), 0.0)), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), tan(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(sin(0.0)), 0.0)), max(float(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), tan(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(sin(0.0)), 0.0)), float(mat4x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), tan(length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, sqrt(sin(0.0)), 0.0))))) * 1.0)), 1.0))), _GLF_IDENTITY((vec2(5.7, 206.758)), ((vec2(5.7, 206.758))) / vec2(1.0, 1.0))))))[1]), bvec2(true, true))))) / vec2(1.0, 1.0))))))), vec2(5.7, 206.758))))), vec3(810.359, -20.57, -53.74))) - mat3x4(-8.7, -324.831, 3.9, _GLF_IDENTITY(-769.584, mix(float(-769.584), float(_GLF_FUZZED((6.5 / 8.4))), bool(false))), -6310.6451, 2.7, 97.55, 35.71, _GLF_IDENTITY(58.43, _GLF_IDENTITY(min(_GLF_IDENTITY(58.43, mix(float(58.43), float(_GLF_FUZZED((_GLF_IDENTITY(-8.9 * 63.89, min(_GLF_IDENTITY(-8.9 * 63.89, (true ? _GLF_IDENTITY(-8.9 * 63.89, float(mat4x3(-8.9 * 63.89, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(3.9))), -8.9 * 63.89))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), 58.43), float(mat2x4(min(_GLF_IDENTITY(58.43, mix(float(58.43), float(_GLF_FUZZED((-8.9 * 63.89))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false))))))) || false)))), 58.43), exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, determinant(mat2(1.0, 0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0), (mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-927.578))))), 1.0, 1.0)), 0.0)) * mat2(1.0))))))), cos(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.2)), bool(false)))))), 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), 1.6, 6.6, 17.68));
        normalize(vec3(470.195, 7993.1790, 167.488));
        do
         {
          if(_GLF_DEAD(false))
           break;
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 0:
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                continue;
               }
              continue;
             }
            if(_GLF_DEAD(false))
             barrier();
            for(mat3 _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v[72], _GLF_SWITCH_0_54v[39]; true; (_GLF_IDENTITY(transpose(mat4(-8121.9120, 744.786, 45.58, 26.09, 7.4, 6.1, -99.03, -585.800, -3.8, -445.158, -159.519, -6.9, 3.1, 204.635, -7.3, _GLF_IDENTITY(_GLF_IDENTITY(-9465.9038, clamp(-9465.9038, -9465.9038, _GLF_IDENTITY(-9465.9038, min(-9465.9038, -9465.9038)))), float(mat2(_GLF_IDENTITY(-9465.9038, clamp(-9465.9038, -9465.9038, _GLF_IDENTITY(-9465.9038, min(-9465.9038, -9465.9038)))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))), transpose(transpose(transpose(mat4(-8121.9120, 744.786, 45.58, 26.09, 7.4, 6.1, -99.03, -585.800, -3.8, -445.158, -159.519, -6.9, 3.1, 204.635, -7.3, _GLF_IDENTITY(-9465.9038, clamp(-9465.9038, -9465.9038, _GLF_IDENTITY(-9465.9038, min(-9465.9038, -9465.9038))))))))) - 571.982))
             {
              switch(_GLF_SWITCH(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-0.5))))))
               {
                case 0:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                 }
                case 76:
                case 93:
                if(_GLF_DEAD(false))
                 return;
                do
                 {
                  if(_GLF_DEAD(false))
                   {
                    switch(_GLF_SWITCH((0 & -49091)))
                     {
                      case 96:
                      ;
                      case 0:
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            return;
                           }
                         }
                       }
                      continue;
                      break;
                      case 11:
                      ivec4 _GLF_SWITCH_7_0v[63];
                      case 14:
                      mat4x2 _GLF_SWITCH_7_1v;
                      default:
                      1;
                     }
                   }
                  -1888.7664;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      barrier();
                     }
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 return;
                case 87:
                if(_GLF_DEAD(false))
                 barrier();
                case 79:
                case 57:
                if(_GLF_DEAD(false))
                 barrier();
                case 17:
                (bvec4(true, false, true, true) != bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), true && (! (true))))), false))), false, true, true));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
                case 81:
                _GLF_SWITCH_0_29v;
                case 82:
                vec2(-90.59, 420.856);
                default:
                1;
                if(_GLF_DEAD(false))
                 return;
               }
             }
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             continue;
            case 62:
            mat2x4(3.5, -53.87, 22.66, 778.757, -2.0, -228.077, -9.8, -1736.2671);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            default:
            if(_GLF_DEAD(false))
             return;
            1;
           }
         }
        while(_GLF_WRAPPED_LOOP(false));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        for(        (_GLF_IDENTITY(28006 % ivec2(10025, _GLF_IDENTITY(92492, (true ? _GLF_IDENTITY(92492, (_GLF_IDENTITY(92492, 0 ^ (92492))) / 1) : _GLF_FUZZED(65587)))), (false ? _GLF_FUZZED(ivec2(_GLF_IDENTITY(-2296, (-2296) >> 0), -1408)) : _GLF_IDENTITY(28006 % ivec2(_GLF_IDENTITY(10025, (_GLF_IDENTITY(10025, 0 ^ (10025))) | (10025)), 92492), (_GLF_IDENTITY(28006 % ivec2(10025, 92492), ivec2(0, 0) ^ (28006 % ivec2(10025, 92492)))) - (ivec2(0, 0) << _GLF_IDENTITY(ivec2(0), _GLF_IDENTITY(ivec2(0), max(ivec2(0), ivec2(0)))))))));
 _GLF_SWITCH_0_51v; _GLF_SWITCH_0_29v)
         {
          ;
          vec3 _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v;
          bvec2(_GLF_SWITCH_0_51v, (mat2x4(-2074.8275, -5353.1657, _GLF_IDENTITY(-7.9, mix(_GLF_IDENTITY(float(-7.9), min(float(-7.9), float(-7.9))), float(_GLF_FUZZED(86.16)), bool(false))), 7981.3892, -256.731, 0.9, 3131.6083, -246.524) == mat2x4(-3.0, -9.0, 4.3, 329.200, 9.7, _GLF_IDENTITY(842.476, float(vec4(842.476, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(0.5, float(mat4(0.5, exp(0.0), determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), sin(0.0), 1.0)), exp(tan(0.0)), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0))), 1.7)));
          (mat4x3(-2937.9958, 50.35, 22.20, 329.571, 567.208, -6688.2110, 3.7, 2.4, 59.69, 6.1, -4732.8475, _GLF_IDENTITY(9836.3069, (false ? _GLF_FUZZED(91.41) : 9836.3069))) * mat3x4(33.83, _GLF_IDENTITY(5.1, mix(float(_GLF_IDENTITY(5.1, max(5.1, _GLF_IDENTITY(5.1, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.9), (_GLF_FUZZED(-7.9)) / 1.0)), float(5.1), bool(true)))))), float(_GLF_FUZZED(float(93011))), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), bool(bool(bool(false)))))), 7882.0999, -57.24, 4.8, -1.6, -7.0, -6.0, _GLF_IDENTITY(_GLF_IDENTITY(5.0, max(5.0, _GLF_IDENTITY(5.0, (5.0) - 0.0))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-4.6) : 5.0)), 1301.3737, -4270.4087, 5.3));
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          break;
         }
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          continue;
         }
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          if(_GLF_DEAD(false))
           return;
          for(int _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v; (_GLF_IDENTITY(findLSB(ivec3(-81993, 25380, 58113)), (findLSB(ivec3(-81993, 25380, 58113))) << ivec3(0, 0, 0)) == ivec3(40376, 82381, 78408).bgr); vec3(-984.830, _GLF_IDENTITY(_GLF_IDENTITY(-4893.1029, mix(float(_GLF_FUZZED(86.81)), float(-4893.1029), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(-4893.1029, -4893.1029, -4893.1029)), -8553.5624))
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 14:
              mat3(87.44, 4.5, -8.0, -6.7, -39.49, 1867.9377, -744.656, 944.331, -754.653);
              case 0:
              case 92:
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                do
                 {
                  switch(_GLF_SWITCH((-3134 & 0)))
                   {
                    case 19:
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(false))
                       barrier();
                      return;
                     }
                    min(_GLF_IDENTITY(workgroup_size, (0u | 0u) | (workgroup_size)), workgroup_size);
                    if(_GLF_DEAD(false))
                     return;
                    case 0:
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     {
                      if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                       barrier();
                      barrier();
                     }
                    case 65:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    if(_GLF_DEAD(false))
                     barrier();
                    case 93:
                    case 57:
                    case 23:
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      return;
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     return;
                    break;
                    default:
                    1;
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              else
               {
               }
              case 59:
              uvec2(128263u, 48347u);
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  barrier();
                 }
                barrier();
               }
              case 43:
              mat2x3(50.43, 40.67, 5.9, -6.5, 9.4, 9135.3126);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              case 39:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              case 8:
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               break;
              case 84:
              case 20:
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 26:
              ;
              case 16:
              float _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v[76];
              if(_GLF_DEAD(false))
               barrier();
              break;
              case 21:
              (mat4x3(-2.5, 2479.7015, -3127.1538, 8.4, -186.899, -34.59, 313.765, -55.17, 181.017, -45.12, 8720.1317, 23.06) / _GLF_SWITCH_0_61v);
              default:
              1;
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        else
         {
         }
        bvec4 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v[44];
       }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((-3825.3828 + 47.03))), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), (length(sqrt(vec4(0.0, 0.0, 0.0, 0.0)))) / 1.0)), (mat3(_GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((-3825.3828 + 47.03))), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.5) : 0.0)), sqrt(1.0), length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.8, 5986.1604)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(53.22), _GLF_FUZZED(0.8)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(53.22), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(53.22), _GLF_FUZZED(0.8)), bvec2(false, false))))), injectionSwitch)), injectionSwitch)).x)))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
        break;
       {
        mat3(-43.76, 7.2, -2101.0537, 8.8, 7.3, 7943.5148, _GLF_IDENTITY(-10.16, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(vec2(cos(0.0), 0.0)), max(_GLF_IDENTITY(float(vec2(cos(0.0), 0.0)), clamp(float(vec2(cos(0.0), 0.0)), float(vec2(cos(0.0), 0.0)), float(vec2(cos(0.0), 0.0)))), float(vec2(cos(0.0), 0.0))))), max(cos(0.0), cos(0.0))) * (-10.16)), -245.697, 4.5);
        while(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))), false, false))))) && true)))) || false), true, true).s)
         {
          if(_GLF_DEAD(false))
           barrier();
          (uvec3(7026u, _GLF_IDENTITY(32269u, 0u + (_GLF_IDENTITY(32269u, (32269u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 184318u) % (virtual_gid + read));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          ivec3(-24979, -97466, -10000);
          -20076;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          bvec4 _GLF_SWITCH_0_66v, _GLF_SWITCH_0_67v;
          _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))), true)));
          bvec4 _GLF_SWITCH_0_68v[61], _GLF_SWITCH_0_69v;
          ivec3 _GLF_SWITCH_0_70v[86];
          do
           {
            uvec2(41436u, 9813u);
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
               break;
              break;
             }
            if(_GLF_DEAD(false))
             return;
           }
          while(_GLF_WRAPPED_LOOP(false));
          (++ _GLF_SWITCH_0_29v);
         }
        vec2 _GLF_SWITCH_0_71v;
        if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))), bool(bvec3(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true)))))))))))
         {
          if(_GLF_DEAD(false))
           barrier();
          continue;
         }
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          if(_GLF_DEAD(false))
           return;
         }
        else
         {
         }
        {
         switch(_GLF_SWITCH(0))
          {
           case 27:
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           ;
           if(_GLF_DEAD(false))
            barrier();
           case 46:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             matrixCompMult(mat2(-13.94, -4067.7691, -9445.9370, 8.4), (_GLF_IDENTITY(-5.3 - mat2(-388.463, 3.3, 195.576, -6579.2352), (_GLF_IDENTITY(-5.3 - mat2(-388.463, 3.3, _GLF_IDENTITY(195.576, (195.576) * 1.0), -6579.2352), (true ? -5.3 - mat2(-388.463, 3.3, 195.576, -6579.2352) : _GLF_FUZZED(mat2(-49.85, -54.76, 512.514, 0.7))))) - mat2(0.0, 0.0, 0.0, 0.0))));
            }
           case 0:
           case 90:
           case 6:
           switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, ~ (~ (8))), 8)))))))))
            {
             case 31:
             vec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
             case 6:
             if(_GLF_DEAD(false))
              break;
             mat4x3(_GLF_IDENTITY(-5.6, (_GLF_IDENTITY(-5.6, mix(float(_GLF_IDENTITY(-5.6, float(mat3(-5.6, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0)))), float(_GLF_FUZZED(-9.8)), bool(false)))) * 1.0), -5.3, 400.671, -8.8, 4.1, 771.659, 52.23, 8.2, -824.665, -1650.5368, -4.2, -1.0);
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             case 0:
             case 51:
             vec2 _GLF_SWITCH_0_72v;
             break;
             case 83:
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               max((false ? vec4(_GLF_IDENTITY(-656.779, float(mat3(-656.779, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), mix(float(float(0.0)), float(_GLF_FUZZED((true ? 2.7 : 0.9))), bool(false))), float(_GLF_FUZZED(-8.1)), bool(false)))), exp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), log(1.0), sqrt(tan(0.0)), 0.0))), 71.68, 5152.8053, -1419.3096) : vec4(0.0, 555.441, 1.9, -5.2)), vec4(6272.9783, 7.6, _GLF_IDENTITY(3.2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(3.2, min(3.2, _GLF_IDENTITY(3.2, (true ? 3.2 : _GLF_FUZZED(-7.1))))), (_GLF_IDENTITY(3.2, _GLF_IDENTITY((3.2), max((3.2), _GLF_IDENTITY((3.2), float(mat4x2((3.2), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))) / 1.0)) / 1.0) : _GLF_FUZZED(60.73))), -3.0));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
                barrier();
               continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             case 96:
             uvec2(135442u, 57639u);
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              break;
             default:
             if(_GLF_DEAD(false))
              continue;
             1;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           case 16:
           case 51:
           case 17:
           case 70:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           break;
           default:
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           1;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        barrier();
       return;
      }
     default:
     1;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-509.921)), vec2(_GLF_FUZZED(-2290.5464), (injectionSwitch)[1]), bvec2(false, true))).y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
