#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID))))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), clamp(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) | 0u))), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) | 0u)))) - uvec3(0u, 0u, 0u)) * (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))))), uvec3(uvec3((~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(141044u, 52052u, 68428u))))), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((~ (~ (gl_WorkGroupID))), (false ? _GLF_FUZZED((uvec3(94619u, 21720u, 164107u) % uvec3(154400u, 173477u, 186840u))) : (~ (~ (gl_WorkGroupID))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), min(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (~ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), max(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))), ~ (~ (gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u)), uvec3(1u, 1u, 1u) * (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID))))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) | 0u))) * (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 1u)), (uvec3(uvec4(gl_WorkGroupID, 1u))) / uvec3(1u, 1u, 1u)))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(564.127), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 4.7))), bvec2(true, false))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(141044u, 52052u, 68428u))))), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID))), (true ? uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID))) : _GLF_FUZZED(uvec3(157047u, 147067u, 125201u)))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), min(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (~ (gl_WorkGroupID))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), max(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))), ~ (~ (gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u)), uvec3(1u, 1u, 1u) * (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) | 0u))) * (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(141044u, 52052u, 68428u))))), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ _GLF_IDENTITY((~ (gl_WorkGroupID)), min((~ (gl_WorkGroupID)), (~ (gl_WorkGroupID))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), min(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), max(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))), ~ (~ (gl_WorkGroupID))))))) / uvec3(1u, 1u, 1u)), uvec3(1u, 1u, 1u) * (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (~ (~ (gl_WorkGroupID)))))))))))))), gl_WorkGroupID)).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
    }
   else
    {
     GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))) | 0u)), (0u & 72220u) ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | 0u))), 1u * ((workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), ((workgroup_id) | (workgroup_id)) | ((workgroup_id) | (workgroup_id))))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), 0u ^ ((workgroup_id) | (workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | 0u)))))))), _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))), workgroup_id), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), (0u & 72220u) ^ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) / 1u)))))), _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))), workgroup_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), _GLF_IDENTITY(1u * ((workgroup_id) | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u)), min(_GLF_IDENTITY(1u * ((workgroup_id) | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u)), (1u * ((workgroup_id) | _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u))) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u * ((workgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ (0u | 0u)), ((workgroup_id)) | 0u)))))))), (0u & 72220u) ^ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))))), _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))), workgroup_id))));
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) : _GLF_FUZZED(uvec4(191605u, 153558u, 71610u, 134554u)))) ^ uvec4(0u, 0u, 0u, 0u)).w;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   do
    {
     do
      {
       GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z = workgroup_base;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | _GLF_IDENTITY((_GLF_IDENTITY(int(4), int(4))), int(int((_GLF_IDENTITY(int(4), int(4)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (int(0))), min(int(0), int(0)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))) + uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[_GLF_IDENTITY(0, (0) * 1)], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[_GLF_IDENTITY(3, min(3, 3))]))) | (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))), min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))))), uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)).z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), ~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))) | uvec4(0u, 0u, 0u, 0u)))), min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), _GLF_IDENTITY(~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))), (~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))) | uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), ~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))) | uvec4(0u, 0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), ~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))) | uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), ~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))) | uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), ~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), ~ (~ ((~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))))) | uvec4(0u, 0u, 0u, 0u))))))))))[3]))) | _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), ((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)) >> uvec4(0u, 0u, 0u, 0u))))).z, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) | (uvec4(186819u, 170997u, 95857u, 180840u) & uvec4(0u, 0u, 0u, 0u)))) + uvec4(0u, 0u, 0u, 0u))[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), clamp((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) | (uvec4(186819u, 170997u, 95857u, 180840u) & uvec4(0u, 0u, 0u, 0u)))) + uvec4(0u, 0u, 0u, 0u))[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) | (uvec4(186819u, 170997u, 95857u, 180840u) & uvec4(0u, 0u, 0u, 0u)))) + uvec4(0u, 0u, 0u, 0u))[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) | (uvec4(186819u, 170997u, 95857u, 180840u) & uvec4(0u, 0u, 0u, 0u)))) + uvec4(0u, 0u, 0u, 0u))[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) : _GLF_FUZZED((uvec4(109357u, 23677u, 176033u, 20000u) - uvec4(193726u, 38829u, 37448u, 124090u))))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) | (uvec4(186819u, 170997u, 95857u, 180840u) & uvec4(0u, 0u, 0u, 0u)))) + uvec4(0u, 0u, 0u, 0u))[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))).z) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))).z))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))[2], (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2]) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), max(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[3])), uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2]) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2]) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[3]))))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2]) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) | ((uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))))[1], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2]) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, uvec4(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[0], GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[1], _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2], (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id[2]) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))[3]))) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id)))))).z)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size)))) + GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x), (uint(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x)) | (uint(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x))), max(uint(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))).x, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145523u) : GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) << uvec4(0u, 0u, 0u, 0u)).x, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145523u) : GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x)))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z))) + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) << uvec4(0u, 0u, 0u, 0u)).x, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145523u) : GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x))))))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) << uvec4(0u, 0u, 0u, 0u)).x, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145523u) : GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x)))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z))) + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id) << uvec4(0u, 0u, 0u, 0u)).x, GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145523u) : GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x)))))))) / 1u)))), uint(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? uvec2(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), max((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u)), (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u)), uint(uint(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u)), min(0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u)), 0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u)))))))))), ((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) ^ 0u))))) << (0u | 0u))))) : _GLF_FUZZED(clamp(uvec2(170639u, 147265u), uvec2(113969u, 91073u), uvec2(86321u, 182992u))), (false ? _GLF_FUZZED(uvec2(168157u, 67455u)) : true ? uvec2(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), max((_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) - 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))), ((0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << (0u | 0u))))) : _GLF_FUZZED(clamp(uvec2(170639u, 147265u), uvec2(113969u, 91073u), uvec2(86321u, 182992u))))), (uvec2(0u, 0u) ^ uvec2(0u, 0u)) + (true ? uvec2(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(153592u) : uint(6u))))), max((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) / 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << (0u | 0u))))) : _GLF_FUZZED(clamp(uvec2(170639u, 147265u), uvec2(113969u, 91073u), uvec2(86321u, 182992u)))))))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))), true))))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true))), true, true), false))))))
                return;
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + ((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + 1) % subgroup_size), _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size + ((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) - 0u, ((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size, uint(uint(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z + subgroup_id * subgroup_size))) + ((GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) - 0u) << 0u));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))), bool(bvec4(false, false, false, false))), true, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(false, false, false, false))), true, false))))))))
          break;
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
              }
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(6.8))))) || (! (false)))))));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(tanh(injectionSwitch)) : (injectionSwitch))), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-9.7, 5956.4156))))))).x, mix(float(_GLF_FUZZED(-492.551)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, 0.0, 0.0, tan(0.0), 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, 0.0, 0.0, tan(0.0), 0.0, 1.0)))))), bool(true))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, tan(0.0) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.8)), float(0.0), bool(true))))), 0.0) + (injectionSwitch)).x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, tan(0.0) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.8)), float(0.0), bool(true))))), 0.0) + (injectionSwitch)).x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = (-79535 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + 1, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x + 1))) < subgroup_size)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && (false || (false)), (true && (false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && (false || (false)), (true && (false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && (false || (false)), (true && (false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       continue;
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             continue;
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if(_GLF_DEAD(false))
                            continue;
                           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                            {
                             return;
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) | (int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))) + 0);
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0), (injectionSwitch.y) - log(1.0))))))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              return;
            }
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(10018))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)) || _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), true && (((false))))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   atomicStore(checker[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], read, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(61731) : _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))))), 64, 4);
                  }
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
              }
             else
              {
               atomicStore(checker[GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), (4) + 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), (4) + 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), (4) + 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))), 0), ~ (~ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), (4) + 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))), 0))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), (4) + 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))), 0), ~ (~ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), (4) + 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))), 0)))))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), 4)), (4) + 0), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(1, ~ (~ (1))) * (4))), 0 ^ (0 + _GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), min((_GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(4, 1 * (4))))))))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))))));
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), min(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0))))), float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY((vec2(injectionSwitch.y, 1.0)), min((vec2(injectionSwitch.y, 1.0)), (vec2(injectionSwitch.y, 1.0)))) * mat2(1.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY((vec2(injectionSwitch.y, 1.0)) * mat2(1.0), vec2(0.0, 0.0) + ((vec2(injectionSwitch.y, 1.0)) * mat2(1.0)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY((vec2(injectionSwitch.y, 1.0)) * mat2(1.0), vec2(0.0, 0.0) + ((vec2(injectionSwitch.y, 1.0)) * mat2(1.0)))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), _GLF_IDENTITY((vec2(injectionSwitch.y, 1.0)) * mat2(1.0), vec2(0.0, 0.0) + ((vec2(injectionSwitch.y, 1.0)) * mat2(1.0)))))), true)))) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))))) && true))))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(58.64)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(488.477)))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))))), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.2)))), float(_GLF_FUZZED(-483.565)), bool(false)))), (_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch.y, 1.0))[0], (true ? (vec2(injectionSwitch.y, 1.0))[0] : _GLF_FUZZED(6021.3078))), _GLF_FUZZED(164.571)), vec2(_GLF_FUZZED(-4.9), (vec2(injectionSwitch.y, 1.0))[1]), bvec2(false, true)))) * mat2(1.0))))))))) && true))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    return;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  return;
                 break;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true)))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))));
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(8.6), _GLF_FUZZED(-93.42)), vec2((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], min(((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (mat2(injectionSwitch, 0.0, 0.0)) * mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), injectionSwitch)))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0])), ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(-7.7)), vec2((vec2(_GLF_IDENTITY(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], min((_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0])), (_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(trunc(vec2(-6882.7912, -89.96))) : (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]))[0], (vec2(_GLF_IDENTITY(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], min(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], min(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (true ? ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0] : _GLF_FUZZED(8.1))))))), ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(_GLF_FUZZED(7.7), (false ? _GLF_FUZZED(sqrt(69.91)) : _GLF_FUZZED(7.7))), _GLF_FUZZED(53.34)), bvec2(false, false)))))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-3.0, mix(float(-3.0), float(_GLF_FUZZED(-0.2)), bool(false))) + vec3(6.2, _GLF_IDENTITY(8.2, mix(float(_GLF_IDENTITY(8.2, max(8.2, 8.2))), float(_GLF_FUZZED((5.9 * 64.56))), bool(false))), 739.833).y)), _GLF_FUZZED(6.9)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y) && true, bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y) && true, true))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.6), max(_GLF_IDENTITY(_GLF_FUZZED(8.6), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.6), float(vec4(_GLF_FUZZED(8.6), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) + vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), 0.0)))), float(_GLF_FUZZED(-64.65)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(8.6), (false ? _GLF_FUZZED(-2.1) : _GLF_FUZZED(8.6))))), _GLF_FUZZED(-93.42)), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], min(((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0])), ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(53.34)), bvec2(false, false)))))[1]), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-3.0, mix(float(-3.0), float(_GLF_FUZZED(8.4)), bool(false))) + vec3(6.2, 8.2, 739.833).y)), _GLF_FUZZED(6.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, float(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-3.0, mix(float(-3.0), float(_GLF_FUZZED(8.4)), bool(false))) + vec3(6.2, 8.2, 739.833).y)), _GLF_FUZZED(6.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, length(vec2(0.0, 0.0)), sin(0.0)))) < injectionSwitch.y)))))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y) && true))))))) || false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_DEAD(false), false, false, true))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) << 0))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       return;
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           return;
                          }
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), ~ (~ (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(_injected_loop_counter) : ~ (1)))))), (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(-8531.0423) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.8))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2989.6834))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true)))), true, true)))))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 else
                  {
                   return;
                  }
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               return;
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(75.64))))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
