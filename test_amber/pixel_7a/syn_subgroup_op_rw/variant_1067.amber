#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - determinant(mat3(0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) + 0.0)) - determinant(mat3(0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) - 0.0)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(-172.502)), bool(false))) > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch.y))) - determinant(mat3(0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false)), mix(float(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false))))), float(_GLF_FUZZED(9430.8601)), bool(false)))), 0.0))), ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))), true, false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), false)), true, true, true)))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-7.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)), injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))))), injectionSwitch.y)), injectionSwitch.y)), ((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), min((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))))) / 1.0), float(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), min((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))))) / 1.0), 1.0, _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), vec3(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), ((min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), (_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), (min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) / 1.0)) * _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / abs(1.0)))) - 0.0) / 1.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), min((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))))) / 1.0, float(mat4(_GLF_IDENTITY((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), min((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))))) / 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), ((_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), max(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) - 0.0) / 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(cos(0.0), 0.0, 1.0), max(vec3(cos(0.0), 0.0, 1.0), vec3(cos(0.0), 0.0, 1.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(cos(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, float(vec2(1.0, sqrt(0.0)))), round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), sqrt(0.0)), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0), max(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0))) - _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0)), max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))))), min((_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(3058.1020, 5327.1320, -606.712).t)), float(0.0), bool(true)))))))))) / 1.0), _GLF_IDENTITY(((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(1.0)) : 1.0)) * (injectionSwitch.y)))) - 0.0), clamp(((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(1.0)) : 1.0)) * (injectionSwitch.y)))) - 0.0), ((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(1.0)) : 1.0)) * (injectionSwitch.y)))) - 0.0), ((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log2(1.0)) : 1.0)) * (injectionSwitch.y)))) - 0.0))) / 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(cos(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(cos(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))), sqrt(0.0))))))), (_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) - 0.0, ((_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0)))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(-13.54)), float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(true))))), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))) * 1)]), vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(-2.3)), bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0)))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))))), mix(float(_GLF_FUZZED(-13.54)), float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 0.0, 0.0, 0.0, 0.0)))))))), bool(true))))), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))) * 1)]), vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(-2.3)), bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false))).y)))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))) * (injectionSwitch.y))), max(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))) * (injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))) * (injectionSwitch.y))))), min(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)) * (injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) * (injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0) * (1.0 * (injectionSwitch.y)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) * (injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0) * (1.0 * (injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) * (injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0) * (1.0 * (injectionSwitch.y)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(252.433, -2578.4921, 2267.9331, -51.72, -6113.6951, -6.6, 36.20, -858.915, -32.74, 965.709, -7780.5623, 6401.9858))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(float((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) - 0.0) / 1.0)) / 1.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false || (false))), false)))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(1.8), _GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0]))) * 1.0), _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0]))) * 1.0), _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0]))) * 1.0), _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), true && (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))))))))))[0], ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (false ? _GLF_FUZZED(401.373) : vec3(8823.1448).r)))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0]) * exp(0.0)), _GLF_IDENTITY(_GLF_FUZZED(974.056), (false ? _GLF_FUZZED(-108.728) : _GLF_FUZZED(974.056)))), bvec2(true, false)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_IDENTITY(_GLF_FUZZED(3055.6245), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : _GLF_FUZZED(3055.6245))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(1.8), _GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1], ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1]) + log(1.0))), vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))[0], (_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (vec3(8823.1448).r) - 0.0))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))))))))[0], max((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (vec3(8823.1448).r) - 0.0))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))))))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (vec3(8823.1448).r) - 0.0))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))))))))[0]))) * exp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), _GLF_FUZZED(974.056)), bvec2(true, false)))).y)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))))))))))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), false, false))))))) && true)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false)))))) || false), false || (false))), false)))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec3(8823.1448).r), (_GLF_FUZZED(vec3(8823.1448).r)) + 0.0)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(1.8), _GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0]))) * 1.0), _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 0.0, 1.0))))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 0.0, 1.0))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 0.0, 1.0))))))))[0], _GLF_FUZZED(vec4(6.1, 934.925, 7.8, 61.71).x)), vec2(_GLF_FUZZED(48.98), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 0.0, 1.0))))))))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(3.8, 74.14, -4.8, -3.8, -2786.9083, -7179.2190, 7603.9409, -7.0)) : mat2x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 0.0, 1.0))))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 0.0, 1.0))))))))[0], _GLF_FUZZED(vec4(6.1, 934.925, 7.8, 61.71).x)), vec2(_GLF_FUZZED(48.98), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 1.0), mat2(mat4x3(mat2(injectionSwitch, 0.0, 1.0))))))))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))[_GLF_IDENTITY(0, ~ (~ (0)))]))) * 1.0), _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0]))) * 1.0), _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3x4((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(vec2(mat3x4((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (injectionSwitch)))[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false)), true && (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, false))))))))))[0], ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) ? _GLF_FUZZED(401.373) : vec3(8823.1448).r)))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))[0]) * exp(0.0)), _GLF_IDENTITY(_GLF_FUZZED(974.056), (false ? _GLF_FUZZED(-108.728) : _GLF_FUZZED(974.056)))), bvec2(true, false)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(8499))), vec2(_GLF_FUZZED(61.95), (injectionSwitch)[1]), bvec2(false, true))))))[0], _GLF_FUZZED(vec3(8823.1448).r)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(3055.6245), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : _GLF_FUZZED(3055.6245))), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(3055.6245), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : _GLF_FUZZED(3055.6245))), (injectionSwitch)[1]), vec2(mat2(vec2(_GLF_IDENTITY(_GLF_FUZZED(3055.6245), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.7) : _GLF_FUZZED(3055.6245))), (injectionSwitch)[1]), 0.0, 1.0))) : _GLF_FUZZED(vec2(-0.4, -8.0)))), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(1.8), _GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(8823.1448, (true ? _GLF_IDENTITY(8823.1448, (8823.1448) / 1.0) : _GLF_FUZZED(-8.1)))).r)), vec2(_GLF_FUZZED(3055.6245), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.21), _GLF_FUZZED(-4.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1], ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))[1]) + log(1.0))), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(1.8), _GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(8823.1448, (true ? _GLF_IDENTITY(8823.1448, (8823.1448) / 1.0) : _GLF_FUZZED(-8.1)))).r)), vec2(_GLF_FUZZED(3055.6245), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.21), _GLF_FUZZED(-4.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1], ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))[1]) + log(1.0))), (vec2(_GLF_FUZZED(1.8), _GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(_GLF_IDENTITY(8823.1448, (true ? _GLF_IDENTITY(8823.1448, (8823.1448) / 1.0) : _GLF_FUZZED(-8.1)))).r)), vec2(_GLF_FUZZED(3055.6245), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.21), _GLF_FUZZED(-4.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[1], ((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))[1]) + log(1.0)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, vec2(46.09, 412.733))))), vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8823.1448).r)), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))[0], (_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (vec3(8823.1448).r) - 0.0))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))))))))))))))))[0], max((mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (vec3(8823.1448).r) - 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (vec3(8823.1448).r) - 0.0))), float(_GLF_FUZZED(1.8)), bool(false)))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))))))))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))))))))))))))))), true, false)))))[0], (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(8823.1448).r, (vec3(8823.1448).r) - 0.0))), vec2(_GLF_FUZZED(3055.6245), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(-7858.6757), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true, false), false)))))))))))))[0]))) * exp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), _GLF_FUZZED(974.056)), bvec2(true, false)))).y)) && true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false), ! (! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(subgroup_size)));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 1u * _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY(true ? (gl_WorkGroupSize.x) : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? (gl_WorkGroupSize.x) : _GLF_FUZZED(num_workgroup), (true ? true ? (gl_WorkGroupSize.x) : _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_size)))) << 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))) || false)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[1] : _GLF_FUZZED(-8.6))))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (false ? _GLF_FUZZED(min(194.967, 69.94)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), float(_GLF_FUZZED(96.49)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) ^ 0) : _GLF_FUZZED(97360)))], injectionSwitch[1])))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])))).y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))[0], injectionSwitch[1])))).y))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7229.5788, -476.350)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7229.5788, -476.350)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7229.5788, -476.350)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7229.5788, -476.350), (vec2(-7229.5788, -476.350)) / vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), max((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), (false ? _GLF_FUZZED(injectionSwitch.y) : (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))))), 0.0, 1.0, 0.0, 1.0, length(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-99.34)), float(0.0), bool(true)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(1.0))), _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(sqrt(-362.285)))), log(1.0), 0.0), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - abs(0.0)), 0.0)), tan(0.0), 0.0)), dot(vec4(round(length(normalize(1.0))), log(1.0), log(1.0), 0.0), vec4(1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false)))))), (! (bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false))))))) || false)))) || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, true))) && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bool(bvec4(bool(bvec2(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 1u)), (uint(uvec3(workgroup_base, 0u, 1u))) | (uint(uvec3(workgroup_base, 0u, 1u))))), workgroup_base), (max(workgroup_base, workgroup_base)) + 0u), min(_GLF_IDENTITY(max(workgroup_base, workgroup_base), _GLF_IDENTITY((max(workgroup_base, workgroup_base)), ((max(workgroup_base, workgroup_base))) | ((max(workgroup_base, workgroup_base)))) + 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base), (max(workgroup_base, workgroup_base)) + 0u)))), min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), max(workgroup_base, workgroup_base))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uvec2(~ (subgroup_id), 0u))))) * subgroup_size, (true ? _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) / 1u))))), (true ? (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) : _GLF_FUZZED(workgroup_base))), min(~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) | 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : _GLF_FUZZED((subgroup_local_id & subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u) | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) << 0u)))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u * (workgroup_base), max(1u * (workgroup_base), _GLF_IDENTITY(1u * (workgroup_base), ~ (~ (1u * (workgroup_base))))))))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))))) | 0u)))))))) + _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), max(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))), ((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) << 0u), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (41265u & 0u) + (subgroup_id)), max(subgroup_id, subgroup_id)))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) ^ 0u))) << 0u, ~ (~ (_GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u)), uvec4(0u, 0u, 0u, 0u) | (uvec4(subgroup_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u)))))), subgroup_id))))) << 0u, max(((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) << 0u, _GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) << 0u, (((~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) << 0u) >> 0u))))))) : _GLF_FUZZED(subgroup_size)))) * subgroup_size : _GLF_FUZZED(subgroup_local_id))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) | (1u ^ 1u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), min(max(4, 4), _GLF_IDENTITY(max(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, ~ (~ ((4) >> 0))), min(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) >> 0), (4), (4))) >> 0, max((4) >> 0, (4) >> 0)), (4) >> 0))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4), _GLF_IDENTITY((max(4, 4)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, _GLF_IDENTITY(4, max(4, 4))), max(4, 4)))))), clamp(_GLF_IDENTITY((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(_GLF_IDENTITY(4, (4) / 1), 4)))))), clamp(_GLF_IDENTITY((~ _GLF_IDENTITY(((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))))), (_GLF_IDENTITY(((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))))), (((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))) | (((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))))), (((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))) ^ (0 & -35913))))), int(_GLF_IDENTITY(ivec2((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))), 0), (true ? ivec2((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))), 0) : _GLF_FUZZED(ivec2(29533, -50241)))))), (~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0))))))), ~ (_GLF_IDENTITY(~ ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(_GLF_IDENTITY(max(4, 4), (true ? max(4, 4) : _GLF_FUZZED(ivec4(20750, -51836, 62630, 206).x))), max(4, 4)))) ^ 0)))))))), max(~ ((~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0))))))), int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0))))))), 1, (0 | 0), 0)))))), ~ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))))), min(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))))), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0))))))))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))), (_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))) ^ 0)))))))))))))), max((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))), 1, 1))))))))))), (~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))), ((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))))))) | ((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4)))))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), ~ (~ (_GLF_IDENTITY(4, (4) >> 0))))), min(max(4, 4), max(4, 4)))))), 0 | ((~ ((_GLF_IDENTITY(max(4, 4), min(max(4, 4), max(4, 4))))))))))) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + _GLF_IDENTITY((64), ~ (~ ((64))))), (64) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), (64) | (64))) | _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(clamp(3720, 47615, -96462)), _GLF_IDENTITY((_GLF_FUZZED(clamp(3720, 47615, -96462))) | (_GLF_FUZZED(clamp(3720, 47615, -96462))), 0 ^ ((_GLF_FUZZED(clamp(3720, 47615, -96462))) | (_GLF_FUZZED(clamp(3720, 47615, -96462)))))) : _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))))))), 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), _GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4), ((4)) << 0) >> 0) - 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), int(ivec3((4), 0, 1))), (4), (4))) | 0)) | 0), 4)), _GLF_IDENTITY((4), ((4)) ^ 0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) + 0)))), 4)), (4) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0)))))), ~ (~ ((_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0))))))))) | 0), 4)), (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> _GLF_IDENTITY(0, (0) | (0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(2), int(2))) + (4)))), (4) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), clamp(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4))) << 0))))), (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), clamp(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)))), (_GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-59941)))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4), (true ? min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4) : _GLF_FUZZED(1408)))), (4) >> 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0), 4)), (4) >> 0))) << 0)))))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)) : _GLF_FUZZED(16460))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), 0.0, 0.0, 0.0, 0.0, sqrt(round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))))), 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat3(injectionSwitch, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))[0], _GLF_FUZZED(-40.93)), vec2(_GLF_FUZZED(3.3), (vec2(mat3(injectionSwitch, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))[1]), bvec2(false, true)))).y))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false), false), true))))), ! (! (false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (4)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (4))) | 0), 0), ivec2(_GLF_IDENTITY(ivec3(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (4)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (4))) | 0, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-68143, 41776, -90721)), ~ (~ (_GLF_FUZZED(bitfieldExtract(-68143, 41776, -90721))))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), clamp((4), (4), (4))))), 0 | (4))) | 0, ((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (4))) | 0) >> (0 ^ 0))))), 0), 0), (ivec3(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | 0) - 0)))), 0 | (4))) | 0), 0), 0)) * ivec3(1, 1, 1)))))));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, (4) >> (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(mix(ivec3(-86089, -41939, 38307), ivec3(44064, 6566, -26673), bvec3(true, true, false))[0]))), 0, 0)) ^ 0)), 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, true && ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))))))), false || (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ((_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false) && true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(8615.0235, -4.9) + 48.78)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(5457.1280, -75.06))))))).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
