#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_13 {
 bool _f0;
 uint next_virtual_gid;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 uint _f1;
 vec2 _f2;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 _GLF_struct_9 _f1;
 vec2 _f2;
 mat4 _f3;
 bvec3 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 mat4x3 _f1;
 mat2 _f2;
 vec2 _f3;
 mat3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 mat4x3 _f1;
 mat2 _f2;
 float _f3;
 mat3 _f4;
 uvec4 _f5;
 int _f6;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 uvec3 _f1;
 ivec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 uvec3 _f3;
 _GLF_struct_7 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_12 {
 uint workgroup_size;
 mat2 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 uvec2 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 uint workgroup_base;
 vec2 _f1;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 _GLF_struct_0 _f1;
 uint _f2;
 bvec3 _f3;
 _GLF_struct_1 _f4;
 mat4x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 bool _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = subgroup_id;
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(gl_WorkGroupSize.x, mat2(1.0), mat2x4(1.0), mat4x2(1.0), uvec2(1u), _GLF_struct_8(_GLF_struct_4(bvec4(true), uvec3(1u), ivec4(1), ivec2(1)), _GLF_struct_5(ivec2(1), mat4x3(1.0)), _GLF_struct_6(mat2(1.0), mat4x3(1.0), mat2(1.0), 1.0, mat3(1.0), uvec4(1u), 1), uvec3(1u), _GLF_struct_7(uvec2(1u), mat4x3(1.0), mat2(1.0), vec2(1.0), mat3(1.0), bvec4(true)), bvec4(true)), _GLF_struct_11(mat4(1.0), _GLF_struct_9(mat2x3(1.0)), vec2(1.0), mat4(1.0), bvec3(true), _GLF_struct_10(bvec4(true), 1u, vec2(1.0))));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(mat2x3(1.0), _GLF_struct_0(uvec2(1u), bvec3(true), mat2x3(1.0), bvec2(true)), 1u, bvec3(true), _GLF_struct_1(mat4(1.0), _GLF_struct_replacement_12.workgroup_size * workgroup_id, vec2(1.0)), mat4x3(1.0), ivec2(1)), true);
 uint virtual_gid = _GLF_struct_replacement_3._f0._f4.workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_13(true, _GLF_struct_replacement_3._f0._f4.workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size + ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) % subgroup_size)), mat4x2(1.0));
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_struct_replacement_14._f0.next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(1), 4, 64, 4);
 if(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
