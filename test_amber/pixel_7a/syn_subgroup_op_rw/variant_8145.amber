#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-8.5))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), false))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), bool(bvec2(! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))), false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), true, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), ! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(_GLF_IDENTITY(~ (~ (workgroup_base)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (workgroup_base)))), _GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) << 0u), ~ (~ (workgroup_base))))), workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-62586), (_GLF_IDENTITY(true, false || (true)) ? 4 : _GLF_FUZZED(-62586)) | _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-62586)), clamp(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-62586)), ~ (~ ((true ? 4 : _GLF_FUZZED(-62586))))), (true ? 4 : _GLF_FUZZED(-62586)), (true ? 4 : _GLF_FUZZED(-62586))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, false))))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY((0 & _GLF_IDENTITY(90415, ~ (~ (_GLF_IDENTITY(90415, (90415) >> 0))))), (_GLF_IDENTITY((0 & _GLF_IDENTITY(90415, ~ (~ (_GLF_IDENTITY(90415, (90415) >> 0))))), ((0 & _GLF_IDENTITY(90415, ~ (~ (_GLF_IDENTITY(90415, (90415) >> 0)))))) / 1)) | ((0 & _GLF_IDENTITY(90415, ~ (~ (_GLF_IDENTITY(90415, (90415) >> 0))))))), ~ (~ (_GLF_IDENTITY((0 & 90415), ((0 & 90415)) >> 0))))))
      {
       case 85:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       while(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-5333, 72771, -80744), (ivec3(-5333, 72771, -80744)) | (ivec3(-5333, 72771, -80744))) == ivec3(-17846, -35064, -72370)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(-5333, 72771, -80744), (ivec3(-5333, 72771, -80744)) | (ivec3(-5333, 72771, -80744))) == ivec3(-17846, -35064, -72370)), ((_GLF_IDENTITY(ivec3(-5333, 72771, -80744), (ivec3(-5333, 72771, -80744)) | (ivec3(-5333, 72771, -80744))) == ivec3(-17846, -35064, -72370))) || false), false, true, true))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 45:
           if(_GLF_DEAD(false))
            barrier();
           {
            ;
            if(_GLF_DEAD(false))
             barrier();
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[51];
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            ivec2 _GLF_SWITCH_3_3v[77], _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[50];
            bvec4 _GLF_SWITCH_3_6v;
            uvec3 _GLF_SWITCH_3_7v[80], _GLF_SWITCH_3_8v[21];
           }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           case 35:
           for(vec2 _GLF_SWITCH_3_9v; false; equal((-0.4 - vec4(-857.312, 8.6, 4095.3529, -5159.9473)), faceforward(vec4(-401.388, 58.31, -8688.7708, _GLF_IDENTITY(43.25, min(43.25, 43.25))), vec4(8.0, _GLF_IDENTITY(532.227, clamp(532.227, 532.227, 532.227)), -2131.9893, 3080.1439), vec4(-6367.2877, 5.4, -24.87, 1704.2089))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           case 0:
           case 46:
           _GLF_IDENTITY(vec4(9.5, 1.3, -43.13, -2.8), (vec4(9.5, 1.3, -43.13, -2.8)) / cos(vec4(0.0, 0.0, 0.0, 0.0)));
           case 60:
           if(false)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
             (injectionSwitch);
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             mat3x2(592.836, -60.19, 52.07, 7.3, 3.9, 700.412);
             if(_GLF_DEAD(false))
              barrier();
             int _GLF_SWITCH_2_2v[56];
             max(uvec4(110209u, 53060u, 14326u, 100873u), subgroup_id);
             uvec4 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
             bool _GLF_SWITCH_2_5v;
            }
           else
            {
             mat2x4 _GLF_SWITCH_2_6v;
             mat2x3(46.99, 5759.4543, _GLF_IDENTITY(-3740.0679, clamp(-3740.0679, -3740.0679, -3740.0679)), -5.4, -3.5, -644.702);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             uint _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v;
             ivec2 _GLF_SWITCH_2_10v, _GLF_SWITCH_2_11v, _GLF_SWITCH_2_12v;
             mat2x4(6.5, -8.7, 9522.2992, 6.5, -0.3, 3819.2320, -4.0, 9.7);
             vec3(982.823);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             _GLF_SWITCH_2_8v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4(7624.8581, -7.6, -8811.9421, -83.09, -9.6, 56.62, -3425.1535, -9.2, 627.379, 98.85, -379.337, 86.34, 9905.6788, -73.13, -6850.6074, -8.8);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           case 56:
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           uvec2 _GLF_SWITCH_2_13v;
           {
           }
           case 92:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
            return;
           while(false)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat3x2(4.9, -854.167, 683.672, -9.9, 5.1, 7.8);
             if(_GLF_DEAD(false))
              barrier();
             (mat2(-3.3, -8605.5780, 754.614, -6.6) + length(-7.3));
             bvec2 _GLF_SWITCH_2_14v[42], _GLF_SWITCH_2_15v[23], _GLF_SWITCH_2_16v[71];
             bvec4(false, false, true, true);
             _GLF_SWITCH_2_13v;
             ;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           for(           (- outerProduct(vec3(-2.5, 3949.9631, 2.5), vec4(1.3, 1.1, _GLF_IDENTITY(-786.199, (false ? _GLF_FUZZED(length(vec3(29.11, -6.1, 8.8))) : -786.199)), -64.51)));
 true; vec4(-5538.0292, -7485.2832, -998.970, -3.4))
            {
            }
           break;
           case 38:
           {
            if(_GLF_DEAD(false))
             barrier();
            float _GLF_SWITCH_3_10v;
           }
           case 98:
           {
            bvec2 _GLF_SWITCH_3_11v, _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v[95];
            uint _GLF_SWITCH_3_14v;
            ;
            _GLF_SWITCH_2_13v;
            mat3x4 _GLF_SWITCH_3_15v[54];
            5234.4940;
            ;
           }
           default:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           1;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
       case 77:
       for(mat3 _GLF_SWITCH_2_17v, _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v; false; 96408)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec3(bool(bvec2(true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
          {
           mat4x3(-43.16, 2010.4170, -6.7, 62.02, -22.65, 86.98, -3.5, 7056.6257, _GLF_IDENTITY(21.78, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(fract(-293.871)) : _GLF_IDENTITY(21.78, (true ? 21.78 : _GLF_FUZZED(288.415))))), 9011.1008, 590.171, _GLF_IDENTITY(-1.6, max(-1.6, _GLF_IDENTITY(-1.6, float(float(-1.6))))));
          }
         else
          {
          }
         for(         _GLF_IDENTITY((mat2x3(45.38, -4649.5087, _GLF_IDENTITY(3.0, clamp(3.0, 3.0, 3.0)), 14.82, -5.8, _GLF_IDENTITY(9.9, float(mat4x2(9.9, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat3x2(111.744, 68.18, -3.2, -16.10, -130.942, -16.39)), (_GLF_IDENTITY(true ? (mat2x3(45.38, -4649.5087, 3.0, 14.82, _GLF_IDENTITY(-5.8, (-5.8) - log(1.0)), 9.9) * mat3x2(111.744, 68.18, -3.2, -16.10, -130.942, -16.39)) : _GLF_FUZZED(mat3(5.6, -6.2, 548.272, -758.473, -2207.0891, 6966.7677, 26.98, -6.9, -0.9)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? (mat2x3(45.38, -4649.5087, 3.0, 14.82, _GLF_IDENTITY(-5.8, (-5.8) - log(1.0)), 9.9) * mat3x2(111.744, 68.18, -3.2, -16.10, -130.942, -16.39)) : _GLF_FUZZED(mat3(5.6, -6.2, 548.272, -758.473, -2207.0891, 6966.7677, 26.98, -6.9, -0.9)) : _GLF_FUZZED(_GLF_SWITCH_2_17v)))));
 false; uvec2(47587u, 155763u))
          {
           bvec2 _GLF_SWITCH_2_20v;
           if(_GLF_DEAD(false))
            barrier();
           bitfieldExtract(_GLF_IDENTITY((subgroup_size - uvec2(79586u, 44606u)), ((subgroup_size - uvec2(79586u, 44606u))) >> uvec2(0u, 0u)), _GLF_IDENTITY(abs(-89445), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(abs(-89445), (abs(-89445)) - 0), 0), ivec2(_GLF_IDENTITY(ivec3(ivec2(_GLF_IDENTITY(abs(-89445), (abs(-89445)) - 0), 0), 1), (ivec3(ivec2(_GLF_IDENTITY(abs(-89445), (abs(-89445)) - 0), 0), 1)) * ivec3(1, 1, 1)))))), -84654);
           (~ 12519);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ _GLF_IDENTITY(0, (0) + 0))); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         do
          {
          }
         while(false);
         if(_GLF_IDENTITY(false, false || (false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uint _GLF_SWITCH_2_21v;
           if(_GLF_DEAD(false))
            barrier();
          }
         bool _GLF_SWITCH_2_22v;
         mat3x4(20.10, 1872.7995, -4245.7338, 43.53, 5.1, -55.69, 4.6, -8005.5284, -6.0, -9.1, 4.0, -8.1);
         if((_GLF_IDENTITY(mat3(-2.5, -6.1, -21.85, 8.5, 8.0, 7680.5119, -8.0, -9588.7313, -10.62), mat3(1.0) * (_GLF_IDENTITY(mat3(-2.5, -6.1, -21.85, 8.5, 8.0, 7680.5119, -8.0, -9588.7313, -10.62), (mat3(-2.5, -6.1, -21.85, 8.5, 8.0, 7680.5119, -8.0, -9588.7313, -10.62)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) != mat3(-0.5, 700.240, -0.5, 20.19, 70.35, 5946.2473, -2.0, 4.9, 876.595)))
          {
           if(_GLF_DEAD(false))
            barrier();
           int _GLF_SWITCH_2_23v, _GLF_SWITCH_2_24v[70], _GLF_SWITCH_2_25v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat2x3 _GLF_SWITCH_2_26v, _GLF_SWITCH_2_27v[70];
           uvec3(187102u, 147836u, 183824u);
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            barrier();
           bvec3(false, false, false);
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x3 _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v;
           injectionSwitch;
           uvec4 _GLF_SWITCH_2_30v, _GLF_SWITCH_2_31v;
           ivec3(-91935, 83125, 29354);
          }
        }
       case 0:
       case 70:
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       case 3:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 56:
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), ! (! (! (false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 93:
       while(false)
        {
         if(_GLF_DEAD(false))
          barrier();
         while(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(0))
            {
             case 57:
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             ;
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             float _GLF_SWITCH_2_32v, _GLF_SWITCH_2_33v, _GLF_SWITCH_2_34v;
             (mat3x2(_GLF_IDENTITY(-873.199, mix(float(-873.199), float(_GLF_FUZZED(-547.663)), bool(false))), 3.4, 9.8, -0.1, 3965.6639, -871.003) + _GLF_SWITCH_2_32v);
             if(_GLF_DEAD(false))
              barrier();
             case 84:
             case 71:
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), max(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (2))) * 1)))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               mix(mix(vec3(84.80, 3788.9781, -4.1), vec3(4239.4858, -84.07, 3.7), _GLF_IDENTITY(vec3(7714.2822, -8209.9565, _GLF_IDENTITY(7.9, (true ? _GLF_IDENTITY(7.9, _GLF_IDENTITY(0.0 + (7.9), (_GLF_IDENTITY(0.0 + (7.9), mix(float(_GLF_FUZZED(-0.3)), float(0.0 + (7.9)), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(_GLF_SWITCH_2_32v)))), vec3(_GLF_IDENTITY(mat2(vec3(7714.2822, -8209.9565, _GLF_IDENTITY(7.9, (true ? _GLF_IDENTITY(7.9, _GLF_IDENTITY(0.0 + (7.9), (_GLF_IDENTITY(0.0 + (7.9), mix(float(_GLF_FUZZED(-0.3)), float(0.0 + (7.9)), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(_GLF_SWITCH_2_32v)))), 0.0), transpose(transpose(mat2(vec3(7714.2822, -8209.9565, _GLF_IDENTITY(7.9, (true ? _GLF_IDENTITY(7.9, _GLF_IDENTITY(0.0 + (7.9), (_GLF_IDENTITY(0.0 + (7.9), mix(float(_GLF_FUZZED(-0.3)), float(0.0 + (7.9)), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(_GLF_SWITCH_2_32v)))), 0.0))))))), (vec3(1.6, -569.377, 49.13) / _GLF_SWITCH_2_32v), _GLF_SWITCH_2_32v);
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))))) && true))
              barrier();
             case 24:
             case 27:
             if(_GLF_DEAD(false))
              barrier();
             (~ subgroup_size);
             break;
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
            }
          }
         for(         (findMSB(uvec3(198933u, 1629u, _GLF_IDENTITY(136541u, min(_GLF_IDENTITY(_GLF_IDENTITY(136541u, max(136541u, 136541u)), max(_GLF_IDENTITY(136541u, max(136541u, 136541u)), _GLF_IDENTITY(136541u, max(136541u, 136541u)))), 136541u)))) << ivec3(_GLF_IDENTITY(61917, _GLF_IDENTITY((false ? _GLF_FUZZED((73133 & -30555)) : 61917), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED((73133 & -30555)) : 61917), int(int((false ? _GLF_FUZZED((73133 & -30555)) : 61917)))), 1, 1), (ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED((73133 & -30555)) : 61917), int(int((false ? _GLF_FUZZED((73133 & -30555)) : 61917)))), 1, 1)) | ivec3(0, 0, 0))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED((73133 & -30555)) : 61917), int(int((false ? _GLF_FUZZED((73133 & -30555)) : 61917)))), 1, 1), (ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED((73133 & -30555)) : 61917), int(int((false ? _GLF_FUZZED((73133 & -30555)) : 61917)))), 1, 1)) | ivec3(0, 0, 0)))) * 1))), 48750, 52190));
 bvec4(false, false, false, true).g; bitfieldReverse(ivec3(_GLF_IDENTITY(-23814, (-23814) / 1), 9270, 53184)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
            break;
           _GLF_IDENTITY((mat3(-7841.4218, 1.1, 141.593, -842.494, 5.9, -51.94, _GLF_IDENTITY(-2230.4778, 0.0 + (-2230.4778)), -3.0, 7733.1812) * mat3(-8.5, 3.2, -8.7, -9.0, -4883.0499, -6.0, 5005.5184, -4.3, 62.15)), (false ? _GLF_FUZZED(mat3(mat4x3(-2167.1383, -3.3, 6.0, -8.1, -4489.6305, -7.3, -1999.3122, 0.1, 432.986, -51.46, -720.279, 4913.2941))) : (mat3(-7841.4218, 1.1, 141.593, -842.494, 5.9, -51.94, _GLF_IDENTITY(-2230.4778, 0.0 + (-2230.4778)), -3.0, 7733.1812) * mat3(-8.5, 3.2, -8.7, -9.0, -4883.0499, -6.0, 5005.5184, -4.3, 62.15))));
           mat4 _GLF_SWITCH_2_35v, _GLF_SWITCH_2_36v[32], _GLF_SWITCH_2_37v[42];
           (_GLF_IDENTITY(uvec2(161405u, 63232u), max(uvec2(161405u, 63232u), uvec2(161405u, 63232u))) >> _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           true;
           uint _GLF_SWITCH_2_38v[36], _GLF_SWITCH_2_39v, _GLF_SWITCH_2_40v;
           -54462;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         mat2(-2.2, _GLF_IDENTITY(5.9, min(5.9, _GLF_IDENTITY(5.9, min(5.9, 5.9)))), -1133.0973, 5194.3340);
        }
       case 53:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         barrier();
        while(true)
         {
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            _GLF_IDENTITY(vec4(4.7, -3.1, 7277.0489, -6372.9512), (vec4(4.7, -3.1, 7277.0489, -6372.9512)) * vec4(1.0, 1.0, 1.0, 1.0));
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
           }
          ;
          ivec3(97360, -48172, -17713)[1];
          mat4x2 _GLF_SWITCH_2_41v, _GLF_SWITCH_2_42v;
          trunc(float(subgroup_size));
          (4.2 - (_GLF_IDENTITY(-6.8, (-6.8) - 0.0) + mat2x3(40.28, 1.5, 1144.6025, -332.774, 290.572, -5.1)));
          mat2x4(4.3, 2.1, 13.14, 19.23, 30.04, -7.8, -667.437, 4.1);
          if(_GLF_DEAD(false))
           barrier();
          int _GLF_SWITCH_2_43v;
          mat2x3(mat3x2(-2717.9429, 11.74, 893.354, -6.0, -9951.1338, 4.8));
         }
        ;
        {
         vec2 _GLF_SWITCH_2_44v, _GLF_SWITCH_2_45v;
         (mat3x2(-57.66, -6967.4289, -4968.5006, -4.8, -26.74, 1.3) * mat3(4.5, 2.2, 0.6, -9.2, 6.6, -0.9, -8.0, -9397.5830, -9.2));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         mat4(_GLF_IDENTITY(-7.5, min(-7.5, -7.5)), -1.7, -570.372, 3020.7467, -2.9, 93.56, _GLF_IDENTITY(4.7, min(4.7, 4.7)), 6.3, -3633.5896, -7.3, 459.002, 76.43, 2.8, -8.3, -3.9, 705.004);
        }
       }
       default:
       1;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (mat3x4(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)), transpose(transpose(mat4(1.0) * (mat3x4(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 34:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     mat4(159.157, 6485.5671, -214.926, -1.1, 6.0, -2.6, -3407.3544, 8.4, -99.17, -3.7, 1.5, 9515.1720, _GLF_IDENTITY(-8906.9868, min(-8906.9868, -8906.9868)), -9.7, -181.235, 60.32);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0)), float(mat4x2(float(mat4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), float(mat4(injectionSwitch.x, exp(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0))))) * 1.0), _GLF_IDENTITY(mix(float(float(mat4(injectionSwitch.x, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), 0.0, 0.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7963.7664)), float(0.0), bool(true))), 0.0, 1.0))), float(_GLF_FUZZED(-27.67)), bool(false)), _GLF_IDENTITY(0.0, 0.0 + (0.0)) + (mix(float(float(mat4(injectionSwitch.x, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), 0.0, 0.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7963.7664)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), float(_GLF_FUZZED(-27.67)), bool(false)))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-288.656)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 77:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 34:
         return;
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 83:
         if(_GLF_DEAD(false))
          barrier();
         (uvec2(185098u, 59641u) , mat3x4(8.3, 465.757, 37.03, 9242.3790, -6826.5688, -99.42, -9108.4100, -9.4, -7.3, -6.0, -4.8, 0.3));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         case 14:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
          barrier();
         lessThan(vec3(-20.69, -27.77, -24.64), (_GLF_IDENTITY(vec3(693.644, 19.16, -8.6), max(vec3(693.644, 19.16, -8.6), vec3(693.644, 19.16, -8.6))) - vec3(-548.139, 3.4, -9.9)));
         default:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         1;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, true)))) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     case 67:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(_GLF_IDENTITY(bvec3(! ((! (false))), true, false), bvec3(bvec4(bvec3(! ((! (false))), true, false), true))))))), ! (! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! ((! (false))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! ((! (false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! ((! (false))), true, false), bvec3(bvec3(bvec3(! ((! (false))), true, false)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! ((! (false))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! ((! (false))), true, false), bvec3(bvec4(bvec3(! ((! (false))), true, false), false)))))), true)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      barrier();
     case 22:
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 71:
     case 40:
     case 23:
     if(_GLF_DEAD(false))
      barrier();
     case 5:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) && true))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 1 * (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), int(ivec2((4), 1)))) ^ 0))) | (4)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141))), 1, 0, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | (4)) : _GLF_FUZZED(-68141), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141)) * 1)))))), 1, 0, 0)) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) | (4)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141)), (true ? ~ (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141)) : _GLF_FUZZED(-24458))))), true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-68141))))), 1, 0, 0))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 74:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
      {
       switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) >> 0)))
        {
         case 91:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         mat3x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
         case 0:
         case 84:
         case 7:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         case 29:
         case 1:
         if(_GLF_DEAD(false))
          barrier();
         case 20:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-688.730))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-688.730))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-688.730))))), false)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         break;
         if(_GLF_DEAD(false))
          barrier();
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         1;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     subgroupAll(_GLF_IDENTITY(false, bool(bvec3(false, false, false))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 41:
     bvec2(false, _GLF_IDENTITY(true, (true) && true));
     if(_GLF_DEAD(false))
      barrier();
     default:
     _GLF_IDENTITY(1, max(1, 1));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 32:
     findMSB(uvec2(134545u, 126445u));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 4:
     uvec2(20184u, 69250u);
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 88:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 75:
     case 65:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 91:
     switch(_GLF_SWITCH(0))
      {
       case 26:
       if(_GLF_DEAD(false))
        barrier();
       ;
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0 + (0.0))))) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 25:
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             mat3x2((+ (- mat2(654.668, -299.917, -3.6, 78.98))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)).x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           case 38:
           uvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[28], _GLF_SWITCH_2_2v;
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-824.755) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-824.755) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 63:
                 bvec3 _GLF_SWITCH_3_0v;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 18:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 min(sign(48356), findMSB(_GLF_IDENTITY(-73529, (true ? _GLF_IDENTITY(-73529, 1 * (-73529)) : _GLF_FUZZED(-36501)))));
                 case 0:
                 case 13:
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 default:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false)))));
            }
           case 10:
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
           case 42:
           if(_GLF_DEAD(false))
            barrier();
           mat3x2(-2.5, -7.2, -7.5, -9948.3402, 6.9, 88.67);
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))), (~ (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))) << 0))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))) || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true))))))))
          barrier();
         atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read, (read) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, (read) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)))))))), ~ (~ (~ (_GLF_IDENTITY(read, (read) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))))))))))))))), 4, 64, 4);
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       case 89:
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0)))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0)))) || false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - (0 | 0)))
        {
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(true);
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0), (((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)) * mat2(1.0)))), 0.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), clamp(sqrt(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(_GLF_ONE(1.0, injectionSwitch.y))))) / 1.0), 1.0, tan(0.0), 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 0.0)), (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(5285.2736, -5879.0112, 9.6, 57.91)))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), 0.0, 1.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, tan(0.0), 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, abs(abs(0.0)) + (0.0)), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-4009.8643, -1.1, -1.6).s)), float(1.0), bool(true)))) / 1.0), 0.0))) + vec2(0.0, 0.0))).y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 21:
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          {
           switch(_GLF_SWITCH(0))
            {
             case 35:
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             mat2x3(0.3, -1.5, 3.1, _GLF_IDENTITY(-4630.4316, min(-4630.4316, _GLF_IDENTITY(-4630.4316, (-4630.4316) / 1.0))), _GLF_IDENTITY(18.33, 1.0 * (18.33)), 5.4);
             case 10:
             if(_GLF_DEAD(false))
              barrier();
             bvec3(true, false, true);
             case 0:
             case 83:
             if(_GLF_DEAD(false))
              barrier();
             case 70:
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
              barrier();
             case 15:
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
                barrier();
               barrier();
              }
             case 22:
             case 33:
             if(_GLF_DEAD(false))
              barrier();
             case 95:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
             break;
             case 94:
             uint _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
             default:
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         mat4x2(9716.6232, -2.7, _GLF_IDENTITY(74.10, (74.10) * 1.0), 3.5, 8.9, 104.161, 9.1, -300.453);
         uvec3(_GLF_IDENTITY(71027u, max(71027u, 71027u)), 193341u, 33576u);
         if(true)
          {
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
            {
             case 0:
             case 43:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
              {
               -1298;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             case 65:
             if(_GLF_DEAD(false))
              return;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             case 7:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             case 25:
             bvec3 _GLF_SWITCH_1_0v[57], _GLF_SWITCH_1_1v;
             case 22:
             uint _GLF_SWITCH_1_2v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           injectionSwitch;
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (bool(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))));
           _GLF_IDENTITY(uvec4(124870u, 68155u, 23947u, 111816u), uvec4(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))))), 1u, 1u) * (_GLF_IDENTITY(uvec4(124870u, 68155u, 23947u, 111816u), clamp(uvec4(124870u, 68155u, 23947u, 111816u), _GLF_IDENTITY(uvec4(124870u, 68155u, 23947u, 111816u), max(_GLF_IDENTITY(uvec4(124870u, 68155u, 23947u, 111816u), (uvec4(124870u, 68155u, 23947u, 111816u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(124870u, 68155u, 23947u, 111816u))), uvec4(124870u, 68155u, 23947u, 111816u)))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           (_GLF_IDENTITY(87623, (true ? _GLF_IDENTITY(87623, (87623) + 0) : _GLF_FUZZED(-16156))) - ivec4(31108, _GLF_IDENTITY(-57082, ~ (~ (-57082))), 57879, -72573));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), max(float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 1.0)), max(float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), 1.0, 1.0)), clamp(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-36.30)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) + 0.0)), injectionSwitch.x)), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((7.1 - mat2(8126.6179, -897.509, -2572.4552, -797.412))) : mat2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), 0.0, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0)), float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-204.457)), bool(false))) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           bvec2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[91];
           ivec3 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && (_GLF_IDENTITY(! ((false) || false), ! (! (! ((false) || false)))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           _GLF_IDENTITY(_GLF_IDENTITY((true , _GLF_IDENTITY(ivec4(-64608, -48781, 94486, -79525), (ivec4(-64608, -48781, 94486, -79525)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(true, (true) && true) ? (true , _GLF_IDENTITY(ivec4(-64608, -48781, 94486, -79525), (ivec4(-64608, -48781, 94486, -79525)) >> ivec4(0, 0, 0, 0))) : _GLF_FUZZED(ivec4(-42180, 81558, 25551, -70238)))), ~ (~ (_GLF_IDENTITY((true , _GLF_IDENTITY(ivec4(-64608, -48781, 94486, -79525), (ivec4(-64608, -48781, 94486, -79525)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? (true , _GLF_IDENTITY(ivec4(-64608, -48781, _GLF_IDENTITY(94486, (94486) / 1), _GLF_IDENTITY(-79525, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(-79525, 0 | (_GLF_IDENTITY(-79525, (-79525) | (-79525))))))), (ivec4(-64608, -48781, 94486, -79525)) >> ivec4(0, 0, 0, 0))) : _GLF_FUZZED(ivec4(-42180, 81558, 25551, -70238)), (_GLF_IDENTITY(true, (true) && true) ? (_GLF_IDENTITY(true, true && (true)) , _GLF_IDENTITY(ivec4(-64608, -48781, 94486, -79525), (ivec4(-64608, -48781, 94486, -79525)) >> ivec4(0, 0, 0, 0))) : _GLF_FUZZED(ivec4(-42180, 81558, 25551, -70238))) - ivec4(0, 0, 0, 0)))))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           unpackHalf2x16((+ num_workgroup))[1];
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           ivec3(6756, 43637, -74352);
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(false))))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, length(0.0)), transpose(transpose(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, length(0.0))))))).y)), true))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
              barrier();
             barrier();
            }
          }
        }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        mat3 _GLF_SWITCH_1_8v[7];
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
           barrier();
          return;
         }
        while((_GLF_IDENTITY(mat4x2(-156.019, 8.0, _GLF_IDENTITY(-5.4, (-5.4) / 1.0), 92.90, -9478.4378, -2.7, -3754.7010, _GLF_IDENTITY(455.976, (false ? _GLF_FUZZED(3479.8793) : 455.976))) == mat4x2(-6.2, 9.4, 8.1, _GLF_IDENTITY(-6.7, max(-6.7, _GLF_IDENTITY(-6.7, float(mat3x2(-6.7, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))))), -2.4, -5552.9295, 53.61, -67.78), bool(bvec2(mat4x2(-156.019, 8.0, _GLF_IDENTITY(-5.4, (-5.4) / 1.0), 92.90, -9478.4378, -2.7, -3754.7010, _GLF_IDENTITY(455.976, (false ? _GLF_FUZZED(3479.8793) : 455.976))) == mat4x2(-6.2, 9.4, 8.1, _GLF_IDENTITY(-6.7, max(-6.7, _GLF_IDENTITY(-6.7, float(mat3x2(-6.7, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))))), -2.4, -5552.9295, 53.61, -67.78), true)))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            barrier();
           transpose(mat3x2(19.88, 9.9, 7.3, 5.8, -9.8, 2809.8866));
           uvec3 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           mat2x3(4.4, -7435.8534, -980.084, 2.4, -1.4, -44.95);
          }
          if(_GLF_DEAD(false))
           barrier();
          bvec2 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            continue;
           }
          mat2 _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v[21];
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              barrier();
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
           barrier();
          float _GLF_SWITCH_1_17v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))
           barrier();
          mat2x3 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
          if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (bool(bvec2(bool(false), false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
                 barrier();
                barrier();
               }
             }
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          for(vec2 _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v; _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), true)))))))))); lessThan(_GLF_IDENTITY(vec2(-14.00, 9.7), min(_GLF_IDENTITY(vec2(-14.00, 9.7), vec2(_GLF_IDENTITY(mat2x4(vec2(-14.00, 9.7), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0), mat2x4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-814.238)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(vec2(-14.00, 9.7), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_SWITCH_1_17v))), 1.0, 1.0))))), vec2(-14.00, 9.7))), vec2(-7466.7468, -5.0)))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))), false, true, true))))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.6) : injectionSwitch.x)) > injectionSwitch.y))))), true)))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            mat4x2 _GLF_SWITCH_1_23v;
            if(_GLF_DEAD(false))
             barrier();
            for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
             {
              read;
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))))
               barrier();
             }
            faceforward(_GLF_SWITCH_1_22v, vec2(8270.2785, -3.2), (++ _GLF_SWITCH_1_22v));
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
             {
              switch(_GLF_IDENTITY(_GLF_SWITCH(0), _GLF_IDENTITY(max(_GLF_SWITCH(0), _GLF_SWITCH(0)), int(ivec4(max(_GLF_SWITCH(0), _GLF_SWITCH(0)), 0, 0, 1)))))
               {
                case 70:
                ivec4(91216, -95138, -83821, -5947);
                case 54:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7137.9726), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-20.84)), bvec2(true, false))))).x > injectionSwitch.y))))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
                 barrier();
                mat3x4(-65.57, 76.49, 3.9, 1.3, -4182.3296, 9.9, -53.34, -569.848, -31.05, -8806.9559, 4.7, 4899.7783);
                case 0:
                case 40:
                case 34:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 66:
                case 65:
                case 26:
                if(_GLF_DEAD(false))
                 barrier();
                case 81:
                case 47:
                for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                  for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) >> 0))))) >> _GLF_IDENTITY(int(0), int(0)), int(ivec3(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) >> 0))))) >> _GLF_IDENTITY(int(0), int(0)), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) >> 0))))) >> _GLF_IDENTITY(int(0), int(0)), ~ (~ ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) >> 0))))) >> _GLF_IDENTITY(int(0), int(0))))))), 1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                break;
                case 53:
                if(_GLF_DEAD(false))
                 barrier();
                _GLF_SWITCH_1_17v;
                default:
                1;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            do
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              mat3x4(-2.9, 6.8, 89.04, 41.03, _GLF_IDENTITY(72.42, (72.42) * 1.0), -9650.7123, -8543.4182, 2.3, 707.671, -97.02, 5.2, 4719.8765);
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_SWITCH_1_21v, (_GLF_SWITCH_1_21v) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : injectionSwitch)).x > injectionSwitch.y))));
            if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false)) || false))))
             {
              for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0)) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
               {
                barrier();
               }
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             barrier();
            ;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          injectionSwitch;
          for(vec4 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v; (_GLF_IDENTITY(mat3(-21.90, 171.123, 1734.6766, -40.94, _GLF_IDENTITY(-6.1, max(_GLF_IDENTITY(-6.1, clamp(-6.1, -6.1, -6.1)), -6.1)), -2671.2775, 0.9, -9.0, -8812.8183), transpose(transpose(mat3(-21.90, 171.123, _GLF_IDENTITY(1734.6766, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : _GLF_IDENTITY(1734.6766, mix(float(1734.6766), float(_GLF_FUZZED(-3364.1637)), bool(false))))), -40.94, -6.1, -2671.2775, 0.9, -9.0, -8812.8183)))) == mat3(_GLF_IDENTITY(3.7, float(mat3x2(3.7, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, sin(0.0)))), -2.0, 5.8, _GLF_IDENTITY(8.8, (8.8) + log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), -3909.6401, -435.126, -3481.0830, _GLF_IDENTITY(656.424, 1.0 * (656.424)), 8.7)); vec3(10.66, 3.2, _GLF_IDENTITY(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0)))), mix(float(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0))))), float(_GLF_FUZZED((- -4.8))), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0)))), mix(float(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0))))), float(_GLF_FUZZED((- -4.8))), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), min(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0)))), mix(float(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0))))), float(_GLF_FUZZED((- -4.8))), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0)))), mix(float(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0))))), float(_GLF_FUZZED((- -4.8))), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0)))), mix(float(_GLF_IDENTITY(-7.5, float(mat2x3(_GLF_IDENTITY(-7.5, min(_GLF_IDENTITY(-7.5, (false ? _GLF_FUZZED(_GLF_SWITCH_1_17v) : -7.5)), -7.5)), sqrt(0.0), determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, exp(0.0))))), float(_GLF_FUZZED((- -4.8))), bool(false))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))
           {
            ;
            if(_GLF_DEAD(false))
             barrier();
            mat3x4(_GLF_IDENTITY(7.3, clamp(_GLF_IDENTITY(7.3, (false ? _GLF_FUZZED(-7.5) : 7.3)), _GLF_IDENTITY(7.3, (7.3) / 1.0), 7.3)), -6.7, 963.668, 32.04, 711.399, 1771.8183, _GLF_IDENTITY(2245.7807, (2245.7807) - _GLF_ZERO(0.0, injectionSwitch.x)), -7.4, 351.520, 50.79, -68.65, -6682.0412);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
             continue;
            for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) - _GLF_IDENTITY(0, (0) - 0)) != (0 << _GLF_IDENTITY(int(2), int(2)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) - 0)) != (0 << _GLF_IDENTITY(int(2), int(2)))))); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            vec4(1.6, -462.469, -95.94, -9.2);
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    continue;
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  case 5:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 42:
                  case 17:
                  case 55:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 69:
                  case 93:
                  case 94:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 33:
                  case 99:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)) || (false))))
                   barrier();
                  return;
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  break;
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  default:
                  1;
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), false, true), bvec3(bvec3(bvec3(false || (false), false, true)))))))))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                 {
                  return;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
            mat3 _GLF_SWITCH_1_26v[98], _GLF_SWITCH_1_27v;
            ;
           }
          (_GLF_IDENTITY(- mat3(-5200.3781, -4.6, 2.8, -712.909, 728.667, -905.162, 9.2, 4006.9869, 8.4), (- mat3(-5200.3781, -4.6, 2.8, -712.909, 728.667, -905.162, 9.2, 4006.9869, 8.4)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)));
         }
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(0.2), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))))[0], _GLF_FUZZED(-91.66)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))) || false)))))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if((uvec4(146211u, 105111u, 167516u, 51488u) != uvec4(_GLF_IDENTITY(156027u, (true ? _GLF_IDENTITY(156027u, (true ? 156027u : _GLF_FUZZED(workgroup_base))) : _GLF_FUZZED(subgroup_local_id))), 181039u, _GLF_IDENTITY(100201u, (100201u) | (_GLF_IDENTITY(100201u, 0u + (100201u)))), 189045u)))
         {
          if(_GLF_DEAD(false))
           barrier();
          mat3x2(mat3x4(9.9, -39.85, -7603.1656, _GLF_IDENTITY(590.150, (true ? _GLF_IDENTITY(590.150, clamp(590.150, 590.150, 590.150)) : _GLF_FUZZED(6.3))), -2.4, -5129.2616, -948.569, _GLF_IDENTITY(42.19, min(42.19, 42.19)), 5845.4998, _GLF_IDENTITY(-4420.9156, mix(float(-4420.9156), float(_GLF_FUZZED((+ 2339.7273))), bool(false))), 6.7, -3555.3702));
          uvec2 _GLF_SWITCH_1_28v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          mat2x4(_GLF_IDENTITY(5393.7473, float(_GLF_IDENTITY(mat4x2(5393.7473, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), _GLF_IDENTITY(mat2(mat4x3(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), mat2(mat4x2(mat2(1.0, 0.0, sqrt(0.0), 1.0)))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(mat4x3(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(0.0), 1.0), mat2(mat4x2(mat2(1.0, 0.0, sqrt(0.0), 1.0)))))))))), mix(float(determinant(mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(393.833))), 0.0, sqrt(0.0), 1.0))), float(_GLF_FUZZED(8.6)), bool(false))), 0.0, abs(1.0), 1.0), (false ? _GLF_FUZZED(mat4x2(-41.48, -5.8, -98.60, -7.1, 1264.9378, _GLF_IDENTITY(_GLF_IDENTITY(6.9, (6.9) + 0.0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(6.9, (6.9) + 0.0) : _GLF_FUZZED(-555.039))), 4662.1738, _GLF_IDENTITY(9378.4813, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(9378.4813, 0.0, 0.0, 1.0), transpose(transpose(mat2(9378.4813, 0.0, 0.0, 1.0))))), max(float(_GLF_IDENTITY(mat2(9378.4813, 0.0, 0.0, 1.0), _GLF_IDENTITY(transpose(transpose(mat2(9378.4813, 0.0, 0.0, 1.0))), (true ? transpose(transpose(mat2(9378.4813, 0.0, 0.0, 1.0))) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-3.4, clamp(_GLF_IDENTITY(-3.4, min(-3.4, -3.4)), -3.4, _GLF_IDENTITY(-3.4, (-3.4) / 1.0))), -4040.4036, 4.3, _GLF_IDENTITY(-53.91, (-53.91) / 1.0))))))), float(_GLF_IDENTITY(mat2(9378.4813, 0.0, 0.0, 1.0), transpose(transpose(mat2(9378.4813, 0.0, 0.0, 1.0)))))))))) : mat4x2(5393.7473, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0)), 0.0, abs(1.0), 1.0))))), -72.13, -8.4, 500.654, -4528.7722, -1.0, 97.42, 800.617);
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          {
          }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat2x4 _GLF_SWITCH_1_29v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(true)
           {
            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-801.774), _GLF_FUZZED(99.59)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            ;
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(62487)))))], min(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(62487)))))], ((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(62487)))))]) * 1.0), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(62487)))))], min((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(62487)))))], (injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(62487)))))])))), float(mat3x2((injectionSwitch)[0], 0.0, 1.0, 1.0, 1.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(38104u)), _GLF_FUZZED(-6.5)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED((-721.871 / 311.408))), float((injectionSwitch)[1]), bool(true))), ((injectionSwitch)[1]) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, 0.0))), (injectionSwitch)[0])), _GLF_FUZZED(-8912.6214)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), (injectionSwitch.x > injectionSwitch.y))))).y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8912.6214)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-8912.6214)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8912.6214)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-8912.6214)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8912.6214)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-8912.6214)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))), true, false))))))))))
             barrier();
            vec4 _GLF_SWITCH_1_30v;
            num_workgroup;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), injectionSwitch.x)) > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  return;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
                barrier();
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0)))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))), (float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0)))) - 0.0), float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))), (float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0)))) - 0.0), float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))))), float(vec2(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))), max(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))), (float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0)))) - 0.0), float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))))), tan(0.0))))) / 1.0))))))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            vec3(-5484.8586, 435.901, 438.608);
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, false, true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            mat3(1347.2110, _GLF_IDENTITY(1.5, (1.5) / abs(1.0)), 6.8, -188.986, -1.8, _GLF_IDENTITY(8.0, clamp(_GLF_IDENTITY(8.0, min(8.0, _GLF_IDENTITY(8.0, clamp(_GLF_IDENTITY(8.0, (8.0) * 1.0), 8.0, 8.0)))), _GLF_IDENTITY(8.0, (false ? _GLF_FUZZED(fma(-4.0, 4.1, -1105.0035)) : 8.0)), _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), -60.42, _GLF_IDENTITY(-6893.8050, min(_GLF_IDENTITY(-6893.8050, min(_GLF_IDENTITY(-6893.8050, mix(float(-6893.8050), _GLF_IDENTITY(float(_GLF_FUZZED(float(145614u))), float(mat3x4(float(_GLF_FUZZED(float(145614u))), length(0.0), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))), bool(false))), _GLF_IDENTITY(-6893.8050, (true ? -6893.8050 : _GLF_FUZZED(-0.7))))), -6893.8050)), -7.4);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            mat3x2 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v;
            if(_GLF_DEAD(false))
             {
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
             }
            mat3x2 _GLF_SWITCH_1_34v[73], _GLF_SWITCH_1_35v;
            mat2x4 _GLF_SWITCH_1_36v;
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(false)
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          while(true)
           {
            if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            (_GLF_IDENTITY(true == (! true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) == (! true)))));
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                barrier();
               }
             }
            return;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
           }
          if(_GLF_IDENTITY((vec3(_GLF_IDENTITY(9986.4968, max(9986.4968, 9986.4968)), 8964.3696, -34.98) != _GLF_IDENTITY(_GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), (false ? _GLF_FUZZED(fract(vec3(0.3, -9.2, -3.8))) : pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)))), clamp(pow(vec3(-2847.3135, 1.7, -732.120), vec3(_GLF_IDENTITY(6.3, min(6.3, 6.3)), -8.0, -552.791)), pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), _GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), min(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791))))))), ! (! ((vec3(9986.4968, 8964.3696, -34.98) != _GLF_IDENTITY(_GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, _GLF_IDENTITY(-8.0, (true ? -8.0 : _GLF_FUZZED(vec2(vec4(56.11, -4784.0351, -1.6, 82.29))[1]))), -552.791)), clamp(pow(vec3(-2847.3135, 1.7, _GLF_IDENTITY(-732.120, (-732.120) - 0.0)), vec3(6.3, -8.0, -552.791)), pow(vec3(-2847.3135, 1.7, -732.120), vec3(_GLF_IDENTITY(6.3, (6.3) / 1.0), _GLF_IDENTITY(-8.0, (true ? -8.0 : _GLF_FUZZED(3730.3955))), -552.791)), _GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), _GLF_IDENTITY(vec3(6.3, -8.0, -552.791), (_GLF_IDENTITY(vec3(6.3, -8.0, -552.791), (vec3(6.3, -8.0, -552.791)) * mat3(1.0))) / vec3(1.0, 1.0, 1.0))), min(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)))))), min(_GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), _GLF_IDENTITY(vec3(6.3, -8.0, -552.791), min(vec3(6.3, -8.0, -552.791), vec3(6.3, -8.0, -552.791)))), clamp(pow(vec3(-2847.3135, 1.7, _GLF_IDENTITY(-732.120, (-732.120) - 0.0)), _GLF_IDENTITY(vec3(6.3, -8.0, -552.791), clamp(_GLF_IDENTITY(vec3(6.3, -8.0, -552.791), (vec3(6.3, -8.0, -552.791)) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(6.3, -8.0, -552.791), clamp(vec3(6.3, -8.0, -552.791), vec3(6.3, -8.0, -552.791), vec3(6.3, -8.0, -552.791))), vec3(6.3, -8.0, -552.791)))), pow(vec3(-2847.3135, 1.7, -732.120), vec3(_GLF_IDENTITY(6.3, (6.3) / 1.0), -8.0, -552.791)), _GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), _GLF_IDENTITY(vec3(6.3, -8.0, -552.791), (_GLF_IDENTITY(vec3(6.3, -8.0, -552.791), (vec3(6.3, -8.0, -552.791)) * mat3(1.0))) / vec3(1.0, 1.0, 1.0))), min(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)))))), _GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), clamp(pow(vec3(-2847.3135, 1.7, _GLF_IDENTITY(-732.120, (-732.120) - 0.0)), vec3(6.3, -8.0, -552.791)), pow(vec3(-2847.3135, 1.7, -732.120), vec3(_GLF_IDENTITY(6.3, (6.3) / 1.0), -8.0, -552.791)), _GLF_IDENTITY(pow(vec3(-2847.3135, 1.7, -732.120), _GLF_IDENTITY(vec3(6.3, -8.0, -552.791), (_GLF_IDENTITY(vec3(6.3, -8.0, -552.791), (vec3(6.3, -8.0, -552.791)) * mat3(1.0))) / vec3(1.0, 1.0, 1.0))), min(pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)), pow(vec3(-2847.3135, 1.7, -732.120), vec3(6.3, -8.0, -552.791)))))))))))))
           {
            switch(_GLF_SWITCH(0))
             {
              case 37:
              mat3x4(1.2, -35.64, _GLF_IDENTITY(8.5, float(vec4(8.5, abs(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 0.0))), _GLF_IDENTITY(-46.33, mix(float(_GLF_FUZZED(-8.7)), float(-46.33), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(-930.822, max(_GLF_IDENTITY(-930.822, (-930.822) / round(length(normalize(1.0)))), -930.822)), 887.063, 1774.6535, 7716.2279, _GLF_IDENTITY(-15.55, mix(float(_GLF_FUZZED(-46.20)), float(-15.55), bool(true))), -3.3, -1230.4479, 90.96);
              if(_GLF_DEAD(false))
               barrier();
              case 0:
              if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))), false)))))))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
                 barrier();
                barrier();
               }
              case 88:
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
               barrier();
              case 84:
              ;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))) || false, true && (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))) || false, _GLF_IDENTITY(bool(bvec3(((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))) || false, false, false)), bool(bvec3(bool(bvec3(((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))) || false, false, false)), false, true))))))))))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              case 68:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              mat3x4(27.65, -933.605, 9.2, 1.2, 5.2, 7021.3444, -592.406, _GLF_IDENTITY(4.1, min(4.1, 4.1)), 2638.3150, _GLF_IDENTITY(0.5, (true ? 0.5 : _GLF_FUZZED(4.6))), -6395.4209, 9.4);
              if(_GLF_DEAD(false))
               barrier();
              vec4 _GLF_SWITCH_1_37v[46], _GLF_SWITCH_1_38v, _GLF_SWITCH_1_39v[63];
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
              _GLF_IDENTITY((_GLF_SWITCH_1_28v ^ virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_SWITCH_1_28v ^ virtual_gid, (_GLF_IDENTITY(_GLF_SWITCH_1_28v ^ virtual_gid, uvec2(uvec3(_GLF_SWITCH_1_28v ^ virtual_gid, 0u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), uvec2(0u, 0u) ^ ((_GLF_SWITCH_1_28v ^ virtual_gid)))) / uvec2(1u, 1u));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              case 50:
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                else
                 {
                  barrier();
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              mat4x3(-6.2, 7.9, 14.34, 9.2, 3.6, -56.26, 912.615, 9379.9004, _GLF_IDENTITY(-3434.4453, max(-3434.4453, _GLF_IDENTITY(-3434.4453, (-3434.4453) - 0.0))), 2199.3362, -77.98, -1990.0884);
              case 66:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              case 87:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2))))))); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    return;
                   }
                  barrier();
                 }
               }
              case 65:
              mat3(vec3(2.2, 1.0, 61.60), vec3(3.7, -67.13, 7.3), vec3(_GLF_IDENTITY(239.019, min(_GLF_IDENTITY(239.019, _GLF_IDENTITY((false ? _GLF_FUZZED(4638.2621) : 239.019), min((false ? _GLF_FUZZED(4638.2621) : 239.019), (false ? _GLF_FUZZED(4638.2621) : 239.019)))), 239.019)), 2.1, -0.9));
              case 51:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                barrier();
               }
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))) || false)))))
               barrier();
              mat3x2 _GLF_SWITCH_1_40v[85], _GLF_SWITCH_1_41v[22];
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               barrier();
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, true, false)))))) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))
               barrier();
              break;
              if(_GLF_DEAD(false))
               barrier();
              case 61:
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 48:
                  mat3 _GLF_SWITCH_3_0v[68], _GLF_SWITCH_3_1v[78];
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 0:
                  case 50:
                  case 88:
                  case 92:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 31:
                  case 19:
                  mat3x4(5.0, -8835.3658, _GLF_IDENTITY(-92.70, clamp(_GLF_IDENTITY(-92.70, float(mat4(_GLF_IDENTITY(-92.70, mix(float(_GLF_FUZZED(1558.5933)), float(-92.70), bool(true))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), -92.70, _GLF_IDENTITY(-92.70, (-92.70) - 0.0))), -9466.1686, 0.2, -9767.3085, 3255.7104, _GLF_IDENTITY(622.125, max(622.125, 622.125)), 7878.3834, -7016.0614, -52.63, -490.947);
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
                   return;
                  break;
                  if(_GLF_DEAD(false))
                   barrier();
                  default:
                  if(_GLF_DEAD(false))
                   barrier();
                  _GLF_IDENTITY(1, (1) | (1));
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              case 70:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              vec4 _GLF_SWITCH_0_0v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  barrier();
                 }
                return;
               }
              default:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              1;
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
         }
        else
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
           barrier();
          return;
         }
        if(_GLF_DEAD(false))
         barrier();
       }
       case 40:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true, false)))))
        barrier();
       if(all(bvec2(false, true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       default:
       if(_GLF_DEAD(false))
        barrier();
       1;
      }
     case 2:
     if(_GLF_DEAD(false))
      barrier();
     case 42:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 17:
     bvec3(false, false, false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 68:
     vec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
     default:
     if(_GLF_DEAD(false))
      barrier();
     1;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
