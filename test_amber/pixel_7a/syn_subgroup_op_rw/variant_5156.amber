#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4x2(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))[0], injectionSwitch[1])), injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-364.932)), vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false))), false || (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))))), false || (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false))))))))) || false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((false))) && true), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))))))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), (! ((false))) && true), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), clamp(float(mat4(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), float(mat4(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0)), float(mat4(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0))))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y))))))) && (false))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x < injectionSwitch.y))))))) && (false))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ((false)) || false))), true))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), vec2(_GLF_FUZZED(123.382), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))), false || (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))) && (false))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), false || (! (bool(bool(false)))))))))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))))))))), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (false))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y))), true && ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true)))) && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x < injectionSwitch.y)), true)))) && (false)))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, bool(bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x < injectionSwitch.y)), true)))) && (false))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), ! (! (true && ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))), true && (_GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), ! (! (true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-4.9, 4.1)) : mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y))))))), true && (true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))) && (false))), (false || (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-7357.4085, -0.8, 6436.2146, -2.8), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(-7357.4085, -0.8, 6436.2146, -2.8), mat2(1.0) * (mat2(-7357.4085, -0.8, 6436.2146, -2.8)))))) : mat2(mat4x2(_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(3.5, 565.936, -9420.4526, 44.97)) : _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED((mat2(300.492, -3163.0576, -9.1, -83.20) + mat2(99.53, -9.9, 6.4, 2254.3362)))))))))))) * (injectionSwitch)).y), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false)))))), true && (true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(1761.6748, 77.05, -89.57, 84.59)) : mat2(injectionSwitch, 0.0, 0.0))))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x < injectionSwitch.y), true, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x < injectionSwitch.y), true, true, false))) && true))))))) && (false)))) && true))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))) || false))), (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))) || false)))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y))))))))).y)) && (false))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), true && ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true)))) && true)) && (_GLF_IDENTITY(false, false || (false))))), true && (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true)), true && _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x, float(vec4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, 0.0, 0.0, 1.0))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y))), true)))) && true)) && (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(max(107.232, (3.3 + 2720.5189))))))) && (false)))), ! (_GLF_IDENTITY(! (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((false), bool(bool((false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x < injectionSwitch.y)) && (false), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0)) * vec2(1.0, 1.0))))).x < injectionSwitch.y)) && (false))))))), true && (! (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, (false) || false)), true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))))), ! (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, cos(0.0), abs(sin(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))).y) && true))))) && (false))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))), (injectionSwitch.x < injectionSwitch.y)) && (false)))), bool(bvec3((bool(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! ((injectionSwitch.x < injectionSwitch.y)))), ((! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (! ((! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))) || false)) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), (_GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), ! (! ((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))))) || false))), true && ((injectionSwitch.x < injectionSwitch.y))))))) && (false), (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! ((injectionSwitch.x < injectionSwitch.y)))), ((! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (! ((! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))) || false)) || false)), (! (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (! ((! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) || false))) || false))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4448.5805)), bool(false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), (_GLF_IDENTITY(true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), true && (true && ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), log(1.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), (true ? float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), log(1.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)) : _GLF_FUZZED(-7062.0127)))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), ! (! ((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))))) || false))), true && ((injectionSwitch.x < injectionSwitch.y))))))) && (false)) || false))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, true, true))))) && (false)))), ! (! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, true, true))))) && (false)))), (true && (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat2(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 0.0, 0.0)))) < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), (true ? vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))) : _GLF_FUZZED(vec2(5.6, 91.45))))).x < injectionSwitch.y, true, true))))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false))))) || false))))))))), bool(bool(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8938.8063)), bool(false)))) / 1.0) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0)))).y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))), ((! (! ((injectionSwitch.x < injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (! ((! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))) || false)) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), (_GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), ! (! ((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))))) || false))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), (_GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-42.99)), bool(false))), injectionSwitch.y)), injectionSwitch.y))) - 0.0)))), ! (! ((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))))) || false))))), true && ((injectionSwitch.x < injectionSwitch.y))))))) && (false))), true && (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 1.0, 1.0))).x < injectionSwitch.y, true, true))))) && _GLF_IDENTITY((false), ! (! ((false)))))))))))), false || (! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! ((injectionSwitch.x < injectionSwitch.y)))), ((! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), ((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))) && true))) || false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x < injectionSwitch.y))), false, false)))))))), (_GLF_IDENTITY(! ((! (! ((injectionSwitch.x < injectionSwitch.y))))), (! ((! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))) || false)) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false)))), _GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), true && _GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), (_GLF_IDENTITY((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))), ! (! ((true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))))) || false))), true && ((injectionSwitch.x < injectionSwitch.y))))))) && (false))), true && (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y, true, true))))) && (false))))))))))))))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), true, false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), true, false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(73733u, 90588u, 8919u, 17714u).q) : _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), _GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) << uvec2(0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) + (1u ^ 1u)), _GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), 0.0 + ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))) ? injectionSwitch.x : _GLF_FUZZED(76.37))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x)), injectionSwitch.x)), float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0)))) / 1.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))), 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, _GLF_IDENTITY(-8423.4925, min(-8423.4925, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)) * (0.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(bool(true), (bool(true)) && _GLF_IDENTITY(true, (true) || false))))))))), _GLF_IDENTITY(0.0, cos(abs(0.0)) * (0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), (false ? _GLF_FUZZED((-656.002 / mat2x3(-639.195, 425.338, 516.812, -8607.1995, 7.4, -6.0))) : mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)), injectionSwitch.x))), mix(float(max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(3.3)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)))), 0.0 + ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(76.37, (76.37) / 1.0))))), 0.0 + ((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37))))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.5)), float(0.0), bool(true))), 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), (_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0)))) / 1.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b), (true ? _GLF_FUZZED(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, _GLF_IDENTITY(-8423.4925, float(vec4(-8423.4925, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(-1.0))), 1.0)))), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b) : _GLF_FUZZED(sign(2.8))))), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0))), bool(true)))))))), _GLF_IDENTITY(0.0, cos(abs(0.0)) * (0.0)), 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((-656.002 / mat2x3(-639.195, 425.338, 516.812, -8607.1995, 7.4, -6.0))) : mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, log(1.0)))))))), 0.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), 0.0 + ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-5929.5951, -2.3), vec2(-554.981, -359.472), 83.40)) : injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (sqrt(0.0))), (_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0)))) / 1.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec3(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), abs(1.0) * (float(vec3(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))), bool(true)))))))), _GLF_IDENTITY(0.0, cos(abs(0.0)) * (0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 1.0 * (0.0)))))), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((-656.002 / mat2x3(-639.195, 425.338, 516.812, -8607.1995, 7.4, _GLF_IDENTITY(-6.0, (true ? -6.0 : _GLF_FUZZED(asin(1639.4116))))))) : mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(76.37), max(_GLF_FUZZED(76.37), _GLF_FUZZED(76.37)))), 0.0 + ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), sqrt(1.0)), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), sqrt(1.0)), vec2(0.0, 1.0)))))) : _GLF_FUZZED(76.37))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(-7.3)), float(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), bool(true)))), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0)))) / 1.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), mix(vec4(_GLF_FUZZED(9950.6791), (vec4(2.5, 981.275, 32.62, -8423.4925))[1], _GLF_FUZZED(9.5), _GLF_FUZZED(9.1)), vec4((vec4(2.5, 981.275, 32.62, -8423.4925))[0], _GLF_FUZZED(752.411), (vec4(2.5, 981.275, 32.62, -8423.4925))[2], (vec4(2.5, 981.275, 32.62, -8423.4925))[3]), bvec4(true, false, true, true))), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), bool(true))))), max(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), mix(vec4(_GLF_FUZZED(9950.6791), (vec4(2.5, 981.275, 32.62, -8423.4925))[1], _GLF_FUZZED(9.5), _GLF_FUZZED(9.1)), vec4((vec4(2.5, 981.275, 32.62, -8423.4925))[0], _GLF_FUZZED(752.411), (vec4(2.5, 981.275, 32.62, -8423.4925))[2], (vec4(2.5, 981.275, 32.62, -8423.4925))[3]), bvec4(true, false, true, true))), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), bool(true))))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), mix(vec4(_GLF_FUZZED(9950.6791), (vec4(2.5, 981.275, 32.62, -8423.4925))[1], _GLF_FUZZED(9.5), _GLF_FUZZED(9.1)), vec4((vec4(2.5, 981.275, 32.62, -8423.4925))[0], _GLF_FUZZED(752.411), (vec4(2.5, 981.275, 32.62, -8423.4925))[2], (vec4(2.5, 981.275, 32.62, -8423.4925))[3]), bvec4(true, false, true, true))), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), bool(true)))))))))), _GLF_IDENTITY(0.0, cos(abs(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), min(vec4(0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? length(vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(-382.224))), 0.0, 1.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0))))), 0.0, 0.0)))) * (0.0)), 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((-656.002 / mat2x3(-639.195, 425.338, 516.812, -8607.1995, 7.4, -6.0))) : mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))), 0.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), 0.0 + ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0)))) / 1.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, clamp(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)))))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(4.8) : float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(true)))))))), _GLF_IDENTITY(0.0, cos(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), abs(0.0)))) * (0.0)), 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((-656.002 / mat2x3(-639.195, 425.338, 516.812, -8607.1995, 7.4, -6.0))) : mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), 0.0 + ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0)))) / 1.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, clamp(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)))))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(4.8) : float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(true)))))))), _GLF_IDENTITY(0.0, cos(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), abs(0.0)))) * (0.0)), 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((-656.002 / mat2x3(-639.195, 425.338, 516.812, -8607.1995, 7.4, -6.0))) : mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(76.37)), 0.0 + ((_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(76.37))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(mat2(sqrt(0.0), 1.0, 1.0, 0.0)))) / 1.0), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, clamp(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)))))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(4.8) : float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(true)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, clamp(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)))))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(4.8) : float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, clamp(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)))))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(4.8) : float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, clamp(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, min(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b, _GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), max(_GLF_IDENTITY(vec4(2.5, 981.275, 32.62, -8423.4925), min(vec4(2.5, 981.275, 32.62, -8423.4925), vec4(2.5, 981.275, 32.62, -8423.4925))), vec4(2.5, 981.275, 32.62, -8423.4925))).b)))))), float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(4.8) : float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(true)))))))))), _GLF_IDENTITY(0.0, cos(_GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), abs(0.0)))) * (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((-656.002 / mat2x3(-639.195, 425.338, 516.812, -8607.1995, 7.4, -6.0))) : mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (false ? _GLF_FUZZED(atan(-9674.8458)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) * 1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))), true, false)), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), bool(bool(true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) || false)) && true)), ! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (((false)) || false) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false))))))))))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) || false)) && true)), ! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (((false)) || false) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false))))))))))))))))))), ((! (_GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) || false)) && true)), ! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (((false)) || false) && true))) && true)), ! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), ! (! (bool(bvec4(! (false), false, true, false)))))))))))))))))))) && true)) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, (64) * 1), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-96929, 0 | (-96929))) : 1), ((false ? _GLF_FUZZED(_GLF_IDENTITY(-96929, min(_GLF_IDENTITY(-96929, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)) & -76517, (0 & -76517) - 0)) | _GLF_IDENTITY((-96929), (0 | 0) ^ ((-96929)))), _GLF_IDENTITY(-96929, 0 ^ (_GLF_IDENTITY(-96929, ~ (~ (_GLF_IDENTITY(-96929, (-96929) | (-96929)))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) << 0), _GLF_IDENTITY(1, (1) << 0)))))))) ^ _GLF_IDENTITY(0, (0) | 0)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)), injectionSwitch)))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(57.48) : injectionSwitch.y)), sin(0.0), 1.0, 1.0, 1.0, 1.0)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y))))) || false))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true))))))) || false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true))))))) && (_GLF_DEAD(false)))) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), ~ (~ _GLF_IDENTITY((~ (~ (subgroup_size))), 0u | ((~ (~ (subgroup_size)))))))), clamp(subgroup_size, subgroup_size, subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true))))) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || _GLF_IDENTITY(false, (false) && true)))))), true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(187.472)) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0 * (injectionSwitch.x)), 1.0))))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, 0u ^ (read))) | 0u), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 1), max(ivec4(64, 1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) - 0))), 1), ivec4(64, 1, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(11592)))))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(11592)))))) ^ 0)) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(11592)))))) ^ 0))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(tanh(55.39)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(tanh(55.39)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false, false, true)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(tanh(55.39)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false, false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), float(_GLF_FUZZED(-3.0)), bool(false))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)))) + (0.0)), 0.0, 0.0, cos(sqrt(0.0)), 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-33.76) : float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), float(_GLF_FUZZED(-3.0)), bool(false))), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, cos(sqrt(0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0))))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9546.0941) : 1.0)), 1.0, 0.0, 1.0))))))), 1.0, sin(0.0), 0.0, 1.0, 1.0, length(0.0), 0.0, 1.0))))), 0.0)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), abs(1.0), sin(0.0)), (false ? _GLF_FUZZED(mat3(-98.07, -56.15, 8.9, 7.5, 31.74, -23.60, 547.943, 8205.6578, 56.75)) : mat3(injectionSwitch.y, 0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), abs(1.0), sin(0.0))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
