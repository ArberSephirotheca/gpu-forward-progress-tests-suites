#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uvec4 GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id;
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y = subgroup_size;
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.y = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x = subgroup_local_id;
 GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.y;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w;
 GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.x = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_4_1_1_13readsubgroup_size.y + ((GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w + 1) % GLF_merged2_0_1_4_1_1_13readsubgroup_size.y);
 GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z = next_virtual_gid;
 uint read = atomicLoad(buf[GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.x], 4, 64, 0);
 GLF_merged2_0_1_4_1_1_13readsubgroup_size.x = read;
 atomicStore(buf[GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z], uint(1), 4, 64, 4);
 if(GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w + 1 < GLF_merged2_0_1_4_1_1_13readsubgroup_size.y)
  {
   atomicStore(checker[GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.x], GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   switch(_GLF_SWITCH(((0 | 0) ^ 0)))
    {
     case 56:
     for(vec4 _GLF_SWITCH_0_0v; (false && true); atomicCompSwap(workgroup_base, uvec4(73847u, 183826u, 90332u, 58769u).r, GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z))
      {
       -1.7;
       ;
       mat2x3(621.462, -8041.8465, 949.006, 4.1, -53.96, -617.416);
       if(true)
        {
         int _GLF_SWITCH_0_1v;
         while(any(bvec2(false, true)))
          {
           uvec4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[76];
           ivec4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
           _GLF_SWITCH_0_2v;
           mat4 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
           true;
           injectionSwitch;
          }
         mat2x4(19.36, -1.3, 2484.6183, 4.1, -5.6, -725.550, -583.291, 48.93);
         mat3(-8758.5613, 16.12, -6.5, -70.04, -767.609, -5.5, 923.666, 2905.6219, -69.16);
         bvec3 _GLF_SWITCH_0_9v[29], _GLF_SWITCH_0_10v;
         if(any(bvec4(true, true, false, true)))
          {
           degrees(-874.298);
           (GLF_merged2_0_1_4_1_1_13readsubgroup_size.x > GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z);
           GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.z;
           (uvec2(66697u, 101078u).gr | workgroup_size);
           bool _GLF_SWITCH_0_11v[36], _GLF_SWITCH_0_12v;
           vec4 _GLF_SWITCH_0_13v[54], _GLF_SWITCH_0_14v;
          }
         if(true)
          {
           vec3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
          }
         else
          {
           GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy;
           bvec3(false, true, true);
           equal(clamp(vec3(-6.7, -618.427, 6.2), vec3(-5.3, 64.73, -624.513), vec3(-1821.4455, -8863.1381, -6062.3502)), vec3(-9.0, 469.629, 2.9));
           mat3x2 _GLF_SWITCH_0_17v;
           ((subgroup_id + workgroup_id) | virtual_gid);
           ;
           mat2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
           bvec3 _GLF_SWITCH_0_21v[70], _GLF_SWITCH_0_22v;
          }
        }
       while((mat3x2(-29.16) != mat3x2(-5.4, -6.0, 37.35, 8.4, -6.1, -207.152)))
        {
         if((uvec3(16917u, 53379u, 180483u) != uvec3(workgroup_base, uvec2(46316u, 62910u))))
          {
          }
         else
          {
           uvec4 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
           GLF_merged2_0_1_4_1_1_13readsubgroup_size.x;
           mat3x2 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
          }
         while(((mat3x2(5430.1893, 2.7, 38.89, -6030.9576, 3.6, 4.7) * outerProduct(vec3(4.6, 805.729, -140.435), _GLF_SWITCH_0_0v)) != mat4x2(419.747, -5.6, 7797.0040, 1.3, 8.9, 190.850, -9548.0574, 1.2)))
          {
          }
        }
       ivec3 _GLF_SWITCH_0_27v[10];
       for(       uvec3(96427u, 156002u, 33278u);
 (GLF_merged2_0_1_4_1_1_13readsubgroup_size.x < GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.w); vec4(-1470.7408, 522.096, -4.3, 21.63))
        {
         ;
         mat3 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
         for(         (inverse(mat4(7825.7945, -5.5, 931.919, -291.619, -9029.7785, -8.1, 6688.1257, -0.6, 6752.6022, -9534.1749, -0.3, 42.99, 4.3, 0.5, -6.7, 8.7)) * mat4(-5081.0898, -9.3, -342.654, -202.608, 44.36, 8943.0312, -7.8, 520.950, -2903.0580, -631.277, -1.0, 19.67, 1.7, 681.805, -1.8, 8794.1639));
 false; (+ mat2(814.721, 22.50, 5127.7771, 2.6)))
          {
           uint _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v[76], _GLF_SWITCH_0_33v;
           (- inverse(mat3(-3096.6189, -195.384, -9.6, -74.44, 98.51, 1.2, -595.475, -6822.6628, 6.1)));
           mat4x3 _GLF_SWITCH_0_34v;
           mat2(-24.23, 6.7, -249.979, -4002.6059);
           (determinant(mat4(-29.10, 9.9, 12.22, -49.46, -42.14, -3.4, -80.11, -15.41, -3163.5916, -883.176, -4.3, -9.7, 9.8, 3.2, 7631.3603, -95.10)));
           bvec2 _GLF_SWITCH_0_35v[9];
           bvec3(false, false, true);
          }
        }
       mat4x2(-8673.4553, -58.03, 5.4, -333.205, -3.1, 3.6, -793.524, 2.0);
       (7881.3459 - mat4x3(252.277, -68.51, -3.5, -8654.3866, -8.8, 42.62, 36.70, 3.9, 782.551, -471.261, 20.31, 7.3));
      }
     case 0:
     case 37:
     atomicStore(buf[GLF_merged3_0_2_48_2_1_16_3_1_17GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidsubgroup_local_id.xy.x], GLF_merged2_0_1_4_1_1_13readsubgroup_size.x, 4, 64, 4);
     case 78:
     case 31:
     subgroupAll(true);
     break;
     case 46:
     (uvec3(136552u, 72166u, 188222u) * workgroup_id);
     default:
     1;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
