#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(false, ! (! (false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))) || false, false, false)), (bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false, false, false))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(false)))))) || false, false, false)), (bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false, false, false))) || false)), false || (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))) && true)) || false, false, false)), (bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false, false, false))) || false))))) || false))), ! (! (bool(bvec3((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false, false, false))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, false))))), true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))))))), ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec3(bool(bvec3(true, true, false)), false, false)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec3(bool(bvec3(true, true, false)), false, false))))))), false))), (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec3(bool(bvec3(true, true, false)), false, false)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), true, false)), bool(bvec3(bool(bvec3(true, true, false)), false, false))))))), false))), (true) && true))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (_GLF_IDENTITY(true, (true) && true))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), true)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))), false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))), ((_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))), false || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))), ((_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))), false || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))))))))))), true, true, true)))) && true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))), true && ((_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))))), (false) && true))))), ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), bool(bool(true && (_GLF_IDENTITY(true, (true) && true)))))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), false || ((true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && (_GLF_IDENTITY(false, (false) && true))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (true) && true)), true && (true && (_GLF_IDENTITY(true, (true) && true))))) && true)))), bool(bool(true && (_GLF_IDENTITY(true, (true) && true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), false || ((true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && (_GLF_IDENTITY(false, (false) && true)))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false))))))))) && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))), false || (! (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, false || (false)), true, false)), bool(bvec4(bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (false)))), true, _GLF_IDENTITY(true, true && (true)), true)))))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), false || (bool(bvec4(true, false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))), false || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || ((true)))), true)))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, _GLF_IDENTITY(true, true && (true)), true)))))))))) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)), ! (! (bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))))))), false || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, _GLF_IDENTITY(true, true && (true)), true))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)), ! (! _GLF_IDENTITY((bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))), ((bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))) || false))))), _GLF_IDENTITY(false, (false) || false) || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, _GLF_IDENTITY(true, true && (true)), true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)), ! (! _GLF_IDENTITY((bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))), ((bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))) || false))))), _GLF_IDENTITY(false, (false) || false) || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, _GLF_IDENTITY(true, true && (true)), true))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)), ! (! _GLF_IDENTITY((bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true))), ((bool(bvec4(bool(bvec4(true, false, true, false)), true, true, true)))) || false))))), _GLF_IDENTITY(false, (false) || false) || (! (_GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, _GLF_IDENTITY(true, true && (true)), true)))))))))))) && true)))) && true))))))))))) && (_GLF_IDENTITY(false, (false) && true))))), ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), false || ((! (_GLF_IDENTITY(true, (true) && true))))))), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))) && true)), bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))) && true)), true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))))) || false), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4((true) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((true) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true)) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true)) && true)))))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, (true) && true))) && true, false || ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, true, false))) && true))) || false))) && (_GLF_IDENTITY(true, (true) && true))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), true)))) || false)) && (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), false || ((! (_GLF_IDENTITY(true, (true) && true))))))), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))) && true)), bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))) && true)), true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))))) || false), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4((true) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((true) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true)) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true)) && true)))))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, (true) && true))) && true, false || ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, true, false))) && true))) || false))) && (_GLF_IDENTITY(true, (true) && true))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), true)))) || false)) && (_GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), false || ((! (_GLF_IDENTITY(true, (true) && true))))))), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))) && true)), bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), bool(bool((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))) && true)), true, false, true))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))))) || false), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4((true) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((true) && true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true)) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)) && true)))))) && true)) && true)))))))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false))) && (_GLF_IDENTITY(true, (true) && true))) && true, false || ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, true, false))) && true))) || false))) && (_GLF_IDENTITY(true, (true) && true))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), true)))) || false)) && (_GLF_IDENTITY(false, (false) && true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 1.7))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.6)))), bool(true))), (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 1.7))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.6)))), bool(true))), (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 1.7))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.6)))), bool(true))), (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(99.08))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 1.7))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.6)))), bool(true))), (true ? injectionSwitch.y : _GLF_FUZZED(99.08)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true)))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(844.732)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, sqrt(0.0), 1.0)), min(float(vec3(injectionSwitch.y, sqrt(0.0), 1.0)), float(vec3(injectionSwitch.y, sqrt(0.0), 1.0)))))), bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0 * (float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(62.58))) < injectionSwitch.y)) && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(9254.4295, clamp(_GLF_IDENTITY(9254.4295, clamp(9254.4295, 9254.4295, 9254.4295)), 9254.4295, 9254.4295)), max(_GLF_IDENTITY(9254.4295, clamp(_GLF_IDENTITY(9254.4295, clamp(9254.4295, 9254.4295, 9254.4295)), 9254.4295, 9254.4295)), _GLF_IDENTITY(_GLF_IDENTITY(9254.4295, clamp(_GLF_IDENTITY(9254.4295, clamp(9254.4295, 9254.4295, 9254.4295)), 9254.4295, 9254.4295)), (true ? _GLF_IDENTITY(9254.4295, clamp(_GLF_IDENTITY(9254.4295, clamp(9254.4295, 9254.4295, 9254.4295)), 9254.4295, 9254.4295)) : _GLF_FUZZED(-0.6))))), -2.7)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(9254.4295, (9254.4295) / 1.0), -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(_GLF_IDENTITY(vec2(9254.4295, -2.7), clamp(vec2(9254.4295, -2.7), vec2(9254.4295, -2.7), vec2(9254.4295, -2.7)))))[1]), vec2((_GLF_FUZZED(vec2(9254.4295, -2.7)))[0], _GLF_FUZZED(73.67)), bvec2(true, false))), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(9254.4295, (9254.4295) / 1.0), -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(_GLF_IDENTITY(vec2(9254.4295, -2.7), clamp(vec2(9254.4295, -2.7), vec2(9254.4295, -2.7), vec2(9254.4295, -2.7)))))[1]), vec2((_GLF_FUZZED(vec2(9254.4295, -2.7)))[0], _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(9254.4295, (9254.4295) / 1.0), -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(_GLF_IDENTITY(vec2(9254.4295, -2.7), clamp(vec2(9254.4295, -2.7), vec2(9254.4295, -2.7), vec2(9254.4295, -2.7)))))[1]), vec2((_GLF_FUZZED(vec2(9254.4295, -2.7)))[0], _GLF_FUZZED(73.67)), bvec2(true, false))))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), min(_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), (_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), _GLF_IDENTITY((max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))), max((max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))), _GLF_IDENTITY((max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))), ((max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))))) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))))))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-72.54), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(-72.54), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0), (mat4x2(_GLF_FUZZED(-72.54), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_FUZZED(-4661.8942)), vec2((_GLF_IDENTITY(true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)) && (true)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(9254.4295, clamp(_GLF_IDENTITY(9254.4295, clamp(9254.4295, 9254.4295, 9254.4295)), 9254.4295, 9254.4295)), -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(9254.4295, (9254.4295) / 1.0), -2.7)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-3173.4047, mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(-3173.4047, (-3173.4047) / 1.0)), bool(true)))), (_GLF_FUZZED(_GLF_IDENTITY(vec2(9254.4295, -2.7), _GLF_IDENTITY(clamp(vec2(9254.4295, -2.7), vec2(9254.4295, -2.7), vec2(9254.4295, -2.7)), (clamp(vec2(9254.4295, -2.7), vec2(9254.4295, -2.7), vec2(9254.4295, -2.7))) / vec2(1.0, 1.0)))))[1]), vec2((_GLF_FUZZED(vec2(9254.4295, -2.7)))[0], _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), (_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), (max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0))), (_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), (_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), (max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))) - vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)))) * mat2(1.0)), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))))))))[0], (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(_GLF_IDENTITY(9254.4295, clamp(_GLF_IDENTITY(9254.4295, clamp(9254.4295, 9254.4295, 9254.4295)), 9254.4295, 9254.4295)), -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(9254.4295, (9254.4295) / 1.0), -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(_GLF_IDENTITY(vec2(9254.4295, -2.7), clamp(vec2(9254.4295, -2.7), vec2(9254.4295, -2.7), vec2(9254.4295, -2.7)))))[1]), vec2((_GLF_FUZZED(vec2(9254.4295, -2.7)))[0], _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), min(_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), (_GLF_IDENTITY(max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))), (max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))) - vec2(0.0, 0.0))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.6) : 0.0))))), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7)))))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0) * (_GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), _GLF_IDENTITY((_GLF_FUZZED(vec2(9254.4295, -2.7))), min((_GLF_FUZZED(vec2(9254.4295, -2.7))), (_GLF_FUZZED(vec2(9254.4295, -2.7)))))[1]), vec2(_GLF_IDENTITY((_GLF_FUZZED(vec2(9254.4295, -2.7)))[_GLF_IDENTITY(0, (0) << 0)], 1.0 * ((_GLF_FUZZED(vec2(9254.4295, _GLF_IDENTITY(-2.7, mix(float(_GLF_FUZZED((-8.7 / 8.4))), float(-2.7), bool(true))))))[_GLF_IDENTITY(0, int(int(0)))])), _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))))))), vec2(mat4x2(_GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(vec2(9254.4295, -2.7)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), (_GLF_FUZZED(vec2(9254.4295, -2.7))) * mat2(1.0)))[_GLF_IDENTITY(0, (0) << 0)], 1.0 * ((_GLF_FUZZED(vec2(9254.4295, _GLF_IDENTITY(-2.7, mix(float(_GLF_FUZZED((-8.7 / 8.4))), float(-2.7), bool(true))))))[0])), _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))))))), max(_GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(vec2(9254.4295, -2.7)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), (_GLF_FUZZED(vec2(9254.4295, -2.7))) * mat2(1.0)))[_GLF_IDENTITY(0, (0) << 0)], 1.0 * ((_GLF_FUZZED(vec2(9254.4295, _GLF_IDENTITY(-2.7, mix(float(_GLF_FUZZED((-8.7 / 8.4))), float(-2.7), bool(true))))))[0])), _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))))))), mix(vec2(_GLF_FUZZED((75.41 * 4.8)), _GLF_FUZZED(-764.394)), vec2(((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(vec2(9254.4295, -2.7)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), (_GLF_FUZZED(vec2(9254.4295, -2.7))) * mat2(1.0)))[_GLF_IDENTITY(0, (0) << 0)], 1.0 * ((_GLF_FUZZED(vec2(9254.4295, _GLF_IDENTITY(-2.7, mix(float(_GLF_FUZZED((-8.7 / 8.4))), float(-2.7), bool(true))))))[0])), _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))))))))[0], ((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(vec2(9254.4295, -2.7)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), (_GLF_FUZZED(vec2(9254.4295, -2.7))) * mat2(1.0)))[_GLF_IDENTITY(0, (0) << 0)], 1.0 * ((_GLF_FUZZED(vec2(9254.4295, _GLF_IDENTITY(-2.7, mix(float(_GLF_FUZZED((-8.7 / 8.4))), float(-2.7), bool(true))))))[0])), _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))))))))[1]), bvec2(true, true))), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), clamp(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), mix(vec2(_GLF_FUZZED(-3173.4047), (_GLF_FUZZED(vec2(9254.4295, -2.7)))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), (_GLF_FUZZED(vec2(9254.4295, -2.7))) * mat2(1.0)))[_GLF_IDENTITY(0, (0) << 0)], 1.0 * ((_GLF_FUZZED(vec2(9254.4295, _GLF_IDENTITY(-2.7, mix(float(_GLF_FUZZED((-8.7 / 8.4))), float(-2.7), bool(true))))))[0])), _GLF_FUZZED(73.67)), bvec2(true, false))), _GLF_IDENTITY(_GLF_FUZZED(vec2(9254.4295, -2.7)), max(_GLF_FUZZED(vec2(9254.4295, -2.7)), _GLF_FUZZED(vec2(9254.4295, -2.7))))))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), dot(vec4(abs(0.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0)))))), 1.0)))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), _GLF_IDENTITY(false, true && (false)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), true && (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false, false), false)))))))))), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))), false)))))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))))) && true), true, false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))))) && true), true, false, true)))))), ! (! (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY((false), false || ((false)))) || false))) && true)) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))))) && true), true, false, true)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), ((0)) | (-34215 & 0)) : _GLF_FUZZED(11773))), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))) ? _GLF_IDENTITY((0), ((0)) | (-34215 & 0)) : _GLF_FUZZED(11773))), (~ (0)) ^ 0))) >> 0))], injectionSwitch[1])).y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), ((0)) | (-34215 & 0)) : _GLF_FUZZED(11773))), (~ (0)) ^ 0)), ((_GLF_IDENTITY(~ _GLF_IDENTITY((0), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))) ? _GLF_IDENTITY((0), ((0)) | (-34215 & 0)) : _GLF_FUZZED(11773))), (~ (0)) ^ 0))) >> 0))], injectionSwitch[1])).y))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)), bool(bvec2(! (_GLF_DEAD(false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))) || false, false || ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     return;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) | (workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(false, false))) || false))))), bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * ((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(6u), uint(6u)), (((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(6u), uint(6u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) + 0u)))) | ((subgroup_local_id))) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(1u * (1u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u) * (1u), 0u ^ (1u * (1u)))) << 0u)), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) || false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((false) || false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)))))))), true, true, true))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))) || false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, true, false), false)), true))), false)))))) || false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) || false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((false) || false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)))))))), true, true, true))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))) || false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, true, false), false)), true))), false)))))) || false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) || false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(true))), bool(bvec3((bool(bool(true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (bool(bool(true))))))))))), false), false)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec3(! (bool(bool(true))), true, true))))))))))), false), bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec3(! (bool(bool(true))), true, true))))))))))), false), true))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec3(! (bool(bool(true))), true, true))))))))))), false), bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec3(! (bool(bool(true))), true, true))))))))))), false), true))), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec3(! (bool(bool(true))), true, true))))))))))), false), bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! _GLF_IDENTITY((bool(bool(true))), ((bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec3(! (bool(bool(true))), true, true))))))))))), false), true))), false)), false)), false)))), true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((false) || false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, (false) || false))), false, true), bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(false, (false) || false))), false, true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true)))))), ! (! (! (_GLF_IDENTITY(! (bool(bool(true))), true && (! (bool(bool(true))))))))))), false), false)), true))))))))))), true, true, true))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (! ((false)))) || false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (false)) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false) || false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false) || false, true, false), false)), true))), false)))))) || false)))))), (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))))) % subgroup_size), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))), subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (subgroup_local_id), ~ (~ (_GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) << 0u)))))) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, clamp((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u))) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u + (subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(1, 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))))))), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))), ~ (~ ((~ (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))))))))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u))) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u + (subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(1, 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))), ~ (~ ((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))))))))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u))) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u + (subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(1, 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))), ~ (~ ((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))))))))) : _GLF_FUZZED(subgroup_local_id)))), (max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u))) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u + (subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(1, 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))), ~ (~ ((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))))))))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) | ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u))) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u + (subgroup_local_id))) >> _GLF_IDENTITY(0u, (0u) | (0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), max(1, 1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))), ~ (~ ((~ (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) << 0)) % subgroup_size))))))))) : _GLF_FUZZED(subgroup_local_id))))) | 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), max(1.0 * (injectionSwitch.x), 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)))))))))), _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(bvec4(bvec3(! (! (false)), true, false), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) && true)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(sqrt(vec2(0.0, 0.0)))).y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat4x3(float(injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x3(float(injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(2.9)), bool(false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch), clamp(true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(-9652.2554), _GLF_FUZZED(7971.9620)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))) << 0u))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) + 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6304.1975), _GLF_FUZZED(8.4)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), bvec2(true, true))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
