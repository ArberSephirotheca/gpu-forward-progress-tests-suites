#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((6.5 * -3109.7869))), bool(false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(164077u, 71855u, 182047u)) : _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))))) >> (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-451.368)), _GLF_IDENTITY((float(_GLF_FUZZED(-451.368))), mix(float((float(_GLF_FUZZED(-451.368)))), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * 1.0), bool(false))))), false)))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false)))), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))))), false))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))), false)))))))) || false, true && ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))), false)))))))))))))) || false)))) || false)) || false, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))), false)))))), true, true, true)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(vec2(-2.8, _GLF_IDENTITY(697.288, (false ? _GLF_FUZZED(-8.8) : _GLF_IDENTITY(697.288, mix(float(697.288), float(_GLF_FUZZED(-4.0)), bool(false)))))), -7.4)))))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-451.368)), bool(false))))), _GLF_IDENTITY(false, false || (false)))))))))) || false)) || false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u)))), 1u))) | 0u, max(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), uint(uvec3((0u), 0u, 1u))))), 1u))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u))) | 0u, max(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))), (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u)), 0u)), ~ (~ (0u))), 1u)))) / 1u) | 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u))) | 0u, max(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))), (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u)), 0u)), ~ (~ (0u))), 1u)))) / 1u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u))) | 0u, max(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))), (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u)), 0u)), ~ (~ (0u))), 1u)))) / 1u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u))) | 0u, max(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))), (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u)), 0u)), ~ (~ (0u))), 1u)))) / 1u) | 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, max(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (0u))))), 1u))) | 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, max(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) | 0u)))))) ^ 0u) ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) << 0u), subgroup_id)))) * subgroup_size + subgroup_local_id) << 0u, uint(uvec4((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) << 0u), subgroup_id)))) * subgroup_size + subgroup_local_id) << 0u, 0u, 0u, 1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u) ^ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) : subgroup_id) | (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))) * subgroup_size + subgroup_local_id) << 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-9402.6418, 358.672, -6.6, 9233.1862, -8.9, -962.057, -2314.8096, 5920.8756)) : mat4x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u)), (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(uvec3((workgroup_base), 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3((workgroup_base), 1u, 1u), (false ? _GLF_FUZZED((num_workgroup / uvec3(174709u, 168796u, 179153u))) : uvec3((workgroup_base), 1u, 1u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_id), ((false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * 1u)))) * subgroup_size + subgroup_local_id) << _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), (0u) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))) * subgroup_size + subgroup_local_id), 0u | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)))) * subgroup_size + subgroup_local_id))) << 0u) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id)))) >> 0u))) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u)), min(_GLF_IDENTITY(~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u)), 0u | (~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u)))), _GLF_IDENTITY(~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u)), ~ (~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size + subgroup_local_id) << 0u)))))))) - 0u, ((~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(0u | 0u, 0u + (0u | 0u))) ^ (workgroup_base)), (_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)))), (~ ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))))) | (~ ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base))))))) - 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id) << 0u) | ((_GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)) * subgroup_size)) + subgroup_local_id) << 0u))) - 0u) ^ 0u))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false, false)))))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.8)), float(injectionSwitch.y), bool(true)))) * 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(3.5)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, abs(0.0), cos(_GLF_ZERO(0.0, injectionSwitch.x)), log(1.0), cos(0.0), 0.0, 0.0)))))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)))), bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)))), bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)))))))))))), false, false))))))))))), false), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false, false))), true, false)))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false)))))))), false), _GLF_IDENTITY(false, bool(bvec2(false, false))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(vec2(77.81, 0.4))))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && ((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(46.17))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))))], (true ? buf[_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid))) ^ 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid))) ^ 0u, min((_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid))) ^ 0u, (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid))) ^ 0u)))))), clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))))] : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))), 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, ~ (~ (0)))), (0 | 0) + (max(0, 0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(29876))), (1) | (1))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))) | (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, 0 + (4))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-21471) : _GLF_IDENTITY(4, int(ivec4(4, 0, 1, 0))))))), min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))))))) | (4)) >> 0)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false)))))))))) && true))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, true, true)))))) && (! (! (subgroup_local_id + 1 < subgroup_size))))), ((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) && (! (! (subgroup_local_id + 1 < subgroup_size)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) << 0) < subgroup_size), ! (! (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, max((1) ^ 0, (1) ^ 0))) < subgroup_size)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size)))), false), true)))))))))))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size))))), ((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0) < subgroup_size), ! (! (! (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), false), true)))))))))))) && true), bool(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size))))), ((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0) < subgroup_size), ! (! (! (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), false), true)))))))))))) && true), true)))), bool(bool(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size))))), ((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size)))))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0) < subgroup_size), ! (! (! (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), false), true)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(! (! (! (subgroup_local_id + 1 < subgroup_size))), true && (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), (_GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), bool(bvec4((! (subgroup_local_id + 1 < subgroup_size)), true, true, true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size)))))), _GLF_IDENTITY(bool(bvec4(((_GLF_IDENTITY(! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), (_GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), bool(bvec4((! (subgroup_local_id + 1 < subgroup_size)), true, true, true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size)))))), false, true, false)), (bool(bvec4(((_GLF_IDENTITY(! _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), (_GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), bool(bvec4((! (subgroup_local_id + 1 < subgroup_size)), true, true, true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (subgroup_local_id + 1 < subgroup_size)))))), false, true, false))) || false)) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0) < subgroup_size), ! (! (! (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) < subgroup_size)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size), ! (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size))))))), false), true))))))))))))))) && true)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    return;
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-69135) : _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-34163) : 4)))), _GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(70913), clamp(_GLF_FUZZED(70913), _GLF_FUZZED(70913), _GLF_FUZZED(70913))))), 4), ~ (~ (clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-69135) : _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-34163) : 4)), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-34163) : 4), max((false ? _GLF_FUZZED(-34163) : 4), (false ? _GLF_FUZZED(-34163) : 4)))) : _GLF_FUZZED(-91143))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false))) ? 4 : _GLF_FUZZED(70913), (true ? _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false))) ? 4 : _GLF_FUZZED(70913) : _GLF_FUZZED(90485))))), 4))))), (true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(29552), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(43958) : 1)) * (_GLF_FUZZED(29552))), clamp(_GLF_IDENTITY(_GLF_FUZZED(29552), 1 * (_GLF_FUZZED(29552))), _GLF_IDENTITY(_GLF_FUZZED(29552), 1 * (_GLF_FUZZED(29552))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(29552), 1 * (_GLF_FUZZED(29552))), max(_GLF_IDENTITY(_GLF_FUZZED(29552), 1 * (_GLF_FUZZED(29552))), _GLF_IDENTITY(_GLF_FUZZED(29552), 1 * (_GLF_FUZZED(29552))))))))), (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))), 4)) : _GLF_FUZZED(29552))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)) : _GLF_FUZZED(29552))), (_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, (1 ^ 1) << 0), 1 ^ 1)))), (ivec2(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)) : _GLF_FUZZED(29552))), _GLF_IDENTITY((1 ^ 1), max((1 ^ 1), (1 ^ 1))))) >> _GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) + ivec2(0, 0))))))), (4) | (4))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), min(4, 4)), _GLF_IDENTITY(4, ~ (~ (4))))))) : _GLF_FUZZED(29552)), int(ivec2(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), min(4, 4)), _GLF_IDENTITY(4, ~ (~ (4))))))) : _GLF_FUZZED(29552)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), min(4, 4)), _GLF_IDENTITY(4, ~ (~ (4))))))) : _GLF_FUZZED(29552))) << 0), 1)))), (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - ((1 ^ 1) | 0))) - 0)))), (false ? _GLF_FUZZED(85404) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), min(4, 4)), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0))))))) : _GLF_FUZZED(29552))), (4) | (_GLF_IDENTITY(4, (4) - 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(0, clamp(0, 0, 0)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), 0 ^ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, (64) | 0))), 0 | (_GLF_IDENTITY(int(int(64)), ~ (~ _GLF_IDENTITY((int(int(64))), ((int(int(64)))) + 0)))))))), clamp(64, 64, 64)), _GLF_IDENTITY((64), int(ivec4(_GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY(((64)) | ((64)), max(((64)) | ((_GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(((64)) | ((64)), (((64)) | ((64))) << 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((64)) | ((64)), max(((64)) | ((_GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(((64)) | ((64)), (((64)) | ((64))) << 0))), (_GLF_IDENTITY(((64)) | ((64)), max(((64)) | ((_GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(((64)) | ((64)), (((64)) | ((64))) << 0)))) | (_GLF_IDENTITY(((64)) | ((64)), max(((64)) | ((_GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(((64)) | ((64)), (((64)) | ((64))) << 0))))) : _GLF_FUZZED(-51136)))), ((0 | 0) & _GLF_IDENTITY(88333, 0 + (88333))), 1, 0))) >> 0))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
   atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, max(4, 4)), 4), (min(_GLF_IDENTITY(4, max(4, 4)), 4)) << 0)), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))) ? 64 : _GLF_FUZZED(_GLF_IDENTITY(-89921, min(_GLF_IDENTITY(-89921, int(ivec2(-89921, 1))), -89921)))), ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))) ? 64 : _GLF_FUZZED(_GLF_IDENTITY(-89921, min(_GLF_IDENTITY(-89921, int(ivec2(-89921, 1))), -89921))))) << 0)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
