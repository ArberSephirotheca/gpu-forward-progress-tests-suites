#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1))))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], max(gl_WorkGroupID[1], gl_WorkGroupID[1])), gl_WorkGroupID[2]))) | (gl_WorkGroupID)), (gl_WorkGroupID) | (gl_WorkGroupID)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(70563u, 145780u, 148213u)) : uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))))).x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), true)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))) && true))), true, true))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))) && true))), true, true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))) && true))), true, true))))), true))), false))), false))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), true))), true)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), true, _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), true, true)))))))), false))))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), true)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))), true, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (false) && true))) && true))), true, true)))), false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (false) && true))) && true))), true, true)))), false)))), false)))))))))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, _GLF_IDENTITY(true, (true) && true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true)), _GLF_IDENTITY(true, bool(bvec2(true, true))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true)), _GLF_IDENTITY(true, bool(bvec2(true, true))), true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true)), _GLF_IDENTITY(true, bool(bvec2(true, true))), true)), true))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) && true)), true, true)))), true)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false))), _GLF_IDENTITY(false, ! (! (false)))))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), true, true), true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), true, true))))), false))))))), true)), true)), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))), true, true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))) && true)), true, true)), true)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), true))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false))), false)), false)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), false))), true))))))), false))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2((_GLF_IDENTITY(false, true && (false))), true))) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), _GLF_IDENTITY(false, (false) && true)))), false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false)))))) && true), false, false, false))) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))).x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), bvec3(bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))), true, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), false))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), bvec3(bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))), true, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), bvec3(bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))), true, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), false)))))))), true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true))))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, (true) || false), true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), false))))))))), false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), _GLF_IDENTITY(true, ! (! (true))), true))))), false))))))))), true)))))), false)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true)), true, true))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true)), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true)), true, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true)), true, true))))), false))), true))))), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (false) && true)), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, (false) && true)), true), false, false)))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (false) && true)), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, (false) && true)), true), false, false))))) && true)), true, true))))), false))), false)))))), false)), true))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && _GLF_IDENTITY(true, (true) || false))), bool(bvec2((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false))), false))))), true, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)), true, true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)), true, true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)), true, true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))))), true))))))), false)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true)), true)))))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true)), true)))))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(bool(_GLF_IDENTITY(false || ((false)), (false || ((false))) || false))))), false, false, false))) && true)), true)))))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)), bool(bool(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), bvec3(bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))), true, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) && true))))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))))))))), true)))))), false)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), true, true))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), false))), false)))))), false)), true))))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), bool(bvec2((false) && _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (false) && true)))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true), true && (bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))))))), true, true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), bool(bvec2((false) && _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (false) && true)))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true), true && (bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))))))), true, true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), bool(bvec2((false) && _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (false) && true)))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true), true && (bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))))))), true, true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))))))), false))))), false))), false))))), false)))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (false), ! (_GLF_IDENTITY(! (true && (false)), bool(bool(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) && true))))))))))), (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) && _GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), ! (! (_GLF_IDENTITY((true), ((true)) || false))))))), ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))))) && true), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)))))), false)))), false)))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(true, ! (! (true))) && ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))), ! (! ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))))))))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))) && true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))) && true))))) || false))), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true, true))))), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true, true))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true, true))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true, true))))), false))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) || false)) && true)), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true, true))))), false))))), true))))))))))))))) || false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false))));
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
      }
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))) - 0u) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size))), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(int(int(0)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) || false); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9803.6948)), bool(false))))))), 1.0, 0.0, exp(0.0)))), mix(vec2(_GLF_FUZZED(-0.7), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9803.6948)), bool(false))))))), 1.0, 0.0, exp(0.0)))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9803.6948)), bool(false))))))), 1.0, 0.0, exp(0.0)))))[0], (false ? _GLF_FUZZED(fma(-7.6, 30.01, -6.8)) : (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.6) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9803.6948)), bool(false))))))), 1.0, 0.0, exp(0.0)))))[0])), _GLF_FUZZED(0.7)), bvec2(true, false))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(60532))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, max(64, 64))))), 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u) < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(1, max(1, 1)) * (4)), 64, 4);
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(false);
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            return;
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) : _GLF_FUZZED(_injected_loop_counter))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             subgroupAll(true);
            }
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
