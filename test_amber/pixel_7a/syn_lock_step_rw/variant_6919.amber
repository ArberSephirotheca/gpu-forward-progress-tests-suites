#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.1))), 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))) && true)), false, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))) && true)), false, false, false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat4(injectionSwitch.y, 0.0, sqrt(1.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0))))) && true)), false, false, false)))))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, true, false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-860.137, 5381.0338))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-860.137, 5381.0338))), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-860.137, 5381.0338))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-860.137, 5381.0338)))))) / vec2(1.0, 1.0)))) + vec2(0.0, 0.0)).x, injectionSwitch.x), _GLF_IDENTITY(float(mat2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY((float(injectionSwitch.x)) + 0.0, (false ? _GLF_FUZZED(2948.3433) : _GLF_IDENTITY((float(injectionSwitch.x)) + 0.0, mix(float(_GLF_FUZZED(float(45059u))), float((float(injectionSwitch.x)) + 0.0), bool(true))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), clamp(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), 0.0 + (float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), (float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))) / 1.0)))))))), injectionSwitch.x), 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((float(injectionSwitch.x)) + 0.0, ((float(injectionSwitch.x)) + 0.0) - 0.0))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), (false ? _GLF_FUZZED(float(-422)) : _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((float(injectionSwitch.x)) + 0.0, min((float(injectionSwitch.x)) + 0.0, (float(injectionSwitch.x)) + 0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), max(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))), float(mat4x3(_GLF_IDENTITY(max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-238.880)), float(injectionSwitch.x), bool(true))))) + _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0 * (max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))), 1.0, 0.0, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(log(1.0), 0.0, 0.0, 0.0)), 0.0 + (determinant(mat2(log(1.0), 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0))))))), injectionSwitch.x), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))))), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))))), injectionSwitch.x), min(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))))), injectionSwitch.x)))) + sqrt(0.0)), 1.0, 1.0, 1.0)), float(mat2x4(float(mat2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(false)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((float(injectionSwitch.x)), float(mat3((float(injectionSwitch.x)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(-2.0) : dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), sin(0.0), 0.0, 0.0, 0.0, 0.0))) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))), injectionSwitch.x), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))))), injectionSwitch.x))), 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), float(mat2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x4((injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat2x4((injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), min(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))))), (float(injectionSwitch.x)) + 0.0)))))) : _GLF_FUZZED(-3736.0329))), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((float(injectionSwitch.x)) + 0.0, mix(float((float(injectionSwitch.x)) + 0.0), float(_GLF_FUZZED(-7.3)), bool(false))))))))))))), injectionSwitch.x), 1.0, 1.0, 1.0)), float(mat2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_FUZZED((+ 18.27))), bool(false)))), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), mix(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0)), float(_GLF_FUZZED((+ 18.27))), bool(false)))), float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0))))), float(_GLF_FUZZED((false ? 778.679 : -55.98))), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-345.659), _GLF_FUZZED(7.7)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-345.659), _GLF_FUZZED(7.7)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))))).x, (false ? _GLF_FUZZED(-381.426) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-345.659), _GLF_FUZZED(7.7)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))))).x)) : _GLF_FUZZED(10.39)))), 1.0, 1.0, 1.0))))) / 1.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.0)))))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6618.8054), _GLF_FUZZED(9489.8706)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), bvec2(true, true))).y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false)), false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false)), false, true)))), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, exp(_GLF_IDENTITY(sqrt(0.0), 1.0 * (sqrt(0.0)))), sqrt(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(31.38, -803.761, 9350.6335, 2.1, 7325.0038, -1.4, -58.63, 0.5, -784.795)) : mat3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(9.9, -0.2, -6.2, -831.226, 3694.2613, -9152.3980)) : _GLF_IDENTITY(mat3x2(injectionSwitch, exp(sqrt(0.0)), sqrt(1.0), 1.0, 1.0), mat3x2(mat4x2(mat3x2(injectionSwitch, exp(sqrt(0.0)), sqrt(1.0), 1.0, 1.0))))))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, exp(sqrt(0.0)), sqrt(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(9.9, -0.2, -6.2, -831.226, 3694.2613, -9152.3980)) : _GLF_IDENTITY(mat3x2(injectionSwitch, exp(sqrt(0.0)), sqrt(1.0), 1.0, 1.0), mat3x2(mat4x2(mat3x2(injectionSwitch, exp(sqrt(0.0)), sqrt(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(999.599)), float(1.0), bool(true))), 1.0)))))))) * mat2(1.0))).y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-9145.1468, -2758.3554)) : mat2(1.0) * (injectionSwitch)))).y))), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-6223.6204 - -8.7))), bool(false))) > injectionSwitch.y))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(14.24) : injectionSwitch.y))))))))))) ? _GLF_FUZZED(subgroup_size) : 0u)) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (1u ^ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ (18901u & 0u)))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) >> _GLF_IDENTITY(0u, (0u) / 1u))) % subgroup_size, ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), (_GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), (max(subgroup_local_id + 1, subgroup_local_id + 1)) | (_GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), clamp(max(subgroup_local_id + 1, subgroup_local_id + 1), max(subgroup_local_id + 1, subgroup_local_id + 1), max(subgroup_local_id + 1, subgroup_local_id + 1)))))) >> 0u))))) - 0u)) ^ ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u ^ (subgroup_local_id + 1))) >> _GLF_IDENTITY(0u, (0u) / 1u))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ ((_GLF_IDENTITY(0u | 0u, uint(uvec4(0u | 0u, 0u, 0u, (0u ^ 0u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u)))), 0u ^ (subgroup_local_id + 1))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) / 1u))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u ^ (subgroup_local_id + 1))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) | (0u))) / 1u))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ ((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u ^ (subgroup_local_id + 1))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u))) | (0u))) / 1u))) % subgroup_size) + 0u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)), mix(vec2((_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))) / exp(vec2(0.0, 0.0))))[0], _GLF_FUZZED(127.352)), vec2(_GLF_FUZZED(-7973.7967), (vec2(mat3x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), _GLF_IDENTITY(float(0.0), 0.0 + (float(0.0))))))), 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true)))))))))))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) : _GLF_FUZZED(roundEven(-81.36)))), abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))[0], float(mat3x2((vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))[0], cos(log(1.0)), 0.0, tan(0.0), 1.0, 1.0))), _GLF_FUZZED(127.352)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7973.7967, max(-7973.7967, _GLF_IDENTITY(-7973.7967, (true ? -7973.7967 : _GLF_FUZZED(-53.28)))))), (vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y), false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : virtual_gid))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64, 64)), (_GLF_IDENTITY(64, min(64, 64))) + 0), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, (4) | (4)))), 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) >> 0))), (false ? _GLF_FUZZED(int(61.72)) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-60794)))) | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) - 0)), clamp(min(4, _GLF_IDENTITY(4, (4) - 0)), _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) - 0)), max(min(4, _GLF_IDENTITY(4, (4) - 0)), min(4, _GLF_IDENTITY(4, (4) - 0)))), min(4, _GLF_IDENTITY(4, (4) - 0)))), (min(_GLF_IDENTITY(4, (4) >> (28131 & 0)), _GLF_IDENTITY(4, (4) - 0))) * (0 ^ 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, (4) | (4)))), 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) >> 0))), (false ? _GLF_FUZZED(int(61.72)) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-60794)))) | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) - 0)), clamp(min(4, _GLF_IDENTITY(4, (4) - 0)), _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) - 0)), max(min(4, _GLF_IDENTITY(4, (4) - 0)), min(4, _GLF_IDENTITY(4, (4) - 0)))), min(4, _GLF_IDENTITY(4, (4) - 0)))), (min(_GLF_IDENTITY(4, (4) >> (28131 & 0)), _GLF_IDENTITY(4, (4) - 0))) * (0 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, (4) | (4)))), 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) >> 0))), (false ? _GLF_FUZZED(int(61.72)) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(-60794)))) | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) - 0)), clamp(min(4, _GLF_IDENTITY(4, (4) - 0)), _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (4) - 0)), max(min(4, _GLF_IDENTITY(4, (4) - 0)), min(4, _GLF_IDENTITY(4, (4) - 0)))), min(4, _GLF_IDENTITY(4, (4) - 0)))), (min(_GLF_IDENTITY(4, (4) >> (28131 & 0)), _GLF_IDENTITY(4, (4) - 0))) * (0 ^ 1))))), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 1, 1, 1)), (int(ivec4(64, 1, 1, 1))) | 0)), _GLF_IDENTITY(64, 0 + (64)))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) - 0.0)) + 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))) - 0.0)) + 0.0) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))), false, false), true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(bool(_GLF_IDENTITY(false, (false) && true)), true))), true, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.1) : injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED(34.01)), bool(false))) > injectionSwitch.y))))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(87.51)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false, true)), false), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(87.51)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false, true)), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(87.51)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false, true)), false), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(87.51)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))) || false))), (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))))))), bool(bvec4(bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.8) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0)), mix(vec2((vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))), sqrt(0.0), 0.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(1.5)), vec2(_GLF_FUZZED(0.1), (vec2(mat4x2(injectionSwitch, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))).y, true))))))) && true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
