#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), false || _GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), true))), bool(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))), (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), _GLF_IDENTITY(vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), mix(vec4((vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[0], (vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[1], _GLF_FUZZED(-9.6), _GLF_FUZZED(344.034)), vec4(_GLF_FUZZED((- 50.98)), _GLF_FUZZED(-5727.8393), (vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[2], (vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[3]), bvec4(false, false, true, true)))), min(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), max(1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), (1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) - 0.0)))), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-549.714)), bool(false))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), vec2(0.0, 1.0)))), 1.0), vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), false || _GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true))), bool(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, false), false)))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true)))), bool(bvec2(! (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((bool(true)), bool(bvec3((bool(true)), false, false))), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! (! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))) && true)) && true))), (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! (! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))) && true)) && true)))) && true)), bool(bvec2(! (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) || false), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), bvec3(bvec4(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))))), true))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), bvec3(bvec4(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))))), true))), true))))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))) : _GLF_FUZZED((-70.34 / acos(injectionSwitch))))), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)))), 1.0), min(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) + vec2(0.0, 0.0))))), 1.0))))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), false || _GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), true))), bool(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(false, bool(bool(false))) || (bool(true))), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))), (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), vec2(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (true ? vec2(injectionSwitch.x, 1.0) : _GLF_FUZZED(vec2(-92.15, 5.6)))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), vec2(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (true ? vec2(injectionSwitch.x, 1.0) : _GLF_FUZZED(vec2(-92.15, 5.6)))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-8.0)), bool(false)))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), _GLF_IDENTITY(vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.0)), float(1.0), bool(true))), 1.0)))), 0.0, 1.0, 1.0, 0.0)), mix(vec4((_GLF_IDENTITY(vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), sqrt(vec4(0.0, 0.0, 0.0, 0.0)) + (vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))[0], (vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[1], _GLF_FUZZED(-9.6), _GLF_FUZZED(344.034)), vec4(_GLF_FUZZED((- 50.98)), _GLF_FUZZED(-5727.8393), (vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[2], (vec4(mat4x3(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED((-5.3 / 3256.7147))), float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), bool(true))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))[3]), bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), min(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), min(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), max(1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), mix(float(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(222.465) : min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(-62.88)), bool(false))))), (1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))) - 0.0)))), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-549.714)), bool(false))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), vec2(0.0, 1.0)))), 1.0), vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true)), false || _GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), true))))), true))), bool(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_IDENTITY(bool(bvec2((! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false)), ! (! (bool(bvec2((! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, false), false)))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true)))), bool(bvec2(! (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(622.425)), bool(false))), injectionSwitch.y)))), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((bool(true)), bool(bvec3((bool(true)), false, false))), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! ((_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! ((_GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))), true, false), false))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), false, true, true))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! (! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))) && true)) && true))), (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)))).y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), (_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(3239.4479, 6597.9489, -84.15, -7.2).y) : injectionSwitch.x)) > injectionSwitch.y)), true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))) && true)) && true)))) && true)), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true)), ! _GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! ((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))))))) && true)) && true))), ! (! (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true)), ! _GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! ((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))))))) && true)) && true))))))), false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), false, true, true))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (! (! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))) && true)) && true))), (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)))).y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bool(true))))), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), (_GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(3239.4479, 6597.9489, -84.15, -7.2).y) : injectionSwitch.x)) > injectionSwitch.y)), true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))) && true)) && true)))) && true)), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true)), ! _GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! ((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))))))) && true)) && true))), ! (! (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), ((! _GLF_IDENTITY((bool(true)), _GLF_IDENTITY(bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true)), ! _GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ! (! ((! (bool(bvec4((bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))))))) && true)) && true))))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) || false, ((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), true))))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), ! (! (bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat3x4(vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)))), min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(true))), ((! (bool(true)))) && true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), ! (! ((true))))))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))), ! (! (bool(true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, false)))) && true)))))))) || false))))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), bvec3(bvec4(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), bool(bool(_GLF_IDENTITY(! ((! (true))), ! (! (! ((! (true))))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))), (injectionSwitch.x < injectionSwitch.y))))), true))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true, false)))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true, false)))), (injectionSwitch.x < injectionSwitch.y))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false)), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), bvec3(bvec4(bvec3(bvec3(bvec3((bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-51.40), _GLF_FUZZED(8650.2642)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)), true))), false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), (injectionSwitch.x < injectionSwitch.y))))), true))), true))))))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (true ? _GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))) : _GLF_FUZZED((-70.34 / acos(injectionSwitch))))), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)))), 1.0), min(vec4(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-56.90 * -1525.0015)) : 1.0)), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))))), 1.0), vec4(injectionSwitch.y, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) + vec2(0.0, 0.0))))), 1.0)))))))))) || false)))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id))) * 1u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u)))))), _GLF_IDENTITY((subgroup_local_id) + 0u, (false ? _GLF_FUZZED((147954u ^ subgroup_size)) : (subgroup_local_id) + 0u))) + 1) % subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(123902u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? subgroup_id : _GLF_FUZZED(123902u))) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(123902u)))), 0u | ((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(123902u)))))))))) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, (0u & _GLF_IDENTITY(118433u, (118433u) / 1u))), (false ? _GLF_FUZZED(uvec2(127173u, 36149u)) : _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, (0u & _GLF_IDENTITY(118433u, (118433u) / 1u))), uvec2(0u, 0u) + (uvec2(workgroup_base + subgroup_id * subgroup_size, (0u & _GLF_IDENTITY(118433u, (118433u) / 1u))))))))) + ((subgroup_local_id + 1) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1, subgroup_local_id + 1))) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (subgroup_local_id + 1) >> 0u)))) % subgroup_size), 1u * (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) * 1u)) >> 0u))), 0u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))), (subgroup_local_id) + 0u) + 1) % subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))))) | (workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(123902u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(123902u)))), 0u | ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(123902u), max(true ? subgroup_id : _GLF_FUZZED(123902u), true ? subgroup_id : _GLF_FUZZED(123902u)))))))))))) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, (0u & _GLF_IDENTITY(118433u, (118433u) / 1u))))) + ((subgroup_local_id + 1) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size), 1u * (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), 0u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (true ? (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))), (subgroup_local_id) + 0u) + 1) % subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))))) | (workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(123902u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(123902u)))), 0u | ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? subgroup_id : _GLF_FUZZED(123902u), max(true ? subgroup_id : _GLF_FUZZED(123902u), true ? subgroup_id : _GLF_FUZZED(123902u)))))))))))) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, (0u & _GLF_IDENTITY(118433u, (118433u) / 1u))))) + ((subgroup_local_id + 1) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))) % subgroup_size), 1u * (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), 0u, 1u)))), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))) : _GLF_FUZZED(subgroup_size))));
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 + (4)), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
