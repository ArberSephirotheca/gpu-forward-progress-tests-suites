#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 bvec3 _f0;
} ;

struct _GLF_struct_4 {
 bool _f0;
 bool _f1;
 uvec3 _f2;
 int _f3;
 ivec4 _f4;
 mat2 _f5;
 uint _f6;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 ivec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_2 {
 float _f0;
 uint _f1;
} ;

struct _GLF_struct_5 {
 int _f0;
 uint _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 float _f1;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 mat3 _f1;
 _GLF_struct_1 _f2;
 uint workgroup_size;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))))))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-888.253), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(722.670)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-89.79)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), clamp(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0)))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), tan(0.0), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), tan(0.0), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), tan(0.0), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0))))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y)))))))) || false), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(348.950)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), float(_GLF_FUZZED(-0.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(348.950)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), float(_GLF_FUZZED(-0.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(348.950)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))), float(_GLF_FUZZED(-0.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y) || false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), false), false))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), (true && (_GLF_IDENTITY(false, false || (false)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false)))))) && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) && true), bool(bool(! (! (! (_GLF_DEAD(false)))))))))), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_IDENTITY(false, (false) && true)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat3(1.0), mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_struct_1(_GLF_struct_0(mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9645.9524)), bool(false)))) * 1.0), 1.0)))), 1.0), gl_WorkGroupSize.x, _GLF_struct_5(1, 1u, _GLF_struct_2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec2(length(vec3(0.0, 0.0, 0.0)), 0.0), min(vec2(length(vec3(0.0, 0.0, 0.0)), 0.0), vec2(length(vec3(0.0, 0.0, 0.0)), 0.0))))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(vec4(length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), min(float(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(390.923)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(26.24) : 0.0))) - 0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(_GLF_FUZZED(-1279.3737)), float(float(float(1.0))), bool(true))))), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-0.1)), float((1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + 0.0), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.4) : 0.0))) - 0.0) : _GLF_FUZZED(-6.4))))), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), determinant(mat4(1.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), float(_GLF_FUZZED(-65.62)), bool(false))), 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), min(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))))), (1.0))) + 0.0), float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (1.0) : _GLF_FUZZED(-726.929), (true ? (1.0) : _GLF_FUZZED(-726.929)) - 0.0))), (1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (1.0) : _GLF_FUZZED(-726.929), (true ? (1.0) : _GLF_FUZZED(-726.929)) - 0.0))), (1.0))), min(_GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (1.0) : _GLF_FUZZED(-726.929), (true ? (1.0) : _GLF_FUZZED(-726.929)) - 0.0))), (1.0))), _GLF_IDENTITY(_GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (1.0) : _GLF_FUZZED(-726.929), (true ? (1.0) : _GLF_FUZZED(-726.929)) - 0.0))), (1.0))), 0.0 + (_GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (1.0) : _GLF_FUZZED(-726.929), (true ? (1.0) : _GLF_FUZZED(-726.929)) - 0.0))), (1.0))))))), _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (1.0) : _GLF_FUZZED(-726.929), (true ? (1.0) : _GLF_FUZZED(-726.929)) - 0.0))), (1.0))), _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (1.0) : _GLF_FUZZED(-726.929), (true ? (1.0) : _GLF_FUZZED(-726.929)) - 0.0))), (1.0))))) + 0.0), 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(-5.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-726.929, min(-726.929, -726.929)), float(_GLF_IDENTITY(mat3(-726.929, determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(float(136235u))), float(0.0), bool(true))), cos(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))), abs(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(-726.929, determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), (_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), (false ? _GLF_FUZZED(mat4(0.6, -4256.0237, -400.248, 80.67, -0.9, -51.23, 247.309, -273.580, 83.66, 82.97, -3.3, 5.2, -1680.9403, 392.299, -6190.2265, 3.4)) : mat4(1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat3(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), transpose(transpose(mat3(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))), abs(0.0), 0.0)))))))), (1.0))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0), (false ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0)) - 0.0)) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-8.1) : (1.0))) : _GLF_FUZZED((-3.0 + -718.076)))), (true ? (1.0) : _GLF_FUZZED(-726.929))), (1.0))) + 0.0))))), 1u), _GLF_struct_3(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(1.0, 1.0))), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1)) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))), ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_IDENTITY(_GLF_FUZZED(-75137), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-75137)), 0 | (~ (_GLF_FUZZED(-75137))))))))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)) || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) && true))))), (bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) || false))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(_GLF_IDENTITY(1, (1) >> 0)))), ivec3(1))))) | ivec3(0, 0, 0)), (1 ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8))))))), int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8))))))), (true ? (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8))))))) : _GLF_FUZZED(-91321))), 1, (0 >> _GLF_IDENTITY(int(2), int(2))), (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))), ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1), (false ? _GLF_FUZZED(ivec3(-21951, 20824, 38914)) : _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1)))) | (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))))), ivec3(1)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ivec3(ivec3(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))))))))) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8)))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ivec3(ivec3(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))))))))) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8)))), (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ivec3(ivec3(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))))))))) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ivec3(ivec3(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))))))))) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8))))))) + ivec3(0, 0, 0)) | ivec3(0, 0, 0)), (1 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))), ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))), _GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), vec2(mat2x4(mat2(1.0) * (mat2(1.0) * (injectionSwitch)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))).y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.5) : 0.0)), injectionSwitch.x))))).x > injectionSwitch.y))))))) || false)) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), min(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(72519) : 1)), 1)), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_IDENTITY(_GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r), clamp(_GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r))), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(-7.8), (vec3(injectionSwitch, 1.0))[1], (vec3(injectionSwitch, 1.0))[2]), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(-5.5), _GLF_FUZZED(-9038.0330)), bvec3(true, false, false))))))))[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.3)), bool(false)))))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))) / ivec3(1, 1, 1)), (false ? _GLF_FUZZED(ivec3(57986, -30854, -96281)) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))) / ivec3(1, 1, 1)), (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))) / ivec3(1, 1, 1))) | ivec3(0, 0, 0)))))) | ivec3(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) >> 0))))), 0, 0)), (1 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8))))))))))))), (_GLF_IDENTITY((ivec3(1)), ivec3(0, 0, 0) ^ ((ivec3(1)))) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), max(ivec3(_GLF_IDENTITY(1, (0 | 0) | (1))), ivec3(1)))), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))), ~ (~ (_GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996)))))) : ivec3(1))), ivec3(1)))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), 0 ^ (min(_GLF_IDENTITY(1, min(1, 1)), 1)))) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) >> 0)), (ivec3(_GLF_IDENTITY(1, (1) >> 0))) - ivec3(0, 0, 0))) | (ivec3(0, 0, 0) ^ ivec3(0, 0, 0))))), ivec3(1))))) | ivec3(0, 0, 0)), (1 ^ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) >> 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(8, (8) >> 0))), max(~ (int(_GLF_IDENTITY(8, (8) >> 0))), ~ (int(_GLF_IDENTITY(8, (8) >> 0))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY((_GLF_IDENTITY(8, (8) | (8))), ~ (~ ((_GLF_IDENTITY(8, (8) | (8)))))) | (_GLF_IDENTITY(8, (8) | (8))))))))), ~ (~ (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), (min(_GLF_IDENTITY(1, min(1, 1)), 1)) / 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))), ~ (~ (_GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996)))))) : ivec3(1))), ivec3(1)))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), (min(_GLF_IDENTITY(1, min(1, 1)), 1)) >> 0)) << (0 & -10367)), 0 ^ (min(_GLF_IDENTITY(1, min(1, 1)), 1)))) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED((+ 1.3))), bool(false))) - 0.0)), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(_GLF_IDENTITY(1, (1) >> 0)))), ivec3(1))))) | ivec3(0, 0, 0)), (1 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(8, ~ (~ (8))), (8) | (8))), ~ (~ ((_GLF_IDENTITY(8, (8) | (8)))))) | (_GLF_IDENTITY(8, (8) | (8)))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(max(ivec3(1), ivec3(1)), (_GLF_IDENTITY(max(ivec3(1), ivec3(1)), min(max(ivec3(1), ivec3(1)), max(ivec3(1), ivec3(1))))) | ivec3(0, 0, 0)))), ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_IDENTITY(_GLF_FUZZED(-75137), min(_GLF_IDENTITY(_GLF_FUZZED(-75137), (_GLF_FUZZED(-75137)) / 1), _GLF_IDENTITY(_GLF_FUZZED(-75137), (_GLF_FUZZED(-75137)) >> 0)))))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))), _GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1), (min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) >> 0)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(1), int(1))) | (1))) * 1)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(ivec3(-4656, -54364, -51996), _GLF_IDENTITY((true ? ivec3(-4656, -54364, -51996) : _GLF_FUZZED(ivec3(88505, -89663, -70634))), ivec3(0, 0, 0) | (_GLF_IDENTITY((true ? ivec3(-4656, -54364, -51996) : _GLF_FUZZED(ivec3(88505, -89663, -70634))), (_GLF_IDENTITY((true ? ivec3(-4656, -54364, -51996) : _GLF_FUZZED(ivec3(88505, -89663, -70634))), (true ? (true ? ivec3(-4656, -54364, -51996) : _GLF_FUZZED(ivec3(88505, -89663, -70634))) : _GLF_FUZZED(ivec3(-96321, -70475, -6339))))) / ivec3(1, 1, 1))))))) : ivec3(1))), ivec3(1))))), (_GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(_GLF_IDENTITY(bool(! ((true))), true && (bool(! ((true))))))))) && true), (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (ivec3(1)), (~ (ivec3(1))) ^ ivec3(0, 0, 0)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, true))))))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch))) - vec2(0.0, 0.0))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch))) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)).y), false || ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, _GLF_IDENTITY(1, (1) ^ 0))))), 1)) : _GLF_FUZZED(-75137)))), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_FUZZED(-75137))))))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, _GLF_IDENTITY(-54364, (-54364) << (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | 0)), int(1)))), -51996))) : ivec3(1))), ivec3(1))))), ivec3(ivec3(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(min(1, 1), min(1, 1), min(1, 1)))), 1)) : _GLF_IDENTITY(_GLF_FUZZED(-75137), 0 | (_GLF_FUZZED(-75137)))))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y)) || false)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2(vec2(0.0, 0.0), 1.0, 1.0)), clamp(vec2(mat2(vec2(0.0, 0.0), 1.0, 1.0)), vec2(mat2(vec2(0.0, 0.0), 1.0, 1.0)), vec2(mat2(vec2(0.0, 0.0), 1.0, 1.0)))))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y)) || false)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))))))))) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(8), ivec3(8)))) | ivec3(0, 0, 0)), (1 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), max(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))), ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))) || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) - (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(5), ivec3(5))))) * ivec3(1, 1, 1))))), _GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))))), min(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72284)))]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, _GLF_IDENTITY(96.67, min(96.67, 96.67))).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(_GLF_IDENTITY(vec3(-0.1, 451.249, 96.67).r, (vec3(-0.1, 451.249, 96.67).r) / 1.0))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(float(8755)) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))))) - vec2(0.0, 0.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), _GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(vec3(881.685, -3413.9526, 3.9))))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y)), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(vec3(881.685, -3413.9526, 3.9))))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))) && true))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(vec3(881.685, -3413.9526, 3.9)), clamp(_GLF_IDENTITY(vec2(vec3(881.685, -3413.9526, 3.9)), min(vec2(vec3(881.685, -3413.9526, 3.9)), vec2(vec3(881.685, -3413.9526, 3.9)))), vec2(vec3(881.685, -3413.9526, 3.9)), vec2(vec3(881.685, -3413.9526, 3.9))))))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(vec3(881.685, -3413.9526, 3.9))))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(vec3(881.685, -3413.9526, 3.9))))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(vec3(881.685, -3413.9526, 3.9))))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(vec3(881.685, -3413.9526, 3.9))))))[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x > injectionSwitch.y)))), true)))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), (((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) + 0))), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-693.801)), float((injectionSwitch)[0]), bool(true))))), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (true)))))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(vec3(-0.1, 451.249, 96.67).r)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))))) / ivec3(1, 1, 1)))) | ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (int(_GLF_IDENTITY(0, (0) - 0))) | (int(_GLF_IDENTITY(0, (0) - 0)))))), (0) | (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (int(_GLF_IDENTITY(0, (0) - 0))) | (int(_GLF_IDENTITY(0, (0) - 0)))))), (0) | (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) >> 0)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)), (1 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))))))))))))) + (ivec3(1, 1, 1) ^ ivec3(1, 1, 1))), ((ivec3(1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(max(ivec3(1), ivec3(1)), ivec3(0, 0, 0) ^ (max(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63770) : 1))), ivec3(1)))))), ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(783.481)), vec2(_GLF_FUZZED(-1630.3616), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-11.06), _GLF_FUZZED(-10.93)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-43.93, -8.7)))), injectionSwitch)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1)))), _GLF_IDENTITY(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))), ivec3(0, 0, 0) + (_GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))))) : ivec3(1))), ivec3(1))))), clamp(((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(-75137)))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(_GLF_IDENTITY(-75137, clamp(_GLF_IDENTITY(-75137, (0 & -84429) | (-75137)), -75137, -75137)))))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (_GLF_IDENTITY(1, (1) | (1)))))), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)) : _GLF_FUZZED(_GLF_IDENTITY(-75137, (-75137) << 0))))), max(_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_FUZZED(bitfieldReverse(ivec3(-4656, -54364, -51996))) : ivec3(1))), ivec3(1))))))) | ivec3(0, 0, 0)), (1 ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) >> 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | _GLF_IDENTITY((_GLF_IDENTITY(8, (8) | (8))), ((_GLF_IDENTITY(8, (8) | (8)))) - 0))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(8, (8) | (8)))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), (_GLF_IDENTITY(8, (8) | (8))) | (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) | (8)), max(_GLF_IDENTITY(8, (8) | (8)), _GLF_IDENTITY(8, (8) | (8))))))))))))))))))) << ivec3(0, 0, 0))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) && true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), _GLF_IDENTITY((bool(bvec4(true, true, false, false))) && true, true && (_GLF_IDENTITY((bool(bvec4(true, true, false, false))) && true, true && ((bool(bvec4(true, true, false, false))) && true)))))))))))), bvec2(bvec2(bvec2(true))))), _GLF_struct_4(true, true, uvec3(1u), _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 1, 0))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 1, 0)))))) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 1, 0))))))), 1), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 1, 0))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 1, 0)))))) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 1, 0))))))), 1))))), ivec4(1), mat2(1.0), _GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) - 0u)), 1u * (~ (_GLF_IDENTITY(0u, (0u) - 0u))))))) | (0u))))), _GLF_struct_6(bvec3(true)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-7.8, 2.2, 10.72, 6.7, -7.7, -621.900, -509.569, -119.886, 91.91, -57.53, -60.43, 1.0, 19.16, 3041.3210, 29.70, 8.7)) : mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 1.0, 1.0)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec4(4.4, -2958.3223, 7.9, 68.22) + vec4(-9.8, -194.826, 4330.8740, -6.5)).r)), float(0.0), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(_GLF_IDENTITY(float((injectionSwitch.y)), (float((injectionSwitch.y))) / 1.0))) + 0.0)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-42.03, -534.388)) : injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_7.workgroup_size), ~ (~ (~ (_GLF_struct_replacement_7.workgroup_size)))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_7.workgroup_size), ~ (~ (~ (_GLF_struct_replacement_7.workgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_7.workgroup_size), ~ (~ (~ (_GLF_struct_replacement_7.workgroup_size)))))), (_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_7.workgroup_size), ~ (~ (~ (_GLF_struct_replacement_7.workgroup_size))))))) | (_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_7.workgroup_size), ~ (~ (~ (_GLF_struct_replacement_7.workgroup_size))))))))) >> 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)) * vec2(1.0, 1.0))).y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0))))), exp(0.0), 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(-0.6, -5.8, -5.1).y)), bool(false))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, exp(0.0), 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(314.769) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-15.53)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y)))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true)))))))), true, true, false))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u))))))), 0u ^ (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) << 0u)))) ^ ((workgroup_base)))))))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) - (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | (0u ^ 0u)))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u | 0u) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | (_GLF_IDENTITY((subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)))), max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) / _GLF_IDENTITY(1u, 0u | (1u)))))) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-355.627, 958.494)))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, true))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), 0.0))), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-370.374)), bool(false))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), mat4x3(_GLF_IDENTITY(mat4(mat4x3(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), transpose(transpose(mat4(mat4x3(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))))))))), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mix(vec2(_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))[0], ((vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))[0]) + tan(0.0)), _GLF_FUZZED(_GLF_IDENTITY(29.81, max(29.81, 29.81)))), vec2(_GLF_FUZZED(-4.0), _GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), (vec4(1.0, 0.0, 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))[1], 0.0 + ((vec2(mat3x4(injectionSwitch, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))[1]))), bvec2(false, true)))) + vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(401.884)), bool(false)))))), _GLF_ZERO(0.0, injectionSwitch.x)))))).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.6)), bool(false))))), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 | (0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), (uvec3(virtual_gid, 0u, 0u)) | (uvec3(virtual_gid, 0u, 0u))))), min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u))), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u)))))) | 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
