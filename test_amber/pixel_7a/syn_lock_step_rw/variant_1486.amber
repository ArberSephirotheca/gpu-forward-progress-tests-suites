#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_95 {
 mat2x3 _f0;
} ;

struct _GLF_struct_94 {
 bvec3 _f0;
 mat3x4 _f1;
 mat3 _f2;
 ivec3 _f3;
 mat3x2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_93 {
 uvec2 _f0;
 vec4 _f1;
 vec2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_96 {
 ivec4 _f0;
 _GLF_struct_93 _f1;
 _GLF_struct_94 _f2;
 _GLF_struct_95 _f3;
} ;

struct _GLF_struct_91 {
 uvec3 _f0;
 uint _f1;
 mat3 _f2;
 bvec2 _f3;
 vec4 _f4;
 ivec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_92 {
 _GLF_struct_91 _f0;
} ;

struct _GLF_struct_89 {
 uvec4 _f0;
 mat3 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_88 {
 vec4 _f0;
 float _f1;
 vec3 _f2;
} ;

struct _GLF_struct_87 {
 uvec3 _f0;
 bvec4 _f1;
 bool _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_90 {
 _GLF_struct_87 _f0;
 mat4 _f1;
 vec2 _f2;
 _GLF_struct_88 _f3;
 mat3x4 _f4;
 _GLF_struct_89 _f5;
} ;

struct _GLF_struct_85 {
 vec2 _f0;
 ivec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_86 {
 _GLF_struct_85 _f0;
 int _injected_loop_counter;
} ;

struct _GLF_struct_83 {
 float _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_82 {
 mat3x4 _f0;
 mat4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_81 {
 mat3x4 _f0;
} ;

struct _GLF_struct_80 {
 vec2 _f0;
 bool _f1;
 vec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_84 {
 _GLF_struct_80 _f0;
 _GLF_struct_81 _f1;
 _GLF_struct_82 _f2;
 _GLF_struct_83 _f3;
 mat2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_97 {
 _GLF_struct_84 _f0;
 _GLF_struct_86 _f1;
 _GLF_struct_90 _f2;
 uvec4 _f3;
 _GLF_struct_92 _f4;
 _GLF_struct_96 _f5;
 int _f6;
} ;

struct _GLF_struct_77 {
 mat2x4 _f0;
 uint _f1;
 mat4 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
 uvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_76 {
 uvec4 _f0;
 bool _f1;
 mat2x4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_78 {
 mat3x4 _f0;
 _GLF_struct_76 _f1;
 _GLF_struct_77 _f2;
} ;

struct _GLF_struct_74 {
 mat2 _f0;
 ivec3 _f1;
 uvec4 _f2;
 vec2 _f3;
 ivec4 _f4;
 uint _f5;
 uint _f6;
} ;

struct _GLF_struct_73 {
 uvec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_72 {
 vec2 _f0;
 uvec3 _f1;
 ivec3 _f2;
 float _f3;
 bvec3 _f4;
 ivec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_75 {
 _GLF_struct_72 _f0;
 _GLF_struct_73 _f1;
 ivec4 _f2;
 _GLF_struct_74 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_70 {
 mat2 _f0;
 uint _f1;
} ;

struct _GLF_struct_69 {
 uvec3 _f0;
 mat2x4 _f1;
 mat3 _f2;
 bvec2 _f3;
 vec3 _f4;
 uint _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_68 {
 mat2x3 _f0;
 mat3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_67 {
 ivec4 _f0;
 mat2x4 _f1;
 bool _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_71 {
 _GLF_struct_67 _f0;
 _GLF_struct_68 _f1;
 _GLF_struct_69 _f2;
 _GLF_struct_70 _f3;
} ;

struct _GLF_struct_65 {
 uvec3 _f0;
 mat3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_64 {
 mat4 _f0;
 float _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat4x2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_63 {
 vec3 _f0;
 mat3 _f1;
 mat3 _f2;
 ivec2 _f3;
 bvec2 _f4;
 uvec4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_62 {
 mat2 _f0;
 bool _f1;
 ivec2 _f2;
 vec2 _f3;
 vec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_61 {
 vec4 _f0;
 vec2 _f1;
 ivec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_66 {
 bvec4 _f0;
 _GLF_struct_61 _f1;
 float _f2;
 _GLF_struct_62 _f3;
 _GLF_struct_63 _f4;
 _GLF_struct_64 _f5;
 _GLF_struct_65 _f6;
} ;

struct _GLF_struct_79 {
 _GLF_struct_66 _f0;
 uint next_virtual_gid;
 _GLF_struct_71 _f1;
 _GLF_struct_75 _f2;
 _GLF_struct_78 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_58 {
 vec3 _f0;
 bool _f1;
 mat3x4 _f2;
 mat2x3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_57 {
 mat2x4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_56 {
 vec3 _f0;
 float _f1;
 bvec3 _f2;
 mat4x3 _f3;
 float _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_59 {
 _GLF_struct_56 _f0;
 ivec2 _f1;
 _GLF_struct_57 _f2;
 mat4 _f3;
 _GLF_struct_58 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_60 {
 uint workgroup_size;
 vec2 _f0;
 _GLF_struct_59 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_53 {
 bool _f0;
 mat4x3 _f1;
 bvec4 _f2;
 ivec3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_52 {
 mat3 _f0;
} ;

struct _GLF_struct_54 {
 vec2 _f0;
 mat2 _f1;
 int _f2;
 _GLF_struct_52 _f3;
 _GLF_struct_53 _f4;
} ;

struct _GLF_struct_50 {
 vec4 _f0;
 bvec2 _f1;
 uint _f2;
 mat2x3 _f3;
 vec3 _f4;
 bool _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_49 {
 bool _f0;
 ivec4 _f1;
 mat3x4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_48 {
 mat2x4 _f0;
 bool _f1;
} ;

struct _GLF_struct_47 {
 mat4x2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_46 {
 uvec4 _f0;
 bool _f1;
 mat3 _f2;
 float _f3;
 uvec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_51 {
 _GLF_struct_46 _f0;
 ivec4 _f1;
 _GLF_struct_47 _f2;
 _GLF_struct_48 _f3;
 _GLF_struct_49 _f4;
 _GLF_struct_50 _f5;
} ;

struct _GLF_struct_44 {
 ivec3 _f0;
} ;

struct _GLF_struct_45 {
 int _f0;
 _GLF_struct_44 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_42 {
 vec2 _f0;
 bool _f1;
 mat3 _f2;
 vec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_41 {
 ivec3 _f0;
 mat4 _f1;
 bvec3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_40 {
 float _f0;
 mat2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_43 {
 _GLF_struct_40 _f0;
 mat3x4 _f1;
 _GLF_struct_41 _f2;
 uvec3 _f3;
 _GLF_struct_42 _f4;
 float _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_38 {
 vec3 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_37 {
 uvec4 _f0;
} ;

struct _GLF_struct_36 {
 mat4x3 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 vec4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_39 {
 mat4x2 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
} ;

struct _GLF_struct_34 {
 mat3x2 _f0;
 uvec4 _f1;
 int _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_35 {
 mat4x2 _f0;
 _GLF_struct_34 _f1;
} ;

struct _GLF_struct_55 {
 uint num_workgroup;
 _GLF_struct_35 _f0;
 _GLF_struct_39 _f1;
 _GLF_struct_43 _f2;
 _GLF_struct_45 _f3;
 _GLF_struct_51 _f4;
 _GLF_struct_54 _f5;
} ;

struct _GLF_struct_31 {
 mat2x4 _f0;
 float _f1;
 float _f2;
 mat4 _f3;
 ivec3 _f4;
 bvec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_30 {
 mat2x3 _f0;
 mat4 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 ivec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_29 {
 bool _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_28 {
 mat2x4 _f0;
 uint _f1;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
 _GLF_struct_28 _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_30 _f3;
 _GLF_struct_31 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_27 {
 mat3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_25 {
 mat4x2 _f0;
 uvec2 _f1;
 mat4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_24 {
 bool _f0;
 mat4x3 _f1;
 uint _f2;
 uvec2 _f3;
 bool _f4;
 vec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_23 {
 float _f0;
 vec2 _f1;
 ivec2 _f2;
 ivec3 _f3;
 vec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_22 {
 ivec3 _f0;
} ;

struct _GLF_struct_26 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 mat4x3 _f2;
 _GLF_struct_24 _f3;
 uvec2 _f4;
 _GLF_struct_25 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_20 {
 uvec3 _f0;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 bvec4 _f1;
 bvec3 _f2;
 mat4x2 _f3;
 mat4x3 _f4;
 ivec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
 _GLF_struct_20 _f4;
 uint _f5;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 vec4 _f1;
 vec2 _f2;
 mat3x2 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_26 _f3;
 uint subgroup_local_id;
 _GLF_struct_27 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 bvec3 _f1;
 ivec2 _f2;
 bool _f3;
 mat3 _f4;
} ;

struct _GLF_struct_13 {
 float _f0;
 bool _f1;
 uint _f2;
 uvec3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 bvec4 _f1;
 bool _f2;
 mat2 _f3;
 mat3x2 _f4;
 int _f5;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_15 {
 uint _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
 uvec2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_9 {
 uint _f0;
 mat4x2 _f1;
 ivec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 uint _f1;
 ivec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 _GLF_struct_7 _f3;
 mat4x2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 ivec4 _f3;
 mat2 _f4;
 int _f5;
 vec3 _f6;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 uvec4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_5 _f0;
 uint read;
 vec3 _f1;
 _GLF_struct_8 _f2;
 int _f3;
 _GLF_struct_10 _f4;
 mat3x2 _f5;
 _GLF_struct_15 _f6;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 uvec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_1 {
 uint virtual_gid;
 _GLF_struct_0 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(271.116, float(mat3(271.116, 1.0, 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, abs(1.0), 1.0, 1.0))), -7.4)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(271.116, float(mat3(271.116, 1.0, 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, abs(1.0), 1.0, 1.0))), -7.4)) : injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8715.1512, 8058.3667)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat3x4(mat4(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(ivec3(_GLF_IDENTITY(1, int(ivec2(1, 0)))), _GLF_struct_18(_GLF_struct_17(mat2(1.0), vec4(1.0), vec2(1.0), mat3x2(1.0), mat3x4(1.0))), _GLF_struct_21(_GLF_struct_19(bvec3(true), bvec4(true), bvec3(true), mat4x2(1.0), mat4x3(1.0), ivec2(1), mat2(1.0)), mat2x3(1.0), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x4(1.0), _GLF_struct_20(uvec3(1u)), 1u), _GLF_struct_26(_GLF_struct_22(ivec3(1)), _GLF_struct_23(1.0, vec2(1.0), ivec2(_GLF_IDENTITY(1, (1) | 0)), ivec3(1), vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), float(float(float(1.0))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))), mix(vec4((_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))[0], _GLF_FUZZED(-95.96), _GLF_FUZZED(-862.811), (_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(780.375), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))[1], (_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))), vec4(vec4(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))))))))[2], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), (false ? _GLF_FUZZED(351.346) : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), max(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8)))))))))), mix(vec4((vec4(_GLF_FUZZED(780.375), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))[1], (_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))), vec4(vec4(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))))))))[2], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), (false ? _GLF_FUZZED(351.346) : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), max(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8)))))))))))[0], _GLF_FUZZED(8.4), _GLF_FUZZED(-58.25), _GLF_FUZZED(1323.2797)), vec4(_GLF_FUZZED(-9.8), (vec4(_GLF_FUZZED(780.375), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))[1], (_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))), vec4(vec4(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))))))))[2], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), (false ? _GLF_FUZZED(351.346) : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), max(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8)))))))))))[1], (vec4(_GLF_FUZZED(780.375), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))[1], (_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))), vec4(vec4(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))))))))[2], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), (false ? _GLF_FUZZED(351.346) : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), max(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8)))))))))))[2], (vec4(_GLF_FUZZED(780.375), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))[1], (_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))), vec4(vec4(_GLF_IDENTITY((vec4(1.0)), (false ? _GLF_FUZZED(vec4(3.5, -7.5, -18.77, -72.95)) : _GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))))))))))[2], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), (false ? _GLF_FUZZED(351.346) : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), max(_GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8))))), _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(2.8)))))))))))[3]), bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat3x4(vec4(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat3x4(vec4(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))), max(_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(8.3)), clamp(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(8.3)), (false ? _GLF_FUZZED(29.41) : (true ? 1.0 : _GLF_FUZZED(8.3)))), (true ? 1.0 : _GLF_FUZZED(8.3)), (true ? 1.0 : _GLF_FUZZED(8.3)))))) * (vec4(1.0))), _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))))), _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0) * (vec4(1.0)))))), mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-8800.2487)), 1.0 * (float(_GLF_IDENTITY(_GLF_FUZZED(-8800.2487), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(10.74) : _GLF_FUZZED(-8800.2487)))))), bool(false)))), _GLF_struct_24(true, mat4x3(1.0), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | 0u))), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | (1u))), true, vec2(1.0), mat2(1.0)), uvec2(1u), _GLF_struct_25(mat4x2(1.0), uvec2(1u), mat4(1.0), ivec3(1)), mat4x2(1.0)), gl_SubgroupInvocationID, _GLF_struct_27(mat3(1.0), uvec2(1u)), _GLF_struct_32(ivec2(1), _GLF_struct_28(mat2x4(1.0), 1u), _GLF_struct_29(true, bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), (true) || false))), _GLF_struct_30(mat2x3(1.0), mat4(1.0), uvec2(1u), mat3x2(1.0), mat2x3(1.0), ivec2(1), mat2(1.0)), _GLF_struct_31(mat2x4(1.0), 1.0, 1.0, _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-0.9, -4977.0883, -654.766, -33.87, -7.6, -524.463, -10.95, -8.2, -3560.0651, -3398.8848, -770.630, -576.965, 9680.6203, -7.8, 27.88, -229.165)))), ivec3(1), bvec3(true), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(true)), false, false)), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), bvec2(true)));
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_55 _GLF_struct_replacement_55 = _GLF_struct_55(gl_NumWorkGroups.x, _GLF_struct_35(mat4x2(1.0), _GLF_struct_34(mat3x2(1.0), uvec4(1u), 1, uvec3(1u))), _GLF_struct_39(mat4x2(1.0), _GLF_struct_36(mat4x3(1.0), bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), mat2x4(1.0), vec4(1.0), uvec4(1u)), _GLF_struct_37(uvec4(1u)), _GLF_struct_38(vec3(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), mat4x3(1.0), uvec2(1u), 1u)), _GLF_struct_43(_GLF_struct_40(1.0, mat2(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) - 0))) / 1, clamp((1) / 1, (1) / 1, (1) / 1))) >> 0))) ^ 0)) ^ 0)), (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) - 0))) / 1, clamp((1) / 1, (1) / 1, (1) / 1))) >> 0))) ^ 0)) ^ 0))) / ivec3(1, 1, 1))), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)))), sqrt(1.0), 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), 0.0 + (length(normalize(vec2(1.0, 1.0))))), length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((81.93 * -2166.7321))), bool(false))), 1.0, 0.0)), _GLF_IDENTITY(min(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))))) * 1.0), sqrt(1.0), 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat4x2(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (true ? mat4x2(vec2(1.0, 1.0), 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0) : _GLF_FUZZED(matrixCompMult(mat4x2(0.3, 9021.0883, -0.1, -6290.9312, -1597.9276, 650.847, -289.290, -1421.3752), mat4x2(-586.125, 326.815, -6938.5688, -264.365, 0.5, -916.219, -313.633, -8.1)))))))))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)))), sqrt(1.0), 0.0, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7992.6915)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))) / 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))) / 1.0))), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))) / 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))) / 1.0))))))), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0)))), (float(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))))) / 1.0)), 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-7.4, 1.5, -5330.9018, -5.0, 534.315, -6.8, 48.29, -915.936, 5.1, 96.55, 6.2, 294.936, 4.6, 648.728, -42.48, 908.095)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(distance(47.60, -2.7)), max(_GLF_FUZZED(distance(47.60, -2.7)), _GLF_FUZZED(distance(47.60, -2.7)))), (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))) / 1.0))), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(vec2(0.1, -980.848), injectionSwitch)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), clamp(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)))), (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))) / 1.0))), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), -2.7)))), sqrt(1.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), -2.7)))), sqrt(1.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), -2.7)))), sqrt(1.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(_GLF_IDENTITY(0.0, (0.0) - abs(0.0))), abs(1.0), sqrt(1.0), 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))) / abs(1.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))), (min(float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)))), sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0))))))) - 0.0), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)))), sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7992.6915)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7992.6915)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7992.6915)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7992.6915)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7992.6915)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7992.6915)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) / 1.0), 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(6079.6292) : float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6232.2931)), bool(false))))), min(0.0, 0.0)), 1.0, 1.0, 0.0)), max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), (true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7))) / 1.0))), _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-8742.7442)), float(sqrt(1.0)), bool(true))), (_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-8742.7442)), float(sqrt(1.0)), bool(true)))) - 0.0)) - 0.0)) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (true ? normalize(vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-8981.8310, -4.9)))))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), vec3(vec4(vec3(0.0, abs(0.0), 1.0), 0.0))))), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)))), 0.0), (false ? _GLF_FUZZED(mat4(-7.4, 1.5, -5330.9018, -5.0, 534.315, -6.8, 48.29, -915.936, 5.1, 96.55, 6.2, 294.936, 4.6, 648.728, -42.48, 908.095)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(distance(47.60, -2.7)), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(distance(47.60, _GLF_IDENTITY(-2.7, float(vec4(-2.7, 0.0, 0.0, length(sqrt(vec3(0.0, 0.0, 0.0))))))))), (false ? _GLF_FUZZED(-3.1) : (true ? 1.0 : _GLF_FUZZED(distance(47.60, _GLF_IDENTITY(-2.7, float(vec4(-2.7, 0.0, 0.0, length(sqrt(vec3(0.0, 0.0, 0.0))))))))))) / 1.0))), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), (vec4(0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(faceforward(vec4(7.2, 8.2, -62.58, -467.432), vec4(0.5, -9.6, 5.4, -69.93), vec4(-693.687, 9.9, 5740.8992, -7.9))) : _GLF_IDENTITY(vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0), (vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), mix(float(_GLF_FUZZED(-95.52)), float(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0))), bool(true)))), bool(true))), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)))), 0.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(distance(47.60, -2.7)), float(float(_GLF_FUZZED(distance(47.60, -2.7))))), (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(distance(47.60, -2.7), max(distance(47.60, -2.7), _GLF_IDENTITY(distance(47.60, -2.7), clamp(distance(47.60, -2.7), distance(47.60, -2.7), distance(47.60, -2.7))))))) / 1.0))), _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-83.42), _GLF_FUZZED(3.3)), bvec2(false, false)))).y)) ? _GLF_FUZZED(0.0) : sqrt(1.0)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.3)), float(0.0), bool(true))))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.4)))) + 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(_GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), vec2(0.0, 0.0))))) * 1.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(length(normalize(vec2(1.0, 1.0)))), float(_GLF_FUZZED(26.96)), bool(false)))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(29.33))), 0.0, 0.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), -2.7)))), sqrt(1.0), 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat4x2(normalize(vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat4x2(normalize(vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat4x2(normalize(vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), mix(float(_GLF_FUZZED(5.6)), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), abs(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0))), _GLF_IDENTITY(sqrt(1.0), float(vec2(sqrt(1.0), 0.0))), sqrt(1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3928.8366))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), _GLF_IDENTITY(1.0, float(vec2(1.0, tan(0.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2567.5038) : 0.0)), 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))), bool(true))), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, sqrt(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (true ? mat3(0.0, sqrt(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3(4.0, -4619.1963, -0.0, 7.4, 58.38, -5.4, 93.38, -9.0, -2703.1608)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), max(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), _GLF_IDENTITY(-2.7, (-2.7) * cos(0.0)))))), sqrt(1.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(mat3x2(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(0.0), abs(1.0), _GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 1.0, sqrt(1.0), abs(1.0), 0.0), (false ? _GLF_FUZZED(mat4x3(2.4, -73.87, -651.437, 6.3, 8.1, -1.3, 136.176, -8637.3715, -186.365, 2965.3669, 5.3, -752.943)) : mat4x3(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 1.0, sqrt(1.0), abs(1.0), 0.0))))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.9)), float(1.0), bool(true))), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.7), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-3.7), 1.0 * (_GLF_FUZZED(-3.7))) : _GLF_FUZZED(round(-44.88)))))))), 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(1364.8128)), bool(false))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), -2.7))), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), -2.7))), (false ? _GLF_FUZZED(-88.62) : (true ? 1.0 : _GLF_FUZZED(distance(_GLF_IDENTITY(47.60, (47.60) * 1.0), -2.7)))))))), sqrt(1.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), mat2x4(mat2x4(mat2x4(1.0, exp(0.0), abs(1.0), sqrt(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))), 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0)))))))) - 0.0)))), _GLF_struct_41(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1), ~ (_GLF_IDENTITY(~ (ivec3(1)), min(~ (ivec3(1)), ~ (ivec3(1)))))))), mat4(1.0), bvec3(true), mat2x4(1.0)), uvec3(1u), _GLF_struct_42(vec2(1.0), true, mat3(1.0), vec3(1.0), mat2x4(1.0)), 1.0, uvec3(1u)), _GLF_struct_45(1, _GLF_struct_44(ivec3(1)), mat3x2(1.0), mat3x4(1.0), vec4(1.0)), _GLF_struct_51(_GLF_struct_46(uvec4(1u), true, mat3(1.0), 1.0, uvec2(_GLF_IDENTITY(1u, (1u) | (1u))), bvec2(true)), ivec4(1), _GLF_struct_47(mat4x2(1.0), uvec3(1u)), _GLF_struct_48(mat2x4(1.0), true), _GLF_struct_49(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), ivec4(1), mat3x4(1.0), bvec2(true)), _GLF_struct_50(vec4(1.0), bvec2(true), 1u, mat2x3(1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), true, mat4x2(1.0))), _GLF_struct_54(vec2(1.0), mat2(1.0), 1, _GLF_struct_52(mat3(1.0)), _GLF_struct_53(true, mat4x3(1.0), bvec4(true), ivec3(1), mat3(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_60 _GLF_struct_replacement_60 = _GLF_struct_60(gl_WorkGroupSize.x, vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec2(0.0, 0.0))))), 1.0, 1.0), vec3(1.0, tan(0.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, tan(0.0), 0.0))) + (1.0))), _GLF_struct_59(_GLF_struct_56(vec3(1.0), 1.0, bvec3(true), mat4x3(1.0), 1.0, uvec4(1u)), ivec2(1), _GLF_struct_57(mat2x4(1.0), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))))) ^ uvec3(0u, 0u, 0u)), uvec3(1u)))), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.1) : 1.0))) / 1.0), sqrt(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)))), mix(float(float(vec3(1.0, sqrt(0.0), abs(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (true ? mat4(1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4(-91.96, 4566.3060, 442.165, -1444.9305, -0.9, 5.1, 444.739, -6817.3325, 591.900, 817.868, 222.100, -9520.1158, -59.64, -6.8, 7.3, -2.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.y))))), _GLF_IDENTITY(float(_GLF_FUZZED(67.16)), float(mat4(float(_GLF_FUZZED(67.16)), 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(1.0))), determinant(mat2(log(1.0), 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 1.0))), bool(false))))), _GLF_struct_58(vec3(1.0), true, mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), mat2x3(1.0), bvec3(true)), mat4(1.0)), ivec3(1));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_60.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-443.398), _GLF_FUZZED(2.9)), bvec2(false, false))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       for(_GLF_struct_97 _GLF_struct_replacement_97 = _GLF_struct_97(_GLF_struct_84(_GLF_struct_80(vec2(1.0), true, vec2(1.0), ivec2(1)), _GLF_struct_81(mat3x4(1.0)), _GLF_struct_82(mat3x4(1.0), mat4(1.0), vec4(1.0)), _GLF_struct_83(1.0, mat2x3(1.0), mat2x3(1.0), mat3(1.0)), mat2(1.0), ivec4(1)), _GLF_struct_86(_GLF_struct_85(vec2(1.0), ivec4(1), ivec2(1)), 1), _GLF_struct_90(_GLF_struct_87(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)), bvec4(true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), mat4x3(1.0)), mat4(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / abs(vec2(1.0, 1.0))))), _GLF_struct_88(vec4(1.0), 1.0, vec3(1.0)), mat3x4(1.0), _GLF_struct_89(uvec4(1u), mat3(1.0), ivec3(1), mat4x3(1.0), mat3x2(1.0))), uvec4(1u), _GLF_struct_92(_GLF_struct_91(uvec3(1u), 1u, mat3(1.0), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false))))), vec4(1.0), ivec4(1), ivec3(1))), _GLF_struct_96(ivec4(1), _GLF_struct_93(uvec2(1u), vec4(1.0), vec2(1.0), mat2x4(1.0)), _GLF_struct_94(bvec3(_GLF_IDENTITY(true, true && (true))), mat3x4(1.0), mat3(1.0), ivec3(1), mat3x2(1.0), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), _GLF_struct_95(mat2x3(1.0))), 1); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_97._f1._injected_loop_counter > 0); _GLF_struct_replacement_97._f1._injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, true)))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              break;
             barrier();
            }
           return;
          }
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), true, false, true))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true))))), false))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false)), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false))) && true)); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((7.6 + injectionSwitch)))).y)))) - 0) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))
        break;
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat4x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), dot(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0), vec2(1.0, 0.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_33.subgroup_local_id, _GLF_struct_0(mat2x4(1.0), uvec2(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) >> 0u), 1u))), ivec4(1)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0)), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) : _GLF_FUZZED(injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5953.1601)), float(injectionSwitch.y), bool(true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-8.6)), mix(float(float(_GLF_FUZZED(-8.6))), float(_GLF_FUZZED(74.08)), bool(false))), bool(false)))) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-8210.8277), _GLF_FUZZED(-7.0)), vec2((vec2(vec4(injectionSwitch, 0.0, 1.0)))[0], (vec2(vec4(injectionSwitch, 0.0, 1.0)))[1]), bvec2(true, true)))).y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 _GLF_struct_79 _GLF_struct_replacement_79 = _GLF_struct_79(_GLF_struct_66(bvec4(true), _GLF_struct_61(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0)))), (true ? float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), log(1.0), 0.0, 0.0, 1.0)) : _GLF_FUZZED(9.6))))), vec2(1.0), ivec3(1), mat3x4(1.0)), 1.0, _GLF_struct_62(mat2(1.0), true, ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))), vec2(1.0), vec4(1.0), mat2x3(1.0)), _GLF_struct_63(vec3(1.0), mat3(1.0), mat3(1.0), ivec2(1), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true))))), _GLF_IDENTITY(uvec4(1u), (true ? _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(114697u, 96324u, 167029u, 125068u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_FUZZED(uvec4(114697u, 96324u, 167029u, 125068u)))))), mat2x4(1.0)), _GLF_struct_64(mat4(1.0), 1.0, mat4x3(1.0), mat4x3(1.0), mat4x2(1.0), uvec4(1u)), _GLF_struct_65(uvec3(_GLF_IDENTITY(1u, 1u * (1u))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(1.0)) * mat3(1.0), transpose(_GLF_IDENTITY(transpose((mat3(1.0)) * mat3(1.0)), (transpose((mat3(1.0)) * mat3(1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(mat3(-9773.7879, 19.31, 5.4, 439.956, 1.9, -1.7, 4.9, 7.4, 813.676)) : _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(1.0)) * mat3(1.0), transpose(_GLF_IDENTITY(transpose((mat3(1.0)) * mat3(1.0)), (transpose((mat3(1.0)) * mat3(1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), mat3(mat3(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(1.0)) * mat3(1.0), transpose(_GLF_IDENTITY(transpose((mat3(1.0)) * mat3(1.0)), (transpose((mat3(1.0)) * mat3(1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))), uvec2(1u))), workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_33.subgroup_local_id + 1) % subgroup_size), _GLF_struct_71(_GLF_struct_67(ivec4(1), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-414.243)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), true, mat4x2(1.0)), _GLF_struct_68(mat2x3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat3(1.0), mat4x2(1.0)), _GLF_struct_69(uvec3(1u), mat2x4(1.0), mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), bvec2(true), vec3(1.0), 1u, mat2x4(1.0)), _GLF_struct_70(mat2(1.0), 1u)), _GLF_struct_75(_GLF_struct_72(vec2(1.0), uvec3(1u), ivec3(_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), bvec3(true), ivec2(1), vec3(1.0)), _GLF_struct_73(uvec4(1u), uvec3(1u)), ivec4(1), _GLF_struct_74(mat2(1.0), ivec3(1), uvec4(1u), vec2(1.0), ivec4(1), 1u, 1u), mat3x2(1.0)), _GLF_struct_78(mat3x4(1.0), _GLF_struct_76(uvec4(1u), true, mat2x4(1.0), ivec4(1)), _GLF_struct_77(mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.0)), bool(false))), 1.0))), 1u, mat4(1.0), mat4x3(1.0), mat3x2(1.0), uvec3(1u), mat2(1.0))), mat2x3(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, determinant(mat2(sqrt(1.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), 0.0, tan(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)))), 0.0)))));
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_5(_GLF_struct_2(mat3x2(1.0), mat3x4(_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))))), uvec4(1u), _GLF_struct_3(mat2(1.0), mat3x4(1.0), ivec4(1), ivec4(1), mat2(1.0), 1, vec3(1.0)), _GLF_struct_4(bvec4(true))), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_1.virtual_gid], _GLF_IDENTITY(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), min(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(buf[_GLF_struct_replacement_1.virtual_gid], _GLF_IDENTITY(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), min(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), 1u, 1u, 0u), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(buf[_GLF_struct_replacement_1.virtual_gid], _GLF_IDENTITY(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), min(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), 1u, 1u, 0u), (false ? _GLF_FUZZED(uvec4(29583u, 45846u, 46264u, 155447u)) : uvec4(_GLF_IDENTITY(buf[_GLF_struct_replacement_1.virtual_gid], _GLF_IDENTITY(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), min(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), 1u, 1u, 0u))), uvec4(_GLF_IDENTITY(buf[_GLF_struct_replacement_1.virtual_gid], _GLF_IDENTITY(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), min(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(buf[_GLF_struct_replacement_1.virtual_gid], _GLF_IDENTITY(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), min(uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), uint(uvec4(buf[_GLF_struct_replacement_1.virtual_gid], uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))), 1u, 1u, 0u))))), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(_GLF_IDENTITY(64, (0 ^ 0) | _GLF_IDENTITY((64), (_GLF_IDENTITY((64), int(int((64))))) ^ 0)), (64) | (64)), _GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(56577) : 64), int(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(56577) : 64), ((false ? _GLF_FUZZED(56577) : 64)) - 0), 0)))))), 0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + log(vec3(1.0, 1.0, 1.0))), _GLF_struct_8(_GLF_struct_6(uvec4(1u), vec4(1.0)), bvec3(true), mat2x3(1.0), _GLF_struct_7(vec2(1.0)), mat4x2(1.0), ivec4(1)), 1, _GLF_struct_10(_GLF_struct_9(1u, mat4x2(1.0), ivec3(1), ivec4(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) - 0)))), 1u, ivec4(1), mat3x4(1.0)), mat3x2(1.0), _GLF_struct_15(1u, _GLF_struct_11(vec3(1.0), true), _GLF_struct_12(vec4(1.0), bvec4(true), true, mat2(1.0), mat3x2(1.0), 1), _GLF_struct_13(1.0, true, 1u, uvec3(1u), mat4x2(1.0)), _GLF_struct_14(vec2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), ivec2(1), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), mat3(1.0)), uvec2(1u), mat3x2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(bitfieldReverse(-69435)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[_GLF_struct_replacement_79.next_virtual_gid], uint(1), 4, 64, 4);
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(false || (false), true)), false || (bool(bvec2(false || (false), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, 3.3)) : injectionSwitch)).x > injectionSwitch.y, true, false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)))))))))))))))))), (bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))) && true)))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.7, 3.3)) : injectionSwitch)).x > injectionSwitch.y, true, false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)))))))))))))))))), (bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))) && true))))))) || false)), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y))), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))) && true))), (bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))) && true)))) && true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true))))) || false))) && true), false, true)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, round(length(normalize(1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(28485u, (0u | 0u) ^ (28485u))))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))))) < injectionSwitch.y))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         return;
        }
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0))) < 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.6) : injectionSwitch.y))))), false))))) && true)))))))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), sin(0.0)))).x > injectionSwitch.y))));
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) ? _GLF_FUZZED(distance(85.86, 3.8)) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)), 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
              return;
             return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) - (-6678 & 0))))), ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) - (-6678 & 0)))))) / 1) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
      barrier();
     break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[_GLF_struct_replacement_1.virtual_gid], _GLF_struct_replacement_16.read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
