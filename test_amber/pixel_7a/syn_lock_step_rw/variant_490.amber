#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), float(injectionSwitch.y), bool(true))))), false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * (uvec3(1u, 1u, 1u) & _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), (uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) + uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) << uvec3(0u, 0u, 0u)))), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))))))), ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), (true ? min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch) : _GLF_FUZZED(vec2(-68.38, -4.0))))).y)), (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y)), false || (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))) || false)))) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(_GLF_IDENTITY(171248u, max(171248u, 171248u)), 139139u, 1158u) % subgroup_local_id))))) * (_GLF_IDENTITY(uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) * uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))).x, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * (uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u) & uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) + 0u), 1u)), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ _GLF_IDENTITY((1u), uint(uvec2((1u), 1u)))) ^ 0u, ((~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) ^ 0u) ^ 0u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ _GLF_IDENTITY((1u), uint(uvec2((1u), 1u)))) ^ 0u, ((~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) ^ 0u) ^ 0u))), ((_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ _GLF_IDENTITY((1u), uint(uvec2((1u), 1u)))) ^ 0u, ((~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) ^ 0u) ^ 0u)))) - 0u), (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ _GLF_IDENTITY((1u), uint(uvec2((1u), 1u)))) ^ 0u, ((~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) ^ 0u) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ _GLF_IDENTITY((1u), uint(uvec2((1u), 1u)))) ^ 0u, ((~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) ^ 0u) ^ 0u))), ((_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ _GLF_IDENTITY((1u), uint(uvec2((1u), 1u)))) ^ 0u, ((~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) ^ 0u) ^ 0u)))) + 0u)))), 1u)), (_GLF_IDENTITY((gl_NumWorkGroups) * (uvec3(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u))) & uvec3(1u, 1u, 1u)), ((gl_NumWorkGroups) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))) | uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))) | uvec3(0u, 0u, 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), uvec3(uvec3((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))), uvec3(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED((subgroup_local_id + uvec3(83058u, 93206u, 91723u))) : gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ ((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u))), max((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))), (~ ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u))))))))))))) - (_GLF_IDENTITY(uvec3(0u, 0u, 0u) & (uvec3(58892u, 167423u, 198235u)), uvec3(uvec3(uvec3(0u, 0u, 0u) & (uvec3(58892u, 167423u, 198235u))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), uvec3(uvec3((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(uvec4(uvec3(3u), 0u))), uvec3(3u))))), ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED((_GLF_IDENTITY(uvec3(171248u, 139139u, 1158u), uvec3(0u, 0u, 0u) + (uvec3(171248u, 139139u, 1158u))) % subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(171248u, 139139u, 1158u) % subgroup_local_id)))))))) * (uvec3(1u, 1u, 1u) & _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) * _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u), (uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u)) ^ uvec3(0u, 0u, 0u)))).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(1u, (1u) >> 0u) * ((_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u)) ^ 0u)))) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u)), ((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u))) ^ 0u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), max((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))))))) + 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(7u), uint(7u)))), (uint(uint(_GLF_IDENTITY(uint(7u), uint(7u))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(uint(7u), uint(7u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(7u), uint(7u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) / 1u)), uint(7u))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(uvec2((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))) >> 0u))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(1u, (1u) >> 0u) * ((_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u)) ^ 0u)))) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u)), ((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u))) ^ 0u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), max((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))))))) + 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(7u), uint(7u)))), (uint(uint(_GLF_IDENTITY(uint(7u), uint(7u))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(uint(7u), uint(7u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(7u), uint(7u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) / 1u)), uint(7u))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(uvec2((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))) >> 0u))))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(1u, (1u) >> 0u) * ((_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u)) ^ 0u)))) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u)), ((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u))) ^ 0u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), max((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))))))) + 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(7u), uint(7u)))), (uint(uint(_GLF_IDENTITY(uint(7u), uint(7u))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(uint(7u), uint(7u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(7u), uint(7u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) / 1u)), uint(7u))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(uvec2((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))) >> 0u))))) - 0u), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, _GLF_IDENTITY(1u, (1u) >> 0u) * ((_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u)) ^ 0u)))) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u)), ((_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) / 1u))) ^ 0u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), max((uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))), (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(floatBitsToUint(5.3)) : uint(0u))))) | (uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(5.3)), (_GLF_FUZZED(floatBitsToUint(5.3))) >> 0u) : uint(0u))))))))) + 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(7u), uint(7u)))), (uint(uint(_GLF_IDENTITY(uint(7u), uint(7u))))) | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(uint(7u), uint(7u)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(7u), uint(7u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) / 1u)), uint(7u))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(uvec2((_GLF_IDENTITY((workgroup_size * workgroup_id) << 0u, 1u * ((workgroup_size * workgroup_id) << 0u))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)))) >> 0u))))) - 0u))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(step(4586.1686, 8.8)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec4(false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(step(4586.1686, _GLF_IDENTITY(8.8, (8.8) + sin(0.0)))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(injectionSwitch)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), bool(bool(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7209.4130)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(-6.7))), float(mat4(float(float(_GLF_FUZZED(-6.7))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7209.4130), max(_GLF_FUZZED(-7209.4130), _GLF_FUZZED(-7209.4130)))), mix(float(float(_GLF_IDENTITY(_GLF_FUZZED(-7209.4130), max(_GLF_FUZZED(-7209.4130), _GLF_FUZZED(-7209.4130))))), float(_GLF_FUZZED(-943.143)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false))) : _GLF_FUZZED(-98.33))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) : _GLF_FUZZED(3.8)), (true ? (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))) : _GLF_FUZZED(3.8)) : _GLF_FUZZED(-792.456)))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(59.63)), float(1.0), bool(true)))), float(_GLF_FUZZED(969.894)), bool(false))) * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, true && (true))), true))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))) && true)))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), true, false))), false || (_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), true, false)))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(191712u), clamp(_GLF_IDENTITY(_GLF_FUZZED(191712u), ~ (~ (_GLF_FUZZED(191712u)))), _GLF_FUZZED(191712u), _GLF_FUZZED(191712u))) : virtual_gid))], read, 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-41885))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (max(4, 4)) | (max(4, 4)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(4, max(4, 4)))), int(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, max(4, 4))))))), 0, 1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_FUZZED(68.12)), float(injectionSwitch[1]), bool(true)), (mix(float(_GLF_FUZZED(68.12)), float(injectionSwitch[1]), bool(true))) - 0.0)))).y), false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1711.2175, -3655.0500)))), injectionSwitch))) / sqrt(exp(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -83.21)), _GLF_IDENTITY(_GLF_FUZZED((62.71 + _GLF_IDENTITY(-1687.0029, (-1687.0029) + sqrt(0.0)))), mix(float(_GLF_FUZZED((62.71 + -1687.0029))), float(_GLF_FUZZED(8.3)), bool(false)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), max(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 | (1)))), ((~ (_GLF_IDENTITY(1, 0 | (1))))) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) / 1))) + 0)))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), vec2(mat4(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(vec3(-4806.8557, -2.6, -682.010)) : vec3(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) * 1.0, clamp((injectionSwitch[0]) * 1.0, (injectionSwitch[0]) * 1.0, _GLF_IDENTITY((injectionSwitch[0]) * 1.0, mix(float((injectionSwitch[0]) * 1.0), float(_GLF_FUZZED(5.3)), bool(false)))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) * 1.0, clamp((injectionSwitch[0]) * 1.0, (injectionSwitch[0]) * 1.0, _GLF_IDENTITY((injectionSwitch[0]) * 1.0, mix(float((injectionSwitch[0]) * 1.0), float(_GLF_FUZZED(5.3)), bool(false)))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]) : _GLF_FUZZED(injectionSwitch)))))[_GLF_IDENTITY(1, 0 | (1))]), vec2(mat4(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0)))), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), min(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0))))), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), vec2(mat4(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), (vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))])) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(vec3(-4806.8557, -2.6, -682.010)) : vec3(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), vec2(mat4(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[_GLF_IDENTITY(1, 0 | (1))]), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0))))) - vec2(0.0, 0.0))))), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2802.0727)))), false, false))), false), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), _GLF_IDENTITY(false, bool(bool(false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), false), false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))) && true)) && true))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
