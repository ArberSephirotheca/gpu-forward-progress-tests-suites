#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)) && true)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((injectionSwitch.y) * 1.0), float(_GLF_FUZZED(93.64)), bool(false))), min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), float(mat3(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), (1.0) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) * 1.0))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((56.05 / 325.397)), _GLF_FUZZED(6.9)), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((56.05 / 325.397)), _GLF_FUZZED(6.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y), true))))))))), true))), (false ? _GLF_FUZZED(vec2(5398.9727, 0.3)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((56.05 / 325.397)), _GLF_FUZZED(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(float(21573))), bool(false))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6521.9418, 9124.0885)))))).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-72.46), clamp(_GLF_FUZZED(-72.46), _GLF_FUZZED(-72.46), _GLF_FUZZED(_GLF_IDENTITY(-72.46, mix(float(_GLF_FUZZED(vec4(-9507.5758, -148.902, 19.55, 2.6).w)), float(-72.46), bool(true)))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(72.13)), float(injectionSwitch.x), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-23.48, 428.855).x)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3403.4732) : 1.0))), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-685.969)), float(0.0), bool(true)))), float(_GLF_FUZZED(float(115649u))), bool(false))), 0.0, 0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0)))))))))))))), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(795.526)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-47.53)), bool(false)))), bool(true))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, max((workgroup_base) | 0u, (workgroup_base) | 0u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), _GLF_IDENTITY((false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : _GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (4u) * 1u), _GLF_IDENTITY(4u, (4u) - 0u)))), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), max(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))))), uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, (4u) >> 0u), 4u, _GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uint(4u)), ~ (~ (uint(uint(4u))))))))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 1u * (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 1u * (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 1u * (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 1u * (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))), uint(4u))) + 0u)))) / 1u)), ((false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : _GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u))) << 0u)) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((true ? uint(4u) : _GLF_FUZZED(subgroup_id)), max((true ? uint(4u) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? uint(4u) : _GLF_FUZZED(subgroup_id)), clamp((true ? uint(4u) : _GLF_FUZZED(subgroup_id)), (true ? uint(4u) : _GLF_FUZZED(subgroup_id)), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))))))), uint(4u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u))) + 0u)))) / 1u))) - 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)))))) + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)))))) + 1) % subgroup_size)) ^ 0u)) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (~ (4u)))), (uint(_GLF_IDENTITY(4u, ~ (~ (4u))))) ^ 0u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)))))) + 1) + (0u & 88644u))) % subgroup_size), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))), ~ (~ (uint(uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))))))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)))))) + 1) % subgroup_size)) ^ 0u)) >> 0u, 0u ^ ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) ^ 0u)), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_FUZZED(subgroup_id), 1u, 0u)))) / 1u))))))), uint(4u)))))) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) ^ 0u)), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec3(_GLF_FUZZED(subgroup_id), 1u, 0u)))) / 1u))))))), uint(4u)))))) + 1) % subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)))))) + 1) % subgroup_size, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, num_workgroup, 49474u)) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(subgroup_id))))), uint(4u)))))) + 1) % subgroup_size)))) ^ 0u)) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))))) ^ 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), (((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))) || false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), (((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))) || false)))))))), (true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), (((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))) || false))))))))) && true)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), (((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))) || false)))))))), (true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), (((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))) || false))))))))) && true)), true)), bool(bvec4(bool(bvec2(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), (((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))) || false)))))))), (true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true))), (((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))) || false))))))))) && true)), true)), true, true, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)), true, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, true, true, false))) && true, bool(bvec4((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))) && true, true, false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))) && true, bool(bvec4((bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))) && true, _GLF_IDENTITY(true, true && (true)), false, false))), false, true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(uint(1), 0u + (uint(_GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) + 0u)) << 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), max(_GLF_IDENTITY(uint(1), 0u + (uint(_GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) + 0u)) << 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), uint(uint(uint(1)))))), _GLF_IDENTITY((uint(1)) | (0u ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))))), min(_GLF_IDENTITY((uint(1)), ((uint(1))) * 1u), (uint(1)))), uint(uvec2((uint(1)), 1u))) | (0u ^ 0u), (uint(1)) | (0u ^ _GLF_IDENTITY(0u, (0u) * 1u)), _GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1)))))) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) | _GLF_IDENTITY((0u ^ 0u), ((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (0u | 0u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, (0u | 0u), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u) ^ (uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(workgroup_base)))), 1u))))), uint(uvec3((uint(_GLF_IDENTITY(uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u) ^ (uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(workgroup_base)))), 1u))))), 0u, 0u))) | (uint(_GLF_IDENTITY(uvec4(0u, 1u, (0u | 0u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, (0u | 0u), 1u))))))), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), clamp((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u)))))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 0u)), ~ (_GLF_IDENTITY(~ (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (0u | 0u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, (0u | 0u), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u) ^ (uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(workgroup_base)))), 1u))))), uint(uvec3((uint(_GLF_IDENTITY(uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u) ^ (uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(workgroup_base)))), 1u))))), 0u, 0u))) | (uint(_GLF_IDENTITY(uvec4(0u, 1u, (0u | 0u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, (0u | 0u), 1u))))))), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), clamp((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u)))))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 0u))), (~ (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, (0u | 0u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, (0u | 0u), 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u) ^ (uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(workgroup_base)))), 1u))))), uint(uvec3((uint(_GLF_IDENTITY(uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u) ^ (uvec4(0u, 1u, (_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(workgroup_base)))), 1u))))), 0u, 0u))) | (uint(_GLF_IDENTITY(uvec4(0u, 1u, (0u | 0u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, (0u | 0u), 1u))))))), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), clamp((true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u))))))), (true ? _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u))))))) : _GLF_IDENTITY(_GLF_FUZZED(read), 1u * (_GLF_IDENTITY(_GLF_FUZZED(read), uint(uvec2(_GLF_FUZZED(read), (0u ^ 0u)))))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 0u)))) | 0u))))) >> 0u)))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) >> 0u), (uint(1)) | (0u ^ 0u))), clamp(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) >> 0u), (uint(1)) | (0u ^ 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) >> 0u), (uint(1)) | (0u ^ 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) >> 0u)) >> 0u), (uint(1)) | (0u ^ 0u))))))) - 0u), 4, 64, 4);
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(7u), uint(7u)))))) / 1u)], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
