#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1700.2059), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1700.2059), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x : _GLF_FUZZED(uintBitsToFloat(199912u)))) > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1700.2059), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))), true, true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((1.7 / 595.818))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED((1.7 / 595.818))), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED((1.7 / 595.818))), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED((1.7 / 595.818))), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED((1.7 / 595.818))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))), (bool(_GLF_IDENTITY(false, (false) && true))) && true))), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false), true), false)))), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))), true && (bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || false), true)))))))), (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(87.51), _GLF_FUZZED(-5884.8750)), bvec2(false, false))).x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(2147)))))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ _GLF_IDENTITY((int(3)), ((int(3))) >> 0))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), 0 ^ (1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3)))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) << 0), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(0), int(0))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), int(ivec2(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), 1 * (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) ^ 0))), 0)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(0), int(0)))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(0), int(0))))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), 0 ^ (int(3)))), ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), _GLF_IDENTITY(int(3), 0 ^ (int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  barrier();
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, (true) || false), false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), true && (bool(false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, _GLF_IDENTITY(6, clamp(6, 6, 6))))), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))), 0))) - 0) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0)) >> 0))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) & _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (true ? ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(32819)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), true, true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) ? injectionSwitch.y : _GLF_FUZZED(4.3)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = ((0 ^ 0) << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY((_injected_loop_counter < 1) || false, ! (_GLF_IDENTITY(! ((_injected_loop_counter < 1) || false), bool(bvec4(! ((_injected_loop_counter < 1) || _GLF_IDENTITY(false, false || (false))), false, false, false))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) >> 0))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y)), false || (! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(182.603)), float(injectionSwitch.y), bool(true))))), (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), true))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-11.63) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y) || false))), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false) || false, false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, true && ((injectionSwitch.x < injectionSwitch.y) || false))))))), true, false))))), false)))))
      {
      }
     else
      {
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (bool(false))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false || (bool(false))))))) || false))))))
              barrier();
            }
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1 & 1), 0 | ((1 & 1))), ((1 & 1)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (0 | 0) ^ (_injected_loop_counter --)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-1.3, -0.2)) : vec2(0.0, 0.0)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x) << 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x) << 0u)))) ^ 0u) | 0u, (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x) << 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x) << 0u)))) ^ 0u) | 0u) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x) << 0u))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))), (gl_NumWorkGroups))) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))), gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)).x) << 0u)))) ^ 0u) | 0u))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) | 0u)) | 0u)));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false)))) && true))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)).x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) && true));
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_size)));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, uint(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u, 0u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)), 1u) * (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)), ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)))))))) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), max(_GLF_IDENTITY(min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), (min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)) >> uvec2(0u, 0u)), min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y, _GLF_IDENTITY(1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY(1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), max((false ? _GLF_FUZZED(subgroup_size) : 1u * _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), min((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) - 0u)))), (false ? _GLF_FUZZED(subgroup_size) : 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))))) | 0u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + _GLF_IDENTITY((1u), clamp((1u), _GLF_IDENTITY((1u), min((1u), (1u))), (1u)))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (false ? _GLF_FUZZED(atomicMax(subgroup_id, workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) >> 0u))))), 1u), (_GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))), 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), (uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))) / 1u)) | (_GLF_IDENTITY(uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), (true ? uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)) : _GLF_FUZZED(workgroup_id))))))), (clamp(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), 1u)) | (clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, _GLF_IDENTITY(1u, 0u ^ (1u))))) << (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))) ^ 1u)), 1u)))) | (clamp(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), 1u))))) / 1u), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u), 0u ^ (clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u), ~ (_GLF_IDENTITY(~ (clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)), (~ (clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec3(_GLF_IDENTITY((1u), ((1u)) | ((1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u ^ 0u)))) - 0u), 1u))) + 0u))), (true ? clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u)))) : _GLF_FUZZED(workgroup_base)))), 1u, 1u))))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), (_GLF_IDENTITY(uvec3(4u), uvec3(4u))) - uvec3(0u, 0u, 0u))) * (_GLF_IDENTITY(uvec3(1u, 0u, 0u), min(uvec3(1u, 0u, 0u), uvec3(1u, 0u, 0u))))))), clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) - 0u))), 1u)), 1u, 1u))), _GLF_IDENTITY(min(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), uint(uvec4(max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), 0u, 1u, 1u))))) << 0u), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) / 1u)) * 1u), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (_GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u)))))))), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x) / 1u)) ^ 0u) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (_GLF_IDENTITY(1u, (1u) / 1u)) | 0u), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(1u, (1u) << 0u))), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u), (clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(1u, (1u) << 0u))), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u)) | (clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(1u, (1u) << 0u))), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u)))))), ~ (_GLF_IDENTITY(~ (min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x, 0u + (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(132754u, 141236u)) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x) * 1u))) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) / 1u), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, uint(uint(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, (1u) | (1u))), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), 1u)), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u))))), (~ (min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x), ~ (~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)))))) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) / 1u), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uint((1u)))) - 0u), 1u), ~ (_GLF_IDENTITY(~ (clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)), ~ (~ (~ (clamp(1u, _GLF_IDENTITY(1u, (1u) - 0u), 1u)))))))), 1u, 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(1u, (1u) / 1u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), 1u)), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(1u, (1u) / 1u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), 1u)), _GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u, 1u)))) >> (uvec4(0u, 0u, 0u, 0u) | uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u)))))) << uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u))))), uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 1u * (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | 0u)))) / 1u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, max(0u, 0u)))) << 0u)))) / 1u)))), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) - 0u), 1u)), _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) + (1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), _GLF_IDENTITY(max((1u), (1u)), 0u ^ (_GLF_IDENTITY(max((1u), (1u)), (max((1u), (1u))) >> 0u))))) | ((1u))), (~ (1u)) >> 0u)), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), _GLF_IDENTITY(max((1u), (1u)), 0u ^ (_GLF_IDENTITY(max((1u), (1u)), (max((1u), (1u))) >> 0u))))) | ((1u))), (~ (1u)) >> 0u))))))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[0], GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[1])), ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(uvec2(41461u, 188273u)), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(_GLF_FUZZED(uvec2(41461u, 188273u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(41461u, 188273u)), clamp(_GLF_FUZZED(uvec2(41461u, 188273u)), _GLF_FUZZED(uvec2(41461u, 188273u)), _GLF_FUZZED(uvec2(41461u, 188273u))))) / uvec2(1u, 1u)))), ~ (~ (uvec2(uvec2(_GLF_IDENTITY(_GLF_FUZZED(uvec2(41461u, 188273u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec2(41461u, 188273u)), clamp(_GLF_FUZZED(uvec2(41461u, 188273u)), _GLF_FUZZED(uvec2(41461u, 188273u)), _GLF_FUZZED(uvec2(41461u, 188273u))))) / uvec2(1u, 1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ _GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) | ((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))))) - uvec2(0u, 0u))), uvec2(uvec4((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)) / uvec2(1u, 1u)))))) - uvec2(0u, 0u))), 1u, (66804u & 0u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))) - uvec2(0u, 0u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))) - uvec2(0u, 0u))) | uvec2(0u, 0u)) | uvec2(0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ _GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) | ((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))))) - uvec2(0u, 0u))), uvec2(uvec4((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)) / uvec2(1u, 1u)))))) - uvec2(0u, 0u))), 1u, (66804u & 0u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))) - uvec2(0u, 0u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))) - uvec2(0u, 0u))) | uvec2(0u, 0u)) | uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ _GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) | ((~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))))) - uvec2(0u, 0u))), uvec2(uvec4((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)) / uvec2(1u, 1u)))))) - uvec2(0u, 0u))), 1u, (66804u & 0u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))) - uvec2(0u, 0u)))) + uvec2(0u, 0u)) | uvec2(0u, 0u), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))) - uvec2(0u, 0u))) | uvec2(0u, 0u)) | uvec2(0u, 0u))))))).y + _GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) | 0u))) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), min(((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) << 0u), _GLF_IDENTITY(0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[0], GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[1])).y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) >> uvec2(0u, 0u)))))).y)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)), max(_GLF_IDENTITY((~ (subgroup_local_id + 1)), (true ? (~ (subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup))), (~ (subgroup_local_id + 1)))) + 0u)))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u)), (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y)))), (0u | (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)))) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) | (0u)) + (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))))), subgroup_local_id + 1)))), subgroup_local_id + 1))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), (true ? (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) | _GLF_IDENTITY((~ (subgroup_local_id + 1)), ((~ (subgroup_local_id + 1))) | ((~ (subgroup_local_id + 1)))))) + 0u)))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), (false ? _GLF_FUZZED((uvec2(81314u, 38940u) << _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))) : _GLF_IDENTITY(max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), uvec2(_GLF_IDENTITY(uvec4(max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u, 1u), (uvec4(max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), 0u, 1u)) * uvec4(1u, 1u, 1u, 1u))))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (0u | 0u), 0u)))) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y))))) | (0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), max((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), uint(uint((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), uint(uint((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), uint(uint((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))))) | (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), uint(uint((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))))))) << 0u) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))))) | (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u)))) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) ^ (uvec2(0u, 0u) ^ uvec2(0u, 0u))), (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y))))))), min(~ (_GLF_IDENTITY(0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY(0u, 0u ^ (0u)) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u)), (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u)), (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u)) + 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)), uint(uint(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)))))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) + 0u)))) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), clamp(max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))))).y)))), (0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) / 1u) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), max((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), uvec2(0u, 0u) | ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y))))) | (0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), subgroup_local_id)) + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)), (_GLF_IDENTITY((~ (subgroup_local_id + 1)), max((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1))))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) + _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) << uvec2(0u, 0u)).y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y))))))), ~ (_GLF_IDENTITY(0u | (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + 0u)))) >> 0u)) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) >> 0)) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y)))), (0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u, 0u)), clamp(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u, 0u))))) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y), (true ? ~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u))) * uvec2(1u, 1u)).y) : _GLF_FUZZED(atomicMax(workgroup_base, virtual_gid)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y), ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y)) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | 0u))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) + _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))))) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) >> 0u))) + (subgroup_local_id)) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y))))) | (0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, 0u | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u)).y))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), (~ (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1)))) + 0u)))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) : _GLF_FUZZED(workgroup_size)))) / 1u), uint(uint((subgroup_local_id + 1) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) >> uvec2(0u, 0u)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (true ? _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)) : _GLF_FUZZED(uvec2(136268u, 123749u)))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))), false || (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))))))))))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec4(bvec2(bool(bvec2(false, true)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
     else
      {
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 0, 1)))) | 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 0, 1)))) | 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (64), _GLF_IDENTITY((~ (64)) >> 0, (0 >> _GLF_IDENTITY(int(8), int(8))) | ((~ (64)) >> 0))))), 0);
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) * (1 & 1)), 64, 4);
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(pow(injectionSwitch, injectionSwitch), (true ? pow(injectionSwitch, injectionSwitch) : _GLF_FUZZED(unpackSnorm2x16(98208u))))) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (false)) && true))) || false)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (-87792 & int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.9)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))).y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.9)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.9)), vec2(_GLF_FUZZED(-9.7), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(workgroup_size)))))[1]), bvec2(false, true))).y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.9)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(68.31)))), bvec2(false, true))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.9)), vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), bvec2(false, true))).y))), true)))))))))
        barrier();
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), bool(bvec2(false, false))), false, false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
