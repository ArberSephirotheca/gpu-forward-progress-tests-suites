#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))) + (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), ! (! (! (bool(bvec4(false, true, true, true))))))))))), false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))))) - vec2(0.0, 0.0)).y)), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, false, false))), ! (_GLF_IDENTITY(! (! (bool(bvec4(false, false, false, false)))), bool(bvec4(! (! (bool(bvec4(false, false, false, false)))), false, true, false))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, ((_GLF_IDENTITY(1u, 0u | (1u)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u | 0u) | (uint(0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (0u | 0u) | (uint(0u))), (_GLF_IDENTITY(uint(0u), (0u | 0u) | (uint(0u)))) << 0u), _GLF_IDENTITY(uint(0u), (0u | 0u) | (uint(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), (~ ((0u))) / 1u))))))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id))), (workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (true ? vec2(vec3(injectionSwitch, 0.0)) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), false || (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))), false))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), 1u * ((subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))))), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u + ((0u))) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(uint(0u))), (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))) << 0u, uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) - 0u)), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))) << 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (true ? _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (false ? _GLF_FUZZED(108411u) : _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))))))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))), (true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), ((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)) << (1u ^ 1u)), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u)))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), ((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)) | 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) - 0u)))), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))))))) << 0u, 0u, 1u, 1u)), clamp(~ (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_size)) << 0u) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << (92432u & 0u)))), 0u))) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicAdd(workgroup_size, num_workgroup)))))), (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), 0u | ((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))) << 0u, 0u, 1u, 1u)), ~ (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))))))))) << 0u, 0u, 1u, 1u)), ~ (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((0u), ~ (~ ((0u)))), 1u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY((0u), ~ (~ ((0u)))), 1u, 0u, 0u))) - 0u)), max((0u), (0u))) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ((0u) - 0u) / 1u)), clamp((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) - (0u | 0u)) | _GLF_IDENTITY(0u, (0u) - 0u), min((subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u))), (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, (0u) - 0u)))))))) << 0u, 0u, 1u, 1u))))))))), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) >> 0u))), (_GLF_IDENTITY(uint(8u), uint(8u))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(virtual_gid)))))) - 0u))))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u ^ (_GLF_IDENTITY(0u, (0u) - 0u)))) ^ 0u)) - 0u))))))), (false ? _GLF_FUZZED(uvec2(28616u, 91605u).t) : subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u ^ (_GLF_IDENTITY(0u, (0u) - 0u)))) ^ 0u)) - 0u)))))))))) | 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true, true))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4913.3243)), float(1.0), bool(true)))) + 0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(66.75)), float(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(66.75)), (true ? float(_GLF_FUZZED(66.75)) : _GLF_FUZZED(5703.1795))), 1.0, 1.0, 0.0, 1.0, 1.0))), float(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0)), mat3x4(mat3x4(mat3x4((injectionSwitch)[0], 0.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED((63.69 * 56.48))), bool(false)))), vec3(1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(66.75)), float(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(((67451 < 18046) ? -2.5 : 73.03)), _GLF_FUZZED(5.5)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-312.005) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), bool(true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], mix(float(_GLF_FUZZED(4.7)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(((67451 < 18046) ? -2.5 : 73.03)), _GLF_FUZZED(5.5)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false)), vec2(1.0, 1.0) * (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.7)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(((67451 < 18046) ? -2.5 : 73.03)), _GLF_FUZZED(5.5)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(964.363, (964.363) + 0.0))), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(964.363)), max(float(_GLF_FUZZED(964.363)), float(_GLF_FUZZED(964.363)))), float(injectionSwitch.y), bool(true)))), true, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-903.661) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(964.363)), clamp(float(_GLF_FUZZED(964.363)), float(_GLF_FUZZED(964.363)), _GLF_IDENTITY(float(_GLF_FUZZED(964.363)), (true ? float(_GLF_FUZZED(964.363)) : _GLF_FUZZED(7841.6336))))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(964.363)), _GLF_IDENTITY(float(injectionSwitch.y), float(mat4x2(float(injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), bool(true)))), true, true))))))))))) && _GLF_IDENTITY(true, (true) && true)))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.7)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.7)), float((injectionSwitch)[0]), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(4.7)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(((67451 < 18046) ? -2.5 : 73.03)), _GLF_FUZZED(5.5)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (bool(true))), (! (! (bool(true)))) || false)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(964.363)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0), _GLF_IDENTITY(mat2(1.0) * (mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0)), transpose(transpose(mat2(1.0) * (mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0)))))))), bool(true)))), true, true))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), _GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))) : _GLF_FUZZED(-43.92))), float(injectionSwitch.y), float(injectionSwitch.y))), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(964.363)), max(float(_GLF_FUZZED(964.363)), float(_GLF_FUZZED(964.363)))), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0), _GLF_IDENTITY(mat2(1.0) * (mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0)), transpose(transpose(mat2(1.0) * (mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0)))))))), bool(true)))), true, true))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))))))) && true)))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(964.363)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0), _GLF_IDENTITY(mat2(1.0) * (mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0)), transpose(transpose(mat2(1.0) * (mat3x2(float(injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0), 1.0)))))))), bool(true)))), true, true))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))))))) && true))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))))) && true), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * exp(0.0)))).y), bool(true)))), true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * exp(0.0)))).y), bool(true)))), true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))) && true)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * exp(0.0)))).y), bool(true)))), true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))) && true))))) || false), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * exp(0.0)))).y), bool(true)))), true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))) && true)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * exp(0.0)))).y), bool(true)))), true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), true, true))))))) && true))))) || false), false, true, true))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec3(-155.472, 9364.8089, 6.7), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), max(vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))))))).t, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(vec3(-155.472, 9364.8089, 6.7), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), max(vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))))))).t, mix(float(_GLF_FUZZED(504.980)), float(_GLF_IDENTITY(vec3(-155.472, 9364.8089, 6.7), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), max(vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), vec3(_GLF_IDENTITY(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat3(mat3(mat3(vec3(-155.472, 9364.8089, 6.7), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-4.4) : dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))))))).t), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0))))), bool(false)), clamp(mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(vec3(-155.472, 9364.8089, 6.7).t)), bool(false)), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(vec3(-155.472, 9364.8089, 6.7).t)), bool(false)), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(vec3(-155.472, 9364.8089, 6.7).t)), bool(false))))), bool(true)))), true, true))))))))))) && true))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(((67451 < 18046) ? -2.5 : 73.03), min(((67451 < 18046) ? -2.5 : 73.03), ((67451 < 18046) ? -2.5 : 73.03))), min(_GLF_IDENTITY(((67451 < 18046) ? -2.5 : 73.03), min(((67451 < 18046) ? -2.5 : 73.03), ((67451 < 18046) ? -2.5 : 73.03))), _GLF_IDENTITY(((67451 < 18046) ? -2.5 : 73.03), min(((67451 < 18046) ? -2.5 : 73.03), ((67451 < 18046) ? -2.5 : 73.03)))))), _GLF_FUZZED(5.5)), mix(vec2(_GLF_FUZZED(6399.8582), _GLF_FUZZED(959.160)), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(((67451 < 18046) ? _GLF_IDENTITY(-2.5, mix(float(-2.5), float(_GLF_FUZZED(float(false))), bool(false))) : 73.03), min(((67451 < 18046) ? -2.5 : 73.03), ((67451 < 18046) ? -2.5 : 73.03)))), _GLF_FUZZED(5.5)))[0], (vec2(_GLF_FUZZED(_GLF_IDENTITY(((67451 < 18046) ? -2.5 : 73.03), min(((67451 < 18046) ? -2.5 : 73.03), ((67451 < 18046) ? -2.5 : 73.03)))), _GLF_FUZZED(5.5)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(964.363)), float(injectionSwitch.y), bool(true))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), bool(bvec2(bool(bool((! (false)))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(50.37)), bool(false))), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), min(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false), false))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))), true))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true, true)))), false || ((! (_GLF_DEAD(false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8896.9893, 118.362)) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u), 1u))), uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 0u)))))), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
