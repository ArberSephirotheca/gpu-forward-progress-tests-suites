#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))) && true) && (false)), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) || false), false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), true)), false || (bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))) || (false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), true)))))))), bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(248.937), max(true ? injectionSwitch.x : _GLF_FUZZED(248.937), _GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(248.937), (false ? _GLF_FUZZED(230.138) : true ? injectionSwitch.x : _GLF_FUZZED(248.937))))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(6.6), (_GLF_FUZZED(6.6)) / 1.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(248.937, (_GLF_IDENTITY(248.937, max(248.937, 248.937))) / 1.0)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)), 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0)), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)), 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0)) : _GLF_FUZZED(mat3x4(-7.7, -3.1, 85.97, -1.8, -1100.8456, 2.6, 2.4, 582.393, 7.5, 0.0, -1.0, 29.03)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0)), (true ? vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(vec2(-0.1, 20.22))))))).x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, sin(0.0), 0.0))), 1.0, 1.0, abs(0.0), 0.0)), (true ? vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(vec2(-0.1, 20.22))))))).x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(248.937))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true)), false))), false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), true && (false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, false, false)))), true)), false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY((injectionSwitch.y), float(mat2x3((injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-979.586, -1.5)))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-979.586, -1.5))))) * mat2(1.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), false, true))) || _GLF_IDENTITY(false, (false) || false))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, exp(sqrt(0.0)), log(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), round(length(normalize(1.0))), 0.0, 1.0), mat2x4(mat4(mat2x4(injectionSwitch, exp(sqrt(_GLF_IDENTITY(0.0, (0.0) - log(1.0)))), _GLF_IDENTITY(log(1.0), min(log(1.0), _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(67.46))), 0.0, 0.0, 0.0)))), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), round(length(normalize(1.0))), 0.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9188.1472)), vec2(_GLF_FUZZED(-7.6), (injectionSwitch)[1]), bvec2(false, true))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (subgroup_size)), 1u))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))), ((! (_GLF_DEAD(false)))) && true))))))))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(((! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((! (_GLF_DEAD(false)))), false, false), bvec3(bvec4(bvec3(((! (_GLF_DEAD(false)))), false, false), true)))), (bool(_GLF_IDENTITY(bvec3(((! (_GLF_DEAD(false)))), false, false), bvec3(bvec4(bvec3(((! (_GLF_DEAD(false)))), false, false), true))))) && true)) && true))))))))), false), false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((_GLF_IDENTITY(-5.7 / -760.206, clamp(-5.7 / -760.206, -5.7 / -760.206, _GLF_IDENTITY(-5.7 / -760.206, mix(float(-5.7 / -760.206), float(_GLF_FUZZED(7.3)), bool(false))))))))))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(_GLF_IDENTITY((-5.7 / -760.206), max((-5.7 / -760.206), (-5.7 / -760.206)))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((-5.7 / -760.206))))), (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((-5.7 / -760.206))))), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((-5.7 / -760.206)))))) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))).y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((-5.7 / -760.206)))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((-5.7 / -760.206)))))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((_GLF_IDENTITY(-5.7, (-5.7) / 1.0) / -760.206)))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((-5.7 / -760.206)))))).y) || false)) || false))))))))))))))
      barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), injectionSwitch.y)) ^ 1u)), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(~ (uint(_GLF_ONE(1.0, injectionSwitch.y))), max(~ (uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))))) - 0u))) ^ 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))), clamp((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u)))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), 0u | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | (0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) : 1u))))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), min(uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), min(vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (1u) | (1u)))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) * uvec3(1u, 1u, 1u)))), 1u)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))), 1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch)).y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))))))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(11.40, -2.7)) : injectionSwitch)), injectionSwitch)).y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))))) / 1u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))))) / 1u), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)) ^ 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)))))) / 1u)) ^ 0u)))) ^ 0u))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) : 1u)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) - 0))), _GLF_IDENTITY(1, (1) << 0), 0, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) / (1 & 1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | (2))), int(2))))), (int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, (1) << 0), 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, (1) << 0), 0, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(1, ~ (~ (1))) * (1 << _GLF_IDENTITY(int(2), int(2)))), 1, 1, (0 >> _GLF_IDENTITY(int(1), int(1))))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), 1 * (1 << _GLF_IDENTITY(int(2), int(2)))), 1, 1, (0 >> _GLF_IDENTITY(int(1), int(1))))), (int(ivec4(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), 1 * (1 << _GLF_IDENTITY(int(2), int(2)))), 1, 1, (0 >> _GLF_IDENTITY(int(1), int(1)))))) - 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(2), int(2))))), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0)))))), 0, ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(2, ~ (~ (2)))), int(ivec3((_GLF_IDENTITY(2, ~ (~ (2)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 1 * (2)))))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0)))) * ((int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, (1) << 0), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))) << 0), clamp(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))))), (~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))))), min(~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))))), ~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)), (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0))) | (int(ivec4(_GLF_IDENTITY((4), clamp((4), (4), (4))), 0, 0, 0)))))))))))))), _GLF_IDENTITY(1, (1) << 0), 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) | (1 << _GLF_IDENTITY(int(2), int(2))))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, abs(1.0), 0.0)))), _GLF_IDENTITY(1, (1) | 0), 0)), (_GLF_IDENTITY(int(ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), (_GLF_IDENTITY(int(ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), min(int(ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), int(ivec4((1 << _GLF_IDENTITY(int(2), int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))))) >> 0)) | 0)) >> _GLF_IDENTITY(int(2), int(2))))), (int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), ~ (~ (~ (_GLF_IDENTITY(1, (1) << 0))))))), _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0))), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) << 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, (1) << 0), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, (1) << 0), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) << 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, (1) << 0), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (int(ivec4(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(1, (1) << 0), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) << 0)))) * 1)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false), (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false), bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false))))) || false), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bool(bool((_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false), bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false))))) || false), (injectionSwitch.x < injectionSwitch.y)))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false), (injectionSwitch.x < injectionSwitch.y)), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) || false), (injectionSwitch.x < injectionSwitch.y)), true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(false))), injectionSwitch.x)) < injectionSwitch.y))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))), true), true)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(false, (false) && true) || ((false) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.5)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), true))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), true)))))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), buf[virtual_gid])), _GLF_IDENTITY(0u + (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))]) >> 0u), buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))]))), (0u + (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))]) >> 0u), buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))])))) << (0u | 0u))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
