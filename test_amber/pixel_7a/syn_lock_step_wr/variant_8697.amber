#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false)))))) || false))), ((! (_GLF_DEAD(false)))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), false)), false || (bool(bvec2((_GLF_DEAD(false)), false)))))))))))), _GLF_IDENTITY(false || (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY(false || (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), (false || (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))) && true)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))) && true)) && true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))), false || (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))) || false)))), bool(bvec2(((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))) || false)))), false))))))))) || false))
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(-2814 * 91096, (_GLF_IDENTITY(_GLF_IDENTITY(-2814 * 91096, max(-2814 * _GLF_IDENTITY(91096, (91096) | (91096)), -2814 * 91096)), (_GLF_IDENTITY(-2814 * 91096, max(-2814 * _GLF_IDENTITY(91096, (91096) | (91096)), -2814 * 91096))) | (_GLF_IDENTITY(-2814 * 91096, max(-2814 * _GLF_IDENTITY(91096, (91096) | (91096)), -2814 * 91096))))) ^ 0)) & 0), min((_GLF_IDENTITY((-2814 * 91096), ((-2814 * 91096)) | ((-2814 * 91096))) & 0), (_GLF_IDENTITY(_GLF_IDENTITY((-2814 * 91096), max((-2814 * 91096), (-2814 * 91096))) & 0, 0 + _GLF_IDENTITY(((-2814 * _GLF_IDENTITY(_GLF_IDENTITY(91096, 0 + (91096)), clamp(_GLF_IDENTITY(91096, (_GLF_IDENTITY(91096, ~ (~ (_GLF_IDENTITY(91096, ~ (~ (91096))))))) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & 0), (((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, _GLF_IDENTITY((91096), ((91096)) ^ 0) | 0), _GLF_IDENTITY(91096, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(91096, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(91096, (91096) | (91096)), 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))), 0)), ~ (~ (int(ivec4(_GLF_IDENTITY(91096, (91096) | (91096)), 0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))), 0)))))))), _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, 0 ^ (0)))) << 0))))), int(ivec2(_GLF_IDENTITY(((_GLF_IDENTITY(-2814 * 91096, (-2814 * 91096) ^ 0)) & _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((~ 77534))))) | (0))), min(((-2814 * 91096) & 0), (_GLF_IDENTITY((-2814 * 91096) & _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1))), (int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) / ivec2(1, 1)))) ^ 0)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(-2814, (-2814) >> 0) * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), max((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), max((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), max((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))))), (_GLF_IDENTITY((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), max((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0))))))) * 1)) | (_GLF_IDENTITY((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), max((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), max((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))))), ~ (~ (_GLF_IDENTITY((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), max((-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) & _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, clamp(0, 0, 0))))))))))))))), (((_GLF_IDENTITY(-2814 * _GLF_IDENTITY(_GLF_IDENTITY(91096, ~ (~ (91096))), clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1))), (-2814 * _GLF_IDENTITY(91096, clamp(_GLF_IDENTITY(91096, (91096) | 0), 91096, _GLF_IDENTITY(91096, (91096) / 1)))) ^ 0)) & 0)) << 0))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))))), false, true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true)))), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), false))))), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true)))))))), bool(bvec3(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true)))), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), false))))), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true)))))))), false, false))))), false || ((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), false, true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true && _GLF_IDENTITY(((! (false))), false || (((! (false)))))))))) || _GLF_IDENTITY(false, ! (! (false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)) || (! ((_GLF_IDENTITY(false, true && (false)))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)) || (! ((_GLF_IDENTITY(false, true && (false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)) || (! ((_GLF_IDENTITY(false, true && (false)))))))), false, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)) || (! ((_GLF_IDENTITY(false, true && (false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)) || (! ((_GLF_IDENTITY(false, true && (false)))))))), false, true), true))))), false))))))), false || ((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true))), ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || (! ((false)))))), false, true))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true)))), false || ((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false))), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true, true))))))))), false, true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true)))), false || ((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (! ((false))))), ! (! ((_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (! ((false))))))))), false, true))))))), ! (! (bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false)))))), false, true)))), false || ((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, true))))), ! (_GLF_IDENTITY(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), false, true))))))))))))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), true && ((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (false))))))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))));
                    }
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-63494) : 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (! (false)))), _GLF_IDENTITY(bool(bvec4(((! (! (false)))), true, true, false)), (bool(bvec4(((! (! (false)))), true, true, false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! ((! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(! ((! (! (false)))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_IDENTITY(! ((! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(! ((! (! (false)))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true)))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(17907 & 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(17907 & 0, 0, 0), max(ivec3(_GLF_IDENTITY(17907 & 0, (_GLF_IDENTITY(17907 & 0, (_GLF_IDENTITY(17907 & 0, (17907 & 0) + 0)) << 0)) << (0 & (+ 84440))), 0, 0), ivec3(17907 & 0, 0, 0)))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(17907 & 0, min(_GLF_IDENTITY(17907 & 0, (true ? 17907 & 0 : _GLF_FUZZED(_injected_loop_counter))), 17907 & 0)), 0, 0), max(ivec3(17907 & 0, 0, 0), _GLF_IDENTITY(ivec3(17907 & 0, 0, 0), (_GLF_IDENTITY(ivec3(17907 & 0, 0, 0), min(ivec3(17907 & 0, 0, 0), ivec3(17907 & 0, 0, 0)))) ^ ivec3(0, 0, 0)))))) / 1)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(185851u, 73303u, 15076u)) : _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), (true ? _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))) * workgroup_id))) / 1u, ((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))) * workgroup_id))) / 1u) << 0u)))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) ^ 0u, clamp((subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u)), ~ (~ (_GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) | 0u))))))) + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true)))), bool(bool((! (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))), bool(bool((! (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true)))), bool(bool((! (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) && true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(true, true)))), true, true, true)), ! _GLF_IDENTITY((! (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true)))), bool(bool((! (bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true, true, true)))))))))))) && true)) || false)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((true), bool(bvec3((true), false, true))) || false)))), _GLF_IDENTITY(true, bool(bool(true))))), true), bvec2(bvec4(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true)))) && true), true)), true), false, false)))))))
                  {
                   do
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), (true ? int(_injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter))))))), _injected_loop_counter)) != _GLF_IDENTITY(_GLF_IDENTITY((((1 & 1) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((((1 & 1) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) * 1), ~ (_GLF_IDENTITY(~ ((((1 & _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0), int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0), 0, 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(~ ((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 1 * (int(2)))))), (~ ((((_GLF_IDENTITY(1, (1) - 0) & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) * 1)) - 0)))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))))), _injected_loop_counter)) != _GLF_IDENTITY((((1 & 1) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(2), int(2)), min(((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), _GLF_IDENTITY(int(2), clamp(int(2), _GLF_IDENTITY(int(2), 0 + (int(2))), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(_injected_loop_counter) : int(2))))))) >> _GLF_IDENTITY(int(2), int(2)), ((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), (((_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0)))) >> _GLF_IDENTITY(int(2), int(2)), min(((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))) & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))) ^ (0 ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), min((((_GLF_IDENTITY((1 & 1), ((1 & 1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 1 * (((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))), ~ (~ ((~ _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(40118), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(40118), clamp(_GLF_IDENTITY(_GLF_FUZZED(40118), int(ivec3(_GLF_FUZZED(40118), 1, 1))), _GLF_FUZZED(40118), _GLF_IDENTITY(_GLF_FUZZED(40118), min(_GLF_FUZZED(40118), _GLF_FUZZED(40118))))) : _GLF_FUZZED(atomicAnd(_injected_loop_counter, (_injected_loop_counter * _injected_loop_counter))))) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), min(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 1 * (((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))))))) - 0, (true ? _GLF_IDENTITY((~ _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (int(2)))))), min((((_GLF_IDENTITY((1 & 1), ((1 & 1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 1 * (((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))), ~ (~ ((~ _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(40118), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(40118), clamp(_GLF_IDENTITY(_GLF_FUZZED(40118), int(ivec3(_GLF_FUZZED(40118), 1, 1))), _GLF_FUZZED(40118), _GLF_IDENTITY(_GLF_FUZZED(40118), min(_GLF_FUZZED(40118), _GLF_FUZZED(40118))))) : _GLF_FUZZED(atomicAnd(_injected_loop_counter, (_injected_loop_counter * _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter))))))) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), min(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 1 * (((((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(40118) : 2))), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(2, 2)))))))))))))) - 0 : _GLF_FUZZED(_injected_loop_counter))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), (_GLF_IDENTITY((_injected_loop_counter ++), (true ? (_injected_loop_counter ++) : _GLF_FUZZED(_injected_loop_counter)))) - (0 | 0)) << 0), ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), (_GLF_IDENTITY((_injected_loop_counter ++), (true ? (_injected_loop_counter ++) : _GLF_FUZZED(_injected_loop_counter)))) - (0 | 0)) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), (_GLF_IDENTITY((_injected_loop_counter ++), (true ? (_injected_loop_counter ++) : _GLF_FUZZED(_injected_loop_counter)))) - (0 | 0)) << 0, 0 + (_GLF_IDENTITY((_injected_loop_counter ++), (_GLF_IDENTITY((_injected_loop_counter ++), (true ? (_injected_loop_counter ++) : _GLF_FUZZED(_injected_loop_counter)))) - (0 | 0)) << 0))) >> (0 ^ 0)))))))
                        {
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) + vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(661.702)), bool(false))), mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(661.702)), bool(false)))), float(_GLF_FUZZED(float(false))), bool(false))) : _GLF_FUZZED(asin(-22.86)))), 0.0, 0.0))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), ((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))) || false), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), ((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))) || false), false)), ! (! (bool(bvec2(! _GLF_IDENTITY((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), ((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))) || false), false)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(true, false || (true))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(true, false || (true))))), true && (bool(bool(bool(_GLF_IDENTITY(true, false || (true)))))))), true, true))))))))))) && (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), ((injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0))))], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(-884.262)))), _GLF_FUZZED(6.5)), bvec2(false, false)))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0))))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3.0, (true ? -3.0 : _GLF_FUZZED(-884.262)))), _GLF_FUZZED(6.5)), bvec2(false, false)))).x) / 1.0) < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5806.9259)), vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), bvec2(false, true)))) * _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[0], _GLF_FUZZED(817.731)), vec2(_GLF_FUZZED((- 4.1)), _GLF_IDENTITY((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[1], 1.0 * ((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[1]))), bvec2(false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5806.9259)), vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), bvec2(false, true)))) * _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[0], _GLF_FUZZED(817.731)), vec2(_GLF_FUZZED((- 4.1)), _GLF_IDENTITY((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[1], 1.0 * ((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[1]))), bvec2(false, true)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5806.9259)), vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), bvec2(false, true)))) * _GLF_IDENTITY(vec2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(92.24))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(-5.5)), bool(false)))))[0], _GLF_FUZZED(817.731)), vec2(_GLF_FUZZED((- 4.1)), _GLF_IDENTITY((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[1], 1.0 * ((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[1]))), bvec2(false, true))))))) / vec2(1.0, 1.0)).y), ! _GLF_IDENTITY((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), ((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(true, false || (true))), true, true))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true))))) && true)), true, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true))))), true, true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true)))))), true, true))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true))))) && true)))), true, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true))))), true, true)), bvec3(bvec4(bvec3(bvec3(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (false || (true)), (! (false || (true))) && true))))), true, true)), false))), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))))))))) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(559.851)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))), mix(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]), min(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, max(1, 1))))]), _GLF_IDENTITY(vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]), mix(vec2(_GLF_FUZZED((vec4(8.1, 2879.5264, -6.6, -9.5).x + 94.02)), _GLF_FUZZED(3.2)), vec2((vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]))[0], _GLF_IDENTITY((vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]))[1], clamp(_GLF_IDENTITY((vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]))[1], ((vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]))[1]) * 1.0), (vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]))[1], _GLF_IDENTITY((vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]))[1], (true ? (vec2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) * mat2(1.0)))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))]))[1] : _GLF_FUZZED(51.79)))))), bvec2(true, _GLF_IDENTITY(true, true && (true))))))), vec2(_GLF_FUZZED(-3.0), _GLF_FUZZED(6.5)), bvec2(false, false)))).x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), (injectionSwitch) * vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(_GLF_FUZZED(float(75121u)), _GLF_FUZZED(-1.9)), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))).y))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)) * (injectionSwitch), (exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) * (injectionSwitch)) * vec2(1.0, 1.0))), (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((-5.2 * -40.92))), vec2((exp(vec2(0.0, 0.0)))[0], (exp(vec2(0.0, 0.0)))[1]), bvec2(true, true))) * (injectionSwitch)), (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), (! _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), clamp(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) + vec2(0.0, 0.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))).y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), false || (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-50.32) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-50.32) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-50.32) : injectionSwitch.x))), float(_GLF_FUZZED(-35.72)), bool(false))), 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, abs(0.0), 1.0))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))))))) || false)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(true, ! (! (true))), true)))))))) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], float(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], 1.0 * (((injectionSwitch) * mat2(1.0))[0])), 0.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], min(((injectionSwitch) * mat2(1.0))[1], ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * mat2(1.0))[1]))), vec2(_GLF_FUZZED(-3.0), _GLF_FUZZED(6.5)), bvec2(false, false)))).x < injectionSwitch.y))))) || false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))))
                    {
                     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid))), clamp(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid))), (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid)))) | (0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid))))), 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid)))))), min(_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))) | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid)))), uint(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid)))), 1u, 1u)))))], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64))))), 0);
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(54.54, -9.0, 68.55, 62.52))) : injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(329.971)), float(0.0), bool(true)))) * exp(0.0)), 0.0), (vec2(0.0, 0.0)) * vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))), vec2(0.0, 0.0)))).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-48.67)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, -5.0))))).y) - 0.0)), bool(true))))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false))))))))))), true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], float(mat4x2(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), abs(1.0)))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_FUZZED(-34.70)), max(float(_GLF_FUZZED(-34.70)), _GLF_IDENTITY(float(_GLF_FUZZED(-34.70)), clamp(float(_GLF_FUZZED(-34.70)), float(_GLF_FUZZED(-34.70)), float(_GLF_FUZZED(-34.70)))))), bool(false)))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_FUZZED(-34.70)), max(float(_GLF_FUZZED(-34.70)), _GLF_IDENTITY(float(_GLF_FUZZED(-34.70)), clamp(float(_GLF_FUZZED(-34.70)), float(_GLF_FUZZED(-34.70)), float(_GLF_FUZZED(-34.70)))))), bool(false)))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_FUZZED(-34.70)), max(float(_GLF_FUZZED(-34.70)), _GLF_IDENTITY(float(_GLF_FUZZED(-34.70)), clamp(float(_GLF_FUZZED(-34.70)), float(_GLF_FUZZED(-34.70)), float(_GLF_FUZZED(-34.70)))))), bool(false)))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))), mix(vec2(_GLF_FUZZED(-498.885), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[1]), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0])), _GLF_FUZZED((-1.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(false, true))).y) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), bool(true)))), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0))) && true)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y)) || false)) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true)), false || (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true)))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat3x4(_GLF_IDENTITY(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), transpose(transpose(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))))) > injectionSwitch.y)))) || false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(vec2(_GLF_FUZZED(-38.81), (vec2(0.0, 0.0) + (injectionSwitch))[1]), vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)))).x : _GLF_FUZZED(474.116))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-498.885), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[1]), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0])), _GLF_FUZZED((-1.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mix(vec2(_GLF_FUZZED(-498.885), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[1]), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0])), _GLF_FUZZED((-1.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(false, true))).y) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), bool(true)), (mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), bool(true))) + _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.7, 14.59)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(42.46), _GLF_FUZZED(-4.1)), bvec2(false, false))))).y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0))) && true)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, float(_GLF_IDENTITY(mat4((injectionSwitch.x) * 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(cos(0.0), abs(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(cos(0.0), abs(0.0), 1.0), vec3(0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4((injectionSwitch.x) * 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(cos(0.0), abs(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(cos(0.0), abs(0.0), 1.0), vec3(0.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-54.32, 5094.8942, -2.0, -94.87, -7.0, 1.8, 374.127, -8.6, 0.0, 345.532, -4.1, 55.13, -54.20, -9.6, -5.7, 179.157)))))))) * 1.0) > injectionSwitch.y)) || false)) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true)), false || (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true)))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat3x4(_GLF_IDENTITY(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), transpose(transpose(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))))) > injectionSwitch.y)))) || false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(vec2(_GLF_FUZZED(-38.81), (vec2(0.0, 0.0) + (injectionSwitch))[1]), vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_FUZZED(-2.9)), bvec2(true, false)))).x : _GLF_FUZZED(474.116))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-34.70)), _GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) - 0.0)), 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(((-6.6 + 3.4)))), float(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))) > injectionSwitch.y))))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-18.50)), bvec2(true, false))).y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-34.70)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, false))), true && (! (bool(bvec3(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x3(vec2(0.0, 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))) + (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(((-6.6 + 3.4)))), float(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))) > injectionSwitch.y)), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(((-6.6 + 3.4)))), float(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))) > injectionSwitch.y)), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(((-6.6 + 3.4)))), float(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, abs(length(vec2(0.0, 0.0))), 0.0, 0.0, 1.0)))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))) > injectionSwitch.y)), false)))) && true))))))))) && true), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))), mix(vec2(_GLF_FUZZED(-498.885), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[1]), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], _GLF_IDENTITY(min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0]), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0]), max(min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0]), min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[_GLF_IDENTITY(0, int(int(0)))], float(mat4x3(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0)))), ((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, (0) >> 0)], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0]))), min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0]), min(_GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((- -9.0), clamp(_GLF_IDENTITY((- -9.0), ((- -9.0)) / 1.0), (- -9.0), (- -9.0))))))[0], float(mat4x3((vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0], 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), (vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))))[0])))), _GLF_FUZZED((_GLF_IDENTITY(-1.9, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-921.995) : -1.9))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -9.0))), vec2(_GLF_FUZZED(-6.6), (injectionSwitch)[1]), bvec2(false, true))).y) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), bool(true)))), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-73.80), _GLF_FUZZED(-4.8)), bvec2(false, false))).y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(945.272)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(exp2(log(vec2(-6.5, 11.75)))), _GLF_IDENTITY((_GLF_FUZZED(exp2(log(vec2(-6.5, 11.75))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(241.392), ((_GLF_FUZZED(exp2(log(vec2(-6.5, 11.75))))) * mat2(1.0))[1]), vec2(((_GLF_FUZZED(exp2(log(vec2(-6.5, 11.75))))) * mat2(1.0))[0], _GLF_FUZZED(-4488.8332)), bvec2(true, false)))))).x > injectionSwitch.y)) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)) / 1.0) / 1.0)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)) / 1.0) / 1.0)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)) / 1.0) / 1.0)))) && true)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-9.0, 604.128, -605.920).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)) / 1.0) / 1.0)))) && true)))))))) || false)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0, mix(float(_GLF_FUZZED(6.0)), float((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, min((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y, true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y, true)), true)))))) || false)) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true)), false || _GLF_IDENTITY((bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true))), _GLF_IDENTITY(((bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat3x4(_GLF_IDENTITY(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat3x2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, abs(0.0), exp(0.0)))))), transpose(transpose(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))))) > injectionSwitch.y)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat3x4(_GLF_IDENTITY(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat3x2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, abs(0.0), exp(0.0)))))), transpose(transpose(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))))) > injectionSwitch.y)))) || false), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat3x4(_GLF_IDENTITY(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat3x2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, abs(0.0), exp(0.0)))))), transpose(transpose(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))))) > injectionSwitch.y)))) || false)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat3x4(_GLF_IDENTITY(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat3x2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, abs(0.0), exp(0.0)))))), transpose(transpose(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))))) > injectionSwitch.y)))) || false), true && (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 1.0, 1.0), vec4(0.0, sqrt(1.0), 0.0, sqrt(0.0))), dot(vec4(cos(0.0), 0.0, 1.0, 1.0), vec4(0.0, sqrt(1.0), 0.0, sqrt(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat3x4(_GLF_IDENTITY(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat3x2(round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, abs(0.0), exp(0.0)))))), transpose(transpose(mat4(mat3x4(injectionSwitch.x, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0))))))))))))))) > injectionSwitch.y)))) || false))))) && true))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mix(vec2(_GLF_FUZZED(-38.81), (vec2(0.0, 0.0) + (injectionSwitch))[1]), vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(-2.9, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -2.9 : _GLF_FUZZED(6.0))))), bvec2(true, false)))).x : _GLF_FUZZED(474.116))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true))), (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))), true, false))))
                {
                 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, ! (! (true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), false))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), false))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), false))), false))), true))))))))), false)), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false)))))))), ! (! ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))), false)), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_DEAD(false), true, false))))))))))))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0))), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))));
    }
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(_GLF_IDENTITY(~ (64), (~ (64)) << 0), ~ _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(-70808))))))), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
